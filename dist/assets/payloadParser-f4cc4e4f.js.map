{"version":3,"file":"payloadParser-f4cc4e4f.js","sources":["../../src/utils/api/payloadParser.ts"],"sourcesContent":["import { type Maybe } from '@/apollo/generated/types';\n\n/**\n * BE sends ISODate type as a numeric timestamp cast as string\n * @param timestamp string\n * @example parseISOString('1676467936661') // Wed Feb 15 2023 14:32:16 GMT+0100 (Central European Standard Time)\n */\nfunction parseISOString(timestamp: string): Date;\nfunction parseISOString(timestamp: null | undefined): undefined;\nfunction parseISOString(timestamp: Maybe<string> | undefined): Date | undefined;\nfunction parseISOString(timestamp: Maybe<string> | undefined) {\n  return timestamp ? new Date(+timestamp) : undefined;\n}\n\n/**\n * BE sometimes sends dates as regular JSON dates.\n * @param dateString string\n * @example parseDateString('2023-02-15T13:32:16Z') // Wed Feb 15 2023 14:32:16 GMT+0100 (Central European Standard Time)\n */\nfunction parseDateString(dateString: string): Date;\nfunction parseDateString(dateString: null | undefined): undefined;\nfunction parseDateString(\n  dateString: Maybe<string> | undefined,\n): Date | undefined;\nfunction parseDateString(dateString: Maybe<string> | undefined) {\n  return dateString ? new Date(dateString) : undefined;\n}\n\nexport const ApiPayloadParser = {\n  parseISOString,\n  parseDateString,\n};\n"],"names":["parseISOString","timestamp","Date","undefined","parseDateString","dateString","ApiPayloadParser"],"mappings":"AAUA,SAASA,EAAeC,EAAsC,CAC5D,OAAOA,EAAY,IAAIC,KAAK,CAACD,CAAS,EAAIE,MAC5C,CAYA,SAASC,EAAgBC,EAAuC,CAC9D,OAAOA,EAAa,IAAIH,KAAKG,CAAU,EAAIF,MAC7C,CAEO,MAAMG,EAAmB,CAC9BN,eAAAA,EACAI,gBAAAA,CACF"}