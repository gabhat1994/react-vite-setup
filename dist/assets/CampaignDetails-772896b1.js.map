{"version":3,"file":"CampaignDetails-772896b1.js","sources":["../../src/screens/Campaigns/CampaignSummary/styles.ts","../../src/screens/Campaigns/components/Divider.tsx","../../src/screens/Campaigns/CampaignSummary/types.ts","../../src/screens/Campaigns/CampaignSummary/CampaignDetails.tsx"],"sourcesContent":["import styled, { css } from 'styled-components';\nimport { Stack } from '@/layout';\nimport { Card } from '@/components/Card';\nimport { TSpan } from '@/components/Typography';\nimport { mediaSizes } from '@/constants/devices';\n\nconst Right = styled(Stack).attrs({\n  fullWidth: false,\n  align: 'center',\n  gap: '16px',\n})`\n  width: auto;\n`;\n\nconst Main = styled(Stack).attrs({\n  vertical: true,\n  align: 'center',\n  justify: 'center',\n  gap: '16px',\n})`\n  width: 1130px;\n  align-self: center;\n  padding: 24px;\n  @media (max-width: ${mediaSizes.TABLET_MAX}) {\n    width: 100%;\n    padding: 0px;\n  }\n`;\n\nconst Container = styled(Card)`\n  width: 100%;\n  padding: 24px;\n`;\n\nconst ContainerTitle = styled(TSpan).attrs({\n  font: 'heading-xs-bold',\n  colorToken: '--text-card-neutral-highlighted',\n})``;\n\nconst InfoContainer = styled(Stack).attrs({\n  gap: '32px',\n  align: 'center',\n})<{ applyTouchStyles?: boolean }>`\n  ${({ applyTouchStyles }) =>\n    applyTouchStyles &&\n    css`\n      align-items: start;\n    `}\n`;\n\nconst Info = styled(Stack).attrs({\n  vertical: true,\n  gap: '8px',\n})``;\n\nconst Label = styled(TSpan).attrs({\n  font: 'body-m',\n  colorToken: '--text-card-neutral-default',\n})``;\n\nconst Ul = styled.ul`\n  margin: 0;\n  min-width: 252px;\n  padding-inline-start: 25px;\n`;\n\nconst Value = styled(TSpan).attrs({\n  font: 'body-m',\n  colorToken: '--text-input-neutral-filled',\n})``;\n\nconst Count = styled(Stack).attrs({\n  align: 'center',\n  justify: 'center',\n})`\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  background-color: var(--bg-badge-brand-secondary-default);\n`;\n\nconst FileContainer = styled(Stack).attrs({\n  align: 'center',\n  justify: 'space-between',\n  fullWidth: true,\n})`\n  padding: 0;\n`;\nconst FileSide = styled(Stack).attrs({\n  align: 'center',\n  gap: 16,\n})``;\nconst FileIcon = styled(Stack).attrs({\n  align: 'center',\n  justify: 'center',\n})`\n  width: 48px;\n  height: 48px;\n  border-radius: 8px;\n  border: 1px solid var(--border-card-neutral-default);\n`;\n\nexport const StackForCampaignHeading = styled(Stack).attrs({\n  vertical: true,\n})`\n  width: 190px;\n`;\n\nexport default {\n  Right,\n  Container,\n  Main,\n  ContainerTitle,\n  InfoContainer,\n  Info,\n  Label,\n  Ul,\n  Value,\n  Count,\n  FileContainer,\n  FileSide,\n  FileIcon,\n  StackForCampaignHeading,\n};\n","import { Separator } from '@/components/Separator/Separator';\nimport { Spacer } from '@/layout/Stack/Spacer';\n\nexport function Divider() {\n  return (\n    <>\n      <Spacer height={8} />\n      <Separator size=\"thin\" fullWidth />\n      <Spacer height={8} />\n    </>\n  );\n}\n","import { type CampaignReportForCampaignSummaryFragment } from '@/apollo/graphql';\nimport { type CampaignOfferFragment } from '@/apollo/graphql/fragments/campaignOffer.generated';\n\nexport type OffersAndReportsProps = {\n  heading: 'Offers' | 'Reports';\n  type: 'offer' | 'report';\n  noDataNote: string;\n  count: number;\n  list:\n    | Pick<CampaignOfferFragment, '_id' | 'createdAt' | 'status' | 'oid'>[]\n    | Pick<\n        CampaignReportForCampaignSummaryFragment,\n        '_id' | 'createdAt' | 'reportId'\n      >[];\n  onView: (id: string) => void;\n  onToggleOldOffers?: (checked: boolean) => void;\n};\n\nexport enum GOALS {\n  INCREASE_NOUM_VISIBILITY = 'Increase my Noum visibility',\n  GET_QUICK_QUESTIONS_ANSWERS = 'Get answers to Quick Questions',\n  GAIN_CONNECTED_USERS_AND_FOLLOWERS = 'Gain connected users and followers',\n  OTHER = 'OTHER',\n}\n\nexport enum BudgetType {\n  TOTAL_BUDGET = 'Total Budget',\n  TOTAL_DAILY_BUDGET = 'Total Daily Budget',\n}\n","import { Spacer, Stack } from '@/layout';\nimport { TSpan } from '@/components/Typography';\nimport DefaultImage from '@/assets/images/chamber_default.png';\nimport { useBreakpoints } from '@/hooks/useBreakpoints';\n\nimport { type CampaignSummaryFragment } from '@/apollo/graphql';\nimport { cleanList } from '@/utils/list';\nimport { Divider } from '../components/Divider';\nimport { NOUMCard } from '../components/NoumCard';\nimport S from './styles';\nimport { Badge, type Props } from '../components/Badge';\nimport { GOALS, BudgetType } from './types';\nimport { Utils } from '../utils';\nimport { CountryCard } from '../components/CountryCard';\n\ntype HeadingProps = { applyTouchStyles: boolean } & Pick<\n  CampaignSummaryFragment,\n  'title' | 'status' | 'startDate' | 'adId'\n>;\n\nfunction Heading({ applyTouchStyles, title, status, adId }: HeadingProps) {\n  const badgeStatus = status as Props['status'];\n  return (\n    <>\n      {applyTouchStyles && (\n        <>\n          <Stack vertical gap={8}>\n            {status && <Badge status={badgeStatus} />}\n            <S.ContainerTitle>{title}</S.ContainerTitle>{' '}\n            {adId && (\n              <TSpan font=\"body-m\" colorToken=\"--text-card-neutral-highlighted\">\n                <TSpan colorToken=\"--text-card-neutral-default\">ID:</TSpan>\n                {Utils.appendAdPrefix(adId ?? '')}\n              </TSpan>\n            )}\n          </Stack>\n          <Divider />\n        </>\n      )}\n      {!applyTouchStyles && (\n        <>\n          <Stack align=\"start\" justify=\"space-between\">\n            <Stack maxWidth=\"80%\" gap={8}>\n              <S.ContainerTitle>{title}</S.ContainerTitle>\n              {status && (\n                <S.StackForCampaignHeading>\n                  <Spacer height={4} />\n                  <Badge status={badgeStatus} />\n                </S.StackForCampaignHeading>\n              )}\n            </Stack>\n            {adId && (\n              <TSpan font=\"body-m\" colorToken=\"--text-card-neutral-highlighted\">\n                <TSpan colorToken=\"--text-card-neutral-default\">ID:</TSpan>{' '}\n                {Utils.appendAdPrefix(adId ?? '')}\n              </TSpan>\n            )}\n          </Stack>\n          <Divider />\n        </>\n      )}\n    </>\n  );\n}\n\ntype InformationProps = { isMobile: boolean } & Pick<\n  CampaignSummaryFragment,\n  'startDate' | 'noumId' | 'budgetType' | 'budgetAmount'\n>;\n\nfunction Information({\n  startDate,\n  noumId,\n  budgetAmount,\n  budgetType = BudgetType.TOTAL_BUDGET,\n  isMobile,\n}: InformationProps) {\n  return (\n    <>\n      <S.InfoContainer>\n        <S.Info>\n          <S.Label>Start Date</S.Label>\n          <S.Value>{Utils.formatDateForSummary(startDate)}</S.Value>\n        </S.Info>\n        <S.Info>\n          {/* @ts-ignore */}\n          <S.Label>{BudgetType[budgetType as BudgetType]}</S.Label>\n          <S.Value>{budgetAmount ?? 0} USD</S.Value>\n        </S.Info>\n        {!isMobile && (\n          <S.Info>\n            <S.Label>Noum:</S.Label>\n            <NOUMCard\n              name={noumId?.name ?? ''}\n              image={noumId?.profileImage ?? DefaultImage}\n            />\n          </S.Info>\n        )}\n      </S.InfoContainer>\n      {isMobile && (\n        <>\n          <Spacer height={16} />\n          <S.Info>\n            <S.Label>Noum:</S.Label>\n            <NOUMCard\n              name={noumId?.name ?? ''}\n              image={noumId?.profileImage ?? DefaultImage}\n            />\n          </S.Info>\n        </>\n      )}\n      <Divider />\n    </>\n  );\n}\n\ntype GoalsProps = { applyTouchStyles: boolean } & Pick<\n  CampaignSummaryFragment,\n  'goals' | 'otherGoals'\n>;\n\nfunction Goals({ applyTouchStyles, goals, otherGoals = '' }: GoalsProps) {\n  const firstRow = cleanList(goals?.slice(0, 2));\n  const secondRow = cleanList(goals?.slice(2));\n\n  return (\n    <>\n      <S.Label>Goals</S.Label>\n      <Spacer height={8} />\n      <Stack vertical={applyTouchStyles} gap={applyTouchStyles ? 0 : 8}>\n        {!!firstRow?.length && (\n          <S.Ul>\n            {firstRow?.map((goal) => {\n              const goalText =\n                // @ts-ignore\n                goal !== GOALS.OTHER ? GOALS[goal as GOALS] : otherGoals;\n              return (\n                <li>\n                  <S.Value>{goalText}</S.Value>\n                </li>\n              );\n            })}\n          </S.Ul>\n        )}\n        {!!secondRow?.length && (\n          <S.Ul>\n            {secondRow?.map((goal) => {\n              const goalText =\n                // @ts-ignore\n                goal !== GOALS.OTHER ? GOALS[goal as GOALS] : otherGoals;\n              return (\n                <li>\n                  <S.Value>{goalText}</S.Value>\n                </li>\n              );\n            })}\n          </S.Ul>\n        )}\n      </Stack>\n      <Divider />\n    </>\n  );\n}\n\ntype DemoGraphicsProps = { applyTouchStyles: boolean } & Pick<\n  CampaignSummaryFragment,\n  'audience'\n>;\n\nfunction DemoGraphics({ applyTouchStyles, audience }: DemoGraphicsProps) {\n  const flag = audience?.targetLocation?.[0]?.split('-')[0];\n\n  let country = audience?.targetLocation?.[0]?.split('-')[1];\n\n  country = country || flag;\n\n  return (\n    <>\n      <S.InfoContainer\n        vertical={applyTouchStyles}\n        applyTouchStyles={applyTouchStyles}\n        wrap=\"wrap\"\n      >\n        <S.Info>\n          <S.Label>Audience</S.Label>\n          <S.Value>{audience ? audience?.category?.join(',') : ''}</S.Value>\n        </S.Info>\n        <S.Info>\n          <S.Label>Target Audience Location</S.Label>\n          <S.Value>\n            {country && <CountryCard country={country} flag={flag} />}\n          </S.Value>\n        </S.Info>\n        <S.Info>\n          <S.Label>Language</S.Label>\n          <S.Value>\n            {audience ? audience?.targetLanguage?.join(',') : ''}\n          </S.Value>\n        </S.Info>\n      </S.InfoContainer>\n    </>\n  );\n}\n\nexport function CampaignDetails({\n  audience,\n  startDate,\n  noumId,\n  goals,\n  budgetAmount,\n  budgetType,\n  adId,\n  otherGoals,\n  title = '',\n  status = 'Pending',\n}: CampaignSummaryFragment) {\n  const devices = useBreakpoints();\n\n  return (\n    <S.Container>\n      <Heading\n        applyTouchStyles={devices.isMobile}\n        title={title}\n        status={status}\n        adId={adId}\n      />\n\n      <Information\n        startDate={startDate}\n        noumId={noumId}\n        budgetAmount={budgetAmount}\n        budgetType={budgetType}\n        isMobile={devices.isMobile}\n      />\n\n      <Goals\n        applyTouchStyles={devices.isMobile}\n        goals={goals}\n        otherGoals={otherGoals}\n      />\n\n      <DemoGraphics\n        applyTouchStyles={devices.isMobile || devices.isTablet}\n        audience={audience}\n      />\n    </S.Container>\n  );\n}\n"],"names":["Right","styled","Stack","attrs","fullWidth","align","gap","Main","vertical","justify","mediaSizes","TABLET_MAX","Container","Card","ContainerTitle","TSpan","font","colorToken","InfoContainer","applyTouchStyles","css","Info","Label","Ul","ul","Value","Count","FileContainer","FileSide","FileIcon","StackForCampaignHeading","S","Divider","jsxs","Fragment","jsx","Spacer","Separator","GOALS","INCREASE_NOUM_VISIBILITY","GET_QUICK_QUESTIONS_ANSWERS","GAIN_CONNECTED_USERS_AND_FOLLOWERS","OTHER","BudgetType","TOTAL_BUDGET","TOTAL_DAILY_BUDGET","Heading","title","status","adId","badgeStatus","Badge","Utils","appendAdPrefix","Information","startDate","noumId","budgetAmount","budgetType","isMobile","formatDateForSummary","NOUMCard","name","profileImage","DefaultImage","Goals","goals","otherGoals","firstRow","cleanList","slice","secondRow","length","map","goal","goalText","DemoGraphics","audience","flag","targetLocation","split","country","category","join","CountryCard","targetLanguage","CampaignDetails","devices","useBreakpoints","isTablet"],"mappings":"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"}