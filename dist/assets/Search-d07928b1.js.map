{"version":3,"file":"Search-d07928b1.js","sources":["../../src/screens/Search/Layout/styles.ts","../../src/screens/Search/Layout/index.tsx","../../src/screens/Search/index.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { sizes } from '@/constants/devices';\nimport { noScrollBar } from '@/common/globalStyles';\n\nexport const Container = styled.div`\n  font-family: var(--font-family);\n  display: flex;\n  flex-direction: column;\n`;\nexport const Main = styled.div`\n  position: relative;\n  display: grid;\n  grid-template-columns: 783px 322px;\n  gap: 24px;\n  padding: 0px 24px;\n  justify-content: center;\n  ${noScrollBar}\n\n  @media (min-width: ${sizes.LAPTOP_L}) {\n    margin-left: 256px;\n  }\n\n  @media (max-width: ${sizes.LAPTOP}) {\n    grid-template-columns: 670px 290px;\n    padding: 16px;\n    justify-content: start;\n  }\n\n  @media (max-width: ${sizes.TABLET_L}) {\n    grid-template-columns: 488px 235px;\n    padding: 16px;\n    justify-content: center;\n  }\n\n  @media (max-width: ${sizes.MOBILE_L}) {\n    grid-template-columns: 375px;\n    padding: 16px;\n  }\n  @media (max-width: ${sizes.MOBILE_M}) {\n    grid-template-columns: 351px;\n  }\n  @media (max-width: ${sizes.MOBILE_S}) {\n    grid-template-columns: 288px;\n  }\n`;\n\nexport const Content = styled.div`\n  width: 100%;\n  overflow-x: hidden;\n  ${noScrollBar}\n  label {\n    width: auto;\n  }\n`;\n\nexport const Head = styled.div`\n  padding: 8px 0px;\n  display: flex;\n  gap: 12px;\n  align-items: center;\n  @media (min-width: ${sizes.MOBILE_L}) {\n    gap: 40px;\n  }\n`;\nexport const HeadName = styled.div`\n  width: 239px;\n  text-align: center;\n`;\n\nexport const HeadIcon = styled.div`\n  padding: 8px;\n`;\n\nexport const RightContent = styled.div`\n  width: 100%;\n  max-width: 330px;\n  @media (max-width: ${sizes.MOBILE_L}) {\n    display: none;\n  }\n`;\n","import { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useWindowDimensions } from '@/hooks';\nimport { Header } from '@/components/Header';\nimport { MainHeader } from '@/layout/MainHeader';\nimport { UserUtil } from '@/utils/user';\nimport { Icon } from '@/components/Icon';\nimport { breakpoints } from '@/constants/devices';\nimport { TSpan } from '@/components/Typography/Typography';\nimport { Stack, StackItem } from '@/layout/Stack';\nimport { GlobalSearch } from '@/features/globalSearch/components/GlobalSearch';\nimport { useLaunchDarkly } from '@/hooks/launchDarkly';\nimport { AppLayout } from '@/layout/AppLayout';\nimport {\n  Container,\n  Main,\n  Content,\n  Head,\n  HeadName,\n  HeadIcon,\n  RightContent,\n} from './styles';\nimport { type LayoutProps } from './types';\n\nconst SearchLayout: React.FC<LayoutProps> = ({\n  children,\n  rightContent,\n  setResult,\n  selectedTab,\n  onGoBack,\n}) => {\n  const { t } = useTranslation();\n  const { user } = useAuth();\n  const navigate = useNavigate();\n\n  const handleBackClick = () => {\n    navigate(-1);\n  };\n  const {\n    flags: { newAppNavigation },\n  } = useLaunchDarkly();\n\n  const { width } = useWindowDimensions();\n  const isLaptop = width > breakpoints.MOBILE_L;\n\n  const mobileHeadView = () => (\n    <Stack padding={16} vertical>\n      <Head>\n        <HeadIcon onClick={handleBackClick}>\n          <Icon\n            color=\"--icon-button-neutral-default\"\n            name=\"arrow_left_m\"\n            size={24}\n          />\n        </HeadIcon>\n        <HeadName>\n          <TSpan font=\"body-l-bold\" colorToken=\"--text-appbar-neutral-default\">\n            {t('noumena.search.search_head.text')}\n          </TSpan>\n        </HeadName>\n      </Head>\n      <GlobalSearch setResults={setResult} type={selectedTab} />\n    </Stack>\n  );\n\n  if (newAppNavigation) {\n    return (\n      <AppLayout.Layout\n        background=\"neutral-alt\"\n        onGoBack={onGoBack}\n        topNavbar={\n          !isLaptop ? (\n            mobileHeadView()\n          ) : (\n            <AppLayout.TopBar\n              onSearchChange={setResult}\n              searchTypeFilter={selectedTab}\n            />\n          )\n        }\n        sideNav={<AppLayout.SideNavigation />}\n      >\n        <AppLayout.MainContent>\n          <Stack gap={24} align=\"start\" justify=\"stretch\" fullWidth>\n            <StackItem grow>{children}</StackItem>\n\n            {!!rightContent && (\n              <RightContent data-testid=\"layout-right-content\">\n                {rightContent}\n              </RightContent>\n            )}\n          </Stack>\n        </AppLayout.MainContent>\n      </AppLayout.Layout>\n    );\n  }\n\n  return (\n    <Container data-testid=\"layout-container\">\n      {!isLaptop ? (\n        mobileHeadView()\n      ) : (\n        <Header isBorderRadius={false}>\n          <MainHeader\n            avatar={UserUtil.getProfilePicture(user) || undefined}\n            userName={user?.firstName || undefined}\n            setSearchResult={setResult}\n            searchFilter={selectedTab}\n          />\n        </Header>\n      )}\n      <Main data-testid=\"layout-main\">\n        <Content>{children}</Content>\n        <RightContent>{rightContent}</RightContent>\n      </Main>\n    </Container>\n  );\n};\nexport default SearchLayout;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { t } from 'i18next';\nimport BasicChipsTabsForm from '@/components/Tabs/TabsForm';\nimport { TSpan } from '@/components/Typography';\nimport { Spinner } from '@/components/Spinner';\nimport { Infinite } from '@/components/Infinite';\nimport { type GlobalSearchEntity } from '@/apollo/generated/types';\nimport {\n  OptionHeaderWrapper,\n  RecentSearchHead,\n} from '@/features/globalSearch/components/GlobalSearch';\nimport { useRecentSearch } from '@/features/globalSearch/hooks';\nimport SearchList from './SearchList';\nimport {\n  TabsContainer,\n  SearchHead,\n  DataContent,\n  ContentSpan,\n  SpinnerHead,\n  SpanItem,\n} from './styles';\nimport { type ResultType } from './types';\nimport { searchHeadList } from './constants';\nimport SearchLayout from './Layout';\n\nconst Search = () => {\n  const navigate = useNavigate();\n\n  const [selectedTab, setSelectedTab] = useState<string>('All');\n  const [result, setResult] = useState<ResultType>();\n\n  const { markSeachEntityAsClickedMutation } = useRecentSearch({});\n\n  const onTabChange = useCallback((value: string) => {\n    setSelectedTab(value);\n  }, []);\n\n  useEffect(() => {\n    if (!result?.search) {\n      setResult((pre) => ({\n        ...pre,\n        data: undefined,\n        search: undefined,\n      }));\n    }\n  }, [result?.search]);\n\n  const isRecentSearch = useMemo(\n    () =>\n      result?.isMobile &&\n      !result?.search &&\n      result?.recentSearchList &&\n      result?.recentSearchList?.length > 0,\n    [result?.isMobile, result?.recentSearchList, result?.search],\n  );\n\n  const isSearchLoader = useMemo(\n    () =>\n      result?.loading ||\n      (result?.infiniteState === 'hasNextPage' &&\n        result?.data &&\n        !result?.search),\n    [result?.data, result?.infiniteState, result?.loading, result?.search],\n  );\n\n  const isSearchData = useMemo(\n    () =>\n      !result?.loading &&\n      ((!result?.search && !result?.data) ||\n        (result?.data && result.data.length === 0)),\n    [result?.data, result?.loading, result?.search],\n  );\n\n  const isRecentSearchResult = useMemo(\n    () =>\n      !result?.data &&\n      !result?.loading &&\n      result?.isMobile &&\n      result?.recentSearchList &&\n      result?.recentSearchList.length === 0,\n    [result?.data, result?.isMobile, result?.loading, result?.recentSearchList],\n  );\n\n  const isRecentSearchLoader = useMemo(\n    () => !result?.search && result?.isMobile && result?.recentSearchLoading,\n    [result?.isMobile, result?.recentSearchLoading, result?.search],\n  );\n\n  const rightContent = () => (\n    <>\n      <ContentSpan\n        header\n        font=\"heading-xs-bold\"\n        colorToken=\"--text-body-header-neutral-default\"\n      >\n        {t('noumena.search.search_recent')}\n      </ContentSpan>\n      {result?.recentSearchLoading ? (\n        <SpinnerHead recentSearch={result?.recentSearchLoading}>\n          <Spinner />\n        </SpinnerHead>\n      ) : (\n        result?.searchQueriesList &&\n        result?.searchQueriesList?.length > 0 &&\n        result?.searchQueriesList.map((history) => (\n          <SpanItem\n            key={history}\n            color=\"--text-tablecell-header-neutral-highlighted\"\n          >\n            {history}\n          </SpanItem>\n        ))\n      )}\n    </>\n  );\n\n  const searchRouteHandler = (value: GlobalSearchEntity) => {\n    markSeachEntityAsClickedMutation({\n      variables: {\n        markSearchEntityAsClickedId: `${value.entityType}/${value.id}`,\n      },\n    });\n  };\n\n  return (\n    <SearchLayout\n      setResult={setResult}\n      selectedTab={selectedTab}\n      rightContent={rightContent()}\n      onGoBack={() => navigate(-1)}\n    >\n      <SearchHead>\n        <TSpan\n          font=\"heading-s-bold\"\n          colorToken=\"--text-body-header-neutral-default\"\n        >\n          {t('noumena.search.search_results')}\n        </TSpan>\n      </SearchHead>\n      {isRecentSearchLoader ? (\n        <SpinnerHead>\n          <Spinner />\n        </SpinnerHead>\n      ) : isRecentSearch ? (\n        <>\n          <OptionHeaderWrapper>\n            <TSpan\n              font=\"body-m-bold\"\n              colorToken=\"--text-tablecell-header-neutral-highlighted\"\n            >\n              {t('noumena.global_search.recent_searches')}\n            </TSpan>\n          </OptionHeaderWrapper>\n          <SearchList\n            result={result?.recentSearchList}\n            searchRouteHandler={searchRouteHandler}\n          />\n        </>\n      ) : isRecentSearchResult ? (\n        <RecentSearchHead>\n          <TSpan font=\"body-m\" colorToken=\"--text-placeholder-neutral-default\">\n            {t('noumena.global_search.no_recent_results')}\n          </TSpan>\n        </RecentSearchHead>\n      ) : (\n        <>\n          <TabsContainer>\n            <BasicChipsTabsForm\n              onChange={onTabChange}\n              inputList={searchHeadList()}\n              selectedId={selectedTab}\n              mode=\"isBackground\"\n              isWithoutImage\n              fontSize=\"--font-link-medium-size\"\n            />\n          </TabsContainer>\n          <DataContent>\n            {result?.data && result.data.length > 0 ? (\n              <Infinite\n                onFetchMore={result?.fetchMore}\n                scrollbarWidth={0}\n                paddingBottom=\"25px\"\n              >\n                <SearchList\n                  result={result.data}\n                  query={result?.search}\n                  searchRouteHandler={searchRouteHandler}\n                />\n              </Infinite>\n            ) : (\n              isSearchData && (\n                <ContentSpan\n                  font=\"body-l\"\n                  colorToken=\"--text-placeholder-neutral-default\"\n                >\n                  {t('noumena.global_search.no_results')}\n                </ContentSpan>\n              )\n            )}\n            {isSearchLoader && (\n              <SpinnerHead>\n                <Spinner />\n              </SpinnerHead>\n            )}\n          </DataContent>\n        </>\n      )}\n    </SearchLayout>\n  );\n};\n\nexport default Search;\n"],"names":["Container","styled","div","Main","noScrollBar","sizes","LAPTOP_L","LAPTOP","TABLET_L","MOBILE_L","MOBILE_M","MOBILE_S","Content","Head","HeadName","HeadIcon","RightContent","SearchLayout","children","rightContent","setResult","selectedTab","onGoBack","t","useTranslation","user","useAuth","navigate","useNavigate","handleBackClick","flags","newAppNavigation","useLaunchDarkly","width","useWindowDimensions","isLaptop","breakpoints","mobileHeadView","jsxs","Stack","jsx","Icon","TSpan","GlobalSearch","AppLayout","StackItem","Header","MainHeader","UserUtil","getProfilePicture","undefined","firstName","Search","setSelectedTab","useState","result","markSeachEntityAsClickedMutation","useRecentSearch","onTabChange","useCallback","value","useEffect","search","pre","data","isRecentSearch","useMemo","isMobile","recentSearchList","length","isSearchLoader","loading","infiniteState","isSearchData","isRecentSearchResult","isRecentSearchLoader","recentSearchLoading","Fragment","ContentSpan","SpinnerHead","Spinner","searchQueriesList","map","history","SpanItem","`Search-rightContent-SpanItem-${history}`","searchRouteHandler","variables","markSearchEntityAsClickedId","entityType","id","SearchHead","OptionHeaderWrapper","SearchList","RecentSearchHead","TabsContainer","BasicChipsTabsForm","searchHeadList","DataContent","Infinite","fetchMore","Search$1"],"mappings":"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"}