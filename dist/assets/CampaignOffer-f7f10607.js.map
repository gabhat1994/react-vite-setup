{"version":3,"file":"CampaignOffer-f7f10607.js","sources":["../../src/screens/Campaigns/CampaignOffer/OfferActions.tsx","../../src/screens/Campaigns/CampaignOffer/useCampaignOffer.ts","../../src/screens/Campaigns/CampaignOffer/CampaignOffer.tsx"],"sourcesContent":["import { useState } from 'react';\n\nimport { Button } from '@/components/Button';\nimport * as EM from '@/components/ExtendedModal';\nimport { TextField } from '@/components/TextField';\nimport { TSpan } from '@/components/Typography';\nimport { Spacer, Stack } from '@/layout';\n\nimport { type Action } from './types';\n\ntype OfferActionsProps = {\n  open: boolean;\n  actionButtonLoading?: boolean;\n  action: Action;\n  onClose: () => void;\n  onAction: (modalType: Action, rejectedReason: string) => void;\n};\n\nexport function OfferActions({\n  open,\n  action,\n  onClose,\n  onAction,\n  actionButtonLoading = false,\n}: OfferActionsProps) {\n  const [rejectedReason, setRejectedReason] = useState('');\n  return (\n    <EM.Modal open={open} enableCloseButton onClose={onClose}>\n      <EM.ModalHeader>\n        {action === 'accept' ? 'Terms & Conditions' : 'Reject'}\n      </EM.ModalHeader>\n      <EM.ModalBody>\n        <Stack vertical maxWidth={400} align=\"center\" justify=\"center\">\n          <TSpan\n            font=\"body-l\"\n            colorToken=\"--text-modal-neutral-default\"\n            textAlign=\"center\"\n          >\n            {action === 'accept'\n              ? `I acknowledge and accept that Noumena does not guarantee a 100%\n            efficiency rate, as the outcome of the campaign will be influenced\n            by various market factors beyond Noumena's control.`\n              : `Please provide a reason for rejecting this offer to help us improve our offerings in the future.`}\n          </TSpan>\n          {action === 'reject' && (\n            <>\n              <Spacer height={16} />\n              <TextField\n                value={rejectedReason}\n                fullWidth\n                label=\"Reason (optional)\"\n                autoFocus\n                onChange={(e) => setRejectedReason(e.target.value)}\n              />\n            </>\n          )}\n        </Stack>\n      </EM.ModalBody>\n      <EM.ModalFooter gap={16} justifyContent=\"center\">\n        <Button size=\"full\" tertiary onClick={onClose}>\n          Cancel\n        </Button>\n        <Button\n          size=\"full\"\n          primary\n          loading={actionButtonLoading}\n          intent={action === 'accept' ? 'positive' : 'negative'}\n          onClick={() => onAction(action, rejectedReason)}\n        >\n          {action === 'accept' ? 'I Agree' : 'Reject'}\n        </Button>\n      </EM.ModalFooter>\n    </EM.Modal>\n  );\n}\n","/* eslint-disable no-case-declarations */\nimport { useCallback, useState } from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\n\nimport { useModalManager } from '@/hooks/modal/useModalManager';\n\nimport {\n  useCampaignAccountLazyQuery,\n  useCampaignForOfferQuery,\n  useCampaignOfferByIdQuery,\n  useRejectCampaignOfferMutation,\n  useWalletStatusForCampaignPaymentLazyQuery,\n} from '@/apollo/graphql';\n\nimport { useError, useToast } from '@/hooks';\n\nimport { EnumAdCampaignOfferStatus } from '@/apollo/generated/types';\n\nimport {\n  type EWalletStatus,\n  WALLET_CREATED,\n} from '@/screens/Money/Payments/Wallets/types';\n\nimport { type Action } from './types';\nimport { Utils } from '../utils';\n\ntype Params = {\n  id?: string;\n};\n\nexport const useCampaignOffer = () => {\n  const logger = useError();\n  const params = useParams<Params>();\n  const [showInfoBox, setShowInfoBox] = useState(true);\n\n  const [searchParams] = useSearchParams();\n  const campaignId = searchParams.get('campaignId');\n  const { addSuccessIconToast, addErrorToast, addPrimaryIconToast } =\n    useToast();\n  const { modalType, openModal, closeModal } = useModalManager<Action>();\n\n  const [checkWallet, { loading: walletCheckingInProgress }] =\n    useWalletStatusForCampaignPaymentLazyQuery({\n      fetchPolicy: 'cache-and-network',\n      onError: (e) => logger.logError(e, 'check-wallet-status', false),\n    });\n\n  const [\n    getAccount,\n    { data: campaignAccountData, loading: loadingCampaignAccount },\n  ] = useCampaignAccountLazyQuery({\n    onError: (e) => logger.logError(e, 'get-default-campaign-account', false),\n  });\n\n  const {\n    data: campaignData,\n    refetch: refetchCampaign,\n    loading: loadingCampaign,\n  } = useCampaignForOfferQuery({\n    skip: !campaignId,\n    variables: { campaignId: campaignId ?? '' },\n    onError: (e) => logger.logError(e, 'campaign-summary-in-offer', true),\n  });\n\n  const {\n    data: offerData,\n    refetch: refetchOffers,\n    loading: loadingOffer,\n  } = useCampaignOfferByIdQuery({\n    variables: { offerId: params.id ?? '' },\n    skip: !params.id,\n    onError: (e) => logger.logError(e, 'offer-by-id', true),\n  });\n\n  const campaignAccount = Utils.mapCampaignAcount(\n    campaignAccountData?.getCampaignAccount,\n  );\n\n  const [rejectOffer, { loading: loadingRejection }] =\n    useRejectCampaignOfferMutation({\n      onError: (error) => logger.logError(error, 'reject-offer', true),\n      onCompleted: ({ rejectAdCampaignOffer }) => {\n        if (rejectAdCampaignOffer.success) {\n          closeModal();\n          addSuccessIconToast('Offer has been declined. We’ve been notified.');\n          refetchCampaign();\n          refetchOffers();\n        }\n      },\n    });\n\n  const handleModalAction = useCallback(\n    async (type: Action, rejectedReason: string) => {\n      switch (type) {\n        case 'accept':\n          const { data: wallet } = await checkWallet();\n\n          const walletStatus = wallet?.getWalletBalance\n            ?.status as EWalletStatus;\n\n          const isWalletCreated = WALLET_CREATED.includes(walletStatus ?? '');\n\n          if (!isWalletCreated) {\n            addErrorToast(\n              `Your wallet is not yet created. Please retry after creating you wallet in Money Page.`,\n            );\n            closeModal();\n\n            return;\n          }\n          const { data: accData } = await getAccount();\n\n          const isAccountSetByAdmin = accData?.getCampaignAccount?.id;\n\n          closeModal();\n\n          if (isAccountSetByAdmin) {\n            openModal('pay');\n          } else {\n            addErrorToast(\n              'Unable to process payment at this time. Contact Noumena Support',\n            );\n          }\n          break;\n        case 'reject':\n          rejectOffer({\n            variables: {\n              offerId: offerData?.getAdCampaignOfferOne?._id ?? '',\n              reason: rejectedReason,\n            },\n          });\n          break;\n        default:\n          closeModal();\n      }\n    },\n    [\n      checkWallet,\n      getAccount,\n      closeModal,\n      rejectOffer,\n      offerData?.getAdCampaignOfferOne?._id,\n      openModal,\n      addErrorToast,\n    ],\n  );\n\n  const campaign = {\n    ...Utils.mapCampaignForOffer(campaignData?.getSelectedAdCampaignDetails),\n    campaignId,\n  };\n\n  const acceptAndPay = useCallback(() => openModal('accept'), [openModal]);\n  const reject = useCallback(() => openModal('reject'), [openModal]);\n  const offer = Utils.cleanOffer(offerData?.getAdCampaignOfferOne);\n\n  const hideRejected = Utils.hideReject(offer.status);\n\n  const hidePayment = Utils.hidePayment(campaign.status, offer.status);\n\n  const repayment = Utils.isRepayment(campaign.status, offer.status);\n\n  const onAccepted = useCallback(async () => {\n    closeModal();\n    refetchCampaign();\n    const { data } = await refetchOffers();\n    if (\n      data &&\n      data?.getAdCampaignOfferOne?.status === EnumAdCampaignOfferStatus.Accepted\n    ) {\n      addPrimaryIconToast(\n        'We are processing your payment, the campaign will change its status soon.',\n      );\n    }\n  }, [addPrimaryIconToast, closeModal, refetchCampaign, refetchOffers]);\n\n  const toggleInfoBox = useCallback(() => {\n    setShowInfoBox((s) => !s);\n  }, []);\n\n  return {\n    campaign,\n    offer,\n    campaignAccount,\n    repayment,\n    refetch: {\n      onAccepted,\n    },\n    loading: {\n      page: loadingCampaign || loadingOffer,\n      rejection: loadingRejection,\n      campaignAccount: loadingCampaignAccount,\n      wallet: walletCheckingInProgress,\n    },\n    button: {\n      hideRejected,\n      hidePayment,\n    },\n    modal: {\n      modalType,\n      handleModalAction,\n      closeModal,\n    },\n    userAction: {\n      acceptAndPay,\n      reject,\n    },\n    infobox: {\n      toggle: toggleInfoBox,\n      open: showInfoBox,\n    },\n  };\n};\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport SinglePageLayout from '@/layout/SinglePageLayout';\nimport { useBreakpoints } from '@/hooks/useBreakpoints';\n\nimport {\n  TransactionModal,\n  TransactionModalType,\n} from '@/features/TransactionModal';\n\nimport { Spinner } from '@/components/Spinner';\nimport { Tag } from '@/components/Tag';\nimport { TSpan } from '@/components/Typography';\nimport { EnumAdCampaignOfferStatus } from '@/apollo/generated/types';\n\nimport { Infobox } from '@/components/Infobox';\nimport { Icon } from '@/components/Icon';\nimport { Stack } from '@/layout';\nimport { Header, Actions } from '../components/CampaignHeader';\nimport { Layout } from '../components/Layout/Layout';\nimport { ExpertMessage } from '../components/ExpertMessage';\nimport { CampaignOfferSummary } from './CampaignOfferSummary';\nimport { Goals } from './Goals';\nimport { OfferActions } from './OfferActions';\nimport { useCampaignOffer } from './useCampaignOffer';\nimport { Utils } from '../utils';\nimport { useDownloads } from '../hooks/useDownload';\n\nconst renderLabel = (status: string, updatedAt: string) =>\n  [\n    EnumAdCampaignOfferStatus.Accepted,\n    EnumAdCampaignOfferStatus.Rejected,\n  ].includes(status as EnumAdCampaignOfferStatus) ? (\n    <Tag tertiary>\n      <TSpan font=\"body-m-bold\" colorToken=\"text-tag-neutral-default\">\n        {status && Utils.capitalizeFirstLetter(status)} {':  '}{' '}\n        {updatedAt && Utils.formatDate(updatedAt)}\n      </TSpan>\n    </Tag>\n  ) : (\n    <></>\n  );\nexport function CampaignOffer() {\n  const device = useBreakpoints();\n\n  const {\n    modal,\n    userAction,\n    campaign,\n    offer,\n    campaignAccount,\n    button,\n    refetch,\n    loading,\n    repayment,\n    infobox,\n  } = useCampaignOffer();\n  const { Ref, handleDownloadPdf } = useDownloads();\n\n  return (\n    <SinglePageLayout>\n      {loading.page ? (\n        <Spinner />\n      ) : (\n        <Header\n          heading={`Offer #${offer.oid}`}\n          label={renderLabel(offer.status, offer.updatedAt)}\n          isMobile={device.isMobile}\n          isTablet={device.isTablet}\n          stepper={false}\n          currentStep={0}\n          totalSteps={0}\n          wrap={true}\n          rightAction={\n            <Actions.OfferActions\n              hideAcceptAndPay={button.hidePayment}\n              hideRejectButton={button.hideRejected}\n              disableButtons={loading.page}\n              onAcceptAndPay={userAction.acceptAndPay}\n              onDownload={() =>\n                handleDownloadPdf({ document: 'offer', documentId: offer.oid })\n              }\n              onReject={userAction.reject}\n            />\n          }\n        />\n      )}\n\n      {loading.page ? (\n        <Spinner />\n      ) : (\n        <div\n          ref={Ref}\n          style={{\n            alignSelf: 'center',\n            width: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n          }}\n        >\n          <Layout.Main>\n            {repayment && infobox.open && (\n              <div\n                style={{\n                  width: device.isDesktop || device.isLaptop ? '100%' : '90%',\n                  padding: device.isMobile || device.isTablet ? '20px' : '0px',\n                }}\n              >\n                <Infobox type=\"negative\">\n                  <Stack justify=\"space-between\" align=\"center\">\n                    <div>\n                      Payment verification failed. Please click “Accept and Pay”\n                      to try again.\n                    </div>\n                    <div style={{ cursor: 'pointer' }} onClick={infobox.toggle}>\n                      <Icon\n                        name=\"close_s\"\n                        size={24}\n                        color=\"--border-infobox-danger-primary-default\"\n                      />\n                    </div>\n                  </Stack>\n                </Infobox>\n              </div>\n            )}\n            {/* <div ref={Ref}> */}\n            <CampaignOfferSummary\n              title={campaign.title}\n              startAt={offer.startAt}\n              createdAt={offer.createdAt}\n              endAt={offer.endAt}\n              adId={campaign.adId}\n              category={campaign.category}\n              targetLanguage={campaign.targetLanguage}\n              targetLocation={campaign.targetLocation}\n              clicksWeekly={offer.clicksWeekly}\n              costTotal={offer.costTotal}\n              costWeekly={offer.costWeekly}\n              reachTotal={offer.reachTotal}\n              cpc={offer.cpc}\n              noumId={campaign.noumId}\n              isMobile={device.isMobile}\n              estimatedDuration={offer.estimatedDuration}\n            />\n\n            <ExpertMessage\n              campaignCreatedBy={campaign.createdBy.firstName ?? ''}\n              createdBy={offer.createdBy}\n              message={offer.message}\n            />\n\n            <Goals\n              isMobile={device.isMobile}\n              goalConnectedUsers={offer.goalConnectedUsers}\n              goalNoumVisibility={offer.goalNoumVisibility}\n              status={offer.status}\n              estimatedDuration={offer.estimatedDuration}\n              isTablet={device.isTablet}\n            />\n            {/* </div> */}\n          </Layout.Main>\n        </div>\n      )}\n\n      {(modal.modalType === 'accept' || modal.modalType === 'reject') && (\n        <OfferActions\n          open={!!modal.modalType}\n          actionButtonLoading={\n            loading.campaignAccount || loading.rejection || loading.wallet\n          }\n          onClose={modal.closeModal}\n          action={modal.modalType ?? 'accept'}\n          onAction={modal.handleModalAction}\n        />\n      )}\n\n      {modal.modalType === 'pay' && (\n        <TransactionModal\n          open={modal.modalType === 'pay'}\n          type={TransactionModalType.PAY}\n          isDestinationDropdownDisabled\n          defaultWalletPayee={campaignAccount}\n          defaultAmount={offer.costTotal ?? 0}\n          handleClose={refetch.onAccepted}\n          disableAmountsField\n          campaignId={campaign?.campaignId ?? ''}\n          offerId={offer._id ?? ''}\n          campaignRepayment={repayment}\n        />\n      )}\n    </SinglePageLayout>\n  );\n}\n"],"names":["OfferActions","open","action","onClose","onAction","actionButtonLoading","rejectedReason","setRejectedReason","useState","EM.Modal","jsx","EM.ModalHeader","EM.ModalBody","Stack","TSpan","jsxs","Fragment","Spacer","TextField","e","target","value","EM.ModalFooter","Button","useCampaignOffer","logger","useError","params","useParams","showInfoBox","setShowInfoBox","searchParams","useSearchParams","campaignId","get","addSuccessIconToast","addErrorToast","addPrimaryIconToast","useToast","modalType","openModal","closeModal","useModalManager","checkWallet","loading","walletCheckingInProgress","useWalletStatusForCampaignPaymentLazyQuery","fetchPolicy","onError","logError","getAccount","data","campaignAccountData","loadingCampaignAccount","useCampaignAccountLazyQuery","campaignData","refetch","refetchCampaign","loadingCampaign","useCampaignForOfferQuery","skip","variables","offerData","refetchOffers","loadingOffer","useCampaignOfferByIdQuery","offerId","id","campaignAccount","Utils","mapCampaignAcount","getCampaignAccount","rejectOffer","loadingRejection","useRejectCampaignOfferMutation","error","onCompleted","rejectAdCampaignOffer","success","handleModalAction","useCallback","type","wallet","walletStatus","getWalletBalance","status","WALLET_CREATED","includes","accData","isAccountSetByAdmin","getAdCampaignOfferOne","_id","reason","campaign","mapCampaignForOffer","getSelectedAdCampaignDetails","acceptAndPay","reject","offer","cleanOffer","hideRejected","hideReject","hidePayment","repayment","isRepayment","onAccepted","EnumAdCampaignOfferStatus","Accepted","toggleInfoBox","s","page","rejection","button","modal","userAction","infobox","toggle","renderLabel","updatedAt","Rejected","Tag","capitalizeFirstLetter","formatDate","CampaignOffer","device","useBreakpoints","Ref","handleDownloadPdf","useDownloads","SinglePageLayout","Spinner","Header","oid","isMobile","isTablet","Actions","document","documentId","alignSelf","width","display","justifyContent","Layout","isDesktop","isLaptop","padding","Infobox","cursor","Icon","CampaignOfferSummary","title","startAt","createdAt","endAt","adId","category","targetLanguage","targetLocation","clicksWeekly","costTotal","costWeekly","reachTotal","cpc","noumId","estimatedDuration","ExpertMessage","createdBy","firstName","message","Goals","goalConnectedUsers","goalNoumVisibility","TransactionModal","TransactionModalType","PAY"],"mappings":"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"}