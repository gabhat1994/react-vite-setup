{"version":3,"file":"Modal-5a254f40.js","sources":["../../src/features/noums/hooks/spaceQuery/useUpdateProjectChamberHelper.ts","../../src/features/noums/hooks/noums/projectNoum/useCreateProjectChamberHelper.ts","../../src/screens/Chamber/components/modals/ProjectCreate/styles.ts","../../src/screens/Chamber/components/modals/ProjectCreate/ProjectTypeDropdown.tsx","../../src/constants/projectTypeOptions.ts","../../src/screens/Chamber/components/modals/ProjectCreate/data.ts","../../src/screens/Chamber/components/modals/ProjectCreate/Modal.tsx"],"sourcesContent":["import { useCallback } from 'react';\nimport { t } from 'i18next';\nimport * as Sentry from '@sentry/react';\nimport { useToast } from '@/hooks';\nimport { useUpdateProjectChamberMutation } from '@/apollo/graphql';\nimport { type ProjectChamberUpdateInput } from '@/apollo/generated/types';\n\nexport function useUpdateProjectChamberHelper() {\n  const { addToast } = useToast();\n\n  const handleError = useCallback(\n    (networkError: String | Error | null) => {\n      addToast(\n        'error',\n        'none',\n        `${t('noumena.toast_error.text')}: ${networkError}`,\n      );\n    },\n    [addToast],\n  );\n\n  const handleSuccess = useCallback(() => {\n    addToast(\n      'success',\n      'icon',\n      `${t('noumena.toast_success.text')}: ${t(\n        'noumena.noum_edit.noum_edit_success_message.text',\n      )}`,\n    );\n  }, [addToast]);\n\n  const [updateProjectChamber, { loading }] = useUpdateProjectChamberMutation();\n\n  const updateProjectChamberHelper = useCallback(\n    async (id: string, input: ProjectChamberUpdateInput, isToast?: boolean) => {\n      let isSuccess;\n      await updateProjectChamber({\n        variables: { id, input },\n        onError: ({ networkError = null, graphQLErrors = [] }) => {\n          const [err] = graphQLErrors;\n          handleError(err?.message ?? networkError);\n          Sentry.captureException(new Error(err?.message ?? networkError), {\n            tags: {\n              section: 'updateProjectChamberMutation',\n            },\n          });\n          isSuccess = false;\n        },\n        onCompleted: () => {\n          if (!isToast) handleSuccess();\n          isSuccess = true;\n        },\n      });\n      return isSuccess;\n    },\n    [handleError, handleSuccess, updateProjectChamber],\n  );\n\n  return { loading, updateProjectChamberHelper };\n}\n","import { useCallback } from 'react';\nimport { t } from 'i18next';\nimport * as Sentry from '@sentry/react';\nimport { useToast } from '@/hooks/toast';\nimport {\n  GetOwnProjectChambersDocument,\n  type GetOwnProjectChambersQuery,\n} from '@/apollo/graphql/queries/getOwnProjectChambers.generated';\nimport { useCreateProjectChamberMutation } from '@/apollo/graphql';\nimport { type ProjectChamberInput } from '@/apollo/generated/types';\nimport { PAGE_SIZE } from '@/screens/Chambers/constants';\n\nexport type CreateProjectChamberResponse = {\n  id: string | undefined;\n};\n\nexport function useCreateProjectChamberHelper() {\n  const { addToast } = useToast();\n\n  const handleError = useCallback(\n    (networkError: String | Error | null) => {\n      addToast(\n        'error',\n        'none',\n        `${t('noumena.toast_error.text')}: ${networkError}`,\n      );\n    },\n    [addToast],\n  );\n\n  const handleSuccess = useCallback(() => {\n    addToast(\n      'success',\n      'icon',\n      `${t('noumena.chamber_create.success_message')}`,\n    );\n  }, [addToast]);\n\n  const [createProject, { loading }] = useCreateProjectChamberMutation();\n\n  const createProjectChamberHelper = useCallback(\n    async (input: ProjectChamberInput) => {\n      const project: CreateProjectChamberResponse = { id: undefined };\n\n      await createProject({\n        variables: { input },\n        onError: ({ networkError = null, graphQLErrors = [] }) => {\n          const [err] = graphQLErrors;\n          handleError(err?.message ?? networkError);\n          Sentry.captureException(new Error(err?.message ?? networkError), {\n            tags: {\n              section: 'createProjectChamberMutation',\n            },\n          });\n        },\n        onCompleted: ({ createProjectChamber: newProject }) => {\n          handleSuccess();\n          project.id = newProject?._id || undefined;\n        },\n        update: (cache, { data }) => {\n          if (!data || !data.createProjectChamber) return;\n          const readResult = cache.readQuery({\n            query: GetOwnProjectChambersDocument,\n            variables: {\n              offset: 0,\n              limit: PAGE_SIZE,\n              filter: {\n                categoryNotIn: ['6267afe198962732993afaf5'],\n              },\n            },\n          }) as GetOwnProjectChambersQuery;\n          if (!readResult?.getOwnProjectChambers?.data) return;\n          const cloneChambers = [...readResult.getOwnProjectChambers.data];\n          const mergedArray = [data.createProjectChamber, ...cloneChambers];\n          cache.writeQuery({\n            query: GetOwnProjectChambersDocument,\n            variables: {\n              offset: 0,\n              limit: PAGE_SIZE,\n              filter: {\n                categoryNotIn: ['6267afe198962732993afaf5'],\n              },\n            },\n            data: {\n              getOwnProjectChambers: { data: mergedArray },\n            },\n          });\n        },\n      });\n\n      return project;\n    },\n    [handleError, handleSuccess, createProject],\n  );\n\n  return { loading, createProjectChamberHelper };\n}\n\nexport default useCreateProjectChamberHelper;\n","import styled from 'styled-components';\nimport { sizes } from '@/constants/devices';\nimport { Button } from '@/components/Button';\n\nexport const ProfileImage = styled.div<{\n  isUpdateMode?: boolean;\n}>`\n  display: ${({ isUpdateMode }) => (isUpdateMode ? 'block' : 'flex')};\n  width: ${({ isUpdateMode }) => (isUpdateMode ? '40%' : '100%')};\n  justify-content: center;\n  @media (max-width: ${sizes.TABLET_L}) {\n    width: 100%;\n  }\n`;\n\nexport const StyledForm = styled.form<{\n  isUpdateMode?: boolean;\n}>`\n  label {\n    width: fit-content;\n  }\n  ${({ isUpdateMode }) => isUpdateMode && `padding-left: 32px;`}\n  @media (max-width: ${sizes.TABLET_L}) {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    ${({ isUpdateMode }) =>\n      isUpdateMode && `width: auto; margin: 0 auto; padding-left:0;`}\n  }\n`;\n\nexport const StyledButton = styled(Button)<{ isUpdateMode?: boolean }>`\n  ${({ isUpdateMode }) => (isUpdateMode ? 'width: 117px' : 'flex: 1')};\n  @media (max-width: ${sizes.TABLET_L}) {\n    ${({ isUpdateMode }) => (isUpdateMode ? 'width: 100%' : 'flex: 1')};\n  }\n`;\n\nexport const StyledDropDownWrapper = styled.div`\n  width: 100%;\n`;\n\nexport const FormContainer = styled.div<{\n  isUpdateMode?: boolean;\n}>`\n  display: flex;\n  width: ${({ isUpdateMode }) => (isUpdateMode ? '405px' : `100%`)};\n  @media (max-width: ${sizes.TABLET_L}) {\n    width: ${({ isUpdateMode }) => (isUpdateMode ? 'auto' : `100%`)};\n  }\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { StyledDropDownWrapper } from '@/screens/Chamber/components/modals/ProjectCreate/styles';\nimport { Dropdown } from '@/components/Dropdown';\nimport { TextField } from '@/components/TextField';\nimport { ProjectChamberType } from '@/apollo/generated/types';\nimport { Icon } from '@/components/Icon';\nimport { type ProjectTypeDropdownProps } from '@/screens/Chamber/components/modals/ProjectCreate/types';\n\nconst ProjectTypeDropdown: React.FC<ProjectTypeDropdownProps> = ({\n  selectedProjectType,\n  handleSelectProjectType,\n  errors,\n  setValue,\n  projectTypeOptions,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <StyledDropDownWrapper>\n      <Dropdown\n        options={projectTypeOptions}\n        inputValue={selectedProjectType?.value}\n        onSelectOption={handleSelectProjectType}\n        usePortal={false}\n        isPopperStyle\n        iconColumnWidth={40}\n      >\n        {({ inputProps, inputRef, toggle }) => (\n          <TextField\n            readOnly\n            {...inputProps}\n            ref={inputRef}\n            value={\n              selectedProjectType ? String(selectedProjectType?.label) : ''\n            }\n            label={t('noumena.chamber_create.visibility_label')}\n            spellCheck=\"false\"\n            onChange={() => {\n              setValue(\n                'projectType',\n                selectedProjectType?.value || ProjectChamberType.Private,\n              );\n            }}\n            error={!!errors.projectType}\n            helperText={\n              errors.projectType?.message ||\n              t('noumena.chamber_create.visibility_helper_text')\n            }\n            rightIcon={\n              <Icon\n                name=\"chevron_down_m\"\n                color=\"--icon-input-neutral-default\"\n                size={16}\n                onClick={toggle}\n              />\n            }\n            data-testid=\"CreateProject-Modal-ProjectType\"\n          />\n        )}\n      </Dropdown>\n    </StyledDropDownWrapper>\n  );\n};\n\nexport default ProjectTypeDropdown;\n","import { t } from 'i18next';\nimport { type DropdownValueType } from '@/components/Dropdown';\nimport { ProjectChamberType } from '@/apollo/generated/types';\n\nexport const projectTypeLabelMap = {\n  [ProjectChamberType.Public]: t(\n    'noumena.chamber_create.projectType_public_label',\n  ),\n  [ProjectChamberType.Private]: t(\n    'noumena.chamber_create.projectType_private_label',\n  ),\n  [ProjectChamberType.Secret]: t(\n    'noumena.chamber_create.projectType_secret_label',\n  ),\n};\n\nconst projectTypeOptionsArr: DropdownValueType<ProjectChamberType>[] = [\n  {\n    key: ProjectChamberType.Public,\n    label: t('noumena.chamber_create.projectType_public_label'),\n    type: 'value',\n    value: ProjectChamberType.Public,\n    description: t('noumena.chamber_create.projectType_public_description'),\n  },\n  {\n    key: ProjectChamberType.Private,\n    label: t('noumena.chamber_create.projectType_private_label'),\n    type: 'value',\n    value: ProjectChamberType.Private,\n    description: t('noumena.chamber_create.projectType_private_description'),\n  },\n  {\n    key: ProjectChamberType.Secret,\n    label: t('noumena.chamber_create.projectType_secret_label'),\n    type: 'value',\n    value: ProjectChamberType.Secret,\n    description: t('noumena.chamber_create.projectType_secret_description'),\n  },\n] as DropdownValueType<ProjectChamberType>[];\n\nexport default projectTypeOptionsArr;\n","import * as yup from 'yup';\nimport { t } from 'i18next';\nimport {\n  InstitutionsEnum,\n  type ProjectChamberInput,\n  ProjectChamberType,\n  SpacePermissionEnum,\n  SpaceStatusEnum,\n} from '@/apollo/generated/types';\n\nexport const initialDetails: ProjectChamberInput = {\n  name: '',\n  description: undefined,\n  profileImage: undefined,\n  category: '',\n  institution: InstitutionsEnum.Noumena,\n  status: SpaceStatusEnum.Draft,\n  permission: SpacePermissionEnum.All,\n  projectType: ProjectChamberType.Private,\n};\n\nexport const newProjectSchema = yup\n  .object({\n    name: yup\n      .string()\n      .required(t('noumena.chamber_create.error.name_required'))\n      .max(75, t(`noumena.chamber_create.error.description_maximum_length`)),\n    description: yup\n      .string()\n      .notRequired()\n      .max(1000, t(`noumena.chamber_create.error.description_maximum_length`)),\n    category: yup\n      .string()\n      .required(t('noumena.chamber_create.error.category_required')),\n  })\n  .required();\n\n  export const newRiseProjectSchema = yup\n  .object({\n    name: yup\n      .string()\n      .required(t('noumena.chamber_create.error.name_required'))\n      .max(75, t(`noumena.chamber_create.error.description_maximum_length`)),\n    description: yup\n      .string()\n      .notRequired()\n      .max(1000, t(`noumena.chamber_create.error.description_maximum_length`)),\n    category: yup\n      .string()\n      .notRequired(),\n  })\n  .required();\n","import React, { memo, useCallback, useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { type SubmitHandler, useForm } from 'react-hook-form';\nimport { TSpan } from '@/components/Typography';\nimport { Spacer, Stack } from '@/layout';\nimport { TextField } from '@/components/TextField';\nimport { Dropdown, type DropdownValueType } from '@/components/Dropdown';\nimport { Icon } from '@/components/Icon';\nimport { useGetProjectChamberCategoriesLazyQuery } from '@/apollo/graphql';\nimport {\n  type ProjectChamberCategory,\n  type ProjectChamberInput,\n  type ProjectChamberType,\n} from '@/apollo/generated/types';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useWindowDimensions } from '@/hooks';\nimport { breakpoints } from '@/constants/devices';\nimport { EditableAvatar } from '@/features/upload/components';\nimport ChamberDefaultImag from '@/assets/images/chamber_default.png';\nimport ProjectTypeDropdown from '@/screens/Chamber/components/modals/ProjectCreate/ProjectTypeDropdown';\nimport { useUpdateProjectChamberHelper } from '@/features/noums/hooks/spaceQuery';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport projectTypeOptionsArr from '@/constants/projectTypeOptions';\nimport { trackEvent } from '@/utils/tracking';\nimport { useEditChamberState } from '@/screens/Chamber/EditChamber/provider';\nimport { useCreateProjectChamberHelper } from '@/features/noums/hooks/noums';\nimport { newProjectSchema, newRiseProjectSchema, initialDetails } from './data';\nimport {\n  ProfileImage,\n  StyledButton,\n  StyledDropDownWrapper,\n  StyledForm,\n  FormContainer,\n} from './styles';\nimport {\n  type IProjectSummaryData,\n  type NewProjectType,\n  type ProjectCreateProps,\n} from './types';\n\nexport const ProjectCreate = memo((props: ProjectCreateProps) => {\n  const { user } = useAuth();\n  const { t } = useTranslation();\n  const { space } = useEditChamberState();\n\n  const [categoryOptions, setCategoryOptions] = useState<\n    DropdownValueType<string>[]\n  >([]);\n\n  const [selectedProjectType, setSelectedProjectType] = useState<\n    DropdownValueType<ProjectChamberType> | undefined\n  >(undefined);\n\n  const [selectedCategory, setSelectedCategory] = useState<\n    DropdownValueType<string> | undefined\n  >(undefined);\n  const [isChanged, SetChanged] = useState(false);\n  const [profileImage, setProfileImage] = useState<string | undefined>(\n    props.summaryData?.profileImage &&\n      props.summaryData?.profileImage !== ChamberDefaultImag\n      ? props.summaryData?.profileImage\n      : undefined,\n  );\n  const [projectDetails, setProjectDetails] = useState<ProjectChamberInput>({\n    ...initialDetails,\n    ...props?.summaryData,\n    category: props?.summaryData?.categoryId || '',\n  });\n\n  const [getCategoryList, { loading: categoriesLoading }] =\n    useGetProjectChamberCategoriesLazyQuery({\n      fetchPolicy: 'cache-and-network',\n      onCompleted: (response) => {\n        const categories = response.getProjectChamberCategories;\n        if (categories) {\n          setCategoryOptions(\n            categories\n              .filter(\n                (category: ProjectChamberCategory) =>\n                  !category.name.toLowerCase().match('member') &&\n                  !category.name.toLowerCase().match('linked') &&\n                  !category.name.toLowerCase().match('rise_application'),\n              )\n              .map((categoryItem: ProjectChamberCategory) => ({\n                key: categoryItem._id,\n                value: categoryItem._id,\n                type: 'value',\n                label: categoryItem.name,\n              })),\n          );\n        }\n      },\n    });\n\n  const { createProjectChamberHelper, loading: creating } =\n    useCreateProjectChamberHelper();\n\n  const { updateProjectChamberHelper, loading: updating } =\n    useUpdateProjectChamberHelper();\n\n  const {\n    register,\n    reset,\n    trigger,\n    setValue,\n    handleSubmit,\n    formState: { errors, isValid },\n  } = useForm<NewProjectType>({\n    resolver: yupResolver(\n      space?.category?.name === 'Rise'\n        ? newRiseProjectSchema\n        : newProjectSchema,\n    ),\n    // resolver: yupResolver(newRiseProjectSchema),\n    mode: 'all',\n    reValidateMode: 'onBlur',\n  });\n\n  const optionIcon = useCallback((option: string) => {\n    switch (option) {\n      case 'PUBLIC':\n        return <Icon name=\"public_visibility_xl\" size={40} />;\n      case 'PRIVATE':\n        return <Icon name=\"private_visibility_xl\" size={40} />;\n      case 'SECRET':\n        return <Icon name=\"secret_visibility_xl\" size={40} />;\n      default:\n        return null;\n    }\n  }, []);\n\n  const projectTypeOptions = useMemo(\n    () =>\n      projectTypeOptionsArr.map((o: DropdownValueType<ProjectChamberType>) => ({\n        ...o,\n        icon: optionIcon(o.value),\n      })),\n    [optionIcon],\n  );\n\n  useEffect(() => {\n    if (props.isOpen) setSelectedProjectType(projectTypeOptions[1]);\n  }, [props.isOpen, projectTypeOptions]);\n\n  useEffect(() => {\n    if (props.isOpen && categoryOptions.length)\n      setSelectedCategory(\n        props?.summaryData?.categoryId\n          ? categoryOptions.find(\n              (x) => x.value === props?.summaryData?.categoryId,\n            )\n          : categoryOptions[0],\n      );\n\n    if (props?.summaryData) {\n      setSelectedCategory(\n        categoryOptions.find((x) => x.value === props?.summaryData?.categoryId),\n      );\n      setProjectDetails({\n        ...initialDetails,\n        ...props?.summaryData,\n      });\n    }\n  }, [props.isOpen, props?.summaryData, categoryOptions]);\n\n  useEffect(() => {\n    setValue('category', selectedCategory?.value || '');\n  }, [selectedCategory, setValue]);\n\n  const onSubmit: SubmitHandler<NewProjectType> = useCallback(\n    async (data: NewProjectType) => {\n      const payload = {\n        ...projectDetails,\n        name: data.name,\n        category: data.category,\n        description: data.description,\n        profileImage,\n      };\n      if (props.isUpdateMode && props?.summaryData?.spaceId) {\n        const isSuccess = await updateProjectChamberHelper(\n          props.summaryData.spaceId,\n          {\n            name: data.name,\n            description: data.description,\n            category: data.category || undefined,\n            profileImage,\n          },\n        );\n        if (isSuccess) props.handleSuccess(props.summaryData.spaceId);\n      } else {\n        const { id } = await createProjectChamberHelper(payload);\n        if (id) props.handleSuccess(id);\n        trackEvent('createPN', {\n          UUID: user?._id,\n          ProjectNoumID: id,\n        });\n      }\n    },\n    [\n      projectDetails,\n      profileImage,\n      props,\n      updateProjectChamberHelper,\n      createProjectChamberHelper,\n      user,\n    ],\n  );\n\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setProjectDetails({\n        ...projectDetails,\n        [e.currentTarget.name]: e.currentTarget.value,\n      });\n\n      if (props?.isUpdateMode && props?.summaryData) {\n        const key: keyof IProjectSummaryData = e.currentTarget\n          .name as keyof IProjectSummaryData;\n        SetChanged(props?.summaryData?.[key] !== e.currentTarget.value);\n      }\n    },\n    [projectDetails, props],\n  );\n\n  const handleSelectCategory = useCallback(\n    (option: DropdownValueType<string>) => {\n      setProjectDetails({ ...projectDetails, category: option.value });\n      setSelectedCategory(option);\n      setValue('category', option.value);\n      trigger('category');\n      if (props?.isUpdateMode)\n        SetChanged(props?.summaryData?.categoryId !== option.value);\n    },\n    [projectDetails, setValue, trigger, props],\n  );\n\n  const handleSelectProjectType = useCallback(\n    (option: DropdownValueType<ProjectChamberType>) => {\n      setProjectDetails({ ...projectDetails, projectType: option.value });\n      setSelectedProjectType(option);\n      setValue('projectType', option.value);\n      trigger('projectType');\n    },\n    [\n      setProjectDetails,\n      setSelectedProjectType,\n      setValue,\n      trigger,\n      projectDetails,\n    ],\n  );\n\n  const handleChangeProfileImage = useCallback(\n    (imageURL: string | undefined) => {\n      setProfileImage(imageURL);\n      setValue('profileImage', imageURL);\n      trigger('profileImage');\n      if (props?.isUpdateMode)\n        SetChanged(props?.summaryData?.profileImage !== imageURL);\n    },\n    [setProfileImage, setValue, trigger, props],\n  );\n\n  const handleClose = useCallback(() => {\n    setProjectDetails(initialDetails);\n    setSelectedCategory(undefined);\n    setSelectedProjectType(undefined);\n    setProfileImage(\n      props?.summaryData?.profileImage &&\n        props.summaryData?.profileImage !== ChamberDefaultImag\n        ? props?.summaryData?.profileImage\n        : undefined,\n    );\n    reset();\n    SetChanged(false);\n    props.handleClose(true);\n  }, [\n    setProjectDetails,\n    setSelectedCategory,\n    setSelectedProjectType,\n    reset,\n    props,\n  ]);\n\n  useEffect(() => {\n    if (user?._id) getCategoryList();\n  }, [getCategoryList, user]);\n\n  register('category', {\n    required: {\n      value: true,\n      message: t('noumena.chamber_create.error.category_required'),\n    },\n    onChange: handleChange,\n  });\n\n  const windowSize = useWindowDimensions();\n  const isMobile = windowSize.width <= breakpoints.TABLET;\n  const isTablet = windowSize.width <= breakpoints.TABLET_L;\n\n  if (categoriesLoading) return null;\n  return (\n    <Modal\n      testId=\"testProjectCreate\"\n      open={props.isOpen}\n      onClose={handleClose}\n      enableCloseButton\n      size={props.isUpdateMode ? ModalSize.XL : ModalSize.L}\n      disableBackdropClick\n    >\n      <StyledForm\n        onSubmit={handleSubmit(onSubmit)}\n        isUpdateMode={props?.isUpdateMode}\n      >\n        <ModalHeader\n          isFullScreen={isMobile}\n          justifyContent={isMobile ? 'flex-start' : 'center'}\n        >\n          {props?.isUpdateMode\n            ? t(`noumena.noum_edit.title`)\n            : t(`noumena.chamber_create.title`)}\n        </ModalHeader>\n        <Spacer height={props.isUpdateMode ? 16 : 0} />\n        <ModalBody\n          mobileFlex\n          flexDirection={\n            props.isUpdateMode && !isTablet ? 'row-reverse' : 'column'\n          }\n          gap={props.isUpdateMode ? 56 : ''}\n        >\n          <ProfileImage isUpdateMode={props?.isUpdateMode}>\n            {props?.isUpdateMode && (\n              <TSpan\n                font={!isTablet ? 'heading-s-bold' : 'body-l-bold'}\n                colorToken=\"--text-card-header-neutral-highlighted\"\n              >\n                {t('noumena.noum_edit.noum_pictures.text')}\n              </TSpan>\n            )}\n            <Spacer height={!isMobile ? 24 : 32} />\n            <EditableAvatar\n              size=\"XXL\"\n              url={profileImage || ''}\n              onContentChange={handleChangeProfileImage}\n              onClear={() => handleChangeProfileImage('')}\n              maximumFileSize={5}\n              defaultImagePlaceHolder={ChamberDefaultImag}\n              noMargin\n            />\n          </ProfileImage>\n          <FormContainer isUpdateMode={props?.isUpdateMode}>\n            <Stack vertical fullWidth>\n              {props?.isUpdateMode && (\n                <TSpan\n                  font={!isTablet ? 'heading-s-bold' : 'body-l-bold'}\n                  colorToken=\"--text-card-header-neutral-highlighted\"\n                >\n                  {t('noumena.noum_edit.basic_settings.text')}\n                </TSpan>\n              )}\n              <Spacer height={24} />\n              <TextField\n                {...register('name', {\n                  required: {\n                    value: true,\n                    message: t(`noumena.chamber_create.error.name_required`),\n                  },\n                  maxLength: {\n                    value: 75,\n                    message: t(\n                      'noumena.chamber_create.error.description_maximum_length',\n                    ),\n                  },\n                  onChange: handleChange,\n                })}\n                value={projectDetails.name}\n                label={t(`noumena.chamber_create.name_label`)}\n                error={!!errors.name}\n                helperText={errors.name?.message}\n                data-testid=\"CreateProject-Modal-Name\"\n              />\n              <Spacer height={16} />\n              <TextField\n                {...register('description', {\n                  onChange: handleChange,\n                  maxLength: {\n                    value: 1000,\n                    message: t(\n                      'noumena.chamber_create.error.description_maximum_length',\n                    ),\n                  },\n                })}\n                value={projectDetails.description || ''}\n                label={t(`noumena.chamber_create.description_label`)}\n                error={!!errors.description}\n                helperText={errors.description?.message}\n                multiple\n                maxLength={1000}\n                data-testid=\"CreateProject-Modal-Description\"\n              />\n              <Spacer height={16} />\n              <StyledDropDownWrapper>\n                <Dropdown\n                  hideIcons\n                  options={categoryOptions}\n                  inputValue={selectedCategory?.value}\n                  onSelectOption={handleSelectCategory}\n                  isPopperStyle\n                  disabled={space?.category?.name === 'Rise'}\n                >\n                  {({ inputProps, inputRef, toggle }) => (\n                    <TextField\n                      readOnly\n                      {...inputProps}\n                      ref={inputRef}\n                      value={\n                        selectedCategory ? String(selectedCategory.label) : ''\n                      }\n                      label={t('noumena.chamber_create.category_label')}\n                      spellCheck=\"false\"\n                      onChange={() => {\n                        setValue('category', selectedCategory?.value || '');\n                      }}\n                      error={!!errors.category}\n                      helperText={\n                        errors.category?.message ||\n                        t('noumena.chamber_create.category_helper_text')\n                      }\n                      rightIcon={\n                        <Icon\n                          name=\"chevron_down_m\"\n                          color=\"--icon-input-neutral-default\"\n                          size={16}\n                          onClick={toggle}\n                        />\n                      }\n                      data-testid=\"CreateProject-Modal-Category\"\n                    />\n                  )}\n                </Dropdown>\n              </StyledDropDownWrapper>\n              <Spacer height={32} />\n              {!props?.isUpdateMode && (\n                <>\n                  <ProjectTypeDropdown\n                    handleSelectProjectType={handleSelectProjectType}\n                    selectedProjectType={selectedProjectType}\n                    errors={errors}\n                    projectTypeOptions={projectTypeOptions}\n                    setValue={setValue}\n                  />\n                </>\n              )}\n            </Stack>\n          </FormContainer>\n        </ModalBody>\n        <Spacer height={props.isUpdateMode ? 16 : 0} />\n        <ModalFooter\n          flexDirection=\"row-reverse\"\n          justifyContent=\"space-between\"\n          gap={16}\n        >\n          <StyledButton\n            isUpdateMode={!isMobile && props.isUpdateMode}\n            data-testid=\"Create-Noum-Button\"\n            type=\"submit\"\n            primary\n            loading={updating}\n            secondary={!isValid}\n            tertiary={!isValid}\n            disabled={\n              !isValid ||\n              creating ||\n              (props?.isUpdateMode && updating) ||\n              (props?.isUpdateMode && !isChanged)\n            }\n          >\n            {props?.isUpdateMode\n              ? t('noumena.button.save')\n              : t('noumena.chamber_create.create_button')}\n          </StyledButton>\n          {!isMobile && !props?.isUpdateMode && (\n            <StyledButton\n              data-testid=\"Create-Noum-Cancel\"\n              onClick={() => handleClose()}\n              secondary\n              tertiary\n            >\n              {t('noumena.cancel')}\n            </StyledButton>\n          )}\n        </ModalFooter>\n      </StyledForm>\n    </Modal>\n  );\n});\n"],"names":["useUpdateProjectChamberHelper","addToast","useToast","handleError","useCallback","networkError","t","handleSuccess","updateProjectChamber","loading","useUpdateProjectChamberMutation","updateProjectChamberHelper","id","input","isToast","isSuccess","variables","onError","graphQLErrors","err","message","Sentry","Error","tags","section","onCompleted","useCreateProjectChamberHelper","createProject","useCreateProjectChamberMutation","createProjectChamberHelper","project","undefined","createProjectChamber","newProject","_id","update","cache","data","readResult","readQuery","query","GetOwnProjectChambersDocument","offset","limit","PAGE_SIZE","filter","categoryNotIn","getOwnProjectChambers","cloneChambers","mergedArray","writeQuery","ProfileImage","styled","div","isUpdateMode","sizes","TABLET_L","StyledForm","form","StyledButton","Button","StyledDropDownWrapper","FormContainer","ProjectTypeDropdown","selectedProjectType","handleSelectProjectType","errors","setValue","projectTypeOptions","useTranslation","jsx","Dropdown","value","inputProps","inputRef","toggle","TextField","String","label","ProjectChamberType","Private","projectType","Icon","projectTypeLabelMap","Public","Secret","projectTypeOptionsArr","key","type","description","initialDetails","name","profileImage","category","institution","InstitutionsEnum","Noumena","status","SpaceStatusEnum","Draft","permission","SpacePermissionEnum","All","newProjectSchema","yup","required","max","notRequired","newRiseProjectSchema","ProjectCreate","memo","props","user","useAuth","space","useEditChamberState","categoryOptions","setCategoryOptions","useState","setSelectedProjectType","selectedCategory","setSelectedCategory","isChanged","SetChanged","setProfileImage","summaryData","ChamberDefaultImag","projectDetails","setProjectDetails","categoryId","getCategoryList","categoriesLoading","useGetProjectChamberCategoriesLazyQuery","fetchPolicy","response","categories","getProjectChamberCategories","toLowerCase","match","map","categoryItem","creating","updating","register","reset","trigger","handleSubmit","formState","isValid","useForm","resolver","yupResolver","mode","reValidateMode","optionIcon","option","useMemo","o","icon","useEffect","isOpen","length","find","x","onSubmit","payload","spaceId","trackEvent","UUID","ProjectNoumID","handleChange","e","currentTarget","handleSelectCategory","handleChangeProfileImage","imageURL","handleClose","onChange","windowSize","useWindowDimensions","isMobile","width","breakpoints","TABLET","isTablet","Modal","ModalSize","XL","L","ModalHeader","Spacer","ModalBody","jsxs","TSpan","EditableAvatar","Stack","maxLength","Fragment","ModalFooter"],"mappings":"oZAOO,SAASA,IAAgC,CACxC,KAAA,CAAEC,SAAAA,GAAaC,GAAU,EAEzBC,EAAcC,cACjBC,GAAwC,CACvCJ,EACE,QACA,OACC,GAAEK,EAAE,0BAA0B,MAAMD,GAAc,CAAA,EAGvD,CAACJ,CAAQ,CAAC,EAGNM,EAAgBH,EAAAA,YAAY,IAAM,CAEpCH,EAAA,UACA,OACC,GAAEK,EAAE,4BAA4B,MAAMA,EACrC,kDAAkD,GACjD,CAAA,EAEJ,CAACL,CAAQ,CAAC,EAEP,CAACO,EAAsB,CAAEC,QAAAA,CAAAA,CAAS,EAAIC,GAAiC,EAEvEC,EAA6BP,EAAAA,YACjC,MAAOQ,EAAYC,EAAkCC,IAAsB,CACrEC,IAAAA,EACJ,aAAMP,EAAqB,CACzBQ,UAAW,CAAEJ,GAAAA,EAAIC,MAAAA,CAAM,EACvBI,QAASA,CAAC,CAAEZ,aAAAA,EAAe,KAAMa,cAAAA,EAAgB,CAAA,CAAA,IAAS,CAClD,KAAA,CAACC,CAAG,EAAID,EACFC,GAAAA,GAAAA,YAAAA,EAAKC,UAAWf,CAAY,EACxCgB,GAAwB,IAAIC,OAAMH,GAAAA,YAAAA,EAAKC,UAAWf,CAAY,EAAG,CAC/DkB,KAAM,CACJC,QAAS,8BACX,CAAA,CACD,EACWT,EAAA,EACd,EACAU,YAAaA,IAAM,CACZX,GAAwBP,IACjBQ,EAAA,EACd,CAAA,CACD,EACMA,CAET,EAAA,CAACZ,EAAaI,EAAeC,CAAoB,CAAC,EAG7C,MAAA,CAAEC,QAAAA,EAASE,2BAAAA,CAAAA,CACpB,CC3CO,SAASe,IAAgC,CACxC,KAAA,CAAEzB,SAAAA,GAAaC,GAAU,EAEzBC,EAAcC,cACjBC,GAAwC,CACvCJ,EACE,QACA,OACC,GAAEK,EAAE,0BAA0B,MAAMD,GAAc,CAAA,EAGvD,CAACJ,CAAQ,CAAC,EAGNM,EAAgBH,EAAAA,YAAY,IAAM,CACtCH,EACE,UACA,OACC,GAAEK,EAAE,wCAAwC,GAAG,CAAA,EAEjD,CAACL,CAAQ,CAAC,EAEP,CAAC0B,EAAe,CAAElB,QAAAA,CAAAA,CAAS,EAAImB,GAAiC,EAEhEC,EAA6BzB,cACjC,MAAOS,GAA+B,CACpC,MAAMiB,EAAwC,CAAElB,GAAImB,MAAAA,EAEpD,aAAMJ,EAAc,CAClBX,UAAW,CAAEH,MAAAA,CAAM,EACnBI,QAASA,CAAC,CAAEZ,aAAAA,EAAe,KAAMa,cAAAA,EAAgB,CAAA,CAAA,IAAS,CAClD,KAAA,CAACC,CAAG,EAAID,EACFC,GAAAA,GAAAA,YAAAA,EAAKC,UAAWf,CAAY,EACxCgB,GAAwB,IAAIC,OAAMH,GAAAA,YAAAA,EAAKC,UAAWf,CAAY,EAAG,CAC/DkB,KAAM,CACJC,QAAS,8BACX,CAAA,CACD,CACH,EACAC,YAAaA,CAAC,CAAEO,qBAAsBC,CAAAA,IAAiB,CACtC1B,IACPK,EAAAA,IAAKqB,GAAAA,YAAAA,EAAYC,MAAOH,MAClC,EACAI,OAAQA,CAACC,EAAO,CAAEC,KAAAA,CAAAA,IAAW,OACvB,GAAA,CAACA,GAAQ,CAACA,EAAKL,qBAAsB,OACnCM,MAAAA,EAAaF,EAAMG,UAAU,CACjCC,MAAOC,GACPzB,UAAW,CACT0B,OAAQ,EACRC,MAAOC,GACPC,OAAQ,CACNC,cAAe,CAAC,0BAA0B,CAC5C,CACF,CAAA,CACD,EACG,GAAA,GAACR,EAAAA,GAAAA,YAAAA,EAAYS,wBAAZT,MAAAA,EAAmCD,MAAM,OAC9C,MAAMW,EAAgB,CAAC,GAAGV,EAAWS,sBAAsBV,IAAI,EACzDY,EAAc,CAACZ,EAAKL,qBAAsB,GAAGgB,CAAa,EAChEZ,EAAMc,WAAW,CACfV,MAAOC,GACPzB,UAAW,CACT0B,OAAQ,EACRC,MAAOC,GACPC,OAAQ,CACNC,cAAe,CAAC,0BAA0B,CAC5C,CACF,EACAT,KAAM,CACJU,sBAAuB,CAAEV,KAAMY,CAAY,CAC7C,CAAA,CACD,CACH,CAAA,CACD,EAEMnB,CAET,EAAA,CAAC3B,EAAaI,EAAeoB,CAAa,CAAC,EAGtC,MAAA,CAAElB,QAAAA,EAASoB,2BAAAA,CAAAA,CACpB,CC5FO,MAAMsB,GAAeC,EAAOC;AAAAA,aAGtB,CAAC,CAAEC,aAAAA,CAAa,IAAOA,EAAe,QAAU;AAAA,WAClD,CAAC,CAAEA,aAAAA,CAAa,IAAOA,EAAe,MAAQ;AAAA;AAAA,uBAElCC,EAAMC;AAAAA;AAAAA;AAAAA,EAKhBC,GAAaL,EAAOM;AAAAA;AAAAA;AAAAA;AAAAA,IAM7B,CAAC,CAAEJ,aAAAA,CAAa,IAAMA,GAAiB;AAAA,uBACpBC,EAAMC;AAAAA;AAAAA;AAAAA;AAAAA,MAIvB,CAAC,CAAEF,aAAAA,CAAa,IAChBA,GAAiB;AAAA;AAAA,EAIVK,GAAeP,EAAOQ,EAAM;AAAA,IACrC,CAAC,CAAEN,aAAAA,CAAa,IAAOA,EAAe,eAAiB;AAAA,uBACpCC,EAAMC;AAAAA,MACvB,CAAC,CAAEF,aAAAA,CAAa,IAAOA,EAAe,cAAgB;AAAA;AAAA,EAI/CO,GAAwBT,EAAOC;AAAAA;AAAAA,EAI/BS,GAAgBV,EAAOC;AAAAA;AAAAA,WAIzB,CAAC,CAAEC,aAAAA,CAAa,IAAOA,EAAe,QAAW;AAAA,uBACrCC,EAAMC;AAAAA,aAChB,CAAC,CAAEF,aAAAA,CAAa,IAAOA,EAAe,OAAU;AAAA;AAAA,ECvCvDS,GAA0DA,CAAC,CAC/DC,oBAAAA,EACAC,wBAAAA,EACAC,OAAAA,EACAC,SAAAA,EACAC,mBAAAA,CACF,IAAM,CACE,KAAA,CAAE9D,EAAAA,GAAM+D,GAAgB,EAG5B,OAAAC,EAACT,IAAqB,YAAA,4CACpB,WAACU,GACC,CAAA,QAASH,EACT,WAAYJ,GAAAA,YAAAA,EAAqBQ,MACjC,eAAgBP,EAChB,UAAW,GACX,cAAa,GACb,gBAAiB,GAAG,YAAA,+BAEnB,SAAC,CAAA,CAAEQ,WAAAA,EAAYC,SAAAA,EAAUC,OAAAA,CAAAA,oBACvBC,EACC,CAAA,SAAQ,GACR,GAAIH,EACJ,IAAKC,EACL,MACEV,EAAsBa,OAAOb,GAAAA,YAAAA,EAAqBc,KAAK,EAAI,GAE7D,MAAOxE,EAAE,yCAAyC,EAClD,WAAW,QACX,SAAU,IAAM,CACd6D,EACE,eACAH,GAAAA,YAAAA,EAAqBQ,QAASO,EAAmBC,OAAO,CAAA,EAG5D,MAAO,CAAC,CAACd,EAAOe,YAChB,aACEf,EAAAA,EAAOe,cAAPf,YAAAA,EAAoB9C,UACpBd,EAAE,+CAA+C,EAEnD,UACGgE,EAAAY,EAAA,CACC,KAAK,iBACL,MAAM,+BACN,KAAM,GACN,QAASP,EACT,YAAA,0BAAA,CAAA,EAEJ,cAAY,kCAEf,YAAA,+BAAA,CAAA,GACH,CACF,CAAA,CAEJ,EC3DaQ,GAAsB,CACjC,CAACJ,EAAmBK,MAAM,EAAG9E,EAC3B,iDAAiD,EAEnD,CAACyE,EAAmBC,OAAO,EAAG1E,EAC5B,kDAAkD,EAEpD,CAACyE,EAAmBM,MAAM,EAAG/E,EAC3B,iDAAiD,CAErD,EAEMgF,GAAiE,CACrE,CACEC,IAAKR,EAAmBK,OACxBN,MAAOxE,EAAE,iDAAiD,EAC1DkF,KAAM,QACNhB,MAAOO,EAAmBK,OAC1BK,YAAanF,EAAE,uDAAuD,CACxE,EACA,CACEiF,IAAKR,EAAmBC,QACxBF,MAAOxE,EAAE,kDAAkD,EAC3DkF,KAAM,QACNhB,MAAOO,EAAmBC,QAC1BS,YAAanF,EAAE,wDAAwD,CACzE,EACA,CACEiF,IAAKR,EAAmBM,OACxBP,MAAOxE,EAAE,iDAAiD,EAC1DkF,KAAM,QACNhB,MAAOO,EAAmBM,OAC1BI,YAAanF,EAAE,uDAAuD,CACxE,CAAC,EC3BUoF,EAAsC,CACjDC,KAAM,GACNF,YAAa1D,OACb6D,aAAc7D,OACd8D,SAAU,GACVC,YAAaC,GAAiBC,QAC9BC,OAAQC,GAAgBC,MACxBC,WAAYC,GAAoBC,IAChCrB,YAAaF,EAAmBC,OAClC,EAEauB,GAAmBC,GACtB,CACNb,KAAMa,IAEHC,SAASnG,EAAE,4CAA4C,CAAC,EACxDoG,IAAI,GAAIpG,EAAG,yDAAwD,CAAC,EACvEmF,YAAae,IAEVG,cACAD,IAAI,IAAMpG,EAAG,yDAAwD,CAAC,EACzEuF,SAAUW,IAEPC,SAASnG,EAAE,gDAAgD,CAAC,CACjE,CAAC,EACAmG,SAAU,EAEEG,GAAuBJ,GAC5B,CACNb,KAAMa,IAEHC,SAASnG,EAAE,4CAA4C,CAAC,EACxDoG,IAAI,GAAIpG,EAAG,yDAAwD,CAAC,EACvEmF,YAAae,IAEVG,cACAD,IAAI,IAAMpG,EAAG,yDAAwD,CAAC,EACzEuF,SAAUW,EACD,EACNG,YAAW,CAChB,CAAC,EACAF,SAAU,ECJAI,GAAgBC,EAAAA,KAAMC,GAA8B,0BACzD,KAAA,CAAEC,KAAAA,GAASC,GAAS,EACpB,CAAE3G,EAAAA,GAAM+D,GAAgB,EACxB,CAAE6C,MAAAA,GAAUC,GAAqB,EAEjC,CAACC,EAAiBC,CAAkB,EAAIC,EAAAA,SAE5C,CAAE,CAAA,EAEE,CAACtD,EAAqBuD,CAAsB,EAAID,EAAAA,SAEpDvF,MAAS,EAEL,CAACyF,EAAkBC,CAAmB,EAAIH,EAAAA,SAE9CvF,MAAS,EACL,CAAC2F,EAAWC,CAAU,EAAIL,WAAS,EAAK,EACxC,CAAC1B,EAAcgC,CAAe,EAAIN,YACtCP,EAAAA,EAAMc,cAANd,MAAAA,EAAmBnB,gBACjBmB,EAAAA,EAAMc,cAANd,YAAAA,EAAmBnB,gBAAiBkC,GAClCf,EAAAA,EAAMc,cAANd,YAAAA,EAAmBnB,aACnB7D,MAAS,EAET,CAACgG,EAAgBC,CAAiB,EAAIV,WAA8B,CACxE,GAAG5B,EACH,GAAGqB,GAAAA,YAAAA,EAAOc,YACVhC,WAAUkB,GAAAA,GAAAA,YAAAA,EAAOc,cAAPd,YAAAA,GAAoBkB,aAAc,EAAA,CAC7C,EAEK,CAACC,EAAiB,CAAEzH,QAAS0H,EAAmB,CAAA,EACpDC,GAAwC,CACtCC,YAAa,oBACb5G,YAA2B6G,GAAA,CACzB,MAAMC,EAAaD,EAASE,4BACxBD,GACFlB,EACEkB,EACG1F,OACEgD,GACC,CAACA,EAASF,KAAK8C,YAAcC,EAAAA,MAAM,QAAQ,GAC3C,CAAC7C,EAASF,KAAK8C,YAAa,EAACC,MAAM,QAAQ,GAC3C,CAAC7C,EAASF,KAAK8C,YAAcC,EAAAA,MAAM,kBAAkB,CAAC,EAEzDC,IAAKC,IAA0C,CAC9CrD,IAAKqD,EAAa1G,IAClBsC,MAAOoE,EAAa1G,IACpBsD,KAAM,QACNV,MAAO8D,EAAajD,MACpB,CAAC,CAGX,CAAA,CACD,EAEG,CAAE9D,2BAAAA,EAA4BpB,QAASoI,IAC3CnH,GAA+B,EAE3B,CAAEf,2BAAAA,EAA4BF,QAASqI,GAC3C9I,GAA+B,EAE3B,CACJ+I,SAAAA,EACAC,MAAAA,EACAC,QAAAA,EACA9E,SAAAA,EACA+E,aAAAA,GACAC,UAAW,CAAEjF,OAAAA,EAAQkF,QAAAA,CAAQ,GAC3BC,GAAwB,CAC1BC,SAAUC,KACRrC,GAAAA,GAAAA,YAAAA,EAAOrB,WAAPqB,YAAAA,GAAiBvB,QAAS,OACtBiB,GACAL,EAAgB,EAGtBiD,KAAM,MACNC,eAAgB,QAAA,CACjB,EAEKC,EAAatJ,cAAauJ,GAAmB,CACjD,OAAQA,EAAM,CACZ,IAAK,SACH,SAAQzE,EAAK,CAAA,KAAK,uBAAuB,KAAM,GAAM,YAAA,+BAAA,CAAA,EACvD,IAAK,UACH,SAAQA,EAAK,CAAA,KAAK,wBAAwB,KAAM,GAAM,YAAA,+BAAA,CAAA,EACxD,IAAK,SACH,SAAQA,EAAK,CAAA,KAAK,uBAAuB,KAAM,GAAM,YAAA,+BAAA,CAAA,EACvD,QACS,OAAA,IAAK,CAElB,EAAG,CAAE,CAAA,EAECd,EAAqBwF,EAAAA,QACzB,IACEtE,GAAsBqD,IAAKkB,IAA8C,CACvE,GAAGA,EACHC,KAAMJ,EAAWG,EAAErF,KAAK,CAAA,EACxB,EACJ,CAACkF,CAAU,CAAC,EAGdK,EAAAA,UAAU,IAAM,CACVhD,EAAMiD,QAA+B5F,EAAAA,EAAmB,CAAC,CAAC,CAC7D,EAAA,CAAC2C,EAAMiD,OAAQ5F,CAAkB,CAAC,EAErC2F,EAAAA,UAAU,IAAM,OACVhD,EAAMiD,QAAU5C,EAAgB6C,QAClCxC,GACEV,EAAAA,GAAAA,YAAAA,EAAOc,cAAPd,MAAAA,EAAoBkB,WAChBb,EAAgB8C,KACPC,GAAAA,OAAAA,OAAAA,EAAE3F,UAAUuC,EAAAA,GAAAA,YAAAA,EAAOc,cAAPd,YAAAA,EAAoBkB,YAAU,EAEnDb,EAAgB,CAAC,CAAC,EAGtBL,GAAAA,MAAAA,EAAOc,cAEPT,EAAAA,EAAgB8C,KAAYC,GAAAA,OAAAA,OAAAA,EAAE3F,UAAUuC,EAAAA,GAAAA,YAAAA,EAAOc,cAAPd,YAAAA,EAAoBkB,YAAU,CAAC,EAEvDD,EAAA,CAChB,GAAGtC,EACH,GAAGqB,GAAAA,YAAAA,EAAOc,WAAAA,CACX,EACH,EACC,CAACd,EAAMiD,OAAQjD,GAAAA,YAAAA,EAAOc,YAAaT,CAAe,CAAC,EAEtD2C,EAAAA,UAAU,IAAM,CACL5F,EAAA,YAAYqD,GAAAA,YAAAA,EAAkBhD,QAAS,EAAE,CAAA,EACjD,CAACgD,EAAkBrD,CAAQ,CAAC,EAEzBiG,MAAAA,GAA0ChK,cAC9C,MAAOiC,GAAyB,OAC9B,MAAMgI,EAAU,CACd,GAAGtC,EACHpC,KAAMtD,EAAKsD,KACXE,SAAUxD,EAAKwD,SACfJ,YAAapD,EAAKoD,YAClBG,aAAAA,CAAAA,EAEF,GAAImB,EAAMzD,gBAAgByD,EAAAA,GAAAA,YAAAA,EAAOc,cAAPd,MAAAA,EAAoBuD,SAC1B,MAAM3J,EACtBoG,EAAMc,YAAYyC,QAClB,CACE3E,KAAMtD,EAAKsD,KACXF,YAAapD,EAAKoD,YAClBI,SAAUxD,EAAKwD,UAAY9D,OAC3B6D,aAAAA,CAAAA,CACD,GAEkBrF,EAAAA,cAAcwG,EAAMc,YAAYyC,OAAO,MACvD,CACC,KAAA,CAAE1J,GAAAA,CAAAA,EAAO,MAAMiB,EAA2BwI,CAAO,EACnDzJ,GAAImG,EAAMxG,cAAcK,CAAE,EAC9B2J,GAAW,WAAY,CACrBC,KAAMxD,GAAAA,YAAAA,EAAM9E,IACZuI,cAAe7J,CAAAA,CAChB,EACH,EAEF,CACEmH,EACAnC,EACAmB,EACApG,EACAkB,EACAmF,CAAI,CACL,EAGG0D,EAAetK,cAClBuK,GAA2C,OAMtC5D,GALciB,EAAA,CAChB,GAAGD,EACH,CAAC4C,EAAEC,cAAcjF,IAAI,EAAGgF,EAAEC,cAAcpG,KAAAA,CACzC,EAEGuC,GAAAA,MAAAA,EAAOzD,eAAgByD,GAAAA,MAAAA,EAAOc,aAAa,CACvCtC,MAAAA,EAAiCoF,EAAEC,cACtCjF,KACHgC,IAAWZ,EAAAA,GAAAA,YAAAA,EAAOc,cAAPd,YAAAA,EAAqBxB,MAASoF,EAAEC,cAAcpG,KAAK,EAChE,EAEF,CAACuD,EAAgBhB,CAAK,CAAC,EAGnB8D,GAAuBzK,cAC1BuJ,GAAsC,OACnB3B,EAAA,CAAE,GAAGD,EAAgBlC,SAAU8D,EAAOnF,KAAAA,CAAO,EAC/DiD,EAAoBkC,CAAM,EACjBxF,EAAA,WAAYwF,EAAOnF,KAAK,EACjCyE,EAAQ,UAAU,EACdlC,GAAAA,MAAAA,EAAOzD,cACTqE,IAAWZ,EAAAA,GAAAA,YAAAA,EAAOc,cAAPd,YAAAA,EAAoBkB,cAAe0B,EAAOnF,KAAK,GAE9D,CAACuD,EAAgB5D,EAAU8E,EAASlC,CAAK,CAAC,EAGtC9C,GAA0B7D,cAC7BuJ,GAAkD,CAC/B3B,EAAA,CAAE,GAAGD,EAAgB9C,YAAa0E,EAAOnF,KAAAA,CAAO,EAClE+C,EAAuBoC,CAAM,EACpBxF,EAAA,cAAewF,EAAOnF,KAAK,EACpCyE,EAAQ,aAAa,CAAA,EAEvB,CACEjB,EACAT,EACApD,EACA8E,EACAlB,CAAc,CACf,EAGG+C,EAA2B1K,cAC9B2K,GAAiC,OAChCnD,EAAgBmD,CAAQ,EACxB5G,EAAS,eAAgB4G,CAAQ,EACjC9B,EAAQ,cAAc,EAClBlC,GAAAA,MAAAA,EAAOzD,cACEyD,IAAAA,EAAAA,GAAAA,YAAAA,EAAOc,cAAPd,YAAAA,EAAoBnB,gBAAiBmF,CAAQ,GAE5D,CAACnD,EAAiBzD,EAAU8E,EAASlC,CAAK,CAAC,EAGvCiE,EAAc5K,EAAAA,YAAY,IAAM,WACpC4H,EAAkBtC,CAAc,EAChC+B,EAAoB1F,MAAS,EAC7BwF,EAAuBxF,MAAS,EAE9BgF,GAAAA,EAAAA,GAAAA,YAAAA,EAAOc,cAAPd,MAAAA,EAAoBnB,gBAClBmB,EAAAA,EAAMc,cAANd,YAAAA,EAAmBnB,gBAAiBkC,GAClCf,EAAAA,GAAAA,YAAAA,EAAOc,cAAPd,YAAAA,EAAoBnB,aACpB7D,MAAS,EAERiH,IACPrB,EAAW,EAAK,EAChBZ,EAAMiE,YAAY,EAAI,CAAA,EACrB,CACDhD,EACAP,EACAF,EACAyB,EACAjC,CAAK,CACN,EAEDgD,EAAAA,UAAU,IAAM,CACV/C,GAAAA,MAAAA,EAAM9E,KAAsBgG,GAAA,EAC/B,CAACA,EAAiBlB,CAAI,CAAC,EAE1B+B,EAAS,WAAY,CACnBtC,SAAU,CACRjC,MAAO,GACPpD,QAASd,EAAE,gDAAgD,CAC7D,EACA2K,SAAUP,CAAAA,CACX,EAED,MAAMQ,EAAaC,KACbC,EAAWF,EAAWG,OAASC,GAAYC,OAC3CC,EAAWN,EAAWG,OAASC,GAAY9H,SAE7C2E,OAAAA,GAA0B,KAE3B7D,EAAAmH,GAAA,CACC,OAAO,oBACP,KAAM1E,EAAMiD,OACZ,QAASgB,EACT,kBAAiB,GACjB,KAAMjE,EAAMzD,aAAeoI,GAAUC,GAAKD,GAAUE,EACpD,qBAAoB,GAAA,YAAA,sBAEpB,WAACnI,GACC,CAAA,SAAUyF,GAAakB,EAAQ,EAC/B,aAAcrD,GAAAA,YAAAA,EAAOzD,aAAa,YAAA,2BAElC,SAAA,CAAAgB,EAACuH,IACC,aAAcT,EACd,eAAgBA,EAAW,aAAe,SAAS,YAAA,4BAElDrE,SAAAA,GAAAA,MAAAA,EAAOzD,aACJhD,EAAG,yBAAwB,EAC3BA,EAAG,8BAA6B,EACtC,EACAgE,EAACwH,GAAO,OAAQ/E,EAAMzD,aAAe,GAAK,EAAE,YAAA,uBAAA,IAC3CyI,GACC,CAAA,WAAU,GACV,cACEhF,EAAMzD,cAAgB,CAACkI,EAAW,cAAgB,SAEpD,IAAKzE,EAAMzD,aAAe,GAAK,GAAG,YAAA,0BAElC,SAAA,CAAA0I,EAAC7I,GAAa,CAAA,aAAc4D,GAAAA,YAAAA,EAAOzD,aAAa,YAAA,6BAC7CyD,SAAAA,EAAAA,GAAAA,YAAAA,EAAOzD,eACNgB,EAAC2H,GACC,CAAA,KAAOT,EAA8B,cAAnB,iBAClB,WAAW,yCAAwC,YAAA,sBAElDlL,SAAAA,EAAE,sCAAsC,EAC3C,EAEFgE,EAACwH,GAAO,OAASV,EAAgB,GAAL,GAAQ,YAAA,uBAAA,EACpC9G,EAAC4H,IACC,KAAK,MACL,IAAKtG,GAAgB,GACrB,gBAAiBkF,EACjB,QAAS,IAAMA,EAAyB,EAAE,EAC1C,gBAAiB,EACjB,wBAAyBhD,EACzB,SAAQ,GAAA,YAAA,+BAAA,CAAA,EAEZ,EACCxD,EAAAR,GAAA,CAAc,aAAciD,GAAAA,YAAAA,EAAOzD,aAAa,YAAA,8BAC/C,SAAC0I,EAAAG,GAAA,CAAM,SAAQ,GAAC,UAAS,GAAA,YAAA,sBACtBpF,SAAAA,EAAAA,GAAAA,YAAAA,EAAOzD,eACNgB,EAAC2H,GACC,CAAA,KAAOT,EAA8B,cAAnB,iBAClB,WAAW,yCAAwC,YAAA,sBAElDlL,SAAAA,EAAE,uCAAuC,EAC5C,EAEDgE,EAAAwH,EAAA,CAAO,OAAQ,GAAG,YAAA,uBAAA,EAClBxH,EAAAM,EAAA,IACKmE,EAAS,OAAQ,CACnBtC,SAAU,CACRjC,MAAO,GACPpD,QAASd,EAAG,4CAA2C,CACzD,EACA8L,UAAW,CACT5H,MAAO,GACPpD,QAASd,EACP,yDAAyD,CAE7D,EACA2K,SAAUP,CAAAA,CACX,EACD,MAAO3C,EAAepC,KACtB,MAAOrF,EAAG,mCAAkC,EAC5C,MAAO,CAAC,CAAC4D,EAAOyB,KAChB,YAAYzB,GAAAA,EAAOyB,OAAPzB,YAAAA,GAAa9C,QACzB,cAAY,2BAA0B,YAAA,0BAAA,EAEvCkD,EAAAwH,EAAA,CAAO,OAAQ,GAAG,YAAA,uBAAA,EAClBxH,EAAAM,EAAA,IACKmE,EAAS,cAAe,CAC1BkC,SAAUP,EACV0B,UAAW,CACT5H,MAAO,IACPpD,QAASd,EACP,yDAAyD,CAE7D,CACD,CAAA,EACD,MAAOyH,EAAetC,aAAe,GACrC,MAAOnF,EAAG,0CAAyC,EACnD,MAAO,CAAC,CAAC4D,EAAOuB,YAChB,YAAYvB,GAAAA,EAAOuB,cAAPvB,YAAAA,GAAoB9C,QAChC,SAAQ,GACR,UAAW,IACX,cAAY,kCAAiC,YAAA,yBAAA,CAAA,EAE9CkD,EAAAwH,EAAA,CAAO,OAAQ,GAAG,YAAA,uBAAA,EACnBxH,EAACT,GAAqB,CAAA,YAAA,sCACpB,SAAAS,EAACC,IACC,UAAS,GACT,QAAS6C,EACT,WAAYI,GAAAA,YAAAA,EAAkBhD,MAC9B,eAAgBqG,GAChB,cAAa,GACb,WAAU3D,GAAAA,GAAAA,YAAAA,EAAOrB,WAAPqB,YAAAA,GAAiBvB,QAAS,OAAO,YAAA,yBAE1C,SAAC,CAAA,CAAElB,WAAAA,EAAYC,SAAAA,EAAUC,OAAAA,CAAAA,oBACvBC,EACC,CAAA,SAAQ,GACR,GAAIH,EACJ,IAAKC,EACL,MACE8C,EAAmB3C,OAAO2C,EAAiB1C,KAAK,EAAI,GAEtD,MAAOxE,EAAE,uCAAuC,EAChD,WAAW,QACX,SAAU,IAAM,CACL6D,EAAA,YAAYqD,GAAAA,YAAAA,EAAkBhD,QAAS,EAAE,CAAA,EAEpD,MAAO,CAAC,CAACN,EAAO2B,SAChB,aACE3B,EAAAA,EAAO2B,WAAP3B,YAAAA,EAAiB9C,UACjBd,EAAE,6CAA6C,EAEjD,UACGgE,EAAAY,EAAA,CACC,KAAK,iBACL,MAAM,+BACN,KAAM,GACN,QAASP,EACT,YAAA,oBAAA,CAAA,EAEJ,cAAY,+BAEf,YAAA,yBAAA,CAAA,EACH,CAAA,EACF,EACCL,EAAAwH,EAAA,CAAO,OAAQ,GAAG,YAAA,uBAAA,EAClB,EAAC/E,GAAAA,MAAAA,EAAOzD,eACPgB,EAAA+H,GAAA,CACE,SAAC/H,EAAAP,GAAA,CACC,wBAAAE,GACA,oBAAAD,EACA,OAAAE,EACA,mBAAAE,EACA,SAAAD,EAAmB,YAAA,mCAAA,CAAA,EAEvB,CAAA,CAAA,CAEJ,CACF,CAAA,CAAA,EACF,EACAG,EAACwH,GAAO,OAAQ/E,EAAMzD,aAAe,GAAK,EAAE,YAAA,uBAAA,EAC5C0I,EAACM,IACC,cAAc,cACd,eAAe,gBACf,IAAK,GAAG,YAAA,4BAER,SAAA,CAAAhI,EAACX,IACC,aAAc,CAACyH,GAAYrE,EAAMzD,aACjC,cAAY,qBACZ,KAAK,SACL,QAAO,GACP,QAASwF,EACT,UAAW,CAACM,EACZ,SAAU,CAACA,EACX,SACE,CAACA,GACDP,KACC9B,GAAAA,YAAAA,EAAOzD,eAAgBwF,IACvB/B,GAAAA,YAAAA,EAAOzD,eAAgB,CAACoE,EAC1B,YAAA,6BAEAX,oBAAOzD,aACJhD,EAAE,qBAAqB,EACvBA,EAAE,sCAAsC,EAC9C,EACC,CAAC8K,GAAY,EAACrE,GAAAA,MAAAA,EAAOzD,eACnBgB,EAAAX,GAAA,CACC,cAAY,qBACZ,QAAS,IAAMqH,EAAW,EAC1B,UAAS,GACT,SAAQ,GAAA,YAAA,6BAEP1K,SAAEA,EAAA,gBAAgB,EACrB,CAAA,EAEJ,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,CAAC"}