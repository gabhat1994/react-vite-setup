{"version":3,"file":"noumViewHelper-950fd893.js","sources":["../../src/screens/Chamber/ViewChamber/NoAccessCard.tsx","../../src/features/noums/contexts/NoumAuthorizationContext/mappers.ts","../../src/features/noums/contexts/NoumAuthorizationContext/NoumAuthorizationProvider.tsx","../../src/screens/Chamber/ViewChamber/Chamber.tsx","../../src/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderHoumHeader.tsx","../../src/screens/Chamber/ViewChamber/ChamberHeader.tsx","../../src/screens/Chamber/ViewChamber/noumViewHelper.ts"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { t } from 'i18next';\nimport { Spacer } from '@/layout';\nimport { Root } from '@/layout/ChamberViewLayout/styles';\nimport { StyledCard } from '@/screens/Chamber/components/ProfileSummary/styles';\nimport { TSpan } from '@/components/Typography';\nimport { devices } from '@/constants/devices';\n\nconst ErrorCardTextWrapper = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n\n  @media ${devices.TABLET_L} {\n    padding: 72px 189.5px;\n  }\n`;\n\nconst NoAccessCard: React.FC = () => (\n  <>\n    <Spacer height={24} />\n    <Root>\n      <StyledCard>\n        <ErrorCardTextWrapper>\n          <TSpan\n            textAlign=\"center\"\n            font=\"heading-xs-bold\"\n            colorToken=\"--text-card-neutral-highlighted\"\n          >\n            {t('noumena.no_access_card_error')}\n          </TSpan>\n          <Spacer height={8} />\n          <TSpan\n            textAlign=\"center\"\n            font=\"body-m\"\n            colorToken=\"--text-card-neutral-default\"\n          >\n            {t('noumena.no_access_card_message')}\n          </TSpan>\n        </ErrorCardTextWrapper>\n      </StyledCard>\n    </Root>\n  </>\n);\n\nexport default NoAccessCard;\n","import { type Maybe } from '@/apollo/generated/types';\nimport { type NoumRoleForAuthorizationFragment } from '@/apollo/graphql';\nimport {\n  defaultNoumRoleNames,\n  type DefaultNoumRoleName,\n  type NoumRole,\n} from './types';\n\nexport function parseDefaultRoleName(\n  value: string,\n): DefaultNoumRoleName | null {\n  return defaultNoumRoleNames.includes(value as DefaultNoumRoleName)\n    ? (value as DefaultNoumRoleName)\n    : null;\n}\n\nexport function mapNoumRole(\n  value: Maybe<NoumRoleForAuthorizationFragment> | undefined,\n): NoumRole | null {\n  if (!value?.name) {\n    return null;\n  }\n\n  const defaultRoleName = parseDefaultRoleName(value.name);\n  if (defaultRoleName) {\n    return {\n      name: defaultRoleName,\n      isDefault: true,\n    };\n  }\n\n  return {\n    name: value.name,\n    isDefault: false,\n  };\n}\n","import { useGetNoumMemberAuthorizationInfoQuery } from '@/apollo/graphql';\nimport { cleanList } from '@/utils/list';\nimport { useMemo, type ReactNode } from 'react';\nimport { useLaunchDarkly } from '@/hooks';\nimport { NoumAuthorizationContext } from './NoumAuthorizationContext';\nimport { mapNoumRole } from './mappers';\nimport { type NoumAuthorizationContextValues } from './types';\n\ninterface NoumAuthorizationProviderProps {\n  children: ReactNode;\n  noumId?: string | null;\n}\n\nexport function NoumAuthorizationProvider({\n  children,\n  noumId,\n}: NoumAuthorizationProviderProps) {\n  const { flags } = useLaunchDarkly();\n\n  const { data } = useGetNoumMemberAuthorizationInfoQuery({\n    variables: {\n      noumId: noumId!,\n    },\n    skip: !flags.elementPermission || !noumId,\n  });\n\n  const assignedRole = data?.getSpaceById?.assignedRole;\n\n  const role = useMemo(() => mapNoumRole(assignedRole), [assignedRole]);\n\n  const permissions = useMemo(\n    () => cleanList(assignedRole?.groupedPermissions),\n    [assignedRole?.groupedPermissions],\n  );\n\n  const value = useMemo<NoumAuthorizationContextValues>(\n    () => ({\n      role,\n      permissions,\n    }),\n    [permissions, role],\n  );\n\n  return (\n    <NoumAuthorizationContext.Provider value={value}>\n      {children}\n    </NoumAuthorizationContext.Provider>\n  );\n}\n","import { type FC, useEffect, useRef } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useNavigate } from 'react-router';\nimport { Header } from '@/components/Header';\nimport { MainHeader } from '@/layout/MainHeader';\nimport { UserUtil } from '@/utils/user';\nimport { SpaceStatusEnum } from '@/apollo/generated/types';\nimport NoAccessCard from '@/screens/Chamber/ViewChamber/NoAccessCard';\nimport ROUTES from '@/constants/routes';\nimport { GuestHeader } from '@/layout/GuestHeader';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useNoumDetails } from '@/features/noums/hooks/noums';\nimport SkeletonLoaderProvider from '@/components/SkeletonLoader/SkeletonLoaderProvider';\nimport { type MessagePayload } from '@/services/rest/firebase';\nimport { trackEvent } from '@/utils/tracking';\nimport EVENTS from '@/constants/trackingEvents';\nimport { useLaunchDarkly } from '@/hooks';\nimport { AppLayout } from '@/layout/AppLayout';\nimport { NoumAuthorizationProvider } from '@/features/noums/contexts/NoumAuthorizationContext/NoumAuthorizationProvider';\nimport { usePushNotification } from '@/features/push-notifications/contexts/PushNotification';\nimport { SpaceUtils } from '@/utils/space';\nimport { type IChamber } from './types';\nimport { ChamberProvider } from './ChamberProvider';\n\nconst AppStyled = styled.div<{ applyMinHeight: boolean | undefined }>`\n  font-family: var(--font-family);\n  background: var(--bg-body-neutral-alt-highlighted) fixed;\n  min-height: 100vh;\n  ${({ applyMinHeight }) =>\n    applyMinHeight &&\n    css`\n      overflow: auto;\n      min-height: 100vh;\n    `}\n  overflow: unset;\n`;\n\nconst Chamber: FC<IChamber> = ({ id, children, isCustomPreview }) => {\n  const {\n    space,\n    user,\n    loading,\n    loadingSpace,\n    mainSpaceId,\n    connectedMembers,\n    connectedMembersCount,\n    existingConnection,\n    onRefetchConnectedMembers,\n    onRefetchConnections,\n    spaceConfigData,\n    noumValidity,\n    onRefetchSpaceById,\n    onRefetchSpaceByConfig,\n  } = useNoumDetails(id);\n\n  const navigate = useNavigate();\n\n  const { isUnregistered } = useAuth();\n  const {\n    flags: { noumEditor2, newAppNavigation },\n  } = useLaunchDarkly();\n  const { onForegroundMessage } = usePushNotification();\n\n  const isRiseNoum = space?.category?.name === 'Rise';\n  const isRiseApplicationNoum = SpaceUtils.isRiseApplicatonCategory(space);\n\n  const stayedOnRiseNoum = useRef<number>(new Date().getTime());\n\n  useEffect(\n    () =>\n      onForegroundMessage((message: MessagePayload) => {\n        const chamberIdFromNotification = message.data?.chamberId;\n        if (chamberIdFromNotification === id) {\n          switch (message.data?.pnId) {\n            case 'connectionInviteAccepted':\n            case 'connectionInviteDeclined':\n              onRefetchSpaceById();\n              break;\n          }\n        }\n      }),\n    [id, onForegroundMessage, onRefetchSpaceById],\n  );\n\n  useEffect(() => {\n    if (id && !loadingSpace && !space) {\n      navigate(ROUTES.NOUMS);\n    }\n  }, [id, space, loadingSpace, navigate]);\n\n  useEffect(() => {\n    stayedOnRiseNoum.current = new Date().getTime();\n    // Fire clever tap event if user visited Rise Noum\n    return () => {\n      if (isRiseNoum) {\n        trackEvent(EVENTS.RISE.NOUM_VISITED, {\n          UUID: user?._id,\n          stay: new Date().getTime() - stayedOnRiseNoum.current,\n          description: 'Time in ms that the user stayed on this page.',\n        });\n      }\n    };\n  }, [isRiseNoum, user]);\n\n  const isArchived = space?.status === SpaceStatusEnum.Archived;\n  const isOwner = space?.uid?._id === user?._id;\n  const isInactiveUser = UserUtil.isInactive(space?.uid);\n  const shouldShowNoAccessCard = (isArchived || isInactiveUser) && !isOwner;\n  const isLoading = (loading || loadingSpace) && !space;\n\n  useEffect(() => {\n    if (\n      isRiseApplicationNoum &&\n      window.location.href.indexOf('type=rise_application') === -1\n    ) {\n      window.history.replaceState(\n        {},\n        '',\n        `${window.location.href}?type=rise_application`,\n      );\n    }\n    if (isRiseNoum && window.location.href.indexOf('type=rise') === -1) {\n      window.history.replaceState({}, '', `${window.location.href}?type=rise`);\n    }\n  }, [isRiseApplicationNoum, isRiseNoum]);\n\n  if (newAppNavigation) {\n    const mainContent = (\n      <SkeletonLoaderProvider isLoading={isLoading}>\n        <>\n          {!isLoading && shouldShowNoAccessCard ? (\n            <NoAccessCard />\n          ) : (\n            <NoumAuthorizationProvider noumId={space?._id}>\n              <ChamberProvider\n                connectedMembersCount={connectedMembersCount}\n                connectedMembers={connectedMembers}\n                loading={loading && !space}\n                loadingSpace={loadingSpace && !space}\n                space={space || undefined}\n                mainSpaceId={mainSpaceId}\n                existingConnection={existingConnection}\n                refetchConnectedMembers={onRefetchConnectedMembers}\n                refetchConnections={onRefetchConnections}\n                onRefetchSpaceByConfig={onRefetchSpaceByConfig}\n                onRefetchSpaceById={onRefetchSpaceById}\n                spaceConfig={spaceConfigData?.getSpaceConfig || []}\n                noumValidity={noumValidity}\n              >\n                {children}\n              </ChamberProvider>\n            </NoumAuthorizationProvider>\n          )}\n        </>\n      </SkeletonLoaderProvider>\n    );\n\n    if (isCustomPreview) {\n      return mainContent;\n    }\n\n    return (\n      <AppLayout.Layout\n        onGoBack={\n          isUnregistered\n            ? () => navigate(ROUTES.GUEST_HOME)\n            : () => navigate(-1)\n        }\n        topNavbar={\n          !isCustomPreview && isUnregistered ? (\n            <Header isBorderRadius={false}>\n              <GuestHeader leftNavButton={true} />\n            </Header>\n          ) : (\n            <AppLayout.TopBar />\n          )\n        }\n        sideNav={<AppLayout.SideNavigation />}\n      >\n        {mainContent}\n      </AppLayout.Layout>\n    );\n  }\n\n  return (\n    <AppStyled\n      data-testid=\"CHAMBER\"\n      className=\"App\"\n      applyMinHeight={(space?.elements && space?.elements?.length < 3) || false}\n    >\n      <SkeletonLoaderProvider isLoading={isLoading}>\n        {!isCustomPreview && (\n          <Header isBorderRadius={false}>\n            {isUnregistered ? (\n              <GuestHeader leftNavButton={true} />\n            ) : (\n              <MainHeader\n                avatar={UserUtil.getProfilePicture(user) || undefined}\n                userName={user?.firstName || undefined}\n                isNoumEditor={noumEditor2}\n              />\n            )}\n          </Header>\n        )}\n        <>\n          {!isLoading && shouldShowNoAccessCard ? (\n            <NoAccessCard />\n          ) : (\n            <NoumAuthorizationProvider noumId={space?._id}>\n              <ChamberProvider\n                connectedMembersCount={connectedMembersCount}\n                connectedMembers={connectedMembers}\n                loading={loading && !space}\n                loadingSpace={loadingSpace && !space}\n                space={space || undefined}\n                mainSpaceId={mainSpaceId}\n                existingConnection={existingConnection}\n                refetchConnectedMembers={onRefetchConnectedMembers}\n                refetchConnections={onRefetchConnections}\n                onRefetchSpaceByConfig={onRefetchSpaceByConfig}\n                onRefetchSpaceById={onRefetchSpaceById}\n                spaceConfig={spaceConfigData?.getSpaceConfig || []}\n                noumValidity={noumValidity}\n              >\n                {children}\n              </ChamberProvider>\n            </NoumAuthorizationProvider>\n          )}\n        </>\n      </SkeletonLoaderProvider>\n    </AppStyled>\n  );\n};\n\nexport default Chamber;\n","import { useMemo } from 'react';\nimport {\n  SizedSkeleton,\n  SkeletonLoaderAvatar,\n} from '@/screens/Chamber/components/elements/SkeletonLoader/StyledSkeletons';\nimport {\n  StyledFlexColumn,\n  StyledFlexRow,\n} from '@/screens/Chamber/components/elements/SkeletonLoader/styled';\nimport { StyledSkeleton } from '@/components/ChamberBox/SkeletonChamberBox';\nimport { Card } from '@/components/Card';\nimport { useWindowDimensions } from '@/hooks';\nimport { breakpoints } from '@/constants/devices';\nimport SkeletonLoaderParagraph from '@/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderParagraph';\n\nconst SkeletonLoaderHoumHeader = () => {\n  const { width } = useWindowDimensions();\n  const isMobile = useMemo(() => width <= breakpoints.MOBILE_MAX, [width]);\n  const maxWidth = useMemo(() => (isMobile ? '87%' : undefined), [isMobile]);\n\n  return (\n    <Card>\n      <StyledFlexColumn gap={24} justify=\"baseline\" align=\"flex-start\">\n        <StyledFlexRow gap={8} justify=\"flex-start\" align=\"flex-start\">\n          <SkeletonLoaderAvatar />\n          <StyledFlexColumn align=\"flex-start\" gap={8}>\n            <StyledFlexRow gap={8}>\n              <StyledSkeleton w={64} h={30} r={8} />\n              <StyledSkeleton w={110} h={30} r={8} />\n            </StyledFlexRow>\n            <SizedSkeleton w={240} h={33} r={8} maxWidth={maxWidth} />\n            <SizedSkeleton w={110} h={20} r={8} />\n          </StyledFlexColumn>\n        </StyledFlexRow>\n        <SkeletonLoaderParagraph />\n      </StyledFlexColumn>\n    </Card>\n  );\n};\n\nexport default SkeletonLoaderHoumHeader;\n","import { type FC, useEffect } from 'react';\nimport { getFullName } from '@/utils/fullName';\nimport ChamberDefaultImag from '@/assets/images/chamber_default.png';\nimport OwnerDefaultImage from '@/assets/images/profile_default.png';\nimport { getTimeStampForDisplaying } from '@/utils/getTimeStampForDisplaying';\nimport {\n  ProjectChamberType,\n  SpaceStatusEnum,\n  SpaceTypeEnum,\n} from '@/apollo/generated/types';\nimport SkeletonLoaderHoumHeader from '@/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderHoumHeader';\nimport { SpaceUtils } from '@/utils/space';\nimport { useNoumContext } from './ChamberProvider';\nimport { ProfileSummary } from '../components/ProfileSummary';\nimport { type IChamberHead } from './types';\n\nexport const ChamberHeader: FC<IChamberHead> = ({ isCustomPreview }) => {\n  const {\n    space,\n    spaceName,\n    loadingSpace,\n    isArchived,\n    followersCount,\n    refetchFollowersCount,\n    followersDataLoading,\n    noumValidity,\n  } = useNoumContext();\n\n  useEffect(() => {\n    if (refetchFollowersCount && !followersCount && space?._id)\n      refetchFollowersCount();\n  }, [followersCount, refetchFollowersCount, space?._id]);\n\n  if (loadingSpace || followersDataLoading) return <SkeletonLoaderHoumHeader />;\n\n  return (\n    <ProfileSummary\n      disabled={isArchived}\n      name={spaceName || ''}\n      location={space?.uid?.location || ''}\n      bio={space?.description || ''}\n      followers={followersCount}\n      imageURL={space?.profileImage || ChamberDefaultImag}\n      ownerImageURL={space?.uid?.profile?.profilePicture || OwnerDefaultImage}\n      lastUpdated={getTimeStampForDisplaying(\n        SpaceUtils.getLastUpdatedAt(space),\n      )}\n      title={space?.category?.name || 'Title'}\n      loading={loadingSpace}\n      isMasterNoum={space?.type === SpaceTypeEnum.Home}\n      isSecretNoum={space?.projectType === ProjectChamberType.Secret}\n      ownerTitle={space?.uid?.title ? String(space?.uid?.title) : undefined}\n      ownerBio={space?.uid?.bio ? String(space?.uid?.bio) : undefined}\n      noumValidity={noumValidity}\n      isPublished={space?.status === SpaceStatusEnum.Published}\n      coverURL={space?.headerBackgroundUrl || ''}\n      ownerName={\n        space?.uid\n          ? getFullName(\n              space.uid.firstName,\n              space.uid.middleName,\n              space.uid.lastName,\n            )\n          : ''\n      }\n      isCustomPreview={isCustomPreview}\n    />\n  );\n};\n","import {\n  ElementTypeEnum,\n  SpaceTypeEnum,\n  type ElementOutput,\n  type Maybe,\n  type User,\n  type UserOutput,\n  type NoumLayoutSection,\n} from '@/apollo/generated/types';\nimport { type SpaceOutputFragment } from '@/apollo/graphql';\nimport { CustomPreviewTabEnum } from '@/screens/Chamber/CustomPreview/constants';\nimport { ElementUtils } from '@/utils/element';\n\nexport const toolRenderHelper = (\n  space: SpaceOutputFragment | undefined,\n  isConnected: boolean,\n  tools: ElementOutput[],\n  user: Maybe<UserOutput | User>,\n  isUnregistered: boolean,\n  flags: {\n    [key: string]: boolean;\n  },\n) => {\n  const elements = () => {\n    const elementsToRender =\n      space?.type !== SpaceTypeEnum.Home &&\n      space?.uid?._id !== user?._id &&\n      !(isConnected || isUnregistered) &&\n      flags.customNoums\n        ? ElementUtils.filterAndSortCPPublished(\n            tools,\n            CustomPreviewTabEnum.Preview,\n          )\n        : ElementUtils.filterAndSortPublished(\n            tools,\n            space?.type === SpaceTypeEnum.Home,\n          );\n\n    return elementsToRender.filter((element) => {\n      if (element.elementType === ElementTypeEnum.ContractManager)\n        return !!flags.contractTool;\n\n      return true;\n    });\n  };\n\n  const renderableTools = () => {\n    let filteredElements = elements();\n    if (flags.posts === false) {\n      filteredElements = filteredElements.filter(\n        (elem) => elem.elementType !== ElementTypeEnum.Userposts,\n      );\n    }\n\n    if (space?.type === 'HOME' && flags.homeNoumMessages === false) {\n      filteredElements = filteredElements.filter(\n        (elem) => elem.elementType !== ElementTypeEnum.Message,\n      );\n    }\n\n    return filteredElements;\n  };\n\n  return {\n    renderableTools,\n  };\n};\n\nexport const filterToolsWithSingleColumn = (\n  section: NoumLayoutSection,\n  eventsCount: number,\n  totalQuestionCount: number,\n  isConnected: boolean,\n  isFollowing: boolean,\n) =>\n  section.columns.length === 1 &&\n  section.columns[0].tools.length === 1 &&\n  section.columns[0].tools[0]?.elementType === ElementTypeEnum.Calendar\n    ? !(eventsCount > 0)\n    : section.columns[0].tools[0]?.elementType ===\n      ElementTypeEnum.QuickQuestions\n    ? !(totalQuestionCount > 0) && (isConnected || isFollowing)\n    : false;\n\nexport const clearSectionWithNoTools = (\n  list: NoumLayoutSection[] | undefined = [],\n) =>\n  list.filter((section) => section.columns.some((col) => col.tools.length > 0));\n"],"names":["ErrorCardTextWrapper","styled","span","devices","TABLET_L","NoAccessCard","jsxs","Fragment","jsx","Spacer","Root","StyledCard","TSpan","t","parseDefaultRoleName","value","defaultNoumRoleNames","includes","mapNoumRole","name","defaultRoleName","isDefault","NoumAuthorizationProvider","children","noumId","flags","useLaunchDarkly","data","useGetNoumMemberAuthorizationInfoQuery","variables","skip","elementPermission","assignedRole","getSpaceById","role","useMemo","permissions","cleanList","groupedPermissions","NoumAuthorizationContext","AppStyled","div","applyMinHeight","css","Chamber","id","isCustomPreview","space","user","loading","loadingSpace","mainSpaceId","connectedMembers","connectedMembersCount","existingConnection","onRefetchConnectedMembers","onRefetchConnections","spaceConfigData","noumValidity","onRefetchSpaceById","onRefetchSpaceByConfig","useNoumDetails","navigate","useNavigate","isUnregistered","useAuth","noumEditor2","newAppNavigation","onForegroundMessage","usePushNotification","isRiseNoum","category","isRiseApplicationNoum","SpaceUtils","isRiseApplicatonCategory","stayedOnRiseNoum","useRef","Date","getTime","useEffect","message","chamberId","pnId","ROUTES","NOUMS","current","EVENTS","RISE","NOUM_VISITED","UUID","_id","stay","description","isArchived","status","SpaceStatusEnum","Archived","isOwner","uid","isInactiveUser","UserUtil","isInactive","shouldShowNoAccessCard","isLoading","window","location","href","indexOf","history","replaceState","mainContent","SkeletonLoaderProvider","ChamberProvider","undefined","getSpaceConfig","AppLayout","GUEST_HOME","Header","GuestHeader","elements","length","MainHeader","getProfilePicture","firstName","SkeletonLoaderHoumHeader","width","useWindowDimensions","isMobile","breakpoints","MOBILE_MAX","maxWidth","Card","StyledFlexColumn","StyledFlexRow","SkeletonLoaderAvatar","StyledSkeleton","SizedSkeleton","SkeletonLoaderParagraph","ChamberHeader","spaceName","followersCount","refetchFollowersCount","followersDataLoading","useNoumContext","ProfileSummary","profileImage","ChamberDefaultImag","profile","profilePicture","OwnerDefaultImage","getTimeStampForDisplaying","getLastUpdatedAt","type","SpaceTypeEnum","Home","projectType","ProjectChamberType","Secret","title","String","bio","Published","headerBackgroundUrl","getFullName","middleName","lastName","toolRenderHelper","isConnected","tools","elementsToRender","customNoums","ElementUtils","filterAndSortCPPublished","CustomPreviewTabEnum","Preview","filterAndSortPublished","filter","element","elementType","ElementTypeEnum","ContractManager","contractTool","renderableTools","filteredElements","posts","elem","Userposts","homeNoumMessages","Message","filterToolsWithSingleColumn","section","eventsCount","totalQuestionCount","isFollowing","columns","Calendar","QuickQuestions","clearSectionWithNoTools","list","some","col"],"mappings":"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"}