{"version":3,"file":"useDiscoveryFeaturedNoums-17c3594a.js","sources":["../../src/features/discovery/hooks/useDiscoveryFeaturedNoums.tsx"],"sourcesContent":["import { useCallback, useState, useEffect } from 'react';\nimport {\n  type SpaceOutputFragment,\n  useGetFeaturedNoumsQuery,\n} from '@/apollo/graphql';\nimport { type Maybe } from '@/apollo/generated/types';\n\nexport const useDiscoveryFeaturedNoums = (\n  isInfinite?: boolean,\n  pageSize = 0,\n) => {\n  const [infiniteState, setInfiniteState] = useState<\n    'loading' | 'hasNextPage' | 'end' | 'end-with-force'\n  >('hasNextPage');\n  const [currentNoums, setCurrentNoums] = useState<\n    Maybe<SpaceOutputFragment>[]\n  >([]);\n  const [totalCount, setTotalCount] = useState(0);\n  const { data, loading, error, fetchMore, refetch } = useGetFeaturedNoumsQuery(\n    {\n      variables: {\n        limit: isInfinite ? pageSize : 12,\n        offset: 0,\n      },\n    },\n  );\n\n  useEffect(() => {\n    setCurrentNoums(data?.getFeaturedNoums?.data || []);\n    setTotalCount(data?.getFeaturedNoums?.count || 0);\n  }, [data]);\n\n  const fetchMoreNoums = useCallback(async () => {\n    const result = await fetchMore({\n      variables: {\n        limit: pageSize,\n        offset: currentNoums?.length || 0,\n      },\n    });\n    const currentFetchedNoums = result?.data?.getFeaturedNoums?.data || [];\n    const udpatedNoums = [...currentNoums, ...currentFetchedNoums];\n    setCurrentNoums(udpatedNoums);\n    if ((currentFetchedNoums.length || 0) < pageSize) setInfiniteState('end');\n  }, [fetchMore, currentNoums, pageSize]);\n\n  useEffect(() => {\n    setInfiniteState(\n      currentNoums && currentNoums?.length >= totalCount\n        ? 'end'\n        : 'hasNextPage',\n    );\n  }, [currentNoums, totalCount]);\n\n  useEffect(() => {\n    refetch();\n  }, [refetch]);\n\n  return {\n    noums: currentNoums,\n    loading,\n    error,\n    infiniteState,\n    fetchMoreNoums,\n    refetchFeaturedNoums: refetch,\n  };\n};\n\nexport default useDiscoveryFeaturedNoums;\n"],"names":["useDiscoveryFeaturedNoums","isInfinite","pageSize","infiniteState","setInfiniteState","useState","currentNoums","setCurrentNoums","totalCount","setTotalCount","data","loading","error","fetchMore","refetch","useGetFeaturedNoumsQuery","variables","limit","offset","useEffect","getFeaturedNoums","count","fetchMoreNoums","useCallback","result","length","currentFetchedNoums","udpatedNoums","noums","refetchFeaturedNoums"],"mappings":"kFAOO,MAAMA,EAA4BA,CACvCC,EACAC,EAAW,IACR,CACH,KAAM,CAACC,EAAeC,CAAgB,EAAIC,WAExC,aAAa,EACT,CAACC,EAAcC,CAAe,EAAIF,EAAAA,SAEtC,CAAE,CAAA,EACE,CAACG,EAAYC,CAAa,EAAIJ,WAAS,CAAC,EACxC,CAAEK,KAAAA,EAAMC,QAAAA,EAASC,MAAAA,EAAOC,UAAAA,EAAWC,QAAAA,GAAYC,EACnD,CACEC,UAAW,CACTC,MAAOhB,EAAaC,EAAW,GAC/BgB,OAAQ,CACV,CAAA,CACD,EAGHC,EAAAA,UAAU,IAAM,SACdZ,IAAgBG,EAAAA,GAAAA,YAAAA,EAAMU,mBAANV,YAAAA,EAAwBA,OAAQ,CAAE,CAAA,EACpCA,IAAAA,EAAAA,GAAAA,YAAAA,EAAMU,mBAANV,YAAAA,EAAwBW,QAAS,CAAC,CAAA,EAC/C,CAACX,CAAI,CAAC,EAEHY,MAAAA,EAAiBC,EAAAA,YAAY,SAAY,SACvCC,MAAAA,EAAS,MAAMX,EAAU,CAC7BG,UAAW,CACTC,MAAOf,EACPgB,QAAQZ,GAAAA,YAAAA,EAAcmB,SAAU,CAClC,CAAA,CACD,EACKC,IAAsBF,GAAAA,EAAAA,GAAAA,YAAAA,EAAQd,OAARc,YAAAA,EAAcJ,mBAAdI,YAAAA,EAAgCd,OAAQ,CAAA,EAC9DiB,EAAe,CAAC,GAAGrB,EAAc,GAAGoB,CAAmB,EAC7DnB,EAAgBoB,CAAY,GACvBD,EAAoBD,QAAU,GAAKvB,GAAUE,EAAiB,KAAK,CACvE,EAAA,CAACS,EAAWP,EAAcJ,CAAQ,CAAC,EAEtCiB,OAAAA,EAAAA,UAAU,IAAM,CACdf,EACEE,IAAgBA,GAAAA,YAAAA,EAAcmB,SAAUjB,EACpC,MACA,aAAa,CAAA,EAElB,CAACF,EAAcE,CAAU,CAAC,EAE7BW,EAAAA,UAAU,IAAM,CACLL,GAAA,EACR,CAACA,CAAO,CAAC,EAEL,CACLc,MAAOtB,EACPK,QAAAA,EACAC,MAAAA,EACAT,cAAAA,EACAmB,eAAAA,EACAO,qBAAsBf,CAAAA,CAE1B"}