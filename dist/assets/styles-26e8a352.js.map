{"version":3,"file":"styles-26e8a352.js","sources":["../../src/components/ContextMenu/styles.ts","../../src/utils/multiselect.ts","../../src/hooks/useMultiItemSelection.ts","../../src/components/DataGrid/utils.ts","../../src/components/DataGrid/DataGridContext.tsx","../../src/components/DataGrid/Footer/styles.ts","../../src/components/DataGrid/Table/styles.ts","../../src/components/DataGrid/CollapsibleList/styles.ts"],"sourcesContent":["import styled from 'styled-components';\nimport { Card } from '@/components/Card';\n\nconst OptionContainer = styled.div<{ intent?: string }>`\n  display: inline-flex;\n  gap: 16px;\n  padding: 12px;\n  align-items: center;\n  cursor: pointer;\n  border-bottom: 1px solid var(--bg-separator-neutral-default);\n  ${({ intent }) =>\n    intent === 'danger' &&\n    'svg path { fill: var(--bg-button-danger-primary-default)};'}\n\n  &:hover {\n    background-color: var(--bg-tablecell-neutral-hover);\n  }\n`;\n\nconst SpinnerWrapper = styled(Card)`\n  height: 50px;\n  width: 147px;\n`;\n\nexport default {\n  OptionContainer,\n  SpinnerWrapper,\n};\n","import { uniq } from 'lodash';\n\ninterface Comparer<T = unknown> {\n  (a: T, b: T): boolean;\n}\n\nconst identityComparer: Comparer = <T>(a: T, b: T) => a === b;\n\nfunction selectOne<T>(items: T[], newItem: T) {\n  return [...items, newItem];\n}\n\nfunction selectOneUnique<T>(items: T[], newItem: T) {\n  return uniq(selectOne(items, newItem));\n}\n\nfunction selectMultiple<T>(items: T[], newItems: T[]) {\n  return [...items, ...newItems];\n}\n\nfunction selectMultipleUnique<T>(items: T[], newItems: T[]) {\n  return uniq(selectMultiple(items, newItems));\n}\n\nfunction removeOne<T>(\n  items: T[],\n  removedItem: T,\n  predicate: Comparer<T> = identityComparer,\n) {\n  return items.filter((item) => !predicate(item, removedItem));\n}\n\nfunction removeMultiple<T>(\n  items: T[],\n  removedItems: T[],\n  predicate: Comparer<T> = identityComparer,\n) {\n  return items.filter(\n    (item) => !removedItems.find((removedItem) => predicate(removedItem, item)),\n  );\n}\n\nfunction toggleOne<T>(items: T[], newItem: T) {\n  return isSelected(items, newItem)\n    ? removeOne(items, newItem)\n    : selectOne(items, newItem);\n}\n\nfunction isSelected<T>(\n  items: T[],\n  checkedItem: T,\n  predicate: Comparer<T> = identityComparer,\n) {\n  return !!items.find((item) => predicate(item, checkedItem));\n}\n\nfunction areSelected<T>(\n  items: T[],\n  checkedItems: T[],\n  predicate: Comparer<T> = identityComparer,\n) {\n  return checkedItems.every((checkedItem) =>\n    isSelected(items, checkedItem, predicate),\n  );\n}\n\nexport const MultiselectUtil = {\n  selectOne,\n  selectOneUnique,\n  selectMultiple,\n  selectMultipleUnique,\n  removeOne,\n  removeMultiple,\n  toggleOne,\n  isSelected,\n  areSelected,\n};\n","import { useMemo, useState } from 'react';\nimport { MultiselectUtil } from '@/utils/multiselect';\n\ninterface UseMultiItemSelectionOptions<T = string> {\n  initialSelection?: T[];\n}\n\nexport interface MultiItemSelectionApi<T> {\n  selectedItems: T[];\n  selectOne: (item: T) => void;\n  selectMultiple: (items: T[]) => void;\n  removeOne: (item: T) => void;\n  removeMultiple: (items: T[]) => void;\n  clear: () => void;\n  isSelected: (item: T) => boolean;\n  areSelected: (items: T[]) => boolean;\n}\n\nexport function useMultiItemSelection<T>({\n  initialSelection,\n}: UseMultiItemSelectionOptions<T> = {}): MultiItemSelectionApi<T> {\n  const [selectedItems, setSelectedItems] = useState<T[]>(\n    initialSelection ?? [],\n  );\n\n  const value = useMemo(() => {\n    function selectOne(newItem: T) {\n      setSelectedItems((prev) =>\n        MultiselectUtil.selectOneUnique(prev, newItem),\n      );\n    }\n\n    function selectMultiple(newItems: T[]) {\n      setSelectedItems((prev) =>\n        MultiselectUtil.selectMultipleUnique(prev, newItems),\n      );\n    }\n\n    function removeOne(item: T) {\n      setSelectedItems((prev) => MultiselectUtil.removeOne(prev, item));\n    }\n\n    function removeMultiple(items: T[]) {\n      setSelectedItems((prev) => MultiselectUtil.removeMultiple(prev, items));\n    }\n\n    function clear() {\n      setSelectedItems([]);\n    }\n\n    function isSelected(item: T) {\n      return MultiselectUtil.isSelected(selectedItems, item);\n    }\n    function areSelected(items: T[]) {\n      return MultiselectUtil.areSelected(selectedItems, items);\n    }\n\n    return {\n      selectedItems,\n      selectOne,\n      selectMultiple,\n      removeOne,\n      removeMultiple,\n      clear,\n      isSelected,\n      areSelected,\n    };\n  }, [selectedItems]);\n\n  return value;\n}\n","import { cleanList } from '@/utils/list';\nimport { type AnyObject, type SortDirectionType } from './types';\n\nfunction getOppositeSortingDirection(direction?: SortDirectionType) {\n  return direction === 'asc' ? 'desc' : 'asc';\n}\n\nfunction mapRowSelectionToItems<D extends AnyObject>(\n  data: D[],\n  selectedIds: string[],\n  getId: (item: D) => string,\n): D[] {\n  return cleanList(\n    selectedIds.map((id) => data.find((item) => getId(item) === id)),\n  );\n}\n\nexport const DataGridUtils = {\n  getOppositeSortingDirection,\n  mapRowSelectionToItems,\n};\n","import React, { createContext, useContext, useMemo, useState } from 'react';\nimport { useMultiItemSelection } from '@/hooks/useMultiItemSelection';\nimport {\n  type AnyObject,\n  type DataGridContextType,\n  type DataGridProviderProps,\n  type DataGridSorting,\n} from './types';\nimport { DataGridUtils } from './utils';\n\nconst DataGridContext = createContext(null as unknown);\n\nexport function DataGridProvider<\n  DataItem extends AnyObject,\n  TSort extends string = string,\n>({ children, data, defaultSorting }: DataGridProviderProps<DataItem, TSort>) {\n  const multiItemSelection = useMultiItemSelection<string>();\n  const [sorting, setSorting] = useState<DataGridSorting<TSort> | null>(\n    defaultSorting ?? null,\n  );\n\n  const value = useMemo<DataGridContextType<DataItem, TSort>>(\n    () => ({\n      data,\n      rowSelection: multiItemSelection,\n      getRowSelectionItems: (getId) =>\n        DataGridUtils.mapRowSelectionToItems(\n          data,\n          multiItemSelection.selectedItems,\n          getId,\n        ),\n      sorting,\n      setSorting,\n    }),\n    [data, multiItemSelection, sorting],\n  );\n\n  return (\n    <DataGridContext.Provider value={value}>\n      {children}\n    </DataGridContext.Provider>\n  );\n}\n\nexport function useDataGrid<\n  DataItem extends AnyObject = AnyObject,\n  TSort extends string = string,\n>() {\n  const dataGrid = useContext<DataGridContextType<DataItem, TSort>>(\n    DataGridContext as unknown as React.Context<\n      DataGridContextType<DataItem, TSort>\n    >,\n  );\n\n  if (!dataGrid) {\n    throw new Error('useDataGrid must be called under DataGridProvider.');\n  }\n\n  return dataGrid;\n}\n","import styled from 'styled-components';\n\nconst LeftSlot = styled.div`\n  flex-grow: 0;\n`;\nconst RightSlot = styled.div`\n  flex-grow: 0;\n`;\n\nexport default {\n  LeftSlot,\n  RightSlot,\n};\n","import styled, { css } from 'styled-components';\nimport { bodyTypography, footnoteTypography } from '@/components/Typography';\nimport { ellipsisText } from '@/common/globalStyles';\nimport { Stack } from '@/layout';\n\nexport const ROW_HEIGHT = 60;\n\nconst noWordWrapStyle = css`\n  max-width: 0;\n  ${ellipsisText}\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n`;\n\nconst TableHead = styled.thead``;\n\nconst TableBody = styled.tbody``;\n\nconst TableHeader = styled.th<{\n  $wordWrap?: boolean;\n  $width?: 'fit-contents' | string;\n}>`\n  ${footnoteTypography.footnoteBold}\n  background-color: var(--bg-card-neutral-default);\n  color: var(--text-card-header-neutral-highlighted);\n  padding: 12px;\n  text-align: left;\n  ${({ $wordWrap }) => ($wordWrap ? '' : noWordWrapStyle)}\n\n  width: ${({ $width }) =>\n    $width ? ($width === 'fit-contents' ? '1px' : $width) : 'auto'};\n\n  :first-of-type {\n    border-radius: 8px 0 0 8px;\n  }\n\n  :last-of-type {\n    border-radius: 0 8px 8px 0;\n  }\n`;\n\nconst TableRow = styled.tr<{ $clickable?: boolean }>`\n  ${(props) => (props.$clickable ? 'cursor: pointer;' : '')}\n`;\n\nconst TableCell = styled.td<{\n  $width?: 'fit-contents' | string;\n  $wordWrap?: boolean;\n}>`\n  ${footnoteTypography.footnote}\n  padding: 12px;\n  text-align: left;\n  border-bottom: 1px solid var(--border-card-neutral-default);\n  color: var(--text-card-neutral-default);\n  ${({ $wordWrap }) => ($wordWrap ? '' : noWordWrapStyle)}\n  width: ${({ $width }) =>\n    $width ? ($width === 'fit-contents' ? '1px' : $width) : 'auto'}\n`;\n\nconst NoResults = styled(Stack).attrs(() => ({\n  align: 'center',\n  justify: 'center',\n}))<{ $rowsCount: number }>`\n  height: ${(props) => props.$rowsCount * ROW_HEIGHT}px;\n  color: var(--text-placeholder-neutral-default);\n  ${bodyTypography.bodyMedium}\n`;\n\nexport default {\n  Table,\n  TableHead,\n  TableBody,\n  TableHeader,\n  TableRow,\n  TableCell,\n  NoResults,\n};\n","import styled from 'styled-components';\nimport { Stack } from '@/layout';\n\nexport const ROW_HEIGHT = 56;\n\nconst ListRow = styled(Stack).attrs({\n  fullWidth: true,\n  vertial: true,\n  gap: 16,\n})``;\n\nconst ListItem = styled(Stack).attrs({\n  fullWidth: true,\n})``;\n\nexport default {\n  ListRow,\n  ListItem,\n};\n"],"names":["OptionContainer","styled","div","intent","SpinnerWrapper","Card","S$3","identityComparer","a","b","selectOne","items","newItem","selectOneUnique","uniq","selectMultiple","newItems","selectMultipleUnique","removeOne","removedItem","predicate","filter","item","removeMultiple","removedItems","find","toggleOne","isSelected","checkedItem","areSelected","checkedItems","every","MultiselectUtil","useMultiItemSelection","initialSelection","selectedItems","setSelectedItems","useState","value","useMemo","prev","clear","getOppositeSortingDirection","direction","mapRowSelectionToItems","data","selectedIds","getId","cleanList","map","id","DataGridUtils","DataGridContext","createContext","DataGridProvider","children","defaultSorting","multiItemSelection","sorting","setSorting","rowSelection","getRowSelectionItems","jsx","useDataGrid","dataGrid","useContext","Error","LeftSlot","RightSlot","S$2","ROW_HEIGHT","noWordWrapStyle","css","ellipsisText","Table","table","TableHead","thead","TableBody","tbody","TableHeader","th","footnoteTypography","footnoteBold","$wordWrap","$width","TableRow","tr","props","$clickable","TableCell","td","footnote","NoResults","Stack","attrs","align","justify","$rowsCount","bodyTypography","bodyMedium","S$1","ListRow","fullWidth","vertial","gap","ListItem","S"],"mappings":"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"}