{"version":3,"file":"Radiobox-c1e62033.js","sources":["../../src/components/Radiobox/Radiobox.tsx"],"sourcesContent":["import { type FC } from 'react';\nimport * as Styles from './styles';\n\nexport type RadioboxProps = {\n  isChecked: boolean;\n  text?: string;\n  icon?: JSX.Element;\n  onChange?: (value: boolean) => void;\n  disableClick?: boolean;\n};\n\nexport const Radiobox: FC<RadioboxProps> = ({\n  isChecked,\n  icon,\n  text = '',\n  disableClick,\n  onChange = () => {},\n}) => {\n  const handleClick = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if (disableClick) e.preventDefault();\n    else onChange(!isChecked);\n  };\n  return (\n    // eslint-disable-next-line jsx-a11y/label-has-associated-control\n    <label>\n      <Styles.RadioboxOuter\n        autoFocus={false}\n        type=\"radio\"\n        data-testid=\"radio_box_outer\"\n        onChange={() => onChange(!isChecked)}\n      />\n      <Styles.RadioboxInner\n        active={isChecked}\n        aria-hidden=\"true\"\n        onClick={handleClick}\n        data-testid=\"radio_box\"\n      >\n        {icon || (\n          <Styles.RadioTick\n            colorToken={\n              isChecked\n                ? '--icon-radiobutton-brand-primary-default'\n                : '--icon-checkbox-neutral-alt-default'\n            }\n          />\n        )}\n      </Styles.RadioboxInner>\n      {text}\n    </label>\n  );\n};\n"],"names":["Radiobox","isChecked","icon","text","disableClick","onChange","jsxs","jsx","Styles.RadioboxOuter","Styles.RadioboxInner","e","preventDefault","Styles.RadioTick"],"mappings":"uEAWO,MAAMA,EAA8BA,CAAC,CAC1CC,UAAAA,EACAC,KAAAA,EACAC,KAAAA,EAAO,GACPC,aAAAA,EACAC,SAAAA,EAAWA,IAAM,CAAC,CACpB,IAOIC,EAAC,QAAK,CAAA,YAAA,iBACJ,SAAA,CAAAC,EAACC,EAAA,CACC,UAAW,GACX,KAAK,QACL,cAAY,kBACZ,SAAU,IAAMH,EAAS,CAACJ,CAAS,CAAE,CAAA,EAEvCM,EAACE,EAAA,CACC,OAAQR,EACR,cAAY,OACZ,QAhBeS,GAAiD,CAChEN,EAAcM,EAAEC,eAAc,EAC7BN,EAAS,CAACJ,CAAS,CAAA,EAepB,cAAY,YAEXC,SAAAA,KACEU,EAAA,CACC,WACEX,EACI,2CACA,qCAGT,CAAA,EACH,EACCE,CAAAA,EACH"}