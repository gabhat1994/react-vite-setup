{"version":3,"file":"NoumManagerDetails-983e3cd4.js","sources":["../../src/features/noums/components/ActivityLogs/styles.ts","../../src/features/noums/components/ActivityLogs/TranslatedBody.tsx","../../src/features/noums/components/ActivityLogs/utils.ts","../../src/features/noums/components/ActivityLogs/ActivityLogsItem.tsx","../../src/features/noums/components/ActivityLogs/ActivityLogs.tsx","../../src/screens/NoumManager/NoumManagerDetailsScreen/providers/NoumManagerDetailsProvider.tsx","../../src/features/noums/components/ManagerDetailsHeader/ManagerDetailsBaseHeader.tsx","../../src/features/noums/components/ManagerDetailsHeader/ResignButton.tsx","../../src/features/noums/components/ManagerDetailsHeader/EditRoleButton.tsx","../../src/features/noums/components/ManagerDetailsHeader/DisconnectButton.tsx","../../src/features/noums/components/ManagerDetailsHeader/CancelInviteButton.tsx","../../src/features/noums/components/ManagerDetailsHeader/index.tsx","../../src/features/noums/components/ResignFlow/ResignFlow.tsx","../../src/features/noums/hooks/manageMembers/useResignFlow.tsx","../../src/screens/NoumManager/NoumManagerDetailsScreen/DetailsHeader/ManagerHeader.tsx","../../src/screens/NoumManager/NoumManagerDetailsScreen/DetailsHeader/NoumOwnerHeader.tsx","../../src/screens/NoumManager/NoumManagerDetailsScreen/DetailsHeader/DetailsHeader.tsx","../../src/screens/NoumManager/NoumManagerDetailsScreen/styles.ts","../../src/screens/NoumManager/NoumManagerDetailsScreen/ManagerDetailsSection/styles.ts","../../src/screens/NoumManager/NoumManagerDetailsScreen/ManagerDetailsSection/ManagerDetailsSection.tsx","../../src/features/noums/components/MembersStatsDate/utils.ts","../../src/features/noums/components/MembersStatsDate/MembersStatsDate.tsx","../../src/features/noums/components/StatsCard/styles.ts","../../src/features/noums/components/StatsCard/StatsCard.tsx","../../src/screens/NoumManager/NoumManagerDetailsScreen/UserPerformanceSection/styles.ts","../../src/screens/NoumManager/NoumManagerDetailsScreen/UserPerformanceSection/UserPerformanceSection.tsx","../../src/screens/NoumManager/NoumManagerDetailsScreen/NoumManagerDetailsScreen.tsx"],"sourcesContent":["import { TSpan } from '@/components/Typography';\nimport styled from 'styled-components';\n\nconst BodyHighlighted = styled(TSpan).attrs({\n  font: 'body-m-bold',\n  colorToken: '--text-card-header-neutral-highlighted',\n})``;\n\nexport default {\n  BodyHighlighted,\n};\n","import { Trans } from 'react-i18next';\nimport S from './styles';\n\ninterface TranslatedBodyProps {\n  i18nKey: string;\n  values?: Record<string, string | number | boolean | undefined | null>;\n}\n\nexport function TranslatedBody({ i18nKey, values }: TranslatedBodyProps) {\n  return (\n    <Trans\n      i18nKey={i18nKey}\n      values={values}\n      components={{\n        b: <S.BodyHighlighted />,\n      }}\n    />\n  );\n}\n","import { type DropdownValueType } from '@/components/Dropdown';\nimport { type ActivityLogsFilterTypes, type ActivityLogItem } from './types';\n\nfunction getTranslationByType({ item }: { item: ActivityLogItem }) {\n  switch (item.type) {\n    case 'post-added':\n      return {\n        key: 'noumena.noum_member_details.activity_logs.post_added',\n        values: {\n          user: item.user,\n        },\n      };\n    case 'event-hosted':\n      return {\n        key: 'noumena.noum_member_details.activity_logs.event_hosted',\n        values: {\n          user: item.user,\n          eventName: item.eventName,\n        },\n      };\n    case 'event-created':\n      return {\n        key: 'noumena.noum_member_details.activity_logs.event_created',\n        values: {\n          user: item.user,\n          eventName: item.eventName,\n        },\n      };\n    case 'member-invited':\n      return {\n        key: 'noumena.noum_member_details.activity_logs.member_invited',\n        values: {\n          sourceUser: item.sourceUser,\n          targetUser: item.targetUser,\n        },\n      };\n    case 'manager-invited':\n      return {\n        key: 'noumena.noum_member_details.activity_logs.manager_invited',\n        values: {\n          sourceUser: item.sourceUser,\n          targetUser: item.targetUser,\n        },\n      };\n    case 'manager-invite-accepted':\n      return {\n        key: 'noumena.noum_member_details.activity_logs.manager_invite_accepted',\n        values: {\n          user: item.user,\n        },\n      };\n    case 'message-sent':\n      return {\n        key: 'noumena.noum_member_details.activity_logs.message_sent',\n        values: {\n          sourceUser: item.sourceUser,\n          targetUser: item.targetUser,\n        },\n      };\n    case 'transaction':\n      return {\n        key: 'noumena.noum_member_details.activity_logs.transaction',\n        values: {\n          user: item.user,\n          amount: item.amount,\n          invoiceNumber: item.invoiceNumber,\n        },\n      };\n\n    default:\n      return null;\n  }\n}\n\nconst filterDropdownOptions: DropdownValueType<ActivityLogsFilterTypes>[] = [\n  {\n    label: 'All Types',\n    key: 'all',\n    type: 'value',\n    value: 'all',\n  },\n  {\n    label: 'Posts Posted',\n    key: 'posts',\n    type: 'value',\n    value: 'posts',\n  },\n  {\n    label: 'Messages Sent',\n    key: 'messages',\n    type: 'value',\n    value: 'messages',\n  },\n  {\n    label: 'Member Invited',\n    key: 'invited',\n    type: 'value',\n    value: 'invited',\n  },\n  {\n    label: 'Transactions',\n    key: 'transactions',\n    type: 'value',\n    value: 'transactions',\n  },\n  {\n    label: 'Event Hosted',\n    key: 'events',\n    type: 'value',\n    value: 'events',\n  },\n];\n\nexport const ActivityLogsUtils = {\n  getTranslationByType,\n  filterDropdownOptions,\n};\n","import { ActivityLog } from '@/components/ActivityLog';\nimport { TranslatedBody } from './TranslatedBody';\nimport { type ActivityLogItem } from './types';\nimport { ActivityLogsUtils } from './utils';\n\ntype ActivityLogsItemProps = {\n  item: ActivityLogItem;\n};\n\nexport const ActivityLogsItem: React.FC<ActivityLogsItemProps> = ({ item }) => {\n  if (!item) {\n    return null;\n  }\n\n  const translation = ActivityLogsUtils.getTranslationByType({ item });\n\n  return (\n    <ActivityLog.Item\n      iconName=\"check_xs\"\n      description={\n        translation?.key ? (\n          <TranslatedBody\n            i18nKey={translation.key}\n            values={translation.values}\n          />\n        ) : null\n      }\n      timestamp={item.createdAt}\n    />\n  );\n};\n","import { ActivityLog } from '@/components/ActivityLog';\nimport { TSpan } from '@/components/Typography';\nimport { Stack } from '@/layout';\nimport { useTranslation } from 'react-i18next';\nimport { Dropdown, type DropdownTargetProps } from '@/components/Dropdown';\nimport { Button, Icon } from '@/components';\nimport { useBreakpoints } from '@/hooks';\nimport { type ActivityLogItem } from './types';\nimport { ActivityLogsItem } from './ActivityLogsItem';\nimport { ActivityLogsUtils } from './utils';\n\ntype ActivityLogsProps = {\n  activityLogs: ActivityLogItem[];\n};\n\nexport const ActivityLogs: React.FC<ActivityLogsProps> = ({ activityLogs }) => {\n  const { t } = useTranslation();\n  const { isMobile } = useBreakpoints();\n\n  return activityLogs.length ? (\n    <Stack vertical gap={16} fullWidth>\n      <Stack fullWidth justify=\"space-between\" align=\"center\">\n        <TSpan font=\"heading-xs-bold\">\n          {t('noumena.noum_member_details.activity_logs.heading')}\n        </TSpan>\n\n        <Dropdown\n          hideIcons\n          containerWidth=\"280px\"\n          onSelectOption={() => null}\n          options={ActivityLogsUtils.filterDropdownOptions}\n          renderContainerFromBottom={isMobile}\n        >\n          {({ targetRef, toggle }: DropdownTargetProps<HTMLButtonElement>) => (\n            <Button\n              ref={targetRef}\n              size=\"small\"\n              tertiary\n              rightIcon={\n                <Icon\n                  name=\"chevron_down_m\"\n                  size={16}\n                  color=\"--icon-input-neutral-default\"\n                />\n              }\n              onClick={toggle}\n            >\n              All Types\n            </Button>\n          )}\n        </Dropdown>\n      </Stack>\n      <Stack gap={16} vertical fullWidth>\n        <ActivityLog.List>\n          {activityLogs.map((item) => (\n            <ActivityLogsItem key={item.id} item={item} />\n          ))}\n        </ActivityLog.List>\n      </Stack>\n    </Stack>\n  ) : (\n    <Stack fullWidth justify=\"center\">\n      <TSpan font=\"body-m\" colorToken=\"--text-placeholder-neutral-default\">\n        {t('noumena.noum_member_details.activity_logs.not_found\"')}\n      </TSpan>\n    </Stack>\n  );\n};\n","import {\n  useNoumMemberQuery,\n  type NoumMemberBasicFragment,\n  type SpaceOutputFragment,\n} from '@/apollo/graphql';\nimport { type Maybe } from '@/common/types';\nimport { useNoumDetails } from '@/features/noums/hooks/noums';\nimport { createContext, useContext, useMemo, type FC } from 'react';\nimport { useParams } from 'react-router';\nimport { type PageParams } from '../types';\n\ntype NoumManagerDetailsContextType = {\n  member: Maybe<NoumMemberBasicFragment>;\n  loading: boolean;\n  noum: Maybe<SpaceOutputFragment>;\n};\n\nexport const NoumManagerDetailsContext =\n  createContext<NoumManagerDetailsContextType>({\n    member: undefined,\n    loading: false,\n    noum: undefined,\n  });\n\nexport const NoumManagerDetailsProvider: FC = ({ children }) => {\n  const { id = '', memberId = '' } = useParams<PageParams>();\n  const { space: noum, loading: loadingSpace } = useNoumDetails(id);\n  const { data, loading: loadingMember } = useNoumMemberQuery({\n    variables: { memberId },\n  });\n\n  const value = useMemo(\n    () => ({\n      member: data?.noumMember,\n      loading: loadingSpace || loadingMember,\n      noum,\n    }),\n    [data?.noumMember, loadingSpace, loadingMember, noum],\n  );\n\n  return (\n    <NoumManagerDetailsContext.Provider value={value}>\n      {children}\n    </NoumManagerDetailsContext.Provider>\n  );\n};\n\nexport const useNoumManagerDetailsProvider = () => {\n  const context = useContext(NoumManagerDetailsContext);\n\n  if (!context) {\n    throw new Error(\n      'useNoumManagerDetailsProvider must be rendered within NoumManagerDetailsContext.Provider.',\n    );\n  }\n\n  return context;\n};\n","import {\n  type NoumMemberBasicFragment,\n  type UserOutputFragment,\n} from '@/apollo/graphql';\nimport { type Maybe } from '@/common/types';\nimport { Button, Icon, TSpan } from '@/components';\nimport { Avatar } from '@/components/Avatar/Avatar';\nimport { useAuth } from '@/features/auth/contexts';\nimport { Stack } from '@/layout';\nimport { UserUtil } from '@/utils/user';\nimport React from 'react';\nimport { useBreakpoints } from '@/hooks';\nimport { MemberRoleTag } from '../MemberRoleTag';\n\ntype ManagerDetailsHeaderProps = {\n  rightContent?: React.ReactNode;\n  user: Maybe<UserOutputFragment>;\n  member: Maybe<NoumMemberBasicFragment>;\n  onGoBack?: () => void;\n};\n\nexport const ManagerDetailsBaseHeader: React.FC<ManagerDetailsHeaderProps> = ({\n  rightContent,\n  user,\n  member,\n  onGoBack,\n}) => {\n  const { user: currentUser } = useAuth();\n  const { isMobile } = useBreakpoints();\n\n  if (!user || !member) {\n    return null;\n  }\n\n  return (\n    <Stack align=\"center\" justify=\"space-between\">\n      <Stack align=\"center\" gap={8}>\n        <Stack align=\"center\">\n          <Button\n            neutral\n            icon={\n              <Icon\n                color=\"--icon-button-neutral-default\"\n                name=\"arrow_left_m\"\n                size={24}\n              />\n            }\n            onClick={onGoBack}\n          />\n          {!isMobile && (\n            <Avatar size=\"M\" src={user.profile?.profilePicture ?? ''} />\n          )}\n        </Stack>\n\n        <Stack\n          vertical={isMobile}\n          align={isMobile ? 'start' : 'center'}\n          gap={isMobile ? 4 : 8}\n        >\n          <TSpan font=\"heading-xs\" colorToken=\"--text-card-neutral-highlighted\">\n            {UserUtil.renderFullName(user)}\n\n            {currentUser?._id === user._id ? (\n              <TSpan colorToken=\"--text-card-neutral-default\"> (You)</TSpan>\n            ) : null}\n          </TSpan>\n\n          <MemberRoleTag member={member} />\n        </Stack>\n      </Stack>\n\n      <Stack align=\"center\" gap={16}>\n        {rightContent}\n      </Stack>\n    </Stack>\n  );\n};\n","import { Button, Icon } from '@/components';\nimport React from 'react';\n\ntype ResignButtonProps = {\n  onClick: () => void;\n};\n\nexport const ResignButton: React.FC<ResignButtonProps> = ({ onClick }) => (\n  <Button\n    leftIcon={<Icon name=\"close_m\" size={16} />}\n    secondary\n    intent=\"negative\"\n    size=\"small\"\n    onClick={onClick}\n  >\n    Resign from the Manager Role\n  </Button>\n);\n","import { Button, Icon } from '@/components';\nimport React from 'react';\n\ntype EditRoleButtonProps = {\n  onClick: () => void;\n};\n\nexport const EditRoleButton: React.FC<EditRoleButtonProps> = ({ onClick }) => (\n  <Button\n    leftIcon={<Icon name=\"edit_m\" size={16} />}\n    tertiary\n    size=\"small\"\n    onClick={onClick}\n  >\n    Edit Role\n  </Button>\n);\n","import { Button, Icon } from '@/components';\nimport React from 'react';\n\ntype DisconnectButtonProps = {\n  onClick: () => void;\n};\n\nexport const DisconnectButton: React.FC<DisconnectButtonProps> = ({\n  onClick,\n}) => (\n  <Button\n    leftIcon={<Icon name=\"close_m\" size={16} />}\n    secondary\n    intent=\"negative\"\n    size=\"small\"\n    onClick={onClick}\n  >\n    Disconnect\n  </Button>\n);\n","import { Button, Icon } from '@/components';\nimport React from 'react';\n\ntype CancelInviteButtonProps = {\n  onClick: () => void;\n};\n\nexport const CancelInviteButton: React.FC<CancelInviteButtonProps> = ({\n  onClick,\n}) => (\n  <Button\n    leftIcon={<Icon name=\"close_m\" size={16} />}\n    secondary\n    intent=\"negative\"\n    size=\"small\"\n    onClick={onClick}\n  >\n    Cancel Invite\n  </Button>\n);\n","import { ManagerDetailsBaseHeader } from './ManagerDetailsBaseHeader';\nimport { ResignButton } from './ResignButton';\nimport { EditRoleButton } from './EditRoleButton';\nimport { DisconnectButton } from './DisconnectButton';\nimport { CancelInviteButton } from './CancelInviteButton';\n\nexport const ManagerDetailsHeaderLayout = {\n  BaseHeader: ManagerDetailsBaseHeader,\n  ResignButton,\n  EditRoleButton,\n  DisconnectButton,\n  CancelInviteButton,\n};\n","import { Button, TSpan } from '@/components';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { Radiobox } from '@/components/Radiobox';\nimport { Separator } from '@/components/Separator/Separator';\nimport { useBreakpoints, useToast } from '@/hooks';\nimport { Stack } from '@/layout';\nimport { useState } from 'react';\n\ntype ResignFlowProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onConfirm: (disconnectFromNoum: boolean) => void;\n};\n\nexport function ResignFlow({ isOpen, onClose, onConfirm }: ResignFlowProps) {\n  const [selectedOption, setSelectedOption] = useState<\n    'disconnect' | 'stay-connected'\n  >();\n\n  const { addErrorToast } = useToast();\n\n  const { isMobile } = useBreakpoints();\n\n  const handleConfirm = () => {\n    if (!selectedOption) {\n      addErrorToast('Select one of the options.');\n      return;\n    }\n    onConfirm(selectedOption === 'disconnect');\n  };\n\n  return (\n    <Modal\n      open={isOpen}\n      size={ModalSize.L}\n      isFullScreen={isMobile}\n      onClose={onClose}\n      testId=\"resign-flow-modal\"\n      disableBackdropClick\n    >\n      <ModalHeader topPadding={0}>Resign from the Manager Role</ModalHeader>\n      <ModalBody gap={32}>\n        <TSpan font=\"body-l\" colorToken=\"--text-modal-neutral-default\">\n          Once you decide to resign, you will no longer have access to the\n          management tools and features associated with the Manager role.\n        </TSpan>\n\n        <Stack gap={20} vertical fullWidth padding=\"0 0 16px 0\">\n          <Stack gap={16}>\n            <Radiobox\n              isChecked={selectedOption === 'stay-connected'}\n              onChange={() => setSelectedOption('stay-connected')}\n            />\n            <TSpan\n              font=\"body-l\"\n              colorToken=\"--text-tablecell-header-neutral-highlighted\"\n            >\n              Resign and stay connected as a guest\n            </TSpan>\n          </Stack>\n\n          <Separator fullWidth noMargin />\n\n          <Stack gap={16}>\n            <Radiobox\n              isChecked={selectedOption === 'disconnect'}\n              onChange={() => setSelectedOption('disconnect')}\n            />\n            <TSpan\n              font=\"body-l\"\n              colorToken=\"--text-tablecell-header-neutral-highlighted\"\n            >\n              Resign and disconnect from Noum\n            </TSpan>\n          </Stack>\n        </Stack>\n      </ModalBody>\n\n      <ModalFooter\n        isFullScreen={isMobile}\n        gap={16}\n        flexDirection={isMobile ? 'column' : 'row'}\n      >\n        <Button\n          tertiary\n          size=\"full\"\n          onClick={onClose}\n          data-testid=\"confirm-button\"\n        >\n          Cancel\n        </Button>\n        <Button\n          intent=\"negative\"\n          size=\"full\"\n          softDisabled={!selectedOption}\n          onClick={handleConfirm}\n        >\n          Resign\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n}\n","import { useResignFromNoumCoManagerRoleMutation } from '@/apollo/graphql';\nimport { useToast } from '@/hooks';\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ResignFlow } from '../../components/ResignFlow';\n\ninterface UseResignFlowOptions {\n  noumId?: string;\n  onResign?: () => void;\n}\n\nexport function useResignFlow({ noumId, onResign }: UseResignFlowOptions) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const { addSuccessIconToast, addErrorToast } = useToast();\n  const { t } = useTranslation();\n\n  const [resignFromNoumCoManagerRoleMutation] =\n    useResignFromNoumCoManagerRoleMutation();\n\n  const handleResignFromCoManagerRole = async (disconnectFromNoum: boolean) => {\n    if (!noumId) {\n      return;\n    }\n    try {\n      await resignFromNoumCoManagerRoleMutation({\n        variables: {\n          input: {\n            disconnectFromNoum,\n            noumIDs: [noumId],\n          },\n        },\n      });\n\n      if (disconnectFromNoum) {\n        addSuccessIconToast(\n          t(\n            'You have resigned from the Manger role and disconnected from the Noum.',\n          ),\n        );\n      } else {\n        addSuccessIconToast(t('You have resigned from the Manager role.'));\n      }\n\n      onResign?.();\n    } catch (error) {\n      if (error instanceof Error) {\n        addErrorToast(error.message);\n      }\n    }\n  };\n\n  const resignFromManagerModal = (\n    <ResignFlow\n      isOpen={isOpen}\n      onClose={() => setIsOpen(false)}\n      onConfirm={handleResignFromCoManagerRole}\n    />\n  );\n\n  return {\n    openModal: () => setIsOpen(true),\n    closeModal: () => setIsOpen(false),\n    resignFromManagerModal,\n  };\n}\n","import { useAuth } from '@/features/auth/contexts';\nimport { ManagerDetailsHeaderLayout } from '@/features/noums/components/ManagerDetailsHeader';\nimport { useResignFlow } from '@/features/noums/hooks/manageMembers/useResignFlow';\nimport { useBreakpoints } from '@/hooks';\nimport EllipsisMenu from '@/screens/Chambers/EllipsisMenu';\nimport React from 'react';\nimport { useNoumManagerDetailsProvider } from '../providers/NoumManagerDetailsProvider';\n\ntype ManagerHeaderProps = {\n  onGoBack: () => void;\n};\nexport const ManagerHeader: React.FC<ManagerHeaderProps> = ({ onGoBack }) => {\n  const { noum, member } = useNoumManagerDetailsProvider();\n  const { isMobile } = useBreakpoints();\n  const { user } = useAuth();\n\n  const { openModal, resignFromManagerModal } = useResignFlow({\n    noumId: noum?._id ?? '',\n    onResign: () => null,\n  });\n\n  const isMyAccount = member?.user?._id === user?._id;\n\n  const RightContentMobile = isMyAccount ? (\n    <EllipsisMenu\n      containerWidth=\"125px\"\n      neutral\n      onClick={() => {}}\n      menuOptions={[\n        {\n          key: 'resign',\n          label: 'Resign from the Manager Role',\n          type: 'value',\n          value: 'resign',\n          intent: 'danger',\n          onClick: openModal,\n        },\n      ]}\n      iconColorToken=\"--button-card-neutral-default\"\n    />\n  ) : null;\n\n  return (\n    <>\n      <ManagerDetailsHeaderLayout.BaseHeader\n        user={noum?.uid}\n        member={member}\n        onGoBack={onGoBack}\n        rightContent={\n          isMobile ? (\n            RightContentMobile\n          ) : isMyAccount ? (\n            <ManagerDetailsHeaderLayout.ResignButton onClick={openModal} />\n          ) : null\n        }\n      />\n      {resignFromManagerModal}\n    </>\n  );\n};\n","import { ManagerDetailsHeaderLayout } from '@/features/noums/components/ManagerDetailsHeader';\nimport { useMembersManagerActions } from '@/features/noums/hooks/manageMembers';\nimport React from 'react';\nimport { NoumMemberStatus } from '@/apollo/generated/types';\nimport EllipsisMenu from '@/screens/Chambers/EllipsisMenu';\nimport { cleanList } from '@/utils/list';\nimport { useBreakpoints } from '@/hooks';\nimport { useNoumManagerDetailsProvider } from '../providers/NoumManagerDetailsProvider';\n\ntype NoumOwnerHeaderProps = {\n  onGoBack: () => void;\n};\n\nexport const NoumOwnerHeader: React.FC<NoumOwnerHeaderProps> = ({\n  onGoBack,\n}) => {\n  const { noum, member } = useNoumManagerDetailsProvider();\n  const { isMobile } = useBreakpoints();\n\n  const { openModal, disconnectModalElement, editRoleModalElement } =\n    useMembersManagerActions({\n      noumId: noum?._id ?? '',\n      onDisconnect: () => null,\n      onEditRoles: () => null,\n    });\n\n  const isConnected = member?.status === NoumMemberStatus.Connected;\n  const isInvited = member?.status === NoumMemberStatus.Invited;\n\n  const handleDisconnect = () => {\n    if (!member) return;\n    openModal('disconnect', [member]);\n  };\n\n  const handleEditRole = () => {\n    if (!member) return;\n    openModal('edit-role', [member]);\n  };\n\n  const RightContentMobile = (\n    <EllipsisMenu\n      containerWidth=\"125px\"\n      neutral\n      onClick={() => {}}\n      menuOptions={cleanList([\n        {\n          key: 'edit-role',\n          label: 'Edit Role',\n          type: 'value',\n          value: 'edit-role',\n          onClick: handleEditRole,\n        },\n        isConnected\n          ? {\n              key: 'disconnect',\n              label: 'Disconnect',\n              type: 'value',\n              value: 'disconnect',\n              intent: 'danger',\n              onClick: handleDisconnect,\n            }\n          : undefined,\n        isInvited\n          ? {\n              key: 'cancel-invite',\n              label: 'Cancel Invite',\n              type: 'value',\n              value: 'cancel-invite',\n              intent: 'danger',\n              onClick: () => null,\n            }\n          : undefined,\n      ])}\n      iconColorToken=\"--button-card-neutral-default\"\n    />\n  );\n\n  return (\n    <>\n      <ManagerDetailsHeaderLayout.BaseHeader\n        user={noum?.uid}\n        member={member}\n        onGoBack={onGoBack}\n        rightContent={\n          isMobile ? (\n            RightContentMobile\n          ) : (\n            <>\n              {isConnected ? (\n                <ManagerDetailsHeaderLayout.DisconnectButton\n                  onClick={handleDisconnect}\n                />\n              ) : isInvited ? (\n                <ManagerDetailsHeaderLayout.CancelInviteButton\n                  onClick={() => null}\n                />\n              ) : null}\n              <ManagerDetailsHeaderLayout.EditRoleButton\n                onClick={handleEditRole}\n              />\n            </>\n          )\n        }\n      />\n      {disconnectModalElement}\n      {editRoleModalElement}\n    </>\n  );\n};\n","import routes from '@/constants/routes';\nimport { useNavigateWithOrigin } from '@/hooks/navigation';\nimport React from 'react';\nimport { generatePath } from 'react-router';\nimport { useNoumManagerDetailsProvider } from '../providers/NoumManagerDetailsProvider';\nimport { ManagerHeader } from './ManagerHeader';\nimport { NoumOwnerHeader } from './NoumOwnerHeader';\n\ntype DetailsHeaderProps = {};\n\nexport const DetailsHeader: React.FC<DetailsHeaderProps> = () => {\n  const { goBackToOrigin } = useNavigateWithOrigin();\n  const { noum, member } = useNoumManagerDetailsProvider();\n  const noumId = noum?._id ?? '';\n\n  const handleGoBack = () => {\n    goBackToOrigin({\n      fallbackUrl: generatePath(routes.NOUM, { id: noumId }),\n    });\n  };\n\n  const isOwner = noum?.uid?._id === member?.user?._id;\n\n  return isOwner ? (\n    <NoumOwnerHeader onGoBack={handleGoBack} />\n  ) : (\n    <ManagerHeader onGoBack={handleGoBack} />\n  );\n};\n","import { Card } from '@/components';\nimport styled from 'styled-components';\n\nexport const CardStyled = styled(Card)`\n  padding: 24px;\n  width: 100%;\n  overflow: visible;\n`;\n","import { TSpan } from '@/components';\nimport { mediaSizes } from '@/constants/devices';\nimport { Stack } from '@/layout';\nimport styled from 'styled-components';\n\nconst ColumnsWrapper = styled.div`\n  display: grid;\n  grid-template-columns: auto auto auto auto;\n  width: 100%;\n  grid-gap: 8px;\n\n  @media (max-width: ${mediaSizes.TABLET_MAX}) {\n    grid-template-columns: auto auto;\n  }\n\n  @media (max-width: ${mediaSizes.MOBILE_L_MAX}) {\n    grid-template-columns: auto;\n    grid-gap: 24px;\n  }\n`;\n\nconst ColumnSection = styled(Stack).attrs({\n  vertical: true,\n  fullWidth: true,\n  gap: 8,\n})``;\n\nconst Row = styled(Stack).attrs({\n  align: 'center',\n  fullWidth: true,\n  gap: 8,\n})``;\n\nconst RowTitle = styled(TSpan).attrs({\n  font: 'body-m',\n  colorToken: '--text-card-neutral-default',\n})``;\n\nexport default {\n  ColumnSection,\n  Row,\n  RowTitle,\n  ColumnsWrapper,\n};\n","import { TSpan } from '@/components';\nimport { Avatar } from '@/components/Avatar/Avatar';\nimport { AvatarSize } from '@/components/Avatar/Avatar/types';\nimport { MemberStatusTag } from '@/features/noums/components/MemberStatusTag';\nimport { Stack } from '@/layout';\nimport React from 'react';\nimport { format } from 'date-fns';\nimport { useNoumManagerDetailsProvider } from '../providers/NoumManagerDetailsProvider';\nimport { CardStyled } from '../styles';\nimport S from './styles';\n\ntype ManagerDetailsSectionProps = {};\n\nexport const ManagerDetailsSection: React.FC<\n  ManagerDetailsSectionProps\n> = () => {\n  const { noum, member } = useNoumManagerDetailsProvider();\n\n  if (!noum || !member) return null;\n\n  return (\n    <CardStyled>\n      <Stack vertical gap={16}>\n        <TSpan font=\"heading-xs-bold\">Manager Details</TSpan>\n\n        <S.ColumnsWrapper>\n          <S.ColumnSection>\n            <S.RowTitle>Noum:</S.RowTitle>\n\n            <S.Row>\n              <Avatar url={noum.profileImage} size={AvatarSize.M} />\n              <TSpan\n                font=\"body-m-bold\"\n                colorToken=\"--text-input-neutral-filled\"\n              >\n                {noum.name}\n              </TSpan>\n            </S.Row>\n          </S.ColumnSection>\n\n          <S.ColumnSection>\n            <S.RowTitle>Noum Wallet:</S.RowTitle>\n\n            <S.Row>\n              <TSpan\n                font=\"body-m-bold\"\n                colorToken=\"--text-input-neutral-filled\"\n              >\n                Daily Limit: $500.00 / 1.000,00\n              </TSpan>\n            </S.Row>\n          </S.ColumnSection>\n\n          <S.ColumnSection>\n            <S.RowTitle>Status:</S.RowTitle>\n\n            <S.Row>\n              <MemberStatusTag member={member} />\n            </S.Row>\n          </S.ColumnSection>\n\n          <S.ColumnSection>\n            <S.RowTitle>Connected:</S.RowTitle>\n\n            <S.Row>\n              <TSpan\n                font=\"body-m-bold\"\n                colorToken=\"--text-input-neutral-filled\"\n              >\n                {member.connectedAt\n                  ? format(new Date(member.connectedAt), 'MM/dd/yyyy, hh:mm a')\n                  : '-'}\n              </TSpan>\n            </S.Row>\n          </S.ColumnSection>\n        </S.ColumnsWrapper>\n      </Stack>\n    </CardStyled>\n  );\n};\n","import { type DropdownValueType } from '@/components/Dropdown';\nimport { type DateRange } from 'react-day-picker';\nimport { addMonths, addWeeks, format, subMonths, subWeeks } from 'date-fns';\nimport { type Maybe } from '@/common/types';\nimport { type StatsDateType } from './types';\n\nconst dropdownOptions: DropdownValueType<StatsDateType, StatsDateType>[] = [\n  {\n    label: 'Weekly',\n    key: 'weekly',\n    type: 'value',\n    value: 'weekly',\n  },\n  {\n    label: 'Monthly',\n    key: 'monthly',\n    type: 'value',\n    value: 'monthly',\n  },\n  {\n    label: 'Quarterly',\n    key: 'quarterly',\n    type: 'value',\n    value: 'quarterly',\n  },\n  {\n    label: 'Custom',\n    key: 'custom',\n    type: 'value',\n    value: 'custom',\n  },\n];\n\nconst formatShortDate = (date?: Date) => (date ? format(date, 'MMM d') : '');\n\nconst formatDateRange = (dateRange: Maybe<DateRange>) =>\n  dateRange\n    ? `${formatShortDate(dateRange.from)} - ${formatShortDate(dateRange.to)}`\n    : '';\n\nconst getPrevDate = (dateRange: Maybe<DateRange>, type: StatsDateType) => {\n  if (!dateRange?.from || !dateRange.to) return null;\n\n  switch (type) {\n    case 'monthly':\n      return {\n        from: subMonths(dateRange.from, 1),\n        to: dateRange.from,\n      };\n    case 'weekly':\n      return {\n        from: subWeeks(dateRange.from, 1),\n        to: dateRange.from,\n      };\n    case 'quarterly':\n      return {\n        from: subMonths(dateRange.from, 3),\n        to: dateRange.from,\n      };\n    default:\n      return null;\n  }\n};\n\nconst getNextDate = (dateRange: Maybe<DateRange>, type: StatsDateType) => {\n  if (!dateRange?.from || !dateRange.to) return null;\n\n  switch (type) {\n    case 'monthly':\n      return {\n        from: dateRange.to,\n        to: addMonths(dateRange.to, 1),\n      };\n    case 'weekly':\n      return {\n        from: dateRange.to,\n        to: addWeeks(dateRange.to, 1),\n      };\n    case 'quarterly':\n      return {\n        from: dateRange.to,\n        to: addMonths(dateRange.to, 3),\n      };\n    default:\n      return null;\n  }\n};\n\nexport const MembersStatsDateUtils = {\n  dropdownOptions,\n  formatDateRange,\n  getNextDate,\n  getPrevDate,\n};\n","import { Button, Icon } from '@/components';\nimport { DatePicker } from '@/components/DatePicker';\nimport { Dropdown, type DropdownTargetProps } from '@/components/Dropdown';\nimport { TextField } from '@/components/TextField';\nimport { Stack } from '@/layout';\nimport React, { useMemo, useState } from 'react';\nimport { type DateRange } from 'react-day-picker';\nimport { type Maybe } from '@/common/types';\nimport { useBreakpoints } from '@/hooks';\nimport { type StatsDateType } from './types';\nimport { MembersStatsDateUtils } from './utils';\n\nexport const MembersStatsDate: React.FC = () => {\n  const { isMobile } = useBreakpoints();\n  const [selectedType, setSelectedType] = useState<StatsDateType>('weekly');\n  const [selectedDate, setSelectedDate] = useState<Maybe<DateRange>>(\n    () =>\n      MembersStatsDateUtils.getPrevDate(\n        {\n          from: new Date(),\n          to: new Date(),\n        },\n        selectedType,\n      )!,\n  );\n\n  const selectedOption = useMemo(\n    () =>\n      MembersStatsDateUtils.dropdownOptions.find(\n        (option) => option.value === selectedType,\n      ),\n    [selectedType],\n  );\n\n  const handleSelectType = (value: StatsDateType) => {\n    if (value === 'custom') {\n      setSelectedDate(null);\n    } else {\n      setSelectedDate(\n        MembersStatsDateUtils.getPrevDate(\n          {\n            from: new Date(),\n            to: new Date(),\n          },\n          value,\n        ),\n      );\n    }\n\n    setSelectedType(value);\n  };\n\n  const handlePressLeft = () => {\n    setSelectedDate(\n      MembersStatsDateUtils.getPrevDate(selectedDate, selectedType),\n    );\n  };\n\n  const handlePressRight = () => {\n    setSelectedDate(\n      MembersStatsDateUtils.getNextDate(selectedDate, selectedType),\n    );\n  };\n\n  return (\n    <Stack gap={16} vertical={isMobile} fullWidth={isMobile}>\n      <Stack fullWidth={isMobile}>\n        <Dropdown\n          hideIcons\n          containerWidth=\"280px\"\n          onSelectOption={(option) => handleSelectType(option.value)}\n          options={MembersStatsDateUtils.dropdownOptions}\n          renderContainerFromBottom={isMobile}\n        >\n          {({ targetRef, toggle }: DropdownTargetProps<HTMLButtonElement>) => (\n            <Button\n              ref={targetRef}\n              size={isMobile ? 'full_small' : 'small'}\n              tertiary\n              rightIcon={\n                <Icon\n                  name=\"chevron_down_m\"\n                  size={16}\n                  color=\"--icon-input-neutral-default\"\n                />\n              }\n              onClick={toggle}\n            >\n              {selectedOption?.label}\n            </Button>\n          )}\n        </Dropdown>\n      </Stack>\n\n      <Stack fullWidth={isMobile}>\n        {selectedType !== 'custom' ? (\n          <Stack gap={8} fullWidth={isMobile}>\n            <Button\n              size=\"small\"\n              icon={\n                <Icon\n                  name=\"chevron_left_m\"\n                  size={16}\n                  color=\"--icon-button-neutral-default\"\n                />\n              }\n              onClick={handlePressLeft}\n            />\n\n            <TextField\n              value={MembersStatsDateUtils.formatDateRange(selectedDate)}\n              inputSize=\"small\"\n              readOnly\n            />\n\n            <Button\n              size=\"small\"\n              icon={\n                <Icon\n                  name=\"chevron_right_m\"\n                  size={16}\n                  color=\"--icon-button-neutral-default\"\n                />\n              }\n              onClick={handlePressRight}\n            />\n          </Stack>\n        ) : (\n          <DatePicker\n            minWidth=\"240px\"\n            minPopperWidth=\"320px\"\n            size=\"small\"\n            placement=\"bottom-end\"\n            fullSize={isMobile}\n            label=\"\"\n            placeholder=\"Select Date\"\n            onChangeRange={(value) => setSelectedDate(value)}\n            rangeValue={selectedDate ?? undefined}\n            mode=\"range\"\n          />\n        )}\n      </Stack>\n    </Stack>\n  );\n};\n","import { TSpan } from '@/components';\nimport { Stack } from '@/layout';\nimport styled from 'styled-components';\n\nconst Container = styled(Stack).attrs({\n  vertical: true,\n  gap: 8,\n})`\n  border-radius: 16px;\n  border: 1px solid var(--border-card-neutral-default);\n  background: var(--bg-card-neutral-alt-default);\n  padding: 24px;\n`;\n\nconst ValueText = styled(TSpan).attrs({\n  font: 'heading-xs-bold',\n  colorToken: '--text-card-neutral-highlighted',\n})``;\n\nexport default {\n  Container,\n  ValueText,\n};\n","import { Tag } from '@/components';\nimport React from 'react';\nimport S from './styles';\n\ntype StatsCardProps = {\n  label: string;\n  value: string;\n};\nexport const StatsCard: React.FC<StatsCardProps> = ({ label, value }) => (\n  <S.Container>\n    <Tag tertiary size=\"small\">\n      {label}\n    </Tag>\n    <S.ValueText>{value}</S.ValueText>\n  </S.Container>\n);\n","import { mediaSizes } from '@/constants/devices';\nimport styled from 'styled-components';\n\nconst StatsGrid = styled.div`\n  display: grid;\n  grid-template-columns: auto auto auto auto auto;\n  width: 100%;\n  grid-gap: 16px;\n\n  @media (max-width: ${mediaSizes.TABLET_MAX}) {\n    grid-template-columns: auto auto auto;\n  }\n\n  @media (max-width: ${mediaSizes.MOBILE_L_MAX}) {\n    grid-template-columns: auto auto;\n  }\n`;\n\nexport default {\n  StatsGrid,\n};\n","import { TSpan } from '@/components';\nimport { MembersStatsDate } from '@/features/noums/components/MembersStatsDate';\nimport { StatsCard } from '@/features/noums/components/StatsCard/StatsCard';\nimport { Stack } from '@/layout';\nimport React from 'react';\nimport { useBreakpoints } from '@/hooks';\nimport S from './styles';\n\nexport const UserPerformanceSection: React.FC = () => {\n  const { isMobile } = useBreakpoints();\n\n  return (\n    <Stack fullWidth vertical gap={16}>\n      <Stack justify=\"space-between\" fullWidth gap={16} vertical={isMobile}>\n        <TSpan font=\"heading-xs-bold\">Manager Performance</TSpan>\n\n        <MembersStatsDate />\n      </Stack>\n\n      <S.StatsGrid>\n        <StatsCard label=\"Posts Posted\" value=\"1234\" />\n        <StatsCard label=\"Messages Sent\" value=\"1234\" />\n        <StatsCard label=\"Members Invited\" value=\"1234\" />\n        <StatsCard label=\"Transactions\" value=\"1234\" />\n        <StatsCard label=\"Events Hosted\" value=\"1234\" />\n      </S.StatsGrid>\n    </Stack>\n  );\n};\n","import { Spinner } from '@/components';\nimport {\n  ActivityLogs,\n  type ActivityLogItem,\n} from '@/features/noums/components/ActivityLogs';\nimport { Stack } from '@/layout';\nimport { FullScreenLayout } from '@/layout/FullScreenLayout';\nimport { DetailsHeader } from './DetailsHeader';\nimport { ManagerDetailsSection } from './ManagerDetailsSection';\nimport { NoumsAndRoles } from './NoumsAndRoles';\nimport { UserPerformanceSection } from './UserPerformanceSection';\nimport {\n  NoumManagerDetailsProvider,\n  useNoumManagerDetailsProvider,\n} from './providers/NoumManagerDetailsProvider';\nimport { CardStyled } from './styles';\n\nconst activityLogsMock: ActivityLogItem[] = [\n  {\n    id: '1',\n    createdAt: new Date().toISOString(),\n    sourceUser: 'John Doe',\n    targetUser: 'Richard Roe',\n    type: 'message-sent',\n  },\n  {\n    id: '2',\n    createdAt: new Date().toISOString(),\n    user: 'Alex Doe',\n    eventName: 'Event Name',\n    type: 'event-hosted',\n  },\n  {\n    id: '3',\n    createdAt: new Date().toISOString(),\n    user: 'Michelle Doe',\n    type: 'post-added',\n  },\n  {\n    id: '4',\n    createdAt: new Date().toISOString(),\n    user: 'Alex Doe',\n    eventName: 'Event Name',\n    type: 'event-created',\n  },\n  {\n    id: '5',\n    createdAt: new Date().toISOString(),\n    user: 'Michelle Doe',\n    type: 'manager-invite-accepted',\n  },\n  {\n    id: '6',\n    createdAt: new Date().toISOString(),\n    sourceUser: 'Michelle Doe',\n    targetUser: 'Richard Roe',\n    type: 'manager-invited',\n  },\n  {\n    id: '7',\n    createdAt: new Date().toISOString(),\n    user: 'Michelle Doe',\n    amount: '$500.00',\n    invoiceNumber: '455123',\n    type: 'transaction',\n  },\n  {\n    id: '8',\n    createdAt: new Date().toISOString(),\n    sourceUser: 'Michelle Doe',\n    targetUser: 'Richard Roe',\n    type: 'member-invited',\n  },\n];\n\nconst NoumManagerDetailsScreen = () => {\n  const { loading, noum, member } = useNoumManagerDetailsProvider();\n\n  if (loading && (!noum || !member)) {\n    return <Spinner />;\n  }\n\n  return (\n    <FullScreenLayout responsiveMain navBarContent={<DetailsHeader />}>\n      <Stack vertical gap={16} fullWidth>\n        {/* TODO: will be implemented along with global members manager */}\n        {false && <NoumsAndRoles noum={noum} />}\n\n        <ManagerDetailsSection />\n\n        <CardStyled>\n          <Stack fullWidth vertical gap={32}>\n            <UserPerformanceSection />\n            <ActivityLogs activityLogs={activityLogsMock} />\n          </Stack>\n        </CardStyled>\n      </Stack>\n    </FullScreenLayout>\n  );\n};\n\nexport default () => (\n  <NoumManagerDetailsProvider>\n    <NoumManagerDetailsScreen />\n  </NoumManagerDetailsProvider>\n);\n"],"names":["BodyHighlighted","styled","TSpan","attrs","font","colorToken","S$3","TranslatedBody","i18nKey","values","jsx","Trans","b","S","getTranslationByType","item","type","key","user","eventName","sourceUser","targetUser","amount","invoiceNumber","filterDropdownOptions","label","value","ActivityLogsUtils","ActivityLogsItem","translation","ActivityLog","createdAt","ActivityLogs","activityLogs","t","useTranslation","isMobile","useBreakpoints","length","jsxs","Stack","Dropdown","targetRef","toggle","Button","Icon","map","id","NoumManagerDetailsContext","createContext","member","undefined","loading","noum","NoumManagerDetailsProvider","children","memberId","useParams","space","loadingSpace","useNoumDetails","data","loadingMember","useNoumMemberQuery","variables","useMemo","noumMember","useNoumManagerDetailsProvider","context","useContext","Error","ManagerDetailsBaseHeader","rightContent","onGoBack","currentUser","useAuth","Avatar","profile","profilePicture","UserUtil","renderFullName","_id","MemberRoleTag","ResignButton","onClick","EditRoleButton","DisconnectButton","CancelInviteButton","ManagerDetailsHeaderLayout","BaseHeader","ResignFlow","isOpen","onClose","onConfirm","selectedOption","setSelectedOption","useState","addErrorToast","useToast","handleConfirm","Modal","ModalSize","L","ModalHeader","ModalBody","Radiobox","Separator","ModalFooter","useResignFlow","noumId","onResign","setIsOpen","addSuccessIconToast","resignFromNoumCoManagerRoleMutation","useResignFromNoumCoManagerRoleMutation","openModal","closeModal","resignFromManagerModal","disconnectFromNoum","input","noumIDs","error","message","ManagerHeader","isMyAccount","RightContentMobile","EllipsisMenu","intent","Fragment","uid","NoumOwnerHeader","disconnectModalElement","editRoleModalElement","useMembersManagerActions","onDisconnect","onEditRoles","isConnected","status","NoumMemberStatus","Connected","isInvited","Invited","handleDisconnect","handleEditRole","cleanList","DetailsHeader","goBackToOrigin","useNavigateWithOrigin","handleGoBack","fallbackUrl","generatePath","routes","NOUM","CardStyled","Card","ColumnsWrapper","div","mediaSizes","TABLET_MAX","MOBILE_L_MAX","ColumnSection","vertical","fullWidth","gap","Row","align","RowTitle","S$2","ManagerDetailsSection","profileImage","AvatarSize","M","name","MemberStatusTag","connectedAt","format","Date","dropdownOptions","formatShortDate","date","formatDateRange","dateRange","from","to","getPrevDate","subMonths","subWeeks","getNextDate","addMonths","addWeeks","MembersStatsDateUtils","MembersStatsDate","selectedType","setSelectedType","selectedDate","setSelectedDate","find","option","handleSelectType","handlePressLeft","handlePressRight","TextField","DatePicker","Container","ValueText","S$1","StatsCard","Tag","StatsGrid","UserPerformanceSection","activityLogsMock","toISOString","NoumManagerDetailsScreen","Spinner","FullScreenLayout","NoumManagerDetailsScreen$1"],"mappings":"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"}