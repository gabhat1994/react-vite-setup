{"version":3,"file":"useCampaignReport-8e968a8c.js","sources":["../../src/screens/Campaigns/CampaignReport/ReportSummary.tsx","../../src/screens/Campaigns/CampaignReport/useCampaignReport.ts"],"sourcesContent":["import { Spacer, Stack } from '@/layout';\nimport { Tag } from '@/components/Tag';\nimport { type CampaignReportFragment } from '@/apollo/graphql';\nimport { TSpan } from '@/components/Typography';\n\nimport Tooltip from '@/components/Tooltip';\n\nimport { Card } from '../components/Card/Card';\nimport { Layout } from '../components/Layout/Layout';\nimport { Utils } from '../utils';\n\ntype ReportSummaryProps = {\n  title: string;\n  campaignCreatedAt: string;\n  adId: string;\n  isMobile: boolean;\n  isTablet: boolean;\n} & Required<Pick<CampaignReportFragment, 'metrics' | 'createdAt'>>;\n\nexport function ReportSummary({\n  metrics,\n  createdAt,\n  title,\n  campaignCreatedAt,\n  adId,\n  isMobile,\n  isTablet,\n}: ReportSummaryProps) {\n  return (\n    <Layout.Card>\n      <Stack fullWidth justify=\"space-between\">\n        <Card.Title>Summary</Card.Title>\n        <Stack gap={8} align=\"center\">\n          <Card.Label>{campaignCreatedAt}</Card.Label>\n          <Card.Label>\n            ID:{' '}\n            <TSpan colorToken=\"--text-card-neutral-highlighted\">\n              {Utils.appendAdPrefix(adId ?? '')}\n            </TSpan>\n          </Card.Label>\n        </Stack>\n      </Stack>\n      <Spacer height={12} />\n      <Stack gap={10}>\n        <Card.Label>Campaign:</Card.Label>\n        <Card.ValueBold>{title}</Card.ValueBold>\n      </Stack>\n      <Card.Divider />\n\n      <Stack align=\"center\" wrap=\"wrap\" gap={32}>\n        <Card.CampaignMetrics label=\"Report Date:\" isBold>\n          {createdAt}\n        </Card.CampaignMetrics>\n        <Card.CampaignMetrics label=\"Cost:\">\n          <Tag secondary>{metrics?.cost} USD</Tag>\n        </Card.CampaignMetrics>\n        <Card.CampaignMetrics\n          label=\"CTR:\"\n          isBold\n          right={\n            <Tooltip\n              top={-90}\n              left={-20}\n              width={240}\n              iconColor=\"--icon-card-neutral-highlighted\"\n            >\n              <TSpan\n                font=\"footnote\"\n                colorToken=\"--text-tooltip-neutral-alt-default\"\n              >\n                A metric that measures the ratio of clicks on an ad to the total\n                number of impressions it receives.\n              </TSpan>\n            </Tooltip>\n          }\n        >\n          {metrics?.ctr} %\n        </Card.CampaignMetrics>\n        <Card.CampaignMetrics\n          label=\"Avg. CPC:\"\n          isBold\n          right={\n            <Tooltip\n              top={-90}\n              left={isMobile ? -180 : isTablet ? -200 : -20}\n              width={240}\n              iconColor=\"--icon-card-neutral-highlighted\"\n            >\n              <TSpan\n                font=\"footnote\"\n                colorToken=\"--text-tooltip-neutral-alt-default\"\n              >\n                A metric that measures the average amount of money spent for\n                each click on an ad.\n              </TSpan>\n            </Tooltip>\n          }\n        >\n          {metrics?.avgCPC} USD\n        </Card.CampaignMetrics>\n        <Card.CampaignMetrics\n          label=\"Clicks:\"\n          isBold\n          right={\n            <Tooltip\n              top={-70}\n              left={-20}\n              width={220}\n              iconColor=\"--icon-card-neutral-highlighted\"\n            >\n              <TSpan\n                font=\"footnote\"\n                colorToken=\"--text-tooltip-neutral-alt-default\"\n              >\n                A total number of times users click on an ad.\n              </TSpan>\n            </Tooltip>\n          }\n        >\n          {metrics?.clicks}\n        </Card.CampaignMetrics>\n        <Card.CampaignMetrics\n          label=\"Impressions:\"\n          isBold\n          right={\n            <Tooltip\n              top={-90}\n              left={isMobile ? -180 : isTablet ? -200 : -20}\n              width={240}\n              iconColor=\"--icon-card-neutral-highlighted\"\n            >\n              <TSpan\n                font=\"footnote\"\n                colorToken=\"--text-tooltip-neutral-alt-default\"\n              >\n                Represents the number of times a website appears in the search\n                engine results\n              </TSpan>\n            </Tooltip>\n          }\n        >\n          {metrics?.impressions}\n        </Card.CampaignMetrics>\n      </Stack>\n    </Layout.Card>\n  );\n}\n","import { useParams } from 'react-router';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { useCampaignReportQuery } from '@/apollo/graphql';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useError } from '@/hooks';\nimport { Utils } from '../utils';\n\ntype Params = {\n  id?: string;\n};\n\ntype UseCampaignReportProps = {\n  campaignIdFromOps?: string;\n  reportIdFromOps?: string;\n};\n\nexport const useCampaignReport = ({\n  campaignIdFromOps,\n  reportIdFromOps,\n}: UseCampaignReportProps) => {\n  const { isOpsUser } = useAuth();\n  const params = useParams<Params>();\n  const logger = useError();\n  const [searchParams] = useSearchParams();\n\n  const campaignId = isOpsUser\n    ? campaignIdFromOps\n    : searchParams.get('campaignId');\n\n  const reportId = isOpsUser ? reportIdFromOps : params.id;\n\n  const reportSummary = useCampaignReportQuery({\n    skip: !campaignId || !reportId,\n    variables: {\n      campaignId: campaignId ?? '',\n      reportId: reportId ?? '',\n    },\n\n    onError: (error) => logger.logError(error, 'useCampaignReportQuery', true),\n  });\n\n  const report = reportSummary?.data?.report\n    ? Utils.cleanReport(reportSummary?.data?.report)\n    : null;\n\n  return {\n    report,\n    campaign: {\n      title: reportSummary?.data?.campaign?.title ?? '',\n      createdBy: reportSummary?.data?.campaign?.createdAt\n        ? Utils.formatDate(reportSummary?.data?.campaign?.createdAt)\n        : '-',\n      adId: reportSummary?.data?.campaign?.adId,\n      campaignCreatedBy:\n        reportSummary?.data?.campaign?.createdBy?.firstName ?? '',\n    },\n  };\n};\n"],"names":["ReportSummary","metrics","createdAt","title","campaignCreatedAt","adId","isMobile","isTablet","jsxs","Layout","Stack","jsx","Card","TSpan","Utils","appendAdPrefix","Spacer","Tag","cost","Tooltip","ctr","avgCPC","clicks","impressions","useCampaignReport","campaignIdFromOps","reportIdFromOps","isOpsUser","useAuth","params","useParams","logger","useError","searchParams","useSearchParams","campaignId","get","reportId","id","reportSummary","useCampaignReportQuery","skip","variables","onError","logError","error","report","data","cleanReport","campaign","createdBy","formatDate","campaignCreatedBy","firstName"],"mappings":"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"}