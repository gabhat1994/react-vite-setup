{"version":3,"file":"contactNoumConnection-819cdc27.js","sources":["../../src/features/noumContacts/hooks/contactNoumConnection.ts"],"sourcesContent":["import { useCallback } from 'react';\nimport {\n  useGetContactConnectionWithNoumLazyQuery,\n  useGetSpaceByIdLazyQuery,\n} from '@/apollo/graphql';\nimport {\n  ConnectionRequestTypeEnum,\n  ProjectChamberType,\n} from '@/apollo/generated/types';\n\nfunction useContactNoumConnection() {\n  const [getContactNoumConnection] = useGetContactConnectionWithNoumLazyQuery();\n  const [getSpaceById] = useGetSpaceByIdLazyQuery();\n\n  const checkConnectedWithNoum = useCallback(\n    async (noumId: string, contactId: string) => {\n      const getNoumConnectionRes = await getContactNoumConnection({\n        variables: {\n          noumId,\n          contactId,\n        },\n      });\n      return (\n        getNoumConnectionRes.data?.getContactConnectionWithNoum?.status ===\n        ConnectionRequestTypeEnum.Approved\n      );\n    },\n    [getContactNoumConnection],\n  );\n\n  const checkSecretNoum = useCallback(\n    async (noumId: string, projectType?: ProjectChamberType) => {\n      if (projectType === ProjectChamberType.Secret) {\n        return true;\n      }\n\n      const spaceData = await getSpaceById({\n        variables: {\n          id: noumId,\n        },\n      });\n      return (\n        (spaceData.data?.getSpaceById?.projectType as ProjectChamberType) ===\n        ProjectChamberType.Secret\n      );\n    },\n    [getSpaceById],\n  );\n\n  const checkConnectionWithSecretNoum = useCallback(\n    async (\n      noumId: string,\n      contactId: string,\n      projectType?: ProjectChamberType,\n    ) => ({\n      isConnected: await checkConnectedWithNoum(noumId, contactId),\n      isSecretNoum: await checkSecretNoum(noumId, projectType),\n    }),\n    [checkConnectedWithNoum, checkSecretNoum],\n  );\n\n  return [checkConnectionWithSecretNoum];\n}\n\nexport default useContactNoumConnection;\n"],"names":["useContactNoumConnection","getContactNoumConnection","useGetContactConnectionWithNoumLazyQuery","getSpaceById","useGetSpaceByIdLazyQuery","checkConnectedWithNoum","useCallback","noumId","contactId","getNoumConnectionRes","variables","data","getContactConnectionWithNoum","status","ConnectionRequestTypeEnum","Approved","checkSecretNoum","projectType","ProjectChamberType","Secret","spaceData","id","isConnected","isSecretNoum"],"mappings":"0GAUA,SAASA,GAA2B,CAC5B,KAAA,CAACC,CAAwB,EAAIC,IAC7B,CAACC,CAAY,EAAIC,IAEjBC,EAAyBC,EAAAA,YAC7B,MAAOC,EAAgBC,IAAsB,SAO3C,QACEC,GAAAA,GAP2B,MAAMR,EAAyB,CAC1DS,UAAW,CACTH,OAAAA,EACAC,UAAAA,CACF,CAAA,CACD,GAEsBG,OAArBF,YAAAA,EAA2BG,+BAA3BH,YAAAA,EAAyDI,UACzDC,EAA0BC,QAAAA,EAG9B,CAACd,CAAwB,CAAC,EAGtBe,EAAkBV,EAAAA,YACtB,MAAOC,EAAgBU,IAAqC,SACtDA,OAAAA,IAAgBC,EAAmBC,OAC9B,KASNC,GAAAA,GANe,MAAMjB,EAAa,CACnCO,UAAW,CACTW,GAAId,CACN,CAAA,CACD,GAEYI,OAAVS,YAAAA,EAAgBjB,eAAhBiB,YAAAA,EAA8BH,eAC/BC,EAAmBC,MAAAA,EAGvB,CAAChB,CAAY,CAAC,EAehB,MAAO,CAZ+BG,EAAAA,YACpC,MACEC,EACAC,EACAS,KACI,CACJK,YAAa,MAAMjB,EAAuBE,EAAQC,CAAS,EAC3De,aAAc,MAAMP,EAAgBT,EAAQU,CAAW,CAEzD,GAAA,CAACZ,EAAwBW,CAAe,CAAC,CAGN,CACvC"}