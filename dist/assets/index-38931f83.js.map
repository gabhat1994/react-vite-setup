{"version":3,"file":"index-38931f83.js","sources":["../../src/screens/Chamber/ViewChamber/NoumLeftSideBar.tsx","../../src/layout/ResponsiveContainer/styles.ts","../../src/layout/ResponsiveContainer/index.tsx","../../src/layout/SinglePageLayout/styles.ts","../../src/layout/SinglePageLayout/index.tsx"],"sourcesContent":["import { useMemo, type FC } from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router';\nimport { StickyContainer } from '@/components/StickyContainer';\nimport { SideNav } from '@/components/SideNav';\nimport {\n  NoumSideNavItems,\n  SinglePostSideNavBar,\n} from '@/constants/sideNavItems';\nimport { useWindowDimensions } from '@/hooks';\nimport { breakpoints } from '@/constants/devices';\nimport { type SideNavItemProps } from '@/components/SideNav/SideNavItem/types';\nimport { useSearchParams } from 'react-router-dom';\nimport { useNoumDetails } from '@/features/noums/hooks/noums';\nimport { LeftSideBarContainer } from './styles';\n\nexport const NoumLeftSideBar: FC<{ loading?: boolean }> = ({ loading }) => {\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const [searchParams] = useSearchParams();\n  const { width } = useWindowDimensions();\n  const isTablet = useMemo(() => width <= breakpoints.TABLET_L, [width]);\n  const { pathname } = useLocation();\n  const isSinglePost = useMemo(() => pathname.startsWith('/post/'), [pathname]);\n  const noumId = searchParams.get('noumId') ?? '';\n  const { space } = useNoumDetails(isSinglePost ? noumId : id!);\n\n  const PostNoumSideNavItems: SideNavItemProps[] = [\n    {\n      icon: 'arrow_left_m',\n      label: `${space?.name} All Posts`,\n      id: '1',\n      value: 'back',\n      to: '#',\n      disabled: false,\n    },\n  ];\n\n  return (\n    <StickyContainer>\n      <LeftSideBarContainer noumEditor2>\n        <SideNav\n          onNavChange={(value) => {\n            if (value === 'back') {\n              navigate(-1);\n            } else {\n              navigate(value);\n            }\n          }}\n          navItems={\n            !isTablet\n              ? NoumSideNavItems\n              : isSinglePost\n              ? SinglePostSideNavBar\n              : PostNoumSideNavItems\n          }\n          activeNavValue=\"\"\n          isNoumSideBar\n          loading={loading}\n        />\n      </LeftSideBarContainer>\n    </StickyContainer>\n  );\n};\n","import styled from 'styled-components';\nimport { devices, mediaSizes } from '@/constants/devices';\n\nconst Container = styled.div<{ hasPadding: boolean }>`\n  box-sizing: border-box;\n  width: 100%;\n  max-width: 100%;\n  margin: 0 auto;\n  padding: 0;\n\n  @media ${devices.TABLET} {\n    ${({ hasPadding }) => hasPadding && `padding: 0 16px;`}\n  }\n\n  @media ${devices.LAPTOP} {\n    ${({ hasPadding }) => hasPadding && `padding: 0 40px;`}\n  }\n\n  @media ${devices.LAPTOP_L} {\n    width: ${mediaSizes.LAPTOP_L_MIN};\n  }\n`;\n\nexport default {\n  Container,\n};\n","import React, { type HTMLAttributes } from 'react';\nimport S from './styles';\n\ninterface ResponsiveContainerProps extends HTMLAttributes<HTMLDivElement> {\n  children: React.ReactNode;\n  noPadding?: boolean;\n}\n\nexport function ResponsiveContainer({\n  children,\n  noPadding = false,\n  ...divProps\n}: ResponsiveContainerProps) {\n  return (\n    <S.Container hasPadding={!noPadding} {...divProps}>\n      {children}\n    </S.Container>\n  );\n}\n","import styled from 'styled-components';\nimport { devices, mediaSizes } from '@/constants/devices';\nimport { ResponsiveContainer } from '../ResponsiveContainer';\nimport { Stack } from '../Stack';\n\nexport const Container = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: var(--bg-body-neutral-alt-highlighted);\n`;\n\nexport const Main = styled.div`\n  display: grid;\n  justify-content: center;\n  gap: 0;\n\n  @media ${devices.MOBILE_S} {\n    padding: 0;\n  }\n\n  @media ${devices.LAPTOP} {\n    padding: 24px 40px 55px;\n  }\n  @media (max-width: ${mediaSizes.TABLET_MAX}) {\n    padding-top: 48px;\n  }\n\n  @media (min-width: ${mediaSizes.LAPTOP_MIN}) {\n    grid-template-columns: auto 783px;\n    grid-column-gap: 0;\n  }\n  @media (max-width: ${mediaSizes.TABLET_MAX}) and (min-width: ${mediaSizes.MOBILE_S_MIN}) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst FullHeightMain = styled(Stack).attrs(() => ({\n  grow: 1,\n  vertical: true,\n  align: 'stretch',\n  justify: 'stretch',\n}))`\n  height: 100%;\n  overflow-y: hidden;\n`;\n\nconst ResponsiveMain = styled(ResponsiveContainer)`\n  padding: 16px 0 32px;\n\n  @media ${devices.TABLET} {\n    padding-left: 16px;\n    padding-right: 16px;\n  }\n\n  @media ${devices.LAPTOP} {\n    padding-left: 40px;\n    padding-right: 40px;\n  }\n`;\n\nexport default {\n  Container,\n  Main,\n  FullHeightMain,\n  ResponsiveMain,\n};\n","import React, { useMemo } from 'react';\nimport { Header } from '@/components/Header';\nimport { MainHeader } from '@/layout/MainHeader';\nimport { useAuth } from '@/features/auth/contexts';\nimport { UserUtil } from '@/utils/user';\nimport { ChamberLeftSideBar } from '@/screens/Chamber/ViewChamber/ChamberLeftSideBar';\nimport { GuestHeader } from '@/layout/GuestHeader';\nimport { useLocation, useNavigate } from 'react-router';\nimport { NoumLeftSideBar } from '@/screens/Chamber/ViewChamber/NoumLeftSideBar';\nimport { useLaunchDarkly } from '@/hooks';\nimport routes from '@/constants/routes';\nimport S from './styles';\nimport { type SinglePageLayoutProps } from './types';\nimport { AppLayout } from '../AppLayout';\n\nconst SinglePageLayout: React.FC<SinglePageLayoutProps> = ({\n  children,\n  showBackButton = false,\n  responsiveMain = false,\n  loading,\n}) => {\n  const { pathname } = useLocation();\n  const navigate = useNavigate();\n  const { user, isUnregistered, isUnauthenticated } = useAuth();\n  const isPost = useMemo(\n    () => pathname.startsWith('/post/') || pathname.startsWith('/posts/'),\n    [pathname],\n  );\n\n  const { flags } = useLaunchDarkly();\n\n  if (flags.newAppNavigation) {\n    return (\n      <AppLayout.Layout\n        onGoBack={() =>\n          isUnregistered ? navigate(routes.GUEST_HOME) : navigate(-1)\n        }\n        topNavbar={\n          isUnregistered ? (\n            <Header isBorderRadius={false}>\n              <GuestHeader leftNavButton={true} />\n            </Header>\n          ) : (\n            <AppLayout.TopBar />\n          )\n        }\n        sideNav={<AppLayout.SideNavigation />}\n      >\n        {responsiveMain ? (\n          <AppLayout.MainContent>{children}</AppLayout.MainContent>\n        ) : (\n          children\n        )}\n      </AppLayout.Layout>\n    );\n  }\n\n  return (\n    <S.Container data-testid=\"single-page-layout-container\">\n      {isUnauthenticated ? null : (\n        <Header isBorderRadius={false}>\n          {isUnregistered ? (\n            <GuestHeader leftNavButton={true} />\n          ) : (\n            <MainHeader\n              avatar={UserUtil.getProfilePicture(user) || undefined}\n              userName={user?.firstName || undefined}\n            />\n          )}\n        </Header>\n      )}\n      {showBackButton ? (\n        <S.Main data-testid=\"single-page-layout-main\">\n          {showBackButton && isPost ? (\n            <NoumLeftSideBar loading={loading} />\n          ) : (\n            <ChamberLeftSideBar />\n          )}\n          {children}\n        </S.Main>\n      ) : (\n        children\n      )}\n    </S.Container>\n  );\n};\n\nexport const { ResponsiveMain, FullHeightMain } = S;\n\nexport default SinglePageLayout;\n"],"names":["NoumLeftSideBar","loading","navigate","useNavigate","id","useParams","searchParams","useSearchParams","width","useWindowDimensions","isTablet","useMemo","breakpoints","TABLET_L","pathname","useLocation","isSinglePost","startsWith","noumId","get","space","useNoumDetails","PostNoumSideNavItems","icon","label","name","value","to","disabled","jsx","StickyContainer","LeftSideBarContainer","SideNav","SinglePostSideNavBar","NoumSideNavItems","Container","styled","div","devices","TABLET","hasPadding","LAPTOP","LAPTOP_L","mediaSizes","LAPTOP_L_MIN","S$1","ResponsiveContainer","children","noPadding","divProps","S","Main","MOBILE_S","TABLET_MAX","LAPTOP_MIN","MOBILE_S_MIN","FullHeightMain","Stack","attrs","grow","vertical","align","justify","ResponsiveMain","SinglePageLayout","showBackButton","responsiveMain","user","isUnregistered","isUnauthenticated","useAuth","isPost","flags","useLaunchDarkly","newAppNavigation","AppLayout","routes","GUEST_HOME","Header","GuestHeader","jsxs","MainHeader","UserUtil","getProfilePicture","undefined","firstName","ChamberLeftSideBar","SinglePageLayout$1"],"mappings":"0cAeO,MAAMA,EAA6CA,CAAC,CAAEC,QAAAA,CAAQ,IAAM,CACzE,MAAMC,EAAWC,IACX,CAAEC,GAAAA,GAAOC,EAAW,EACpB,CAACC,CAAY,EAAIC,IACjB,CAAEC,MAAAA,GAAUC,EAAqB,EACjCC,EAAWC,UAAQ,IAAMH,GAASI,EAAYC,SAAU,CAACL,CAAK,CAAC,EAC/D,CAAEM,SAAAA,GAAaC,EAAa,EAC5BC,EAAeL,UAAQ,IAAMG,EAASG,WAAW,QAAQ,EAAG,CAACH,CAAQ,CAAC,EACtEI,EAASZ,EAAaa,IAAI,QAAQ,GAAK,GACvC,CAAEC,MAAAA,CAAUC,EAAAA,EAAeL,EAAeE,EAASd,CAAG,EAEtDkB,EAA2C,CAC/C,CACEC,KAAM,eACNC,MAAQ,GAAEJ,GAAAA,YAAAA,EAAOK,iBACjBrB,GAAI,IACJsB,MAAO,OACPC,GAAI,IACJC,SAAU,EAAA,CACX,EAGH,OACGC,EAAAC,EAAA,CAAe,YAAA,kCACd,SAACD,EAAAE,EAAA,CAAqB,YAAW,GAAA,YAAA,uCAC/B,SAACF,EAAAG,EAAA,CACC,YAAwBN,GAAA,CAEpBxB,EADEwB,IAAU,OACH,GAEAA,CAFE,CAGb,EAEF,SACGhB,EAEGM,EACAiB,EACAX,EAHAY,EAKN,eAAe,GACf,cAAa,GACb,QAAAjC,EAAiB,YAAA,0BAAA,EAErB,CACF,CAAA,CAEJ,EC3DMkC,EAAYC,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,WAOdC,EAAQC;AAAAA,MACb,CAAC,CAAEC,WAAAA,CAAW,IAAMA,GAAe;AAAA;AAAA;AAAA,WAG9BF,EAAQG;AAAAA,MACb,CAAC,CAAED,WAAAA,CAAW,IAAMA,GAAe;AAAA;AAAA;AAAA,WAG9BF,EAAQI;AAAAA,aACNC,EAAWC;AAAAA;AAAAA,EAITC,EAAA,CAAA,UACbV,CACF,ECjBO,SAASW,EAAoB,CAClCC,SAAAA,EACAC,UAAAA,EAAY,GACZ,GAAGC,CACqB,EAAG,CAEzB,OAAApB,EAACqB,EAAE,UAAF,CAAY,WAAY,CAACF,EAAW,GAAIC,EACtCF,SAAAA,CACH,CAAA,CAEJ,CCbO,MAAMZ,EAAYC,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAOnBc,EAAOf,EAAOC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,WAKhBC,EAAQc;AAAAA;AAAAA;AAAAA;AAAAA,WAIRd,EAAQG;AAAAA;AAAAA;AAAAA,uBAGIE,EAAWU;AAAAA;AAAAA;AAAAA;AAAAA,uBAIXV,EAAWW;AAAAA;AAAAA;AAAAA;AAAAA,uBAIXX,EAAWU,+BAA+BV,EAAWY;AAAAA;AAAAA;AAAAA,EAKtEC,EAAiBpB,EAAOqB,CAAK,EAAEC,MAAM,KAAO,CAChDC,KAAM,EACNC,SAAU,GACVC,MAAO,UACPC,QAAS,SACX,EAAE;AAAA;AAAA;AAAA,EAKIC,EAAiB3B,EAAOU,CAAmB;AAAA;AAAA;AAAA,WAGtCR,EAAQC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,WAKRD,EAAQG;AAAAA;AAAAA;AAAAA;AAAAA,EAMJS,EAAA,CACbf,UAAAA,EACAgB,KAAAA,EAAAA,eACAK,EAAAA,eACAO,CACF,ECnDMC,EAAoDA,CAAC,CACzDjB,SAAAA,EACAkB,eAAAA,EAAiB,GACjBC,eAAAA,EAAiB,GACjBjE,QAAAA,CACF,IAAM,CACE,KAAA,CAAEa,SAAAA,GAAaC,EAAa,EAC5Bb,EAAWC,IACX,CAAEgE,KAAAA,EAAMC,eAAAA,EAAgBC,kBAAAA,GAAsBC,EAAS,EACvDC,EAAS5D,EAAAA,QACb,IAAMG,EAASG,WAAW,QAAQ,GAAKH,EAASG,WAAW,SAAS,EACpE,CAACH,CAAQ,CAAC,EAGN,CAAE0D,MAAAA,GAAUC,EAAiB,EAEnC,OAAID,EAAME,iBAEN7C,EAAC8C,EAAU,OAAV,CACC,SAAU,IACSzE,EAAjBkE,EAA0BQ,EAAOC,WAAuB,EAAb,EAE7C,UACET,EACEvC,EAACiD,GAAO,eAAgB,GAAM,YAAA,0BAC5B,SAACjD,EAAAkD,EAAA,CAAY,cAAe,GAAK,YAAA,8BAAA,CAAA,CACnC,CAAA,IAECJ,EAAU,OAAV,CAAA,CAAgB,EAGrB,QAAS9C,EAAC8C,EAAU,eAAV,IAETT,SACCA,EAAArC,EAAC8C,EAAU,YAAV,CAAuB5B,SAAAA,CAAS,CAAA,EAEjCA,CAEJ,CAAA,EAKDiC,EAAA9B,EAAE,UAAF,CAAY,cAAY,+BACtBmB,SAAAA,CAAAA,EAAoB,KACnBxC,EAACiD,EAAO,CAAA,eAAgB,GAAM,YAAA,0BAC3BV,SAAAA,EACEvC,EAAAkD,EAAA,CAAY,cAAe,GAAQ,YAAA,8BAAA,CAAA,EAEpClD,EAACoD,EACC,CAAA,OAAQC,EAASC,kBAAkBhB,CAAI,GAAKiB,OAC5C,UAAUjB,GAAAA,YAAAA,EAAMkB,YAAaD,OAEhC,YAAA,6BAAA,CAAA,EACH,EAEDnB,EACEe,EAAA9B,EAAE,KAAF,CAAO,cAAY,0BACjBe,SAAAA,CAAkBM,GAAAA,EAChB1C,EAAA7B,EAAA,CAAgB,QAAAC,mDAEjB4B,EAACyD,EACF,CAAA,YAAA,qCAAA,CAAA,EACAvC,CAAAA,CAAAA,CACH,EAEAA,CAEJ,CAAA,CAAA,CAEJ,EAEa,CAAEgB,eAAAA,GAAgBP,eAAAA,EAAe,EAAIN,EAElDqC,GAAevB"}