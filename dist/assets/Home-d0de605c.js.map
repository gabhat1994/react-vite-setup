{"version":3,"file":"Home-d0de605c.js","sources":["../../src/screens/Home/components/HowItWorksSection/styles.tsx","../../src/screens/Home/components/HowItWorksSection/SwiperFreeMode.tsx","../../src/screens/Home/components/HowItWorksSection/HowItWorksSection.tsx","../../src/screens/Home/components/NoumMeModal/styles.tsx","../../src/screens/Home/components/NoumMeModal/Modal.tsx","../../src/screens/Home/components/NoumsForYouSection/SwiperFreeMode.tsx","../../src/screens/Home/components/NoumsForYouSection/NoumsForYouSection.tsx","../../src/screens/Home/components/SideBar/styles.tsx","../../src/screens/Home/components/SideBar/SideBar.tsx","../../src/screens/Home/components/StorySection/styles.tsx","../../src/screens/Home/components/TellUsYourStoryModal/styles.tsx","../../src/screens/Home/components/TellUsYourStoryModal/Modal.tsx","../../src/screens/Home/components/StorySection/StorySection.tsx","../../src/screens/Home/components/OnboardingEventsSection/styles.tsx","../../src/screens/Home/components/OnboardingEventsSection/OnboardingEventsSection.tsx","../../src/screens/Home/styles.ts","../../src/screens/Home/index.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { sizes, mediaSizes } from '@/constants/devices';\nimport { Button } from '@/components/Button';\nimport { TSpan } from '@/components/Typography';\nimport { singleLineEllipisText } from '@/common/globalStyles';\n\nexport const StyledHowItWorksSection = styled.div`\n  h2 {\n    margin-top: 0;\n  }\n  box-sizing: border-box;\n  padding: 24px;\n  width: 100%;\n  min-width: 322px;\n  min-height: 182px;\n  background: var(--bg-card-neutral-alt-default);\n  border-radius: 16px;\n  flex: none;\n  /* order: 3; */\n  flex-grow: 0;\n\n  @media (max-width: ${sizes.TABLET_L}) {\n    min-width: 704px;\n    min-height: 160px;\n    width: calc(100% - 32px);\n    margin: 0 16px;\n  }\n\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    width: 100vw;\n    min-width: unset;\n    margin: unset;\n    min-height: 182px;\n    border-radius: unset;\n  }\n`;\n\nexport const HeaderWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\nexport const HeaderTitle = styled(TSpan)`\n  display: flex;\n  @media (max-width: ${mediaSizes.TABLET_MAX}) {\n    width: 60%;\n    font-weight: 600;\n    font-size: 18px;\n    line-height: 160%;\n  }\n  @media (max-width: ${mediaSizes.MOBILE_L_MAX}) {\n    display: inline-flex;\n    width: 85%;\n    word-break: break-word;\n  }\n  @media (max-width: ${mediaSizes.MOBILE_L_MAX}) {\n    width: 70%;\n  }\n  @media (max-width: ${mediaSizes.MOBILE_L_MIN}) {\n    width: 60%;\n  }\n`;\nexport const ShowAllButton = styled(Button)`\n  display: none;\n  @media (max-width: ${mediaSizes.MOBILE_L_MAX}) {\n    display: inline-flex;\n  }\n`;\n\nexport const StyledCardsSection = styled.div`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 150%;\n  text-align: center;\n  width: 100%;\n  .mySwiper {\n    display: flex;\n    flex-direction: column-reverse;\n    .swiper-slide {\n      height: auto;\n    }\n  }\n`;\n\nexport const StyledSwiperControls = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-bottom: 16px;\n  margin-left: -6px;\n  .swiper-icons {\n    display: flex;\n    align-items: center;\n    .disabled {\n      opacity: 0.5;\n      cursor: not-allowed;\n    }\n    .swiper-control-btn {\n      box-sizing: border-box;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      padding: 8px;\n      gap: 10px;\n      width: 40px;\n      height: 40px;\n      background: var(--bg-button-neutral-default);\n      border-radius: 8px;\n    }\n    .show-all {\n      display: flex;\n      align-items: center;\n      margin-left: 16px;\n    }\n    > div:first-of-type {\n      margin-right: 8px;\n    }\n    @media (max-width: ${sizes.MOBILE_MAX}) {\n      display: none;\n    }\n  }\n`;\n\nexport const StyledCard = styled.div.attrs(\n  (props: { imageUrl: string }) => props,\n)`\n  cursor: pointer;\n  box-sizing: border-box;\n  height: 100%;\n  padding: 8px !important;\n  display: flex;\n  flex-direction: column;\n  padding: 0px;\n  border: 1px solid var(--border-card-neutral-highlighted);\n  border-radius: 20px;\n  &.featured {\n    display: flex;\n    flex-direction: row;\n  }\n  &.featured .article-image {\n    height: 100%;\n    width: 50%;\n    min-width: 50%;\n  }\n  &.featured .article-details {\n    padding: 24px;\n    .title {\n      display: -webkit-box;\n      -webkit-line-clamp: 2;\n      -webkit-box-orient: vertical;\n      overflow: hidden;\n      font-size: 18px;\n      line-height: 160%;\n    }\n    .content {\n      display: -webkit-box;\n      -webkit-line-clamp: 4;\n      -webkit-box-orient: vertical;\n      overflow: hidden;\n    }\n  }\n  .article-image {\n    border-radius: 12px;\n    width: 100%;\n    height: 134px;\n    background: url(${(props) => props.imageUrl}) no-repeat center center;\n    background-size: cover;\n  }\n  .article-details {\n    padding: 8px;\n    text-align: left;\n    .type {\n      font-style: normal;\n      font-weight: 600;\n      font-size: 12px;\n      line-height: 160%;\n      color: var(--text-card-header-neutral-default);\n    }\n    .title {\n      font-style: normal;\n      font-weight: 600;\n      font-size: 16px;\n      line-height: 150%;\n      color: var(--text-card-header-neutral-highlighted);\n      ${singleLineEllipisText}\n    }\n    .content {\n      padding-top: 4px;\n      font-style: normal;\n      font-weight: 400;\n      font-size: 14px;\n      line-height: 160%;\n      color: var(--text-card-header-neutral-default);\n      opacity: 0.75;\n      display: -webkit-box;\n      -webkit-line-clamp: 2;\n      -webkit-box-orient: vertical;\n      overflow: hidden;\n    }\n    .link {\n      padding-top: 0.75rem;\n      display: flex;\n      align-items: center;\n      font-style: normal;\n      font-weight: 500;\n      font-size: 16px;\n      line-height: 100%;\n      > div {\n        padding-left: 8px;\n      }\n    }\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { capitalize } from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport 'swiper/swiper-bundle.min.css';\nimport 'swiper/swiper.min.css';\nimport 'swiper/components/pagination/pagination.min.css';\nimport type SwiperCore from 'swiper';\nimport { Icon } from '@/components/Icon';\nimport { Button } from '@/components/Button';\nimport { getArticleDetails } from '@/services/rest/storyblok';\nimport routes from '@/constants/routes';\nimport useEvent from '@/hooks/useEvent';\nimport { useWindowDimensions } from '@/hooks';\nimport { breakpoints } from '@/constants/devices';\nimport BasicChipsTabsForm from '@/components/Tabs/TabsForm';\nimport { type InputListTypes } from '@/components/Tabs/types';\nimport { type Article } from '../types';\nimport { type SettledPromise, type Story } from './types';\nimport { StyledSwiperControls, StyledCard } from './styles';\n\ntype SwiperFreeModeProps = {\n  articles: Article[];\n};\n\nconst tagsList: InputListTypes[] = [\n  {\n    name: 'test1',\n    image: 'terms_m',\n    text: 'Knowledge Base',\n    labelSize: 'auto',\n  },\n];\n\nexport const SwiperFreeMode: React.FC<SwiperFreeModeProps> = (props) => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const [disablePrevBtn, setDisablePrevBtn] = useState(true);\n  const [disableNextBtn, setDisableNextBtn] = useState(false);\n  const { articles } = props;\n  const [fetchedArticles, setFetchedArticles] = useState<Story[]>([]);\n  const [swiper, setSwiper] = useState<SwiperCore>();\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  const { width } = useWindowDimensions();\n\n  let slidesPerView = 3;\n  if (width < breakpoints.MOBILE_L) {\n    slidesPerView = 1.25;\n  } else if (width < breakpoints.TABLET) {\n    slidesPerView = 2.25;\n  } else if (width < breakpoints.LAPTOP) {\n    slidesPerView = 3;\n  } else if (width < breakpoints.LAPTOP_SM) {\n    slidesPerView = 2.25;\n  }\n\n  useEffect(() => {\n    const fetchArticles = async () => {\n      const settledPromises: unknown[] = await Promise.allSettled(\n        articles?.map(async (article) =>\n          getArticleDetails(article?.Link?.cached_url),\n        ) || [],\n      );\n      const fetchedArticlesRes = settledPromises?.map((promise) => {\n        const item = promise as SettledPromise;\n        return item?.value?.data?.story || null;\n      });\n      setFetchedArticles([...fetchedArticlesRes]);\n    };\n    fetchArticles();\n  }, [articles]);\n\n  const navigateToArticles = useEvent(() => {\n    navigate(routes.ARTICLES);\n  });\n\n  const prevSlide = useEvent(() => {\n    if (swiper && !swiper.destroyed) {\n      swiper.slidePrev();\n      setDisableNextBtn(false);\n    }\n  });\n\n  const nextSlide = useEvent(() => {\n    if (swiper && !swiper.destroyed) {\n      swiper.slideNext();\n      setDisablePrevBtn(false);\n    }\n  });\n\n  const onTabChange = (value: string) => {\n    setSelectedTab(Number(value));\n  };\n\n  return (\n    <>\n      <Swiper\n        slidesPerView={slidesPerView}\n        spaceBetween={16}\n        freeMode={true}\n        className=\"mySwiper\"\n        onInit={(swiperInstance) => setSwiper(swiperInstance)}\n        onReachBeginning={() => setDisablePrevBtn(true)}\n        onReachEnd={() => {\n          const progress = swiper?.progress || 0;\n          if (progress > 0.5) setDisableNextBtn(true);\n        }}\n      >\n        <StyledSwiperControls>\n          <BasicChipsTabsForm\n            onChange={onTabChange}\n            selectedId={selectedTab.toString()}\n            mode=\"isBackground\"\n            isWithoutImage\n            inputList={tagsList}\n            fontSize=\"--font-link-medium-size\"\n          />\n          <div className=\"swiper-icons\">\n            {fetchedArticles?.length > slidesPerView && (\n              <>\n                <Icon\n                  className={`swiper-control-btn ${\n                    disablePrevBtn ? 'disabled' : ''\n                  }`}\n                  name=\"chevron_left_m\"\n                  size={16}\n                  color={\n                    disablePrevBtn\n                      ? '--icon-button-neutral-disabled'\n                      : '--icon-button-neutral-default'\n                  }\n                  onClick={prevSlide}\n                />\n                <Icon\n                  className={`swiper-control-btn ${\n                    disableNextBtn ? 'disabled' : ''\n                  }`}\n                  name=\"chevron_right_m\"\n                  size={16}\n                  color={\n                    disableNextBtn\n                      ? '--icon-button-neutral-disabled'\n                      : '--icon-button-neutral-default'\n                  }\n                  onClick={nextSlide}\n                />\n              </>\n            )}\n            <Button\n              className=\"show-all\"\n              textOnly\n              onClick={navigateToArticles}\n              rightIcon={\n                <Icon\n                  name=\"chevron_right_m\"\n                  size={16}\n                  color=\"--icon-button-brand-primary-default\"\n                />\n              }\n            >\n              {t('noumena.home.show_all')}\n            </Button>\n          </div>\n        </StyledSwiperControls>\n\n        {fetchedArticles?.map((article, index) => {\n          const { id, content, full_slug: slug } = article;\n          const imageUrl = content?.Main_Image?.filename;\n          const title = content?.Title;\n          const description = content?.Short_Description;\n          const type = capitalize(\n            content?.Main_Category.split('_').join(' ') || '',\n          );\n          return (\n            <SwiperSlide key={`${index + 0}-${id}`}>\n              <StyledCard\n                imageUrl={imageUrl}\n                onClick={() => {\n                  navigate({\n                    pathname: routes.ARTICLE,\n                    search: `?slug=${slug}`,\n                  });\n                }}\n              >\n                <div className=\"article-image\" />\n                <div className=\"article-details\">\n                  <div className=\"type\">{type}</div>\n                  <div className=\"title\">{title}</div>\n                  <div className=\"content\">{description}</div>\n                </div>\n              </StyledCard>\n            </SwiperSlide>\n          );\n        })}\n      </Swiper>\n    </>\n  );\n};\n","import { useNavigate } from 'react-router';\nimport { useTranslation } from 'react-i18next';\nimport { Icon } from '@/components/Icon';\nimport useEvent from '@/hooks/useEvent';\nimport routes from '@/constants/routes';\n\nimport { Spacer } from '@/layout/Stack';\nimport { type Section01 } from '../types';\nimport {\n  StyledHowItWorksSection,\n  StyledCardsSection,\n  HeaderWrapper,\n  ShowAllButton,\n  HeaderTitle,\n} from './styles';\nimport { SwiperFreeMode } from './SwiperFreeMode';\n\ntype HowItWorksSectionProps = {\n  data: Section01 | undefined;\n};\n\nexport default function HowItWorksSection({ data }: HowItWorksSectionProps) {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const title = data?.Title;\n  const articles = data?.Articles || [];\n\n  const navigateToArticles = useEvent(() => {\n    navigate(routes.ARTICLES);\n  });\n\n  return articles && articles?.length ? (\n    <StyledHowItWorksSection data-testid=\"onboarding-section-testid\">\n      <HeaderWrapper>\n        <HeaderTitle\n          font=\"body-xl-bold\"\n          colorToken=\"--text-card-header-neutral-highlighted\"\n        >\n          {title}\n        </HeaderTitle>\n        <ShowAllButton\n          className=\"show-all\"\n          textOnly\n          onClick={navigateToArticles}\n          rightIcon={\n            <Icon\n              name=\"chevron_small_right_m\"\n              size={24}\n              color=\"--icon-button-brand-primary-default\"\n            />\n          }\n        >\n          {t('noumena.home.show_all')}\n        </ShowAllButton>\n      </HeaderWrapper>\n      <Spacer height={16} />\n      <StyledCardsSection>\n        <SwiperFreeMode articles={articles} />\n      </StyledCardsSection>\n    </StyledHowItWorksSection>\n  ) : null;\n}\n","import styled from 'styled-components';\nimport { sizes } from '@/constants/devices';\n\nexport const StyledChamberCompletenessWrapper = styled.div`\n  width: 100%;\n  @media (min-width: ${sizes.TABLET_L}) {\n    margin: 0 auto;\n    width: 400px;\n  }\n`;\n","import { memo } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from '@/components/ExtendedModal';\nimport { breakpoints } from '@/constants/devices';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useWindowDimensions } from '@/hooks';\nimport { TSpan } from '@/components/Typography';\nimport { ChamberCompleteness } from '@/screens/Chamber/components/ChamberCompleteness';\nimport { ChamberProvider } from '@/screens/Chamber/ViewChamber/ChamberProvider';\nimport routes from '@/constants/routes';\nimport { Button } from '@/components/Button';\nimport { useNoumDetails } from '@/features/noums/hooks/noums';\nimport { Spacer } from '@/layout';\nimport { StyledChamberCompletenessWrapper } from './styles';\n\nexport interface NoumMeModalProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nexport const NoumMeModal = memo((props: NoumMeModalProps) => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { width } = useWindowDimensions();\n  const { masterId: id } = useAuth();\n  const res = useNoumDetails(id);\n  const {\n    data,\n    loading,\n    loadingSpace,\n    mainSpaceId,\n    connectedMembers,\n    connectedMembersCount,\n    existingConnection,\n    onRefetchConnectedMembers,\n    onRefetchConnections,\n    onRefetchSpaceByConfig,\n    onRefetchSpaceById,\n    spaceConfigData,\n  } = res;\n  const { open, onClose } = props;\n  const isDesktop = width >= breakpoints.LAPTOP;\n  const isMobile = width <= breakpoints.TABLET;\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      enableAnimation\n      isFullScreen={isMobile}\n      testId=\"testNoumMeModal\"\n      enableCloseButton\n      closeButtonStyles={{\n        primary: true,\n        color: '--icon-button-neutral-alt-default',\n      }}\n      style={{\n        width: isDesktop ? 654 : width <= 802 ? '100%' : 802,\n        background:\n          'linear-gradient(180deg,rgba(49,13,117,1) 0%,rgba(102,63,186,1) 42%,rgba(255,255,255,1) 42%,rgba(255,255,255,1) 100%)',\n      }}\n      disableBackdropClick\n    >\n      <ModalHeader\n        tSpanProps={{\n          colorToken: '--text-modal-header-neutral-alt-default',\n        }}\n        isFullScreen={isMobile}\n      >\n        {t('noumena.home.noum_me_modal.title')}\n      </ModalHeader>\n\n      <ModalBody mobileFlex isFullScreen={isMobile} align=\"center\">\n        <TSpan\n          colorToken=\"--text-modal-brand-secondary-default\"\n          font=\"body-l\"\n          textAlign={isDesktop ? 'center' : 'left'}\n        >\n          {t('noumena.home.noum_me_modal.description')}\n        </TSpan>\n        <Spacer height={isDesktop ? 24 : 16} />\n        <StyledChamberCompletenessWrapper>\n          <ChamberProvider\n            connectedMembers={connectedMembers}\n            connectedMembersCount={connectedMembersCount}\n            loading={loading}\n            loadingSpace={loadingSpace}\n            space={data?.getSpaceById || undefined}\n            mainSpaceId={mainSpaceId}\n            existingConnection={existingConnection}\n            refetchConnectedMembers={onRefetchConnectedMembers}\n            refetchConnections={onRefetchConnections}\n            spaceConfig={spaceConfigData?.getSpaceConfig || []}\n            onRefetchSpaceByConfig={onRefetchSpaceByConfig}\n            onRefetchSpaceById={onRefetchSpaceById}\n          >\n            <ChamberCompleteness />\n          </ChamberProvider>\n        </StyledChamberCompletenessWrapper>\n      </ModalBody>\n      <ModalFooter\n        isFullScreen={isMobile}\n        justifyContent=\"center\"\n        marginTop={24}\n      >\n        <Button\n          secondary\n          data-testid=\"action_button\"\n          size={isMobile ? 'full' : 'small'}\n          onClick={() => navigate(routes.HOME_NOUM)}\n        >\n          {t('noumena.home.go_to_your_home_noum')}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n});\n","import { useMemo, useState } from 'react';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper-bundle.min.css';\nimport 'swiper/swiper.min.css';\nimport 'swiper/components/pagination/pagination.min.css';\nimport type SwiperCore from 'swiper';\nimport { useTranslation } from 'react-i18next';\nimport { useGetProjectChambersQuery } from '@/apollo/graphql';\nimport { SpaceStatusEnum } from '@/apollo/generated/types';\nimport { Spinner } from '@/components/Spinner';\nimport { breakpoints } from '@/constants/devices';\nimport { useWindowDimensions } from '@/hooks';\nimport ChamberBox from '@/components/ChamberBox/ChamberBox';\nimport OwnerDefaultImage from '@/assets/images/profile_default.png';\nimport { ChamberBoxNameEnum } from '@/components/ChamberBox/types';\nimport { getFullName } from '@/utils/fullName';\nimport { ChamberItem } from '@/features/discovery/components';\nimport { Icon } from '@/components/Icon';\nimport { StyledSwiperControls, SpinnerContainer } from './styles';\n\nexport const SwiperFreeMode: React.FC<{\n  recommendedNoumIds: string[];\n}> = ({ recommendedNoumIds }) => {\n  const [disablePrevBtn, setDisablePrevBtn] = useState(true);\n  const [disableNextBtn, setDisableNextBtn] = useState(false);\n  const [swiper, setSwiper] = useState<SwiperCore>();\n\n  const { data, loading } = useGetProjectChambersQuery({\n    variables: {\n      filter: {\n        spaceIds: recommendedNoumIds,\n      },\n    },\n  });\n\n  const recommendedNoums = useMemo(\n    () => data?.getProjectChambers?.data || [],\n    [data],\n  );\n\n  const { width } = useWindowDimensions();\n  const { t } = useTranslation();\n\n  let slidesPerView = 3;\n  if (width < breakpoints.MOBILE_L) {\n    slidesPerView = 1.25;\n  } else if (width < breakpoints.TABLET) {\n    slidesPerView = 2.25;\n  } else if (width < breakpoints.LAPTOP) {\n    slidesPerView = 3;\n  } else if (width < breakpoints.LAPTOP_SM) {\n    slidesPerView = 2.25;\n  }\n\n  if (loading) {\n    return (\n      <SpinnerContainer>\n        <Spinner />\n      </SpinnerContainer>\n    );\n  }\n\n  return (\n    <Swiper\n      slidesPerView={slidesPerView}\n      spaceBetween={16}\n      freeMode={true}\n      className=\"mySwiper\"\n      onInit={(swiperInstance) => setSwiper(swiperInstance)}\n      onReachBeginning={() => setDisablePrevBtn(true)}\n      onReachEnd={() => {\n        const progress = swiper?.progress || 0;\n        if (progress > 0.5) setDisableNextBtn(true);\n      }}\n      data-testid=\"SwiperTestId\"\n    >\n      <StyledSwiperControls data-testid=\"SwiperControlsTestId\">\n        <div className=\"swiper-icons\">\n          {recommendedNoums?.length > slidesPerView && (\n            <>\n              <Icon\n                className={`swiper-control-btn ${\n                  disablePrevBtn ? 'disabled' : ''\n                }`}\n                name=\"chevron_left_m\"\n                size={16}\n                color={\n                  disablePrevBtn\n                    ? '--icon-button-neutral-disabled'\n                    : '--icon-button-neutral-default'\n                }\n                onClick={() => {\n                  if (swiper && !swiper.destroyed) {\n                    swiper.slidePrev();\n                    setDisableNextBtn(false);\n                  }\n                }}\n                data-testid=\"PrevBtnId\"\n              />\n              <Icon\n                className={`swiper-control-btn ${\n                  disableNextBtn ? 'disabled' : ''\n                }`}\n                name=\"chevron_right_m\"\n                size={16}\n                color={\n                  disableNextBtn\n                    ? '--icon-button-neutral-disabled'\n                    : '--icon-button-neutral-default'\n                }\n                onClick={() => {\n                  if (swiper && !swiper.destroyed) {\n                    swiper.slideNext();\n                    setDisablePrevBtn(false);\n                  }\n                }}\n                data-testid=\"NextBtnId\"\n              />\n            </>\n          )}\n        </div>\n      </StyledSwiperControls>\n\n      {recommendedNoums?.map((noum) => {\n        const id = noum?._id;\n        return (\n          <SwiperSlide key={id}>\n            <ChamberItem key={noum?._id} isBordered data-testid={id}>\n              <ChamberBox\n                id={noum?._id}\n                url={noum?.profileImage ?? undefined}\n                ownerImageURL={\n                  noum?.uid?.profile?.profilePicture || OwnerDefaultImage\n                }\n                title={noum?.uid?.title || ''}\n                chamberTitle={noum?.name || ''}\n                name={\n                  (noum?.category?.name?.toLowerCase() as ChamberBoxNameEnum) ||\n                  ChamberBoxNameEnum.member\n                }\n                ownedby={\n                  noum?._id === noum?.uid?._id\n                    ? t('noumena.you')\n                    : getFullName(\n                        noum?.uid?.firstName,\n                        noum?.uid?.middleName,\n                        noum?.uid?.lastName,\n                      ) ?? undefined\n                }\n                archived={noum?.status === SpaceStatusEnum.Archived}\n                followers={noum?.followersCount || 0}\n                location={noum?.uid?.location ?? undefined}\n                chamberUrl={`/noum/${id}`}\n              />\n            </ChamberItem>\n          </SwiperSlide>\n        );\n      })}\n    </Swiper>\n  );\n};\n","import { useTranslation } from 'react-i18next';\nimport { TSpan } from '@/components/Typography';\nimport { Spacer } from '@/layout/Stack';\nimport { SwiperFreeMode } from './SwiperFreeMode';\nimport { StyledNoumsForYouSection, StyledCardsSection } from './styles';\n\nexport default function NoumsForYouSection({\n  recommendedNoumIds,\n}: {\n  recommendedNoumIds: string[];\n}) {\n  const { t } = useTranslation();\n  return (\n    <StyledNoumsForYouSection data-testid=\"noums-for-you-section-testid\">\n      <TSpan\n        font=\"body-xl-bold\"\n        colorToken=\"--text-card-header-neutral-highlighted\"\n      >\n        {t('noumena.home.recommended.noums.header')}\n      </TSpan>\n      <Spacer height={16} />\n      <StyledCardsSection>\n        <SwiperFreeMode recommendedNoumIds={recommendedNoumIds} />\n      </StyledCardsSection>\n    </StyledNoumsForYouSection>\n  );\n}\n","import styled from 'styled-components';\nimport { sizes } from '@/constants/devices';\nimport { TSpan } from '@/components/Typography';\nimport { singleLineEllipisText } from '@/common/globalStyles';\n\nexport const StyledSideBar = styled.div`\n  display: none;\n\n  @media (min-width: ${sizes.LAPTOP}) {\n    display: grid;\n    gap: 16px;\n    width: 288px;\n  }\n`;\n\nexport const StyledUserInfoCard = styled.div.attrs(\n  (props: { profileImageUrl: string }) => props,\n)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 16px;\n  background: var(--bg-card-neutral-alt-default);\n  border-radius: 16px;\n  .image {\n    width: 56px;\n    height: 56px;\n    background: url('${(props) => props.profileImageUrl}') center center;\n    background-size: cover;\n    border-radius: 12px;\n  }\n`;\n\nexport const UserName = styled(TSpan)`\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  word-break: break-word;\n`;\n\nexport const Designation = styled(TSpan)`\n  ${singleLineEllipisText}\n  word-break: break-word;\n  span {\n    background: none;\n    padding: unset;\n    cursor: default;\n    height: unset;\n    min-height: unset;\n    max-height: unset;\n    width: 100%;\n    max-width: 100%;\n    ${singleLineEllipisText}\n    word-break: break-word;\n    white-space: break-spaces;\n  }\n`;\n\nexport const StyledCompleteInfoCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 16px;\n  background: linear-gradient(\n    135.79deg,\n    var(--bg-blur-brand-primary-dark) 0%,\n    var(--bg-card-brand-primary-highlighted) 48.49%,\n    var(--bg-blur-brand-primary-default) 100%\n  );\n  border-radius: 16px;\n  .disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n  @media (max-width: ${sizes.TABLET}) {\n    border-radius: unset;\n    display: grid;\n    grid-template-columns: 2fr 1fr;\n    gap: 30px;\n    padding: 32px;\n    align-items: center;\n  }\n`;\n","import { useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useTranslation } from 'react-i18next';\nimport { useAuth } from '@/features/auth/contexts';\nimport { Icon } from '@/components/Icon';\nimport { Button } from '@/components/Button';\nimport { TSpan } from '@/components/Typography';\nimport { Spacer } from '@/layout/Stack';\nimport routes from '@/constants/routes';\nimport useEvent from '@/hooks/useEvent';\nimport { Tag } from '@/components/Tag';\nimport {\n  StyledSideBar,\n  StyledUserInfoCard,\n  StyledCompleteInfoCard,\n  UserName,\n  Designation,\n} from './styles';\nimport { type SidePanel } from '../types';\nimport { NoumMeModal } from '../NoumMeModal/Modal';\n\ntype SideBarProps = {\n  data: SidePanel[] | undefined;\n};\n\nexport default function SideBar(props: SideBarProps) {\n  const [showNoumMeModal, setShowNoumMeModal] = useState<boolean>(false);\n\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { user, isActive } = useAuth();\n  const { data } = props;\n\n  const title = data?.length && data[0]?.Title;\n  const description = data?.length && data[0]?.Description;\n  const buttonLabel = data?.length && data[0]?.Button_Label;\n\n  const firstName = user?.firstName || '';\n  const middleName = user?.middleName || '';\n  const lastName = user?.lastName || '';\n  const jobTitle = user?.title || '';\n  const profilePicture = user?.profile?.profilePicture || '';\n\n  const handleOpenNoumMeModal = useEvent(() => {\n    setShowNoumMeModal(true);\n  });\n  const handleCloseNoumMeModal = useEvent(() => {\n    setShowNoumMeModal(false);\n  });\n\n  return (\n    <>\n      <StyledSideBar>\n        <StyledUserInfoCard profileImageUrl={profilePicture}>\n          {!!profilePicture && <div className=\"image\" />}\n          {!profilePicture && (\n            <Icon imageIconName=\"avatar_m\" size={56} data-testid=\"avatarIcon\" />\n          )}\n          <Spacer height={16} />\n          <UserName\n            font=\"heading-xs-bold\"\n            colorToken=\"--text-card-header-neutral-highlighted\"\n            title={`${firstName} ${middleName} ${lastName}`}\n          >{`${firstName} ${middleName} ${lastName}`}</UserName>\n          <Designation colorToken=\"--text-card-neutral-default\">\n            <Tag title={jobTitle}>\n              <TSpan font=\"body-l\" colorToken=\"--text-card-neutral-default\">\n                {jobTitle}\n              </TSpan>\n            </Tag>\n          </Designation>\n          <Spacer height={16} />\n          <Button\n            textOnly\n            rightIcon={\n              <Icon\n                name=\"arrow_right_m\"\n                size={20}\n                color=\"--icon-button-brand-secondary-default\"\n              />\n            }\n            onClick={() => navigate(routes.HOME_NOUM)}\n          >\n            {t('noumena.home.go_to_your_home_noum')}\n          </Button>\n        </StyledUserInfoCard>\n        <StyledCompleteInfoCard>\n          <TSpan\n            font=\"body-xl-bold\"\n            colorToken=\"--text-card-neutral-alt-default\"\n          >\n            {title}\n          </TSpan>\n          <Spacer height={16} />\n          <TSpan font=\"body-l\" colorToken=\"--text-card-brand-secondary-default\">\n            {description}\n          </TSpan>\n          <Spacer height={48} />\n          <Button\n            primary\n            size=\"small\"\n            className={`${!isActive ? 'disabled' : ''}`}\n            disabled={!isActive}\n            onClick={handleOpenNoumMeModal}\n          >\n            {buttonLabel}\n          </Button>\n        </StyledCompleteInfoCard>\n      </StyledSideBar>\n      <NoumMeModal open={showNoumMeModal} onClose={handleCloseNoumMeModal} />\n    </>\n  );\n}\n","import styled from 'styled-components';\nimport { sizes } from '@/constants/devices';\nimport { TSpan } from '@/components/Typography';\n\nexport const StyledHomeStorySection = styled.div`\n  box-sizing: border-box;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 40px;\n  padding: 16px;\n  width: 100%;\n  min-width: 322px;\n  min-height: 182px;\n  background: var(--bg-card-neutral-alt-default);\n  border-radius: 16px;\n  flex: none;\n  flex-grow: 0;\n\n  @media (max-width: ${sizes.TABLET_L}) {\n    margin: 0 16px;\n    width: calc(100% - 32px);\n  }\n\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    width: 100%;\n    margin: 0 0;\n    border-radius: unset;\n    min-width: 704px;\n    min-height: 160px;\n    grid-template-columns: 1fr;\n    gap: 16px;\n    padding: 16px 19.5px;\n  }\n\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    width: 100vw;\n    min-width: unset;\n    margin: unset;\n    min-height: 182px;\n  }\n`;\n\nexport const StyledVideoSection = styled.div.attrs(\n  (props: { thumbnailUrl: string }) => props,\n)`\n  min-height: 240px;\n  box-sizing: border-box;\n  cursor: pointer;\n  background: linear-gradient(\n      180deg,\n      rgba(93, 58, 169, 0) 0%,\n      rgba(93, 58, 169, 0.66) 100%\n    ),\n    url(${(props) => props.thumbnailUrl});\n  background-size: cover;\n  border-radius: 8px;\n  padding: 20px 16px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n`;\n\nexport const StyledContentSection = styled.div`\n  /* padding: 10px 0px; */\n`;\n\nexport const StyledTime = styled.span`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 160%;\n  color: var(--text-card-brand-secondary-disabled);\n  opacity: 0.8;\n`;\n\nexport const StyledDescription = styled(TSpan)`\n  display: inline-block;\n  padding: 4px 0 16px 0;\n  @media (max-width: ${sizes.TABLET_L}) {\n    /* padding: 8px 0px; */\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledStep = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 16px 0;\n  border-top: 1px solid var(--bg-separator-neutral-default);\n  :nth-child(2) {\n    border-top: unset;\n  }\n  .step-number {\n    width: 32px;\n    height: 32px;\n    background: var(--bg-counter-brand-primary-default);\n    border-radius: 32px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-style: normal;\n    font-weight: 600;\n    font-size: 18px;\n    line-height: 160%;\n    color: var(--text-badge-neutral-alt-default);\n  }\n  .step-content {\n    margin-left: 12px;\n    font-style: normal;\n    font-weight: 600;\n    font-size: 18px;\n    line-height: 160%;\n    color: var(--text-card-neutral-highlighted);\n  }\n`;\n\nexport const Highlight = styled.span`\n  /* cursor: pointer; */\n  color: var(--text-card-brand-primary-default);\n`;\n","import { memo, useCallback } from 'react';\nimport { useTranslation, Trans } from 'react-i18next';\nimport * as Sentry from '@sentry/react';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { breakpoints } from '@/constants/devices';\nimport { useWindowDimensions } from '@/hooks';\nimport { TSpan } from '@/components/Typography';\nimport { useGenerateOneTimeTokenMutation } from '@/apollo/graphql';\n// import { getCqUrl } from '@/screens/Money/Payments/CapitalQuotient/Constants';\n// import getStoryblokEnv from '@/services/rest/utils/getStoryblokEnv';\nimport useEvent from '@/hooks/useEvent';\nimport { Button } from '@/components/Button';\nimport { type ScheduleACall } from '../types';\nimport { Highlight, StyledStep } from './styles';\n\nexport interface TellUsYourStoryModalProps {\n  open: boolean;\n  onClose: () => void;\n  calendlyData: ScheduleACall | undefined;\n}\n\nexport const TellUsYourStoryModal = memo((props: TellUsYourStoryModalProps) => {\n  const { t } = useTranslation();\n  const { width } = useWindowDimensions();\n  const [generateOneTimeTokenMutation] = useGenerateOneTimeTokenMutation();\n  const { open, onClose, calendlyData } = props;\n  const redirectToCQ = false;\n  const isMobile = width < breakpoints.TABLET;\n  const isTablet = width < breakpoints.LAPTOP;\n\n  const handleCalendlyRedirect = useEvent(() => {\n    const calendlyUrl = calendlyData?.url;\n    window.open(calendlyUrl, '_blank');\n  });\n\n  const handleCQRedirect = useCallback(async () => {\n    const res = await generateOneTimeTokenMutation({\n      variables: {},\n      onError: ({ networkError = null, graphQLErrors = [] }) => {\n        const [err] = graphQLErrors;\n        Sentry.captureException(new Error(err?.message ?? networkError), {\n          tags: {\n            section: 'Home Page - Tell Us Your Story Modal',\n          },\n        });\n      },\n      onCompleted: () => {},\n    });\n    const token = res.data?.generateOneTimeToken;\n    // const { env } = getStoryblokEnv();\n    const cqUrl = process.env.VITE_CQ_URL;\n    const formedUrl: string = `${cqUrl}?access_token=${token}`;\n    window.open(formedUrl, '_blank');\n  }, [generateOneTimeTokenMutation]);\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n      enableCloseButton\n      enableAnimation\n      size={ModalSize.L}\n      testId=\"testTellUsYourStoryModal\"\n      isFullScreen={isTablet}\n      disableBackdropClick\n    >\n      <ModalHeader\n        isFullScreen={isTablet}\n        justifyContent={isMobile ? 'flex-start' : 'center'}\n      >\n        {t('noumena.home.tell_us_your_story_modal.title')}\n      </ModalHeader>\n      <ModalBody isFullScreen={isTablet} mobileFlex>\n        <TSpan font=\"body-m\" colorToken=\"--text-body-neutral-default\">\n          {t('noumena.home.tell_us_your_story_modal.description')}\n        </TSpan>\n        <StyledStep>\n          <div className=\"step-number\">1</div>\n          <div className=\"step-content\">\n            {t('noumena.home.tell_us_your_story_modal.step_1')}\n          </div>\n        </StyledStep>\n        <StyledStep>\n          <div className=\"step-number\">2</div>\n          <div className=\"step-content\">\n            {t('noumena.home.tell_us_your_story_modal.step_2')}\n          </div>\n        </StyledStep>\n        <StyledStep>\n          <div className=\"step-number\">3</div>\n          <div className=\"step-content\">\n            <Trans\n              i18nKey=\"noumena.home.tell_us_your_story_modal.step_3\"\n              components={{\n                highlight: (\n                  <Highlight\n                    onClick={redirectToCQ ? handleCQRedirect : () => {}}\n                  />\n                ),\n                u: <u />,\n              }}\n            />\n          </div>\n        </StyledStep>\n      </ModalBody>\n\n      <ModalFooter\n        isFullScreen={isTablet}\n        justifyContent=\"center\"\n        marginTop={isTablet ? 100 : 24}\n      >\n        <Button\n          data-testid=\"action_button\"\n          size=\"full\"\n          primary\n          onClick={handleCalendlyRedirect}\n        >\n          {t('noumena.home.tell_us_your_story_modal.action_button')}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n});\n","import { useState } from 'react';\nimport { t } from 'i18next';\nimport { Icon } from '@/components/Icon';\nimport { TSpan } from '@/components/Typography';\nimport { Button } from '@/components/Button';\nimport { Spacer } from '@/layout/Stack';\nimport useEvent from '@/hooks/useEvent';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useToast } from '@/hooks';\nimport { type ScheduleACall, type Section01 } from '../types';\nimport {\n  StyledHomeStorySection,\n  StyledVideoSection,\n  StyledContentSection,\n  StyledDescription,\n  StyledTime,\n} from './styles';\nimport { VideoPlayerModal } from '../VideoPlayerModal/Modal';\nimport { TellUsYourStoryModal } from '../TellUsYourStoryModal/Modal';\n\ntype StorySectionProps = {\n  sectionData: Section01 | undefined;\n  calendlyData: ScheduleACall | undefined;\n};\n\nexport default function StorySection(props: StorySectionProps) {\n  const { addToast } = useToast();\n  const { isActive } = useAuth();\n  const [showTellUsYourStoryModal, setShowTellUsYourStoryModal] =\n    useState<boolean>(false);\n  const [showPlayVideoModal, setShowPlayVideoModal] = useState<boolean>(false);\n  const { sectionData, calendlyData } = props;\n\n  const title = sectionData?.Title;\n  const assetTitle = sectionData?.Asset_Title;\n  const description = sectionData?.Description;\n  const thumbnailUrl = sectionData?.Thumbnail?.filename;\n  const buttonLabel = sectionData?.Button_Label;\n  const videoURL = sectionData?.Asset?.filename || '';\n  const videoDuration = sectionData?.Video_Duration || '00:00';\n\n  const handleOpenTellUsYourStoryModal = useEvent(() => {\n    if (isActive) setShowTellUsYourStoryModal(true);\n    else\n      addToast(\n        'error',\n        'none',\n        `${t('noumena.money.setup_wallet.not.authorized')}`,\n      );\n  });\n  const handleCloseTellUsYourStoryModal = useEvent(() => {\n    setShowTellUsYourStoryModal(false);\n  });\n\n  const handleOpenPlayVideoModal = useEvent(() => {\n    setShowPlayVideoModal(true);\n  });\n  const handleClosePlayVideoModal = useEvent(() => {\n    setShowPlayVideoModal(false);\n  });\n\n  return (\n    <StyledHomeStorySection data-testid=\"home-story-section-testid\">\n      <StyledVideoSection\n        thumbnailUrl={thumbnailUrl}\n        onClick={handleOpenPlayVideoModal}\n      >\n        <Button\n          size=\"small\"\n          primary\n          icon={\n            <Icon\n              name=\"play_xs\"\n              size={16}\n              color=\"--icon-button-neutral-alt-default\"\n            />\n          }\n        />\n        <Spacer height={16} />\n        <TSpan font=\"body-l-bold\" colorToken=\"--text-card-neutral-alt-default\">\n          {assetTitle}\n        </TSpan>\n        <StyledTime>{videoDuration}</StyledTime>\n      </StyledVideoSection>\n      <StyledContentSection>\n        <TSpan\n          font=\"heading-xs-bold\"\n          colorToken=\"--text-card-header-neutral-highlighted\"\n        >\n          {title}\n        </TSpan>\n        <StyledDescription\n          font=\"body-m\"\n          colorToken=\"--text-card-neutral-default\"\n        >\n          {description}\n        </StyledDescription>\n        <Button size=\"small\" secondary onClick={handleOpenTellUsYourStoryModal}>\n          {buttonLabel}\n        </Button>\n      </StyledContentSection>\n      <TellUsYourStoryModal\n        open={showTellUsYourStoryModal}\n        onClose={handleCloseTellUsYourStoryModal}\n        calendlyData={calendlyData}\n      />\n      <VideoPlayerModal\n        open={showPlayVideoModal}\n        onClose={handleClosePlayVideoModal}\n        videoURL={videoURL}\n      />\n    </StyledHomeStorySection>\n  );\n}\n","import styled from 'styled-components';\nimport { mediaSizes, sizes } from '@/constants/devices';\nimport { TSpan } from '@/components/Typography';\n\nexport const StyledOnboardingEventsSection = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 32px 24px;\n  isolation: isolate;\n  width: 100%;\n  min-width: 322px;\n  background: var(--bg-card-brand-primary-highlighted);\n  border-radius: 16px;\n  flex: none;\n  flex-grow: 0;\n  background: linear-gradient(\n    135.79deg,\n    var(--bg-blur-brand-primary-dark) 0%,\n    var(--bg-card-brand-primary-highlighted) 48.49%,\n    var(--bg-blur-brand-primary-default) 100%\n  );\n\n  @media (max-width: ${sizes.TABLET_L}) {\n    min-width: 704px;\n    border-radius: unset;\n  }\n\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    width: 100vw;\n    min-width: unset;\n    margin: unset;\n    border-radius: unset;\n    align-items: flex-start;\n  }\n`;\n\nexport const StyledHeader = styled.div`\n  text-align: center;\n  span {\n    display: inline-block;\n  }\n  @media (max-width: ${sizes.TABLET_L}) {\n    span {\n      font-weight: 600;\n      font-size: 24px;\n      line-height: 150%;\n    }\n  }\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    text-align: left;\n    margin: 0 0;\n    span {\n      font-weight: 600;\n      font-size: 20px;\n      line-height: 150%;\n    }\n  }\n`;\n\nexport const StyledDescription = styled(TSpan)`\n  text-align: center;\n  @media (max-width: ${mediaSizes.LAPTOP_L_MAX}) and (min-width: ${mediaSizes.LAPTOP_L_MIN}) {\n    width: 60%;\n  }\n  @media (max-width: ${sizes.TABLET_L}) {\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 150%;\n  }\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    text-align: left;\n  }\n`;\n","import { TSpan } from '@/components/Typography';\nimport { Spacer } from '@/layout/Stack';\nimport { useWindowDimensions } from '@/hooks/dimensions';\nimport { type Section01 } from '../types';\nimport {\n  StyledOnboardingEventsSection,\n  StyledHeader,\n  StyledDescription,\n} from './styles';\n\ntype OnboardingEventsSectionProps = {\n  data: Section01 | undefined;\n};\n\nexport default function OnboardingEventsSection(\n  props: OnboardingEventsSectionProps,\n) {\n  const { data } = props;\n  const title1 = data?.Title;\n  const description = data?.Description;\n  const { width } = useWindowDimensions();\n\n  return (\n    <StyledOnboardingEventsSection data-testid=\"noum-onboarding-section-testid\">\n      <StyledHeader>\n        <TSpan\n          font={width < 768 ? 'heading-xs-bold' : 'heading-s-bold'}\n          colorToken=\"--text-card-header-neutral-alt-default\"\n        >\n          {title1}\n        </TSpan>\n      </StyledHeader>\n      <Spacer height={8} />\n      <StyledDescription\n        font=\"body-l\"\n        colorToken=\"--text-card-brand-secondary-default\"\n      >\n        {description}\n      </StyledDescription>\n    </StyledOnboardingEventsSection>\n  );\n}\n","import styled from 'styled-components';\nimport { mediaSizes, sizes } from '@/constants/devices';\nimport { singleLineEllipisText } from '@/common/globalStyles';\nimport {\n  StyledCompleteInfoCard,\n  StyledUserInfoCard,\n} from './components/SideBar/styles';\n\nexport const Container = styled.div<{ isAppUiV2: boolean }>`\n  * {\n    box-sizing: border-box;\n  }\n  font-family: var(--font-family);\n  display: grid;\n  gap: 16px;\n  box-sizing: border-box;\n  ${(props) =>\n    !props.isAppUiV2 &&\n    `\n  @media (max-width: ${mediaSizes.MOBILE_S_MAX}) and (min-width: ${mediaSizes.MOBILE_S_MIN}) {\n    width: 100%;\n    gap: 16px;\n    padding-bottom: 80px;\n    padding-top: 16px;\n  }\n  @media (max-width: ${mediaSizes.MOBILE_M_MAX}) and (min-width: ${mediaSizes.MOBILE_M_MIN}) {\n    gap: 16px;\n    padding-bottom: 80px;\n    padding-top: 16px;\n  }\n  @media (max-width: ${mediaSizes.MOBILE_L_MAX}) and (min-width: ${mediaSizes.MOBILE_L_MIN}) {\n    width: calc(100vw);\n    gap: 16px;\n    padding-bottom: 80px;\n    padding-top: 16px;\n  }\n  @media (max-width: ${mediaSizes.TABLET_MAX}) and (min-width: ${mediaSizes.TABLET_MIN}) {\n    width: calc(100vw);\n    padding-bottom: 110px;\n    padding-top: 16px;\n  }\n  @media (max-width: ${sizes.LAPTOP_L}) and (min-width: ${sizes.LAPTOP}) {\n    width: calc(100vw - 512px);\n    max-width: 925px;\n  }\n  @media (max-width: ${mediaSizes.LAPTOP_MAX}) and (min-width: ${sizes.LAPTOP_SM}) {\n    width: calc(100vw - 512px);\n    max-width: 925px;\n  }\n  @media (max-width: ${mediaSizes.LAPTOP_L_MAX}) and (min-width: ${mediaSizes.LAPTOP_L_MIN}) {\n    width: calc(100vw - 512px);\n    max-width: 925px;\n  }\n  @media (min-width: ${sizes.DESKTOP}) {\n    width: calc(100vw - 512px);\n    max-width: 925px;\n  }\n  `}\n`;\n\nexport const NoumMeCard = styled(StyledCompleteInfoCard)`\n  display: none;\n  border-radius: unset;\n  align-items: center;\n\n  span {\n    display: inline-block;\n  }\n\n  @media (max-width: ${sizes.TABLET_L}) {\n    display: flex;\n    flex-direction: row;\n  }\n  @media (max-width: ${sizes.TABLET_L}) {\n    padding: 32px;\n    justify-content: space-between;\n    > div:first-of-type {\n      width: 60%;\n    }\n  }\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    flex-direction: column;\n    padding: 16px;\n    gap: 48px;\n    > div:first-of-type {\n      width: 100%;\n      span:first-of-type {\n        width: 80%;\n      }\n    }\n  }\n`;\n\nexport const ButtonContainer = styled.div`\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    display: flex;\n    justify-content: flex-start;\n    width: 100%;\n  }\n`;\n\nexport const UserInfoCard = styled(StyledUserInfoCard)`\n  display: none;\n  border-radius: unset;\n  .right {\n    flex: 1;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-left: 16px;\n    .name-and-title {\n      width: 60%;\n      .name {\n        padding-top: unset;\n        ${singleLineEllipisText}\n      }\n      .job-title {\n        font-weight: 400;\n        font-size: 16px;\n        line-height: 150%;\n        ${singleLineEllipisText}\n        color: var(--text-card-header-neutral-default);\n      }\n    }\n  }\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    .right {\n      flex-direction: column;\n      justify-content: center;\n      align-items: flex-start;\n      .name-and-title {\n        width: 100%;\n      }\n      .job-title {\n        display: none !important;\n      }\n    }\n  }\n  @media (max-width: ${sizes.TABLET_L}) {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n  }\n`;\n","import { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useTranslation } from 'react-i18next';\nimport * as Storyblok from '@/services/rest/storyblok';\nimport ListLayout from '@/layout/ListLayout';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useLaunchDarkly } from '@/hooks';\nimport { Button } from '@/components/Button';\nimport useEvent from '@/hooks/useEvent';\nimport { Icon } from '@/components/Icon';\nimport { TSpan } from '@/components/Typography';\nimport { Spacer } from '@/layout/Stack';\nimport routes from '@/constants/routes';\nimport HowItWorksSection from './components/HowItWorksSection/HowItWorksSection';\nimport { NoumMeModal } from './components/NoumMeModal/Modal';\nimport NoumsForYouSection from './components/NoumsForYouSection/NoumsForYouSection';\nimport SideBar from './components/SideBar/SideBar';\nimport StorySection from './components/StorySection/StorySection';\nimport OnboardingEventsSection from './components/OnboardingEventsSection/OnboardingEventsSection';\nimport { type Content, type RootObject } from './types';\nimport { Container, NoumMeCard, UserInfoCard, ButtonContainer } from './styles';\n\nconst Home = () => {\n  const [showNoumMeModal, setShowNoumMeModal] = useState<boolean>(false);\n  const [content, setContent] = useState<Content>();\n  const componentMounted = useRef(true);\n  const { isActive, user } = useAuth();\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { flags } = useLaunchDarkly();\n\n  const firstName = user?.firstName || '';\n  const middleName = user?.middleName || '';\n  const lastName = user?.lastName || '';\n  const jobTitle = user?.title || '';\n  const profilePicture = user?.profile?.profilePicture || '';\n\n  const title = content?.Section_03?.length && content?.Section_03[0]?.Title;\n  const description =\n    content?.Section_03?.length && content?.Section_03[0]?.Description;\n  const buttonLabel =\n    content?.Section_03?.length && content?.Section_03[0]?.Button_Label;\n  const recommendedNoumIds = content?.Noum_recommendations || [];\n\n  const handleOpenNoumMeModal = useEvent(() => {\n    setShowNoumMeModal(true);\n  });\n  const handleCloseNoumMeModal = useEvent(() => {\n    setShowNoumMeModal(false);\n  });\n\n  useEffect(() => {\n    async function getContent() {\n      const { data }: { data: RootObject } =\n        await Storyblok.getHomePageMainPageLayout();\n\n      if (componentMounted.current) {\n        setContent(data?.story?.content);\n      }\n    }\n    getContent();\n\n    return () => {\n      componentMounted.current = false;\n    };\n  }, []);\n  return (\n    <ListLayout\n      type=\"Home\"\n      rightContent={<SideBar data={content?.Section_03} />}\n    >\n      <Container isAppUiV2={flags.newAppNavigation}>\n        <UserInfoCard profileImageUrl={profilePicture}>\n          {!!profilePicture && <div className=\"image\" />}\n          {!profilePicture && (\n            <Icon imageIconName=\"avatar_m\" size={56} data-testid=\"avatarIcon\" />\n          )}\n          <div className=\"right\">\n            <div className=\"name-and-title\">\n              <TSpan\n                font=\"body-xl-bold\"\n                className=\"name\"\n                colorToken=\"--text-card-header-neutral-highlighted\"\n              >{`${firstName} ${middleName} ${lastName}`}</TSpan>\n              <div className=\"job-title\">{jobTitle}</div>\n            </div>\n            <Button\n              className=\"link\"\n              textOnly\n              rightIcon={\n                <Icon\n                  name=\"arrow_right_m\"\n                  size={20}\n                  color=\"--icon-button-brand-secondary-default\"\n                />\n              }\n              onClick={() => navigate(routes.HOME_NOUM)}\n            >\n              {t('noumena.home.go_to_your_home_noum')}\n            </Button>\n          </div>\n        </UserInfoCard>\n        <OnboardingEventsSection data={content?.Section_01?.[0]} />\n        <StorySection\n          sectionData={content?.Section_02?.[0]}\n          calendlyData={content?.Schedule_a_call}\n        />\n        <NoumMeCard>\n          <div>\n            <TSpan\n              font=\"body-xl-bold\"\n              colorToken=\"--text-card-neutral-alt-default\"\n            >\n              {title}\n            </TSpan>\n            <Spacer height={16} />\n            <TSpan\n              font=\"body-l\"\n              colorToken=\"--text-card-brand-secondary-default\"\n            >\n              {description}\n            </TSpan>\n          </div>\n          <ButtonContainer>\n            <Button\n              primary\n              size=\"small\"\n              className={`${!isActive ? 'disabled' : ''}`}\n              disabled={!isActive}\n              onClick={handleOpenNoumMeModal}\n            >\n              {buttonLabel}\n            </Button>\n          </ButtonContainer>\n        </NoumMeCard>\n        <HowItWorksSection data={content?.Section_02?.[1]} />\n        {!!recommendedNoumIds.length && (\n          <NoumsForYouSection recommendedNoumIds={recommendedNoumIds} />\n        )}\n        <NoumMeModal open={showNoumMeModal} onClose={handleCloseNoumMeModal} />\n      </Container>\n    </ListLayout>\n  );\n};\n\nexport default Home;\n"],"names":["StyledHowItWorksSection","styled","div","sizes","TABLET_L","MOBILE_MAX","HeaderWrapper","HeaderTitle","TSpan","mediaSizes","TABLET_MAX","MOBILE_L_MAX","MOBILE_L_MIN","ShowAllButton","Button","StyledCardsSection","StyledSwiperControls","StyledCard","attrs","props","imageUrl","singleLineEllipisText","tagsList","name","image","text","labelSize","SwiperFreeMode","t","useTranslation","navigate","useNavigate","disablePrevBtn","setDisablePrevBtn","useState","disableNextBtn","setDisableNextBtn","articles","fetchedArticles","setFetchedArticles","swiper","setSwiper","selectedTab","setSelectedTab","width","useWindowDimensions","slidesPerView","breakpoints","MOBILE_L","TABLET","LAPTOP","LAPTOP_SM","useEffect","settledPromises","Promise","allSettled","map","article","getArticleDetails","Link","cached_url","fetchedArticlesRes","promise","item","value","data","story","navigateToArticles","useEvent","routes","ARTICLES","prevSlide","destroyed","slidePrev","nextSlide","slideNext","jsx","Fragment","Swiper","swiperInstance","progress","jsxs","BasicChipsTabsForm","Number","toString","length","Icon","index","id","content","full_slug","slug","Main_Image","filename","title","Title","description","Short_Description","type","capitalize","Main_Category","split","join","SwiperSlide","pathname","ARTICLE","search","HowItWorksSection","Articles","Spacer","StyledChamberCompletenessWrapper","NoumMeModal","memo","masterId","useAuth","res","useNoumDetails","loading","loadingSpace","mainSpaceId","connectedMembers","connectedMembersCount","existingConnection","onRefetchConnectedMembers","onRefetchConnections","onRefetchSpaceByConfig","onRefetchSpaceById","spaceConfigData","open","onClose","isDesktop","isMobile","Modal","primary","color","background","ModalHeader","colorToken","ModalBody","ChamberProvider","getSpaceById","undefined","getSpaceConfig","ChamberCompleteness","ModalFooter","HOME_NOUM","recommendedNoumIds","useGetProjectChambersQuery","variables","filter","spaceIds","recommendedNoums","useMemo","getProjectChambers","SpinnerContainer","Spinner","noum","_id","`SwiperFreeMode-SwiperSlide-${id}`","ChamberItem","ChamberBox","profileImage","uid","profile","profilePicture","OwnerDefaultImage","category","toLowerCase","ChamberBoxNameEnum","member","getFullName","firstName","middleName","lastName","status","SpaceStatusEnum","Archived","followersCount","location","NoumsForYouSection","StyledNoumsForYouSection","StyledSideBar","StyledUserInfoCard","profileImageUrl","UserName","Designation","StyledCompleteInfoCard","SideBar","showNoumMeModal","setShowNoumMeModal","user","isActive","Description","buttonLabel","Button_Label","jobTitle","handleOpenNoumMeModal","handleCloseNoumMeModal","Tag","StyledHomeStorySection","StyledVideoSection","thumbnailUrl","StyledContentSection","StyledTime","span","StyledDescription","StyledStep","Highlight","TellUsYourStoryModal","generateOneTimeTokenMutation","useGenerateOneTimeTokenMutation","calendlyData","isTablet","handleCalendlyRedirect","calendlyUrl","url","useCallback","formedUrl","onError","networkError","graphQLErrors","err","Sentry","Error","message","tags","section","onCompleted","generateOneTimeToken","ModalSize","L","Trans","highlight","u","StorySection","addToast","useToast","showTellUsYourStoryModal","setShowTellUsYourStoryModal","showPlayVideoModal","setShowPlayVideoModal","sectionData","assetTitle","Asset_Title","Thumbnail","videoURL","Asset","videoDuration","Video_Duration","handleOpenTellUsYourStoryModal","handleCloseTellUsYourStoryModal","handleOpenPlayVideoModal","handleClosePlayVideoModal","VideoPlayerModal","StyledOnboardingEventsSection","StyledHeader","LAPTOP_L_MAX","LAPTOP_L_MIN","OnboardingEventsSection","title1","Container","isAppUiV2","MOBILE_S_MAX","MOBILE_S_MIN","MOBILE_M_MAX","MOBILE_M_MIN","TABLET_MIN","LAPTOP_L","LAPTOP_MAX","DESKTOP","NoumMeCard","ButtonContainer","UserInfoCard","Home","setContent","componentMounted","useRef","flags","useLaunchDarkly","Section_03","Noum_recommendations","getContent","Storyblok","current","ListLayout","newAppNavigation","Section_01","Section_02","Schedule_a_call","Home$1"],"mappings":"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"}