{"version":3,"file":"index-75253385.js","sources":["../../src/components/SideMenu/SideMenuItem/utils.ts","../../src/components/SideMenu/SideMenuItem/styles.ts","../../src/components/SideMenu/SideMenuItem/SideMenuItem.tsx","../../src/components/SideMenu/SideMenu.tsx","../../src/layout/MyAccountLayout/sideMenuItems.ts","../../src/layout/MyAccountLayout/styles.ts","../../src/layout/MyAccountLayout/index.tsx"],"sourcesContent":["export const SIDE_MENU_ITEM_HEIGHT = 64;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { TSpan } from '@/components/Typography/Typography';\nimport { sizes } from '@/constants/devices';\nimport { SIDE_MENU_ITEM_HEIGHT } from './utils';\n\nexport const SideMenuItemContainer = styled(Link)`\n  width: 100%;\n  text-decoration: none;\n  &:hover {\n    path {\n      fill: var(--icon-tablecell-neutral-highlighted) !important;\n    }\n    ${TSpan} {\n      color: var(--text-tablecell-header-neutral-highlighted);\n    }\n  }\n`;\n\nexport const SideMenuItemContent = styled.div`\n  height: ${SIDE_MENU_ITEM_HEIGHT}px;\n  box-sizing: border-box;\n  width: 100%;\n  min-height: 42px;\n  gap: 16px;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  padding: 20px 24px 20px 40px;\n  align-items: center;\n  cursor: pointer;\n  @media (max-width: ${sizes.TABLET_L}) {\n    padding-left: 16px;\n    padding-right: 16px;\n  }\n\n  &:hover {\n    path {\n      fill: var(--icon-tablecell-neutral-highlighted) !important;\n    }\n    ${TSpan} {\n      color: var(--text-tablecell-header-neutral-highlighted);\n    }\n  }\n`;\n\nexport const StyledLabel = styled.div<{\n  active: boolean;\n  disabled: boolean;\n}>`\n  flex-grow: 6;\n  &:active {\n    color: var(--text-tablecell-header-neutral-highlighted);\n  }\n`;\n","import { useCallback } from 'react';\nimport { Icon } from '@/components/Icon';\nimport { TSpan } from '@/components/Typography';\nimport { type SideMenuItemProps } from './types';\nimport {\n  SideMenuItemContainer,\n  StyledLabel,\n  SideMenuItemContent,\n} from './styles';\n\nconst defaultNoRoute = '#';\nexport const SideMenuItem = ({\n  icon,\n  label,\n  onItemChange,\n  active = false,\n  value,\n  disabled = false,\n  to = defaultNoRoute,\n  external = false,\n  setIsShown,\n  ...rest\n}: SideMenuItemProps) => {\n  const handleOnClick = useCallback(\n    (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      if (disabled) {\n        event.preventDefault();\n        event.stopPropagation();\n        return;\n      }\n      if (onItemChange) {\n        onItemChange(value, external || false);\n      }\n      if (setIsShown) {\n        setIsShown(false);\n      }\n    },\n    [disabled, onItemChange, setIsShown, value, external],\n  );\n  return (\n    <SideMenuItemContainer\n      to={to}\n      onClick={handleOnClick}\n      data-testid=\"Nav-item-container\"\n      {...rest}\n    >\n      <SideMenuItemContent>\n        {icon && (\n          <Icon\n            data-testid=\"Nav-icon\"\n            name={icon}\n            color={\n              active && !disabled\n                ? '--icon-tablecell-neutral-highlighted'\n                : '--icon-tablecell-neutral-default'\n            }\n            size={24}\n          />\n        )}\n        <StyledLabel\n          active={active}\n          disabled={!!disabled}\n          data-testid=\"Nav-label\"\n        >\n          <TSpan\n            font=\"body-l-bold\"\n            colorToken={\n              active\n                ? '--text-tablecell-header-neutral-highlighted'\n                : '--text-tablecell-header-neutral-default'\n            }\n          >\n            {label}\n          </TSpan>\n        </StyledLabel>\n        <Icon\n          name=\"chevron_right_m\"\n          size={16}\n          color={\n            active && !disabled\n              ? '--icon-tablecell-neutral-highlighted'\n              : '--icon-tablecell-neutral-default'\n          }\n        />\n      </SideMenuItemContent>\n    </SideMenuItemContainer>\n  );\n};\n","import { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { motion } from 'framer-motion';\nimport ROUTES from '@/constants/routes';\nimport { useWindowDimensions } from '@/hooks';\nimport { breakpoints } from '@/constants/devices';\nimport { Icon } from '@/components/Icon';\nimport { Button } from '@/components/Button';\nimport { Spacer } from '@/layout';\nimport { LINKS } from '@/constants/links';\nimport { Env } from '@/constants/env';\nimport { useHelpPanel } from '@/hooks/helpPanel';\nimport InviteFriendSideMenuSection from './InviteFriendSideMenuSection';\nimport { SideMenuItemContent } from './SideMenuItem/styles';\nimport { TSpan } from '../Typography';\nimport { SideMenuItem } from './SideMenuItem/SideMenuItem';\nimport { type SideMenuProps } from './types';\nimport {\n  MenuFooterItem,\n  MyAccount,\n  MyAccountHeader,\n  ScrollSection,\n  SideBorder,\n  SideBorderMain,\n  SideMenuContainer,\n  SideMenuFooterLinksContainer,\n  StyledStack,\n  StyledStaticLabel,\n  VersionContainer,\n} from './styles';\nimport { SIDE_MENU_ITEM_HEIGHT } from './SideMenuItem/utils';\n\nexport const SideMenu = ({\n  navItems = [],\n  navItemsMore = [],\n  onNavChange,\n  handleClose,\n  isUserPending,\n}: SideMenuProps) => {\n  const windowSize = useWindowDimensions();\n  const laptopWidth = breakpoints.LAPTOP_L;\n  const vertical = windowSize.width >= laptopWidth;\n  const { t } = useTranslation();\n  const pathName = window.location.pathname;\n  const { toggleHelpPanel } = useHelpPanel();\n\n  const activeItemIndex = useMemo(\n    () => navItems.findIndex((item) => item.value === pathName),\n    [navItems, pathName],\n  );\n  const activeItemIndexMore = useMemo(\n    () => navItemsMore.findIndex((item) => item.value === pathName),\n    [navItemsMore, pathName],\n  );\n  const offsetY =\n    (activeItemIndex !== -1 ? activeItemIndex : activeItemIndexMore + 3) *\n    SIDE_MENU_ITEM_HEIGHT;\n\n  const onClickHelpButton = () => {\n    toggleHelpPanel();\n  };\n\n  return (\n    <SideMenuContainer data-testid=\"Side-Menu-Container\">\n      <MyAccountHeader>\n        <MyAccount>\n          <TSpan\n            font=\"heading-m-bold\"\n            colorToken=\"--text-card-header-neutral-highlighted\"\n          >\n            {t('noumena.myaccount.title')}\n          </TSpan>\n        </MyAccount>\n        {windowSize.width <= breakpoints.TABLET_L && (\n          <Icon\n            name=\"close_m\"\n            size={24}\n            onClick={handleClose}\n            color=\"--icon-tablecell-neutral-highlighted\"\n          />\n        )}\n      </MyAccountHeader>\n      <Spacer height={24} />\n      <ScrollSection>\n        <InviteFriendSideMenuSection\n          marginLeft=\"24px\"\n          handleClick={handleClose}\n          paddingLeft=\"16px\"\n          disabled={isUserPending}\n        />\n        <Spacer height={24} />\n        <StyledStack align=\"center\" vertical={vertical} fullWidth={vertical}>\n          {pathName !== ROUTES.INVITES_FRIENDS && (\n            <SideBorderMain>\n              <motion.div\n                animate={{ y: offsetY }}\n                transition={{ type: 'spring' }}\n              >\n                <SideBorder pathName={pathName} />\n              </motion.div>\n            </SideBorderMain>\n          )}\n          {navItems.map(({ value, external, ...rest }) => (\n            <SideMenuItem\n              data-testid=\"Side-Menu-Item\"\n              key={value}\n              active={value === pathName}\n              onItemChange={onNavChange}\n              value={value}\n              external={external}\n              {...rest}\n            />\n          ))}\n          <SideMenuItemContent>\n            <Icon\n              data-testid=\"Nav-icon\"\n              name=\"privacy_policy_m\"\n              color=\"--icon-tablecell-neutral-default\"\n              size={24}\n            />\n            <StyledStaticLabel>\n              <TSpan\n                font=\"body-l-bold\"\n                colorToken=\"--text-tablecell-header-neutral-default\"\n                data-testid=\"privacy\"\n                onClick={() => onNavChange(LINKS.PRIVACY, true)}\n              >\n                {t(`noumena.myaccount.privacy_policy`)}\n              </TSpan>\n            </StyledStaticLabel>\n            <Icon\n              name=\"chevron_right_m\"\n              color=\"--icon-tablecell-neutral-default\"\n              size={16}\n            />\n          </SideMenuItemContent>\n          {navItemsMore.map(({ value, external, ...rest }) => (\n            <SideMenuItem\n              data-testid=\"Side-Menu-Item\"\n              key={value}\n              active={value === pathName}\n              onItemChange={onNavChange}\n              value={value}\n              external={external}\n              {...rest}\n            />\n          ))}\n          <SideMenuItemContent>\n            <Icon\n              data-testid=\"Nav-icon\"\n              name=\"terms_m\"\n              color=\"--icon-tablecell-neutral-default\"\n              size={24}\n            />\n            <StyledStaticLabel>\n              <TSpan\n                data-testid=\"terms\"\n                colorToken=\"--text-tablecell-header-neutral-default\"\n                font=\"body-l-bold\"\n                onClick={() => onNavChange(LINKS.TERMS, true)}\n              >\n                {t(`noumena.myaccount.terms_of_use`)}\n              </TSpan>\n            </StyledStaticLabel>\n            <Icon\n              name=\"chevron_right_m\"\n              color=\"--icon-tablecell-neutral-default\"\n              size={16}\n            />\n          </SideMenuItemContent>\n        </StyledStack>\n        <Spacer height={95} />\n        <SideMenuFooterLinksContainer>\n          <MenuFooterItem>\n            <Button\n              leftIcon={\n                <Icon\n                  name=\"question\"\n                  size={25}\n                  color=\"--icon-tablecell-neutral-highlighted\"\n                />\n              }\n              textOnly\n              onClick={onClickHelpButton}\n            >\n              <TSpan\n                font=\"body-l-bold\"\n                colorToken=\"--text-tablecell-header-neutral-highlighted\"\n              >\n                {t('noumena.header.menu.help')}\n              </TSpan>\n            </Button>\n          </MenuFooterItem>\n          <VersionContainer>\n            {t('noumena.myaccount.version', {\n              version: Env.packageVersion,\n            })}\n          </VersionContainer>\n        </SideMenuFooterLinksContainer>\n      </ScrollSection>\n    </SideMenuContainer>\n  );\n};\n\nexport default SideMenu;\n","import { t } from 'i18next';\nimport ROUTES from '@/constants/routes';\nimport { type SideMenuItemProps } from '@/components/SideMenu/SideMenuItem/types';\n\nexport const getAccountRelativeRouteName = (route: string) =>\n  route.replace(ROUTES.MY_ACCOUNT, '');\n\nexport const sideMenuItems: SideMenuItemProps[] = [\n  {\n    icon: 'settings_m',\n    label: t(`noumena.myaccount.account_settings`),\n    id: '2',\n    value: `${ROUTES.ACCOUNT_SETTINGS}`,\n    to: `${ROUTES.ACCOUNT_SETTINGS}`,\n  },\n  {\n    icon: 'notifications_m',\n    label: t(`noumena.myaccount.notifications`),\n    id: '3',\n    value: `${ROUTES.NOTIFICATIONS_SETTINGS}`,\n    to: `${ROUTES.NOTIFICATIONS_SETTINGS}`,\n  },\n];\nexport const sideMenuItemsMore: SideMenuItemProps[] = [\n  {\n    icon: 'terms_m',\n    label: 'Cookie Policy',\n    id: '4',\n    value: `${ROUTES.COOKIE_SETTINGS}`,\n    to: `${ROUTES.COOKIE_SETTINGS}`,\n  },\n];\n","import styled from 'styled-components';\nimport { sizes } from '@/constants/devices';\n\nexport const Container = styled.div`\n  font-family: var(--font-family);\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: var(--bg-body-neutral-alt-default);\n`;\nexport const Main = styled.div<{ $isAppUiV2?: boolean }>`\n  position: relative;\n  display: flex;\n  ${(props) =>\n    !props.$isAppUiV2 &&\n    `\n  @media (min-width: ${sizes.LAPTOP_M}) {\n    width: 1440px;\n    margin: 0 auto;\n  }\n  `}\n`;\nexport const LeftContent = styled.div`\n  display: block;\n  box-shadow: 1px 0px 0px var(--shadow-neutral-alt-default);\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  @media (min-width: ${sizes.LAPTOP}) {\n    margin-left: 36px;\n  }\n`;\n\nexport const LayoutMainContent = styled.div`\n  width: 100%;\n  height: 90vh;\n  overflow-y: auto;\n  overflow-x: hidden;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n","import { useNavigate, type NavigateFunction } from 'react-router-dom';\nimport { useCallback, useEffect, useState } from 'react';\nimport { Header } from '@/components/Header';\nimport { MainHeader } from '@/layout/MainHeader';\nimport { UserUtil } from '@/utils/user';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useLaunchDarkly, useWindowDimensions } from '@/hooks';\nimport { SideMenu } from '@/components/SideMenu';\nimport { HamburgerWrapper, MobileHeader } from '@/components/SideMenu/styles';\nimport { Icon } from '@/components/Icon';\nimport { breakpoints } from '@/constants/devices';\nimport { TSpan } from '@/components/Typography';\nimport { Modal } from '@/components/ExtendedModal';\nimport { sideMenuItems, sideMenuItemsMore } from './sideMenuItems';\nimport {\n  Container,\n  Main,\n  LeftContent,\n  Content,\n  LayoutMainContent,\n} from './styles';\nimport { type LayoutProps } from './types';\nimport { AppLayout } from '../AppLayout';\n\nconst MyAccount: React.FC<LayoutProps> = ({ children, mobileHeader }) => {\n  const { width } = useWindowDimensions();\n  const isLaptop = width > breakpoints.TABLET_L;\n\n  const [isShown, setIsShown] = useState(!isLaptop);\n\n  const { user, isPending } = useAuth();\n  const navigate: NavigateFunction = useNavigate();\n  const onNavigate = useCallback(\n    (nextPath: string, externalLink: boolean) => {\n      setIsShown(false);\n      if (externalLink) {\n        window.open(nextPath, '_blank');\n        return;\n      }\n\n      navigate(nextPath, { replace: false });\n    },\n    [navigate],\n  );\n\n  const { flags } = useLaunchDarkly();\n\n  const handleClick = () => {\n    setIsShown(!isShown);\n  };\n  useEffect(() => {\n    setIsShown(isLaptop);\n  }, [width, isLaptop]);\n\n  const sideMenuBar = () => (\n    <SideMenu\n      data-testid=\"layout-left-content\"\n      onNavChange={onNavigate}\n      navItems={sideMenuItems}\n      navItemsMore={sideMenuItemsMore}\n      handleClose={() => setIsShown(false)}\n      isUserPending={isPending}\n    />\n  );\n\n  if (flags.newAppNavigation) {\n    return (\n      <AppLayout.Layout\n        onGoBack={() => navigate(-1)}\n        background=\"neutral-alt\"\n        topNavbar={<AppLayout.TopBar />}\n        sideNav={<AppLayout.SideNavigation />}\n      >\n        <Main data-testid=\"layout-main\" $isAppUiV2>\n          <LeftContent data-testid=\"layout-left-content\">\n            {isLaptop ? (\n              sideMenuBar()\n            ) : (\n              <Modal open={isShown} forceHideCloseButton isFullScreen>\n                {' '}\n                {sideMenuBar()}{' '}\n              </Modal>\n            )}\n          </LeftContent>\n          <LayoutMainContent data-testid=\"layout-main-content\">\n            {!isLaptop && (\n              <MobileHeader>\n                <HamburgerWrapper>\n                  <Icon\n                    name=\"menu_m\"\n                    size={24}\n                    onClick={handleClick}\n                    color=\"--icon-button-neutral-default\"\n                  />\n                </HamburgerWrapper>\n                <TSpan\n                  font=\"body-l-bold\"\n                  colorToken=\"--text-appbar-neutral-default\"\n                >\n                  {mobileHeader}\n                </TSpan>\n              </MobileHeader>\n            )}\n            <Content>{children}</Content>\n          </LayoutMainContent>\n        </Main>\n      </AppLayout.Layout>\n    );\n  }\n\n  return (\n    <Container data-testid=\"layout-container\">\n      <Header isBorderRadius={false}>\n        <MainHeader\n          avatar={UserUtil.getProfilePicture(user) || undefined}\n          userName={user?.firstName || undefined}\n        />\n      </Header>\n      <Main data-testid=\"layout-main\">\n        <LeftContent data-testid=\"layout-left-content\">\n          {isLaptop ? (\n            sideMenuBar()\n          ) : (\n            <Modal open={isShown} forceHideCloseButton isFullScreen>\n              {' '}\n              {sideMenuBar()}{' '}\n            </Modal>\n          )}\n        </LeftContent>\n        <LayoutMainContent data-testid=\"layout-main-content\">\n          {!isLaptop && (\n            <MobileHeader>\n              <HamburgerWrapper>\n                <Icon\n                  name=\"menu_m\"\n                  size={24}\n                  onClick={handleClick}\n                  color=\"--icon-button-neutral-default\"\n                />\n              </HamburgerWrapper>\n              <TSpan\n                font=\"body-l-bold\"\n                colorToken=\"--text-appbar-neutral-default\"\n              >\n                {mobileHeader}\n              </TSpan>\n            </MobileHeader>\n          )}\n          <Content>{children}</Content>\n        </LayoutMainContent>\n      </Main>\n    </Container>\n  );\n};\nexport default MyAccount;\n"],"names":["SIDE_MENU_ITEM_HEIGHT","SideMenuItemContainer","styled","Link","TSpan","SideMenuItemContent","div","sizes","TABLET_L","StyledLabel","defaultNoRoute","SideMenuItem","icon","label","onItemChange","active","value","disabled","to","external","setIsShown","rest","handleOnClick","useCallback","event","preventDefault","stopPropagation","jsx","jsxs","Icon","SideMenu","navItems","navItemsMore","onNavChange","handleClose","isUserPending","windowSize","useWindowDimensions","laptopWidth","breakpoints","LAPTOP_L","vertical","width","t","useTranslation","pathName","window","location","pathname","toggleHelpPanel","useHelpPanel","activeItemIndex","useMemo","findIndex","item","activeItemIndexMore","offsetY","onClickHelpButton","SideMenuContainer","MyAccountHeader","MyAccount","Spacer","ScrollSection","InviteFriendSideMenuSection","StyledStack","ROUTES","INVITES_FRIENDS","SideBorderMain","motion","y","type","SideBorder","map","`SideMenu-SideMenuItem-${value}`","StyledStaticLabel","LINKS","PRIVACY","TERMS","SideMenuFooterLinksContainer","MenuFooterItem","Button","VersionContainer","version","Env","packageVersion","getAccountRelativeRouteName","route","replace","MY_ACCOUNT","sideMenuItems","id","ACCOUNT_SETTINGS","NOTIFICATIONS_SETTINGS","sideMenuItemsMore","COOKIE_SETTINGS","Container","Main","props","$isAppUiV2","LAPTOP_M","LeftContent","Content","LAPTOP","LayoutMainContent","children","mobileHeader","isLaptop","isShown","useState","user","isPending","useAuth","navigate","useNavigate","onNavigate","nextPath","externalLink","open","flags","useLaunchDarkly","handleClick","useEffect","sideMenuBar","newAppNavigation","AppLayout","Modal","MobileHeader","HamburgerWrapper","Header","MainHeader","UserUtil","getProfilePicture","undefined","firstName"],"mappings":"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"}