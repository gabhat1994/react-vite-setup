{"version":3,"file":"Articles-bd102f38.js","sources":["../../src/screens/Articles/styles.ts","../../src/screens/Articles/index.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { mediaSizes, sizes } from '@/constants/devices';\nimport { singleLineEllipisText } from '@/common/globalStyles';\n\nexport const Container = styled.div<{ $isAppUiV2: boolean }>`\n  margin: 0 auto;\n  width: 100%;\n  box-sizing: border-box;\n  padding: 16px;\n\n  ${(props) =>\n    props.$isAppUiV2\n      ? `\n        padding: 0;\n      `\n      : `\n  @media (max-width: ${mediaSizes.TABLET_MAX}) and (min-width: ${mediaSizes.TABLET_MIN}) {\n    width: calc(100vw - 32px);\n    padding: 16px 0 0 0;\n  }\n  @media (max-width: ${mediaSizes.LAPTOP_MAX}) and (min-width: ${mediaSizes.LAPTOP_MIN}) {\n    width: 100%;\n    max-width: 1224px;\n    padding: 0;\n  }\n  @media (max-width: ${mediaSizes.LAPTOP_L_MAX}) and (min-width: ${mediaSizes.LAPTOP_L_MIN}) {\n    width: 1224px;\n    padding: 0;\n  }\n  @media (min-width: ${sizes.DESKTOP}) {\n    width: calc(100vw - 200px);\n    max-width: 1224px;\n    padding: 0;\n  }\n  `}\n`;\n\nexport const StyledAllArticles = styled.div`\n  font-family: var(--font-family);\n  @media (max-width: ${mediaSizes.TABLET_MAX}) {\n    padding-bottom: 87px;\n  }\n`;\n\nexport const StyledHeader = styled.div`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 20px;\n  line-height: 150%;\n  color: var(--text-body-header-neutral-default);\n  margin-bottom: 16px;\n`;\n\nexport const StyledTagsSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  background: var(--bg-card-neutral-alt-default);\n  border-radius: 16px;\n  padding: 24px;\n  margin: 24px 0;\n  .tags {\n    > span {\n      margin-right: 12px;\n    }\n  }\n  @media (max-width: ${mediaSizes.MOBILE_L_MAX}) {\n    margin: 0;\n    border-radius: unset;\n  }\n  @media (min-width: ${mediaSizes.TABLET_MIN}) and (max-width: ${mediaSizes.TABLET_MAX}) {\n    padding: 16px;\n    margin: 16px 0;\n  }\n  @media (max-width: ${mediaSizes.TABLET_MIN}) {\n    padding: 16px;\n  }\n`;\nexport const StyledArticlesSection = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-gap: 24px;\n`;\n\nexport const StyledArticlesGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-auto-rows: max-content;\n  grid-gap: 24px;\n  padding-bottom: 24px;\n  .StyledCard {\n    :nth-child(9n + 1) {\n      grid-column: auto / span 2;\n    }\n  }\n\n  @media (min-width: ${mediaSizes.TABLET_MIN}) and (max-width: ${mediaSizes.TABLET_MAX}) {\n    grid-template-columns: repeat(3, 1fr);\n    grid-gap: 16px;\n    padding-bottom: 16px;\n    .StyledCard {\n      :nth-child(9n + 1) {\n        grid-column: auto / span 1;\n      }\n      :nth-child(7n + 1) {\n        grid-column: auto / span 3;\n      }\n    }\n  }\n\n  @media (max-width: ${mediaSizes.MOBILE_L_MAX}) {\n    grid-template-columns: repeat(2, 1fr);\n    grid-gap: 16px;\n    padding-bottom: 16px;\n    .StyledCard {\n      :nth-child(9n + 1) {\n        grid-column: auto / span 1;\n      }\n      :nth-child(7n + 1) {\n        grid-column: auto / span 1;\n      }\n    }\n  }\n  @media (max-width: ${mediaSizes.MOBILE_XL_MAX}) {\n    grid-template-columns: repeat(1, 1fr);\n    grid-gap: 16px;\n    padding-bottom: 16px;\n    .StyledCard {\n      :nth-child(9n + 1) {\n        grid-column: auto / span 1;\n      }\n      :nth-child(7n + 1) {\n        grid-column: auto / span 1;\n      }\n    }\n  }\n`;\n\nexport const StyledCard = styled.div.attrs(\n  (props: { imageUrl: string }) => props,\n)`\n  cursor: pointer;\n  padding: 8px !important;\n  display: flex;\n  flex-direction: column;\n  padding: 0px;\n  background: var(--bg-card-neutral-alt-default);\n  border-radius: 20px;\n  &.featured {\n    display: flex;\n    flex-direction: row;\n    min-height: 225px;\n  }\n  &.featured .article-image {\n    height: 100%;\n    width: 50%;\n    min-width: 50%;\n  }\n  &.featured .article-details {\n    padding: 24px;\n    .title {\n      display: -webkit-box;\n      -webkit-line-clamp: 2;\n      -webkit-box-orient: vertical;\n      overflow: hidden;\n      font-size: 18px;\n      line-height: 160%;\n    }\n    .content {\n      display: -webkit-box;\n      -webkit-line-clamp: 4;\n      -webkit-box-orient: vertical;\n      overflow: hidden;\n    }\n  }\n  .article-image {\n    border-radius: 12px;\n    width: 100%;\n    height: 134px;\n    background: url(${(props) => props.imageUrl}) no-repeat center center;\n    background-size: cover;\n  }\n  .article-details {\n    padding: 8px;\n    text-align: left;\n    .type {\n      font-style: normal;\n      font-weight: 600;\n      font-size: 12px;\n      line-height: 160%;\n      color: var(--text-card-header-neutral-default);\n    }\n    .title {\n      font-style: normal;\n      font-weight: 600;\n      font-size: 16px;\n      line-height: 150%;\n      color: var(--text-card-header-neutral-highlighted);\n      ${singleLineEllipisText}\n    }\n    .content {\n      padding-top: 8px;\n      font-style: normal;\n      font-weight: 400;\n      font-size: 14px;\n      line-height: 160%;\n      color: var(--text-card-neutral-default);\n      opacity: 0.75;\n      display: -webkit-box;\n      -webkit-line-clamp: 2;\n      -webkit-box-orient: vertical;\n      overflow: hidden;\n    }\n    .link {\n      cursor: pointer;\n      border: none;\n      background: transparent;\n      padding-top: 20px;\n      display: flex;\n      align-items: center;\n      font-style: normal;\n      font-weight: 500;\n      font-size: 16px;\n      line-height: 100%;\n      > div {\n        padding-left: 8px;\n      }\n    }\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { capitalize, chunk } from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport * as Storyblok from '@/services/rest/storyblok';\nimport ListLayout from '@/layout/ListLayout';\nimport { Tag } from '@/components/Tag';\nimport {\n  type SettledPromise,\n  type Story,\n} from '@/screens/Home/components/HowItWorksSection/types';\nimport { Icon } from '@/components/Icon';\nimport routes from '@/constants/routes';\nimport { useLaunchDarkly, useWindowDimensions } from '@/hooks';\nimport { breakpoints } from '@/constants/devices';\nimport useEvent from '@/hooks/useEvent';\nimport { Button } from '@/components/Button';\nimport { type Content, type ArticleDetails, type Article } from './types';\nimport {\n  Container,\n  StyledAllArticles,\n  StyledArticlesGrid,\n  StyledHeader,\n  StyledTagsSection,\n  StyledCard,\n} from './styles';\n\nconst Articles = () => {\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  const { width } = useWindowDimensions();\n  const { flags } = useLaunchDarkly();\n  const [content, setContent] = useState<Content>();\n  const [fetchedArticles, setFetchedArticles] = useState<Story[][]>([]);\n\n  useEffect(() => {\n    async function getContent() {\n      const { data }: { data: ArticleDetails } =\n        await Storyblok.getHomePageMainPageLayout();\n      setContent(data?.story?.content);\n    }\n    getContent();\n  }, []);\n\n  useEffect(() => {\n    const fetchArticles = async () => {\n      const articles: Article[] | undefined = content?.Section_02[1]?.Articles;\n      const settledPromises: unknown[] = await Promise.allSettled(\n        articles?.map(async (article) =>\n          Storyblok.getArticleDetails(article?.Link?.cached_url),\n        ) || [],\n      );\n      const fetchedArticlesRes = settledPromises?.map((promise) => {\n        const item = promise as SettledPromise;\n        return item?.value?.data?.story || null;\n      });\n\n      const tempArticles = [...fetchedArticlesRes];\n      const chunks = chunk(tempArticles, 14);\n      setFetchedArticles(chunks);\n    };\n    fetchArticles();\n  }, [content]);\n\n  const tags = [\n    { id: 1, text: 'Knowledge Base', type: 'secondary' },\n    // { id: 2, text: 'Knowledge Base', type: 'secondary' },\n  ];\n\n  const navigateToArticleDetail = useEvent((slug) => {\n    navigate({\n      pathname: routes.ARTICLE,\n      search: `?slug=${slug}`,\n    });\n  });\n\n  return (\n    <ListLayout type=\"Articles\">\n      {width < breakpoints.TABLET && (\n        <StyledTagsSection>\n          <StyledHeader>\n            {t('noumena.home.articles.knowledge_base')}\n          </StyledHeader>\n          <div className=\"tags\">\n            {tags.map((tag) => (\n              <Tag key={tag.id} secondary={tag.type === 'secondary'}>\n                {tag.text}\n              </Tag>\n            ))}\n          </div>\n        </StyledTagsSection>\n      )}\n      <Container $isAppUiV2={flags.newAppNavigation}>\n        <StyledAllArticles data-testid=\"articles\">\n          {width >= breakpoints.TABLET && (\n            <StyledHeader>\n              {t('noumena.home.articles.knowledge_base')}\n            </StyledHeader>\n          )}\n          {width >= breakpoints.TABLET && (\n            <StyledTagsSection>\n              <div className=\"tags\">\n                {tags.map((tag) => (\n                  <Tag key={tag.id} secondary={tag.type === 'secondary'}>\n                    {tag.text}\n                  </Tag>\n                ))}\n              </div>\n            </StyledTagsSection>\n          )}\n          {fetchedArticles?.map((articles, i) => (\n            <StyledArticlesGrid key={`${i + 0}`}>\n              {articles?.map((article, index) => {\n                let variable = 0;\n                if (width >= breakpoints.LAPTOP) {\n                  variable = 9;\n                } else if (\n                  width < breakpoints.LAPTOP &&\n                  width >= breakpoints.TABLET\n                ) {\n                  variable = 7;\n                } else if (width < breakpoints.TABLET) {\n                  variable = 0;\n                }\n                const featured = index % variable === 0;\n                const {\n                  id,\n                  content: articleContent,\n                  full_slug: slug,\n                } = article;\n                const imageUrl = articleContent?.Main_Image?.filename;\n                const title = articleContent?.Title;\n                const description = articleContent?.Short_Description;\n                const type = capitalize(\n                  articleContent?.Main_Category.split('_').join(' ') || '',\n                );\n\n                return (\n                  <StyledCard\n                    imageUrl={imageUrl}\n                    key={id}\n                    className={`StyledCard ${featured ? 'featured' : ''}`}\n                    onClick={() => navigateToArticleDetail(slug)}\n                  >\n                    <div className=\"article-image\" />\n                    <div className=\"article-details\">\n                      <div className=\"type\">{type}</div>\n                      <div className=\"title\">{title}</div>\n                      <div className=\"content\">{description}</div>\n                      {!!featured && (\n                        <Button\n                          className=\"link\"\n                          textOnly\n                          onClick={() => navigateToArticleDetail(slug)}\n                          rightIcon={\n                            <Icon\n                              name=\"chevron_small_right_m\"\n                              size={24}\n                              color=\"--icon-button-brand-primary-default\"\n                            />\n                          }\n                        >\n                          {t('noumena.home.articles.read_full_article')}\n                        </Button>\n                      )}\n                    </div>\n                  </StyledCard>\n                );\n              })}\n            </StyledArticlesGrid>\n          ))}\n        </StyledAllArticles>\n      </Container>\n    </ListLayout>\n  );\n};\n\nexport default Articles;\n"],"names":["Container","styled","div","props","$isAppUiV2","mediaSizes","TABLET_MAX","TABLET_MIN","LAPTOP_MAX","LAPTOP_MIN","LAPTOP_L_MAX","LAPTOP_L_MIN","sizes","DESKTOP","StyledAllArticles","StyledHeader","StyledTagsSection","MOBILE_L_MAX","StyledArticlesGrid","MOBILE_XL_MAX","StyledCard","attrs","imageUrl","singleLineEllipisText","Articles","navigate","useNavigate","t","useTranslation","width","useWindowDimensions","flags","useLaunchDarkly","content","setContent","useState","fetchedArticles","setFetchedArticles","useEffect","getContent","data","Storyblok","story","articles","Section_02","settledPromises","Promise","allSettled","map","article","Link","cached_url","tempArticles","promise","item","value","chunks","chunk","tags","id","text","type","navigateToArticleDetail","useEvent","slug","pathname","routes","ARTICLE","search","jsxs","ListLayout","breakpoints","TABLET","jsx","tag","Tag","newAppNavigation","i","index","variable","LAPTOP","featured","articleContent","full_slug","Main_Image","filename","title","Title","description","Short_Description","capitalize","Main_Category","split","join","`Articles-StyledCard-${id}`","Button","Icon","Articles$1"],"mappings":"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"}