{"version":3,"file":"EmailUnsubscribe-94713f0d.js","sources":["../../src/screens/EmailUnsubscribe/styles.ts","../../src/screens/EmailUnsubscribe/index.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Stack } from '@/layout';\nimport { TSpan } from '@/components/Typography';\nimport { Button } from '@/components/Button';\nimport { sizes } from '@/constants/devices';\n\nconst Content = styled(Stack).attrs({\n  vertical: true,\n  align: 'center',\n  padding: '40px',\n})`\n  background-color: var(--bg-card-neutral-alt-default);\n  border-radius: 16px;\n  max-width: 668px;\n\n  @media (max-width: ${sizes.TABLET_L}) {\n    max-width: 100%;\n  }\n`;\n\nconst ContentWrapper = styled(Stack).attrs({\n  fullWidth: true,\n  justify: 'center',\n})`\n  @media (max-width: ${sizes.TABLET_L}) {\n    padding: 0 36px;\n  }\n`;\n\nconst MessageTitle = styled(TSpan).attrs({\n  font: 'heading-xs-bold',\n  colorToken: '--text-card-neutral-highlighted',\n})``;\n\nconst MessageDescription = styled(TSpan).attrs({\n  font: 'body-l',\n  colorToken: '--text-card-neutral-default',\n})``;\n\nconst ResubscribeText = styled(TSpan).attrs({\n  font: 'body-l',\n  colorToken: '--text-card-neutral-default',\n})``;\n\nconst Layout = styled(Stack).attrs({\n  fullWidth: true,\n  justify: 'center',\n  padding: '24px 0 24px',\n})``;\n\nconst Image = styled.img`\n  max-width: 104px;\n`;\n\nconst ManageButton = styled(Button).attrs({\n  size: 'small',\n})`\n  span {\n    color: var(--text-button-brand-primary-default) !important;\n  }\n`;\n\nconst SpinnerContainer = styled.div`\n  position: relative;\n`;\n\nexport default {\n  Image,\n  Content,\n  Layout,\n  MessageTitle,\n  ContentWrapper,\n  MessageDescription,\n  ManageButton,\n  ResubscribeText,\n  SpinnerContainer,\n};\n","import UnsubscribeImage from '@/assets/images/unsubscribe.svg';\nimport { Header } from '@/components/Header';\nimport { UnauthenticatedHeader } from '@/layout/UnauthenticatedHeader';\nimport { AppLayout } from '@/layout/AppLayout';\nimport { Separator } from '@/components/Separator/Separator';\nimport { Stack } from '@/layout';\nimport { useBreakpoints } from '@/hooks/useBreakpoints';\nimport { useEffect } from 'react';\nimport { Navigate, useNavigate, useSearchParams } from 'react-router-dom';\nimport routes from '@/constants/routes';\nimport { Spinner } from '@/components/Spinner';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useToast } from '@/hooks';\nimport { useTranslation } from 'react-i18next';\nimport S from './styles';\nimport { useUserPreferences } from '../CoreSettings/NotificationsSettings/useUserPreferences';\nimport { type EmailSubscriptionType } from '../CoreSettings/NotificationsSettings/types';\n\nconst EmailUnsubscribe = () => {\n  const { t } = useTranslation();\n  const [params] = useSearchParams();\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const unsubscribeFrom = params.get(\n    'unsubscribeFrom',\n  ) as EmailSubscriptionType | null;\n\n  const { isMobile } = useBreakpoints();\n  const { updatePreference, loading, loadingUpdate, error } =\n    useUserPreferences({ disableQuery: true });\n\n  const { addErrorToast } = useToast();\n\n  useEffect(() => {\n    async function handleUpdate() {\n      if (unsubscribeFrom && !error) {\n        try {\n          await updatePreference(unsubscribeFrom, false);\n        } catch {\n          addErrorToast(t('noumena.unsubscribe.error'));\n        }\n      }\n    }\n\n    handleUpdate();\n  }, [addErrorToast, error, t, unsubscribeFrom, updatePreference]);\n\n  const handleResubscribe = async () => {\n    if (unsubscribeFrom) {\n      try {\n        await updatePreference(unsubscribeFrom, true);\n        navigate(routes.EMAIL_RESUBSCRIBED, {\n          replace: true,\n        });\n      } catch {\n        addErrorToast(t('noumena.unsubscribe.error'));\n      }\n    }\n  };\n\n  if (!unsubscribeFrom || !user?._id) {\n    return <Navigate to={routes.HOME} replace />;\n  }\n\n  return (\n    <AppLayout.Layout\n      topNavbar={\n        <Header isBorderRadius={false}>\n          <UnauthenticatedHeader title=\"\" />\n        </Header>\n      }\n    >\n      <S.Layout>\n        <S.ContentWrapper>\n          <S.Content>\n            <Stack gap={16} vertical fullWidth align=\"center\">\n              <S.Image src={UnsubscribeImage} alt=\"unsubscribe-image\" />\n\n              <S.MessageTitle>{t('noumena.unsubscribe.title')}</S.MessageTitle>\n              <S.SpinnerContainer>\n                {(loading || loadingUpdate) && <Spinner />}\n              </S.SpinnerContainer>\n              <S.MessageDescription textAlign=\"center\">\n                {t('noumena.unsubscribe.description')}\n              </S.MessageDescription>\n\n              <S.ManageButton\n                neutral\n                onClick={() => navigate(routes.NOTIFICATIONS_SETTINGS)}\n              >\n                {t('noumena.unsubscribe.manager_preferences_button')}\n              </S.ManageButton>\n            </Stack>\n            <Separator fullWidth />\n\n            <Stack align=\"center\" vertical={isMobile}>\n              <S.ResubscribeText>\n                {t('noumena.unsubscribe.helper_text')}\n              </S.ResubscribeText>\n              <S.ManageButton neutral onClick={handleResubscribe}>\n                {t('noumena.unsubscribe.resubscribe_button')}\n              </S.ManageButton>\n            </Stack>\n          </S.Content>\n        </S.ContentWrapper>\n      </S.Layout>\n    </AppLayout.Layout>\n  );\n};\n\nexport default EmailUnsubscribe;\n"],"names":["Content","styled","Stack","attrs","vertical","align","padding","sizes","TABLET_L","ContentWrapper","fullWidth","justify","MessageTitle","TSpan","font","colorToken","MessageDescription","ResubscribeText","Layout","Image","img","ManageButton","Button","size","SpinnerContainer","div","S","EmailUnsubscribe","t","useTranslation","params","useSearchParams","navigate","useNavigate","user","useAuth","unsubscribeFrom","get","isMobile","useBreakpoints","updatePreference","loading","loadingUpdate","error","useUserPreferences","disableQuery","addErrorToast","useToast","useEffect","handleUpdate","handleResubscribe","routes","EMAIL_RESUBSCRIBED","replace","_id","jsx","Navigate","HOME","AppLayout","Header","UnauthenticatedHeader","jsxs","UnsubscribeImage","Spinner","NOTIFICATIONS_SETTINGS","Separator","EmailUnsubscribe$1"],"mappings":"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"}