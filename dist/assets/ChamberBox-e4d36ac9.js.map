{"version":3,"file":"ChamberBox-e4d36ac9.js","sources":["../../src/components/ChamberBox/types.ts","../../src/components/ChamberBox/ChamberBox.tsx"],"sourcesContent":["export enum DiscoveryCategoryEnum {\n  Recommended = 'RECOMMENDED',\n  Featured = 'FEATURED',\n  Spotlight = 'SPOTLIGHT',\n  MyCircle = 'MY_CIRCLE',\n  Popular = 'POPULAR',\n  Favourites = 'FAVOURITES',\n  Recent = 'RECENT',\n}\n\nexport enum ChamberBoxNameEnum {\n  project = 'project',\n  social = 'social',\n  special = 'special',\n  investment = 'investment',\n  story = 'story',\n  member = 'member',\n  linked = 'linked',\n  rise_application = 'rise_application',\n  rise = 'rise',\n}\n\nexport type ChamberBoxProps = {\n  title: string;\n  name: ChamberBoxNameEnum;\n  followers: number;\n  category?: DiscoveryCategoryEnum;\n  url?: string;\n  id?: string | undefined | null;\n  chamberUrl?: string;\n  ownerImageURL?: string;\n  ownedby?: string;\n  archived?: boolean;\n  location?: string;\n  chamberTitle?: string;\n  hasDraftElement?: boolean;\n  startDate?: string;\n  isSecretNoum?: boolean;\n  isFavouriteNoum?: boolean;\n  projectType?: string;\n};\n\nexport type TypeOfChamberBoxProps = {\n  [key in ChamberBoxNameEnum]: {\n    bgColor: string;\n    color: string;\n  };\n};\n","import { useMemo } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport generate from 'uniqid';\nimport Skeleton from 'react-loading-skeleton';\nimport capitalizeFirstLetter from '@/utils/capitalizeFirstLetter';\nimport riseAvatar from '@/assets/images/riseavatar.png';\nimport { Avatar, AVATAR_SIZE } from '@/components/Avatar/Avatar';\nimport ChamberDefaultImage from '@/assets/images/chamber_default.png';\nimport { useSkeletonIsLoadingContext } from '@/components/SkeletonLoader/SkeletonLoaderProvider';\nimport { typeOfChamberBox } from '@/components/ChamberBox/consts';\nimport { useLaunchDarkly, useTimeIndicator } from '@/hooks';\nimport SkeletonChamberBox, {\n  StyledSkeleton,\n} from '@/components/ChamberBox/SkeletonChamberBox';\nimport {\n  AvatarBackground,\n  BodySection,\n  ChamberWrapper,\n  FooterSection,\n  HeaderTitle,\n  MemberTitle,\n  OwnedBy,\n  OwnedByBold,\n  TagLabel,\n  TopBackground,\n  Underline,\n  UnpublishedNote,\n  FavouriteIcon,\n} from './styles';\nimport {\n  ChamberBoxNameEnum,\n  type ChamberBoxProps,\n  DiscoveryCategoryEnum,\n} from './types';\nimport { TSpan } from '../Typography';\n\nconst AVATAR_SIZE_INDEX = 'XVL';\n\nexport default function ChamberBox({\n  id,\n  chamberUrl = '#',\n  url,\n  ownerImageURL,\n  title,\n  name,\n  ownedby,\n  followers,\n  archived,\n  location,\n  chamberTitle,\n  category,\n  startDate,\n  hasDraftElement = false,\n  isSecretNoum = false,\n  isFavouriteNoum = false,\n  projectType = '',\n}: ChamberBoxProps) {\n  const { t } = useTranslation();\n  const { isLoading } = useSkeletonIsLoadingContext();\n  const {\n    flags: { noumEditor2 },\n  } = useLaunchDarkly();\n  const isMemberNoLocation = useMemo(\n    () => name === ChamberBoxNameEnum.member && !location,\n    [location, name],\n  );\n\n  const isShowSecretlabel = !noumEditor2 && isSecretNoum;\n\n  const [countDown] = useTimeIndicator(startDate ?? '');\n\n  const isRiseNoum = name === ChamberBoxNameEnum.rise;\n\n  const isRiseApplication = name === ChamberBoxNameEnum.rise_application;\n\n  const avatarURL = useMemo(() => {\n    const isMember = name === ChamberBoxNameEnum.member;\n    let avatar;\n    if (isRiseNoum || isRiseApplication) {\n      avatar = riseAvatar;\n      return avatar;\n    }\n    if (isMember && !url) {\n      avatar = ownerImageURL;\n    } else if (!isMember && !url) {\n      avatar = ChamberDefaultImage;\n    } else {\n      avatar = isMember ? ownerImageURL : url;\n    }\n    return avatar;\n  }, [name, isRiseNoum, isRiseApplication, url, ownerImageURL]);\n\n  const widthHeight = AVATAR_SIZE[AVATAR_SIZE_INDEX];\n\n  return (\n    <ChamberWrapper\n      data-testid=\"chamberbox-testid\"\n      key={id || generate()}\n      to={isLoading ? '' : chamberUrl}\n      cursor={isLoading ? 'auto' : 'pointer'}\n    >\n      <div>\n        <TopBackground\n          bgColor={isLoading ? 'unset' : typeOfChamberBox[name]?.bgColor}\n        >\n          {isFavouriteNoum && (\n            <FavouriteIcon\n              name=\"star_filled_m\"\n              color=\"--icon-button-neutral-pressed\"\n              size={24}\n            />\n          )}\n          {isLoading && <Skeleton height={56} />}\n        </TopBackground>\n        <AvatarBackground archived={archived}>\n          {isLoading ? (\n            <Skeleton width={widthHeight} height={widthHeight} />\n          ) : (\n            <Avatar\n              opacity={archived ? 0.4 : 1}\n              url={avatarURL}\n              size={AVATAR_SIZE_INDEX}\n            />\n          )}\n        </AvatarBackground>\n        <TagLabel\n          data-testid=\"chamberbox-tag-label\"\n          bgColor={typeOfChamberBox[name]?.bgColor}\n          color={typeOfChamberBox[name]?.color}\n        >\n          {isLoading ? (\n            <StyledSkeleton w={40} h={18} r={8} />\n          ) : isRiseApplication ? (\n            t('noumena.rise_application')\n          ) : (\n            capitalizeFirstLetter(name)\n          )}\n        </TagLabel>\n      </div>\n      <BodySection>\n        <HeaderTitle\n          archived={archived}\n          isMemberNoLocation={isMemberNoLocation || isShowSecretlabel}\n          isEllipsis={hasDraftElement}\n        >\n          {isLoading ? (\n            <SkeletonChamberBox />\n          ) : name === ChamberBoxNameEnum.member ? (\n            ownedby\n          ) : (\n            chamberTitle\n          )}\n        </HeaderTitle>\n        <OwnedBy data-testid=\"test-owned-by\" archived={archived}>\n          {archived && (\n            <Trans\n              i18nKey=\"noumena.archived_owned_by\"\n              components={{\n                badge: (\n                  <TSpan\n                    font=\"body-m-bold\"\n                    colorToken=\"--text-tag-neutral-default\"\n                  />\n                ),\n                dot: (\n                  <TSpan\n                    font=\"body-m-bold\"\n                    colorToken=\"--text-card-neutral-default\"\n                  />\n                ),\n              }}\n            />\n          )}\n          {name === ChamberBoxNameEnum.member ? (\n            <MemberTitle>{title}</MemberTitle>\n          ) : (\n            <Trans\n              i18nKey=\"noumena.chamberBox.ownedby\"\n              values={{\n                name: ownedby,\n              }}\n              components={{\n                strong: <OwnedByBold title={ownedby} />,\n              }}\n            />\n          )}\n        </OwnedBy>\n        {category === DiscoveryCategoryEnum.Featured && startDate && (\n          <TSpan\n            font=\"body-s\"\n            colorToken=\"--text-card-neutral-default\"\n            style={{ margin: 'auto' }}\n          >\n            {t('noumena.discovery.featured.broadcasting.countdown', {\n              countDown,\n            })}\n          </TSpan>\n        )}\n        {hasDraftElement && (\n          <UnpublishedNote\n            colorToken=\"--text-card-brand-primary-default\"\n            font=\"body-s\"\n          >\n            ({t('noumena.chamberBox.unpublished_changes')})\n          </UnpublishedNote>\n        )}\n      </BodySection>\n      <FooterSection hide={isMemberNoLocation || isShowSecretlabel}>\n        <Underline />\n        <TSpan\n          flex=\"max-content\"\n          font=\"footnote\"\n          colorToken=\"--text-card-neutral-default\"\n        >\n          {name !== ChamberBoxNameEnum.member &&\n            !isRiseApplication &&\n            !isRiseNoum && (\n              <>\n                {noumEditor2 && (\n                  <>{capitalizeFirstLetter(projectType.toLowerCase())}</>\n                )}\n                {!isSecretNoum && (\n                  <>\n                    {noumEditor2 && <> &#xb7;</>} {followers}{' '}\n                    {t('noumena.chamberBox.followers')}\n                  </>\n                )}\n              </>\n            )}\n          {name === ChamberBoxNameEnum.member && <>{location || ' '} </>}\n        </TSpan>\n      </FooterSection>\n    </ChamberWrapper>\n  );\n}\n"],"names":["DiscoveryCategoryEnum","Recommended","Featured","Spotlight","MyCircle","Popular","Favourites","Recent","ChamberBoxNameEnum","project","social","special","investment","story","member","linked","rise_application","rise","AVATAR_SIZE_INDEX","ChamberBox","id","chamberUrl","url","ownerImageURL","title","name","ownedby","followers","archived","location","chamberTitle","category","startDate","hasDraftElement","isSecretNoum","isFavouriteNoum","projectType","t","useTranslation","isLoading","useSkeletonIsLoadingContext","flags","noumEditor2","useLaunchDarkly","isMemberNoLocation","useMemo","isShowSecretlabel","countDown","useTimeIndicator","isRiseNoum","isRiseApplication","avatarURL","isMember","avatar","riseAvatar","ChamberDefaultImage","widthHeight","AVATAR_SIZE","jsxs","ChamberWrapper","TopBackground","typeOfChamberBox","bgColor","jsx","FavouriteIcon","Skeleton","AvatarBackground","Avatar","TagLabel","color","StyledSkeleton","capitalizeFirstLetter","BodySection","HeaderTitle","SkeletonChamberBox","OwnedBy","Trans","badge","TSpan","dot","MemberTitle","strong","OwnedByBold","margin","UnpublishedNote","FooterSection","Underline","toLowerCase","generate"],"mappings":"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"}