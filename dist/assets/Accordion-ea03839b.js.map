{"version":3,"file":"Accordion-ea03839b.js","sources":["../../src/components/Accordion/styles.ts","../../src/components/Accordion/AccordionHeader.tsx","../../src/components/Accordion/Accordion.tsx"],"sourcesContent":["import styled, { css } from 'styled-components';\n\nimport { Icon } from '@/components/Icon';\n\nimport { type AccordionContainerProps } from './types';\n\nexport const AccordionContainer = styled.div<AccordionContainerProps>`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  box-sizing: border-box;\n  overflow: hidden;\n  border-radius: 3px;\n  width: ${({ width }) => (typeof width === 'number' ? `${width}px` : width)};\n  transition: margin 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  ${({ borders }) =>\n    (borders || []).map(\n      (border) => css`\n    border-${border}-color: var(--bg-separator-neutral-default);\n    border-${border}-width: 1px;\n    border-${border}-style: solid;\n  `,\n    )}\n  ${({ shadowOnExpand, expanded, expandedOffsetBottom, offsetBottom }) =>\n    expanded &&\n    shadowOnExpand &&\n    css`\n      box-shadow: 0px 2px 1px -1px rgb(0 0 0 / 20%),\n        0px 2px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%);\n      ${!expandedOffsetBottom &&\n      !offsetBottom &&\n      `margin-bottom: 5px !important;`}\n    `}\n  margin-bottom: ${({ expanded, expandedOffsetBottom, offsetBottom }) =>\n    expanded\n      ? `${\n          expandedOffsetBottom !== undefined\n            ? expandedOffsetBottom\n            : offsetBottom || 0\n        }px`\n      : `${offsetBottom || 0}px`};\n  margin-top: ${({ expanded, expandedOffsetTop, offsetTop }) =>\n    expanded\n      ? `${\n          expandedOffsetTop !== undefined ? expandedOffsetTop : offsetTop || 0\n        }px`\n      : `${offsetTop || 0}px`};\n`;\n\nexport const AccordionHeaderContainer = styled.div<{\n  disabled?: boolean;\n  expanded?: boolean;\n  gap?: number;\n  padding?: string;\n}>`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  gap: ${({ gap }) => `${gap || 10}px`};\n  align-items: center;\n  justify-content: space-between;\n  box-sizing: border-box;\n  transition: padding-top 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  padding: ${({ padding }) => padding || '20px 16px'};\n  user-select: none;\n  background-color: ${({ disabled }) =>\n    disabled\n      ? 'var(--bg-tablecell-neutral-alt-disabled)'\n      : 'var(--bg-tablecell-neutral-alt-default)'};\n  cursor: ${({ disabled }) => (disabled ? 'not-allowed' : 'pointer')};\n`;\n\nexport const AccordionTitleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  box-sizing: border-box;\n  flex: 1;\n  gap: 3px;\n  overflow: hidden;\n`;\n\nexport const AccordionRightContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 16px;\n`;\n\nexport const AccordionRightIcon = styled.div``;\n\nexport const AccordionDropDownIcon = styled(Icon)<{\n  expanded?: boolean;\n  color?: string;\n}>`\n  transition: transform 0.3s;\n  ${({ expanded }) => expanded && 'transform: rotate(180deg)'};\n  ${({ color }) => color && `color: ${color}`};\n`;\n\nexport const AccordionContent = styled.div<{\n  maxHeight: string;\n  expanded?: boolean;\n}>`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  overflow: hidden;\n  box-sizing: border-box;\n  transition: all 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  ${({ maxHeight, expanded }) => css`\n    max-height: ${expanded ? maxHeight : 0};\n    height: ${expanded ? maxHeight : 0};\n  `}\n`;\n\nexport const AccordionItemContainer = styled.div`\n  padding: 8px 12px;\n`;\n","import React from 'react';\n\nimport { TSpan } from '@/components/Typography';\nimport { type FontType } from '@/components/Typography/Typography';\nimport {\n  AccordionHeaderContainer,\n  AccordionTitleContainer,\n  AccordionRightContainer,\n  AccordionRightIcon,\n  AccordionDropDownIcon,\n} from './styles';\nimport { type AccordionProps } from './types';\n\ninterface Props\n  extends Pick<\n    AccordionProps,\n    'title' | 'subtitle' | 'left' | 'right' | 'disabled' | 'isBoldTitle'\n  > {\n  uid: string;\n  expanded?: boolean;\n  headerGap?: number;\n  padding?: string;\n  onClick: () => void;\n  onKeyDown: (ev: React.KeyboardEvent) => void;\n  titleFont?: FontType;\n}\n\nexport const AccordionHeader: React.FC<Props> = ({\n  uid,\n  title,\n  isBoldTitle,\n  headerGap,\n  subtitle,\n  expanded,\n  disabled,\n  left,\n  padding,\n  right,\n  onClick,\n  onKeyDown,\n  titleFont,\n}) => (\n  <AccordionHeaderContainer\n    id={`AccordionHeader_${uid}`}\n    data-testid=\"accordion-heading\"\n    data-element=\"accordion-title-container\"\n    role=\"button\"\n    aria-expanded={expanded}\n    aria-controls={`AccordionContent_${uid}`}\n    tabIndex={0}\n    gap={headerGap}\n    disabled={disabled}\n    expanded={expanded}\n    onClick={onClick}\n    onKeyDown={onKeyDown}\n    padding={padding}\n  >\n    {!!left && left}\n    <AccordionTitleContainer>\n      <TSpan\n        font={titleFont || (isBoldTitle ? 'body-l-bold' : 'body-l')}\n        colorToken=\"--text-tablecell-header-neutral-highlighted\"\n        overflow=\"ellipsis\"\n      >\n        {title}\n      </TSpan>\n      {!!subtitle &&\n        (typeof subtitle === 'string' ? (\n          <TSpan\n            font=\"body-s\"\n            colorToken=\"--text-tablecell-header-neutral-default\"\n          >\n            {subtitle}\n          </TSpan>\n        ) : (\n          subtitle\n        ))}\n    </AccordionTitleContainer>\n    <AccordionRightContainer>\n      {!!right && (\n        <AccordionRightIcon\n          data-testid=\"accordion-right-icon\"\n          data-element=\"accordion-right-icon\"\n        >\n          {right}\n        </AccordionRightIcon>\n      )}\n      <AccordionDropDownIcon\n        data-testid=\"accordion-dropdown-icon\"\n        data-element=\"accordion-icon\"\n        expanded={expanded}\n        name=\"chevron_small_down_m\"\n        size={24}\n        color=\"--icon-tablecell-neutral-highlighted\"\n      />\n    </AccordionRightContainer>\n  </AccordionHeaderContainer>\n);\n","import React, {\n  useState,\n  useRef,\n  useEffect,\n  useMemo,\n  useCallback,\n  useImperativeHandle,\n} from 'react';\nimport generate from 'uniqid';\n\nimport useResizeObserver from '@/hooks/useResizeObserver';\n\nimport { AccordionHeader } from './AccordionHeader';\n\nimport { AccordionContainer, AccordionContent } from './styles';\nimport { type AccordionProps, type IAccordionControl } from './types';\n\nexport const Accordion = React.forwardRef<IAccordionControl, AccordionProps>(\n  (\n    {\n      accordionRef,\n      borders = ['bottom'],\n      disabled,\n      expanded,\n      expandedOffsetBottom = 0,\n      contentHeightKey,\n      expandedOffsetTop = 0,\n      left = null,\n      offsetBottom = 0,\n      offsetTop = 0,\n      preExpanded,\n      headerPadding,\n      right,\n      shadowOnExpand,\n      subtitle,\n      testId,\n      title,\n      isBoldTitle,\n      titleFont,\n      headerGap,\n      width = '100%',\n      onToggle,\n      children,\n    },\n    controlRef,\n  ) => {\n    const [isInternalExpanded, setIsInternalExpanded] = useState<\n      boolean | undefined\n    >();\n\n    const [contentHeight, setContentHeight] = useState<string>(\n      isInternalExpanded ? 'auto' : '0',\n    );\n\n    const uid = useRef<string>(generate());\n    const contentRef = useRef<HTMLDivElement>(null);\n\n    useResizeObserver(contentRef, () => {\n      setContentHeight(`${contentRef?.current?.scrollHeight || 0}px`);\n    });\n\n    useEffect(() => {\n      setContentHeight(`${contentRef?.current?.scrollHeight || 0}px`);\n    }, [contentHeightKey]);\n\n    /** Set initial expand status */\n    useEffect(() => {\n      if (isInternalExpanded === undefined) {\n        setIsInternalExpanded(preExpanded);\n      }\n    }, [isInternalExpanded, preExpanded]);\n\n    const isControlled = useMemo(\n      () => preExpanded === undefined && expanded !== undefined,\n      [expanded, preExpanded],\n    );\n\n    const isExpanded = useMemo(\n      () => (isControlled ? expanded : isInternalExpanded),\n      [expanded, isControlled, isInternalExpanded],\n    );\n\n    const onChange = useCallback(() => {\n      if (disabled) return;\n\n      if (isControlled) {\n        if (onToggle) onToggle(!isExpanded);\n      } else {\n        setIsInternalExpanded(!isInternalExpanded);\n      }\n    }, [disabled, isControlled, isExpanded, isInternalExpanded, onToggle]);\n\n    const onClose = useCallback(() => {\n      if (isControlled) {\n        if (onToggle) onToggle(false);\n      } else {\n        setIsInternalExpanded(false);\n      }\n    }, [isControlled, onToggle]);\n\n    const onKeyDown = useCallback(\n      (ev: React.KeyboardEvent) => {\n        if (disabled) return;\n\n        if (ev.key === 'Enter' || ev.key === ' ') {\n          onChange();\n        } else if (ev.key === 'Escape') {\n          onClose();\n        }\n      },\n      [disabled, onChange, onClose],\n    );\n\n    useImperativeHandle(\n      controlRef,\n      () => ({\n        toggle() {\n          onChange();\n        },\n      }),\n      [onChange],\n    );\n\n    return (\n      <AccordionContainer\n        ref={accordionRef}\n        data-testid={testId || 'accordion'}\n        data-component=\"accordion\"\n        id={`accordion_${uid.current}`}\n        borders={borders}\n        expanded={isExpanded}\n        expandedOffsetBottom={expandedOffsetBottom}\n        expandedOffsetTop={expandedOffsetTop}\n        offsetBottom={offsetBottom}\n        offsetTop={offsetTop}\n        shadowOnExpand={shadowOnExpand}\n        width={width}\n      >\n        <AccordionHeader\n          headerGap={headerGap}\n          padding={headerPadding}\n          uid={uid.current}\n          title={title}\n          titleFont={titleFont}\n          isBoldTitle={isBoldTitle}\n          subtitle={subtitle}\n          expanded={isExpanded}\n          disabled={disabled}\n          left={left}\n          right={right}\n          onClick={onChange}\n          onKeyDown={onKeyDown}\n        />\n        <AccordionContent\n          ref={contentRef}\n          maxHeight={contentHeight}\n          expanded={isExpanded}\n          role=\"region\"\n          data-element=\"accordion-content\"\n          id={`AccordionContent_${uid.current}`}\n          aria-labelledby={`AccordionHeader_${uid.current}`}\n        >\n          {children}\n        </AccordionContent>\n      </AccordionContainer>\n    );\n  },\n);\n"],"names":["AccordionContainer","styled","div","width","borders","map","css","border","shadowOnExpand","expanded","expandedOffsetBottom","offsetBottom","undefined","expandedOffsetTop","offsetTop","AccordionHeaderContainer","gap","padding","disabled","AccordionTitleContainer","AccordionRightContainer","AccordionRightIcon","AccordionDropDownIcon","Icon","color","AccordionContent","maxHeight","AccordionHeader","uid","title","isBoldTitle","headerGap","subtitle","left","right","onClick","onKeyDown","titleFont","jsxs","jsx","TSpan","Accordion","React","forwardRef","accordionRef","contentHeightKey","preExpanded","headerPadding","testId","onToggle","children","controlRef","isInternalExpanded","setIsInternalExpanded","useState","contentHeight","setContentHeight","useRef","generate","contentRef","useResizeObserver","current","scrollHeight","useEffect","isControlled","useMemo","isExpanded","onChange","useCallback","onClose","ev","key","useImperativeHandle","toggle"],"mappings":"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"}