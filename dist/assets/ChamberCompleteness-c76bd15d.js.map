{"version":3,"file":"ChamberCompleteness-c76bd15d.js","sources":["../../src/features/noums/hooks/spaceQuery/useRemoveElementHelper.ts","../../src/features/noums/hooks/spaceQuery/usePublishSpaceHelper.ts","../../src/features/noums/hooks/spaceQuery/usePublishNoumLayoutHelper.ts","../../src/features/noums/hooks/noums/homeNoum/useHomeNoumAboutMeHelper.ts","../../src/features/noums/components/NoumProgress/styles.tsx","../../src/features/noums/components/NoumProgress/NoumProgress.tsx","../../src/features/location/hooks/useHomeNoumAboutMeGetLocationHelper.ts","../../src/features/location/components/SearchSelectAPI/SearchSelectAPI.tsx","../../src/screens/Chamber/components/modals/HomeNoumAboutMe/styles.ts","../../src/screens/Chamber/components/modals/HomeNoumAboutMe/Modal.tsx","../../src/screens/Chamber/components/modals/HomeNoumBusinessBrief/styles.ts","../../src/screens/Chamber/components/modals/HomeNoumBusinessBrief/Modal.tsx","../../src/features/noums/hooks/references/useGetNoumReferences.tsx","../../src/utils/delay.ts","../../src/screens/Chamber/components/ElementWrapper/ViewMode.tsx","../../src/screens/Chamber/components/modals/ElementDelete/Modal.tsx","../../src/screens/Chamber/components/modals/CloseWallet/Modal.tsx","../../src/screens/Chamber/components/modals/NonZeroWalletModal/Modal.tsx","../../src/screens/Chamber/components/ElementWrapper/EditMode.tsx","../../src/screens/Chamber/components/ElementWrapper/ViewModeNoumEditor.tsx","../../src/screens/Chamber/components/ElementWrapper/ElementWrapper.tsx","../../src/features/homeNoums/components/HomeChamberOptions/styles.tsx","../../src/features/homeNoums/components/HomeChamberOptions/SingleOption.tsx","../../src/features/homeNoums/components/HomeChamberOptions/HomeChamberOptions.tsx","../../src/features/homeNoums/components/HomeChambers/useHomeChambers.ts","../../src/features/homeNoums/components/HomeChambers/modals/styles.tsx","../../src/features/homeNoums/components/HomeChambers/modals/EditElement.tsx","../../src/screens/Chamber/components/elements/VideoElement/VideoView.tsx","../../src/features/homeNoums/components/HomeChambers/modals/ReferenceMedia.tsx","../../src/features/homeNoums/components/HomeChambers/modals/helpers.ts","../../src/features/homeNoums/components/HomeChambers/modals/DeleteReference.tsx","../../src/features/homeNoums/components/HomeChambers/modals/data.ts","../../src/features/homeNoums/components/HomeChambers/modals/UpdateReference/UpdateReference.tsx","../../src/features/homeNoums/components/HomeChambers/modals/ReferenceViewItem.tsx","../../src/features/homeNoums/components/HomeChambers/modals/AddExperience/AddExperience.tsx","../../src/features/homeNoums/components/HomeChambers/modals/ViewExperience.tsx","../../src/features/homeNoums/components/HomeChambers/styles.tsx","../../src/features/homeNoums/components/HomeChambers/modals/EditReference.tsx","../../src/features/homeNoums/components/HomeChambers/modals/AddReferenceNonModal.tsx","../../src/utils/homeChambersElements.ts","../../src/screens/Chamber/components/modals/HomeNoumProjectWorkExperience/styles.ts","../../src/screens/Chamber/components/modals/HomeNoumProjectWorkExperience/InitialMode.tsx","../../src/screens/Chamber/components/modals/HomeNoumProjectWorkExperience/Modal.tsx","../../src/screens/Chamber/components/ChamberCompleteness/ChamberCompleteness.tsx"],"sourcesContent":["import {\n  GetSpaceByIdDocument,\n  type GetSpaceByIdQueryVariables,\n  useRemoveElementMutation,\n} from '@/apollo/graphql';\nimport * as Sentry from '@sentry/react';\nimport { t } from 'i18next';\nimport { useCallback } from 'react';\nimport { useToast } from '@/hooks/toast';\nimport { NoumLayoutStatusFilter } from '@/apollo/generated/types';\n\nexport function useRemoveElementHelper() {\n  const { addToast } = useToast();\n\n  const [removeElement, { loading }] = useRemoveElementMutation();\n\n  const removeElementHelper = useCallback(\n    async (spaceId: string, elementId: string) => {\n      let isSuccess;\n      try {\n        await removeElement({\n          variables: { spaceId, elementId },\n          update: async (cache, { data }) => {\n            if (!data || !data.removeElement) return;\n\n            const variables: GetSpaceByIdQueryVariables = {\n              id: spaceId,\n              editorV2Enabled: false,\n              status: NoumLayoutStatusFilter.Unpublished,\n            };\n\n            cache.writeQuery({\n              query: GetSpaceByIdDocument,\n              variables,\n              data: {\n                getSpaceById: {\n                  ...data.removeElement,\n                  category: data.removeElement.category,\n                },\n              },\n            });\n          },\n        });\n\n        addToast(\n          'success',\n          'none',\n          t(`noumena.container.element_delete.success`),\n        );\n\n        isSuccess = true;\n      } catch (error) {\n        let message = 'Unknown';\n        if (error instanceof Error) {\n          message = error.message;\n        }\n        addToast('error', 'none', message);\n        Sentry.captureException(new Error(message), {\n          tags: {\n            section: 'removeElementMutation',\n          },\n        });\n\n        isSuccess = false;\n      }\n\n      return isSuccess;\n    },\n    [addToast, removeElement],\n  );\n\n  return {\n    loading,\n    removeElementHelper,\n  };\n}\n\nexport default useRemoveElementHelper;\n","import {\n  BodyContentEnum,\n  ElementStatusEnum,\n  ElementTypeEnum,\n  type SocialLink,\n  SpaceStatusEnum,\n  SpaceTypeEnum,\n  type ElementInput,\n  type ElementOutput,\n  type Maybe,\n} from '@/apollo/generated/types';\nimport {\n  type SpaceOutputFragment,\n  useChangeProjectChamberStatusMutation,\n  usePublishElementStateMutation,\n  useRemoveCalendarMutation,\n  useUpdateUserProfileMutation,\n} from '@/apollo/graphql';\nimport { ElementUtils } from '@/utils/element';\nimport { SpaceUtils } from '@/utils/space';\nimport { makeSocialLink, type TSocialName } from '@/utils/url';\nimport * as Sentry from '@sentry/react';\nimport { t } from 'i18next';\nimport { useCallback } from 'react';\nimport { useToast } from '@/hooks/toast';\nimport useUpdateElementHelper from './useUpdateElementHelper';\n\nexport function usePublishSpaceHelper() {\n  const { addToast } = useToast();\n  const [updateProfile] = useUpdateUserProfileMutation();\n  const [removeCalendar] = useRemoveCalendarMutation();\n  const [publishElementState, { loading }] = usePublishElementStateMutation();\n  const { updateElementHelper, loading: updateElementLoader } =\n    useUpdateElementHelper();\n  const [changeProjectChamberStatus, { loading: isLoading }] =\n    useChangeProjectChamberStatusMutation();\n\n  const clearCalendar = useCallback(\n    (chamberId: string, elements: Maybe<ElementOutput>[]) => {\n      const hasRemovedCalendar = elements.some(\n        (el) =>\n          el?.elementType === ElementTypeEnum.Calendar &&\n          !!el.unSaved?.isDeleted,\n      );\n\n      if (hasRemovedCalendar) {\n        removeCalendar({\n          variables: {\n            chamberId,\n          },\n        });\n      }\n    },\n    [removeCalendar],\n  );\n\n  const publishSpaceHelper = useCallback(\n    async (\n      spaceId: string,\n      space: SpaceOutputFragment | undefined,\n      isNoumEditor?: boolean,\n      callback?: () => void,\n    ) => {\n      let isSuccess;\n      try {\n        if (space && space?.type === SpaceTypeEnum.Home) {\n          const elements = SpaceUtils.getElements(space);\n          if (!isNoumEditor) {\n            const updateElements: ElementInput[] = elements.reduce(\n              (acc, ele) => {\n                if (\n                  ElementUtils.isHomeNoumProgressBarType(ele.elementType) &&\n                  !ele?.draft?.isDeleted &&\n                  !ele?.unSaved?.isDeleted\n                ) {\n                  acc.push({\n                    elementId: ele._id,\n                    bodyContent: ElementUtils.getBodyContent(ele),\n                    bodyContentJson: ElementUtils.getBodyContentJson(ele),\n                    position: ElementUtils.getPosition(ele),\n                    status: ElementStatusEnum.Published,\n                    bodyContentType: BodyContentEnum.Json,\n                    percentCompleted: 100,\n                  });\n                }\n                return acc;\n              },\n              [] as ElementInput[],\n            );\n\n            if (updateElements && updateElements.length > 0) {\n              await updateElementHelper(spaceId, updateElements);\n            }\n          }\n          const networkElem = elements.find(\n            (ele) => ele.elementType === ElementTypeEnum.Usernetwork,\n          );\n          // update user profile according to network element\n          const body =\n            JSON.parse(\n              networkElem?.unSaved?.bodyContent ||\n                networkElem?.draft?.bodyContent ||\n                networkElem?.bodyContent ||\n                '{}',\n            ) || {};\n          const socailLinks: SocialLink[] = [];\n          Object.keys(body).map((key) => {\n            socailLinks.push({\n              link: makeSocialLink(key as TSocialName, body[key]),\n              name: key,\n            });\n            return undefined;\n          });\n          updateProfile({\n            variables: {\n              input: {\n                profile: {\n                  socialLinks: socailLinks,\n                },\n              },\n            },\n          });\n          callback?.();\n        }\n\n        await publishElementState({\n          variables: {\n            spaceId,\n            prevStates: [ElementStatusEnum.Unsaved, ElementStatusEnum.Draft],\n            currentState: ElementStatusEnum.Published,\n          },\n        });\n\n        // Publish draft setting: visibility\n        await changeProjectChamberStatus({\n          variables: { spaceId, status: SpaceStatusEnum.Published },\n        });\n        addToast(\n          'success',\n          'icon',\n          t(`noumena.container.chamber_publish.success`),\n        );\n\n        clearCalendar(spaceId, space?.elements || []);\n        isSuccess = true;\n      } catch (error) {\n        let message = 'Unknown';\n        if (error instanceof Error) {\n          message = error.message;\n        }\n        addToast('error', 'none', message);\n        if (\n          message !== t('noumena.container.chamber_business_brief_error') &&\n          message !== t('noumena.container.chamber_experience_error')\n        ) {\n          Sentry.captureException(new Error(message), {\n            tags: {\n              section: 'publishElementStateMutation',\n            },\n          });\n        }\n        isSuccess = false;\n      }\n      return isSuccess;\n    },\n    [\n      publishElementState,\n      changeProjectChamberStatus,\n      addToast,\n      clearCalendar,\n      updateProfile,\n      updateElementHelper,\n    ],\n  );\n\n  return {\n    loading: loading || isLoading || updateElementLoader,\n    publishSpaceHelper,\n  };\n}\n\nexport default usePublishSpaceHelper;\n","import { useCallback } from 'react';\nimport * as Sentry from '@sentry/react';\nimport { usePublishNoumLayoutMutation } from '@/apollo/graphql';\n\nexport function usePublishNoumLayoutHelper() {\n  const [publishNoumLayout, { loading }] = usePublishNoumLayoutMutation();\n\n  const publishNoumLayoutHelper = useCallback(\n    async (spaceId: string) => {\n      let isSuccess;\n      try {\n        await publishNoumLayout({\n          variables: {\n            ID: spaceId,\n          },\n        });\n        isSuccess = true;\n      } catch (error) {\n        let message = 'Unknown';\n        if (error instanceof Error) {\n          message = error.message;\n        }\n        Sentry.captureException(new Error(message), {\n          tags: {\n            section: 'publishNoumLayoutMutation',\n          },\n        });\n        isSuccess = false;\n      }\n\n      return isSuccess;\n    },\n    [publishNoumLayout],\n  );\n\n  return {\n    loading,\n    publishNoumLayoutHelper,\n  };\n}\n\nexport default usePublishNoumLayoutHelper;\n","import { useCallback } from 'react';\nimport { t } from 'i18next';\nimport * as Sentry from '@sentry/react';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useToast } from '@/hooks/toast';\nimport {\n  useUpdateUserProfileMutation,\n  useUpdateUserProfilePictureMutation,\n} from '@/apollo/graphql';\nimport {\n  type InputMaybe,\n  type UserProfileInput,\n} from '@/apollo/generated/types';\n\nexport function useHomeNoumAboutMeHelper() {\n  const { addToast } = useToast();\n  const { refetchUserData } = useAuth();\n\n  const handleError = useCallback(\n    (networkError: String | Error | null) => {\n      addToast(\n        'error',\n        'none',\n        `${t('noumena.toast_error.text')}: ${networkError}`,\n      );\n    },\n    [addToast],\n  );\n\n  const handleSuccess = useCallback(() => {\n    addToast(\n      'success',\n      'none',\n      `${t('noumena.toast_success.text')}: ${t(\n        'noumena.home_noum.about_me.save_changes.success',\n      )}`,\n    );\n    refetchUserData();\n  }, [addToast, refetchUserData]);\n\n  const [updateProfile, { loading: profileUpdateLoading }] =\n    useUpdateUserProfileMutation();\n\n  const [updateProfilePic, { loading: picUpdateLoading }] =\n    useUpdateUserProfilePictureMutation();\n\n  const loading = profileUpdateLoading || picUpdateLoading;\n\n  const homeNoumAboutMeHelper = useCallback(\n    async (input: UserProfileInput) => {\n      const successObj = { success: false };\n      await updateProfile({\n        variables: { input },\n        onError: ({ networkError = null, graphQLErrors = [] }) => {\n          const [err] = graphQLErrors;\n          handleError(err?.message ?? networkError);\n          Sentry.captureException(new Error(err?.message ?? networkError), {\n            tags: {\n              section: 'useUpdateUserProfileMutation',\n            },\n          });\n        },\n        onCompleted: () => {\n          handleSuccess();\n          successObj.success = true;\n        },\n      });\n      return successObj;\n    },\n    [handleError, handleSuccess, updateProfile],\n  );\n\n  const homeNoumAboutMeProfilePicHelper = useCallback(\n    async (profilePictureLink: InputMaybe<string> | undefined) => {\n      const successObj = { profilePicSuccess: false };\n      await updateProfilePic({\n        variables: { profilePictureLink },\n        onError: ({ networkError = null, graphQLErrors = [] }) => {\n          const [err] = graphQLErrors;\n          handleError(err?.message ?? networkError);\n          Sentry.captureException(new Error(err?.message ?? networkError), {\n            tags: {\n              section: 'useUpdateUserProfileMutation',\n            },\n          });\n        },\n        onCompleted: () => {\n          successObj.profilePicSuccess = true;\n        },\n      });\n      return successObj;\n    },\n    [handleError, updateProfilePic],\n  );\n\n  return { loading, homeNoumAboutMeHelper, homeNoumAboutMeProfilePicHelper };\n}\n\nexport default useHomeNoumAboutMeHelper;\n","import styled from 'styled-components';\nimport { sizes } from '@/constants/devices';\n\nexport const StyledNoumProgressWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  width: 100%;\n  min-width: 322px;\n  /* min-height: 182px; */\n\n  @media (max-width: ${sizes.TABLET_L}) {\n    min-width: 704px;\n    min-height: 96px;\n  }\n\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    width: 100%;\n    min-width: unset;\n    margin: unset;\n  }\n\n  background: var(--bg-card-brand-primary-default);\n  border-radius: 16px;\n  flex: none;\n  flex-grow: 0;\n`;\n\nexport const StyledNoum = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 16px;\n  padding: 16px;\n  width: calc(100% - 32px);\n  gap: 16px;\n`;\n\nexport const StyledFrame = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 0px;\n  gap: 4px;\n  width: 100%;\n  min-width: 290px;\n  max-height: 72px;\n\n  flex: none;\n  order: 0;\n  align-self: stretch;\n  flex-grow: 0;\n\n  @media (max-width: ${sizes.TABLET_L}) {\n    min-width: 672px;\n    max-height: 50px;\n  }\n\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    min-width: unset;\n    max-height: 72px;\n  }\n`;\n\nexport const StyledItem = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 16px;\n  width: 100%;\n  min-width: 290px;\n  height: 38px;\n  justify-content: space-between;\n  background: var(--bg-profile-completion-brand-primary-default);\n  border-radius: 8px;\n  cursor: pointer;\n  flex: none;\n  order: 0;\n  align-self: stretch;\n  flex-grow: 0;\n\n  @media (max-width: ${sizes.TABLET_L}) {\n    min-width: 672px;\n  }\n\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    /* min-width: 311px; */\n    min-width: unset;\n  }\n`;\n\nexport const StyledDiv = styled.div`\n  padding: 8px 0px 8px 12px;\n  width: 100%;\n  min-width: 223px;\n\n  @media (max-width: ${sizes.TABLET_L}) {\n    min-width: 605px;\n  }\n\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    min-width: 244px;\n  }\n`;\n\nexport const StyledButtonDiv = styled.div`\n  padding: 8px 12px 8px 0px;\n  cursor: pointer;\n`;\n\nexport const ProgressBarWrapper = styled.div`\n  width: 100%;\n  border-radius: 4px;\n`;\n\nexport const ProgressItems = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 0px;\n  gap: 8px;\n  width: 100%;\n  min-width: 290px;\n\n  flex: none;\n  order: 2;\n  align-self: stretch;\n  flex-grow: 0;\n`;\n","import { useTranslation, Trans } from 'react-i18next';\nimport capitalizeFirstLetter from '@/utils/capitalizeFirstLetter';\nimport { DeviceTypeEnum, useDeviceType } from '@/hooks';\nimport { ProgressBar } from '@/components/ProgressBar';\nimport { TSpan } from '@/components/Typography';\nimport {\n  StyledNoumProgressWrapper,\n  StyledItem,\n  ProgressBarWrapper,\n  StyledFrame,\n  ProgressItems,\n  StyledNoum,\n  StyledDiv,\n  StyledButtonDiv,\n} from './styles';\nimport { type NoumProgressProps } from './types';\n\nexport default function NoumProgressWrapper({\n  profileProgressItems,\n  profileProgressPercentage,\n  onItemClicked,\n  isTokensAlloted,\n}: NoumProgressProps) {\n  const { t } = useTranslation();\n  const deviceType = useDeviceType();\n\n  return (\n    <StyledNoumProgressWrapper data-testid=\"noumprogress-testid\">\n      <StyledNoum>\n        <StyledFrame>\n          <TSpan\n            font=\"body-l-bold\"\n            colorToken=\"--text-profile-completion-header-neutral-alt-default\"\n          >\n            {t('noumena.noumprogress.profile_completenes', {\n              completeness: profileProgressPercentage,\n            })}\n          </TSpan>\n          {profileProgressPercentage !== 100 && !isTokensAlloted && (\n            <TSpan\n              font=\"body-m-bold\"\n              colorToken=\"--text-profile-completion-brand-secondary-default\"\n            >\n              <Trans\n                i18nKey=\"noumena.noumprogress.profile_complete\"\n                components={{\n                  bold: (\n                    <TSpan colorToken=\"--text-profile-completion-neutral-alt-default\" />\n                  ),\n                }}\n              />\n            </TSpan>\n          )}\n        </StyledFrame>\n\n        <ProgressBarWrapper>\n          <ProgressBar\n            percentage={profileProgressPercentage}\n            backgroudColor=\"var(--bg-progressbar-brand-primary-hightlighted)\"\n            barSize={8}\n            color=\"var(--bg-progressbar-neutral-alt-default)\"\n          />\n        </ProgressBarWrapper>\n        <ProgressItems>\n          {profileProgressItems.map((item) => (\n            <StyledItem key={item.id} onClick={() => onItemClicked(item.id)}>\n              <StyledDiv>\n                <TSpan\n                  font={\n                    deviceType === DeviceTypeEnum.MOBILE\n                      ? 'body-m-bold'\n                      : 'body-l-bold'\n                  }\n                  colorToken=\"--text-profile-completion-neutral-alt-default\"\n                >\n                  {item.name}\n                </TSpan>\n              </StyledDiv>\n              <StyledButtonDiv>\n                <TSpan\n                  font=\"button-m\"\n                  colorToken=\"--text-button-neutral-alt-default\"\n                >\n                  {capitalizeFirstLetter(`${t('noumena.noumprogress.add')} `)}\n                </TSpan>\n              </StyledButtonDiv>\n            </StyledItem>\n          ))}\n        </ProgressItems>\n      </StyledNoum>\n    </StyledNoumProgressWrapper>\n  );\n}\n","import { useCallback } from 'react';\nimport { t } from 'i18next';\nimport * as Sentry from '@sentry/react';\nimport { useToast } from '@/hooks/toast';\nimport { useGetLocationLazyQuery } from '@/apollo/graphql';\nimport { type LocationOutput } from '@/apollo/generated/types';\n\nexport function useHomeNoumAboutMeGetLocationHelper() {\n  const { addToast } = useToast();\n\n  const handleError = useCallback(\n    (networkError: String | Error | null) => {\n      addToast(\n        'error',\n        'none',\n        `${t('noumena.toast_error.text')}: ${networkError}`,\n      );\n    },\n    [addToast],\n  );\n\n  const [getLocation, { loading: locationsLoading }] =\n    useGetLocationLazyQuery();\n\n  const locationHelper = useCallback(\n    async (search: string) => {\n      let data: LocationOutput[] = [];\n      await getLocation({\n        variables: { search },\n        onError: ({ networkError = null, graphQLErrors = [] }) => {\n          const [err] = graphQLErrors;\n          handleError(err?.message ?? networkError);\n          Sentry.captureException(new Error(err?.message ?? networkError), {\n            tags: {\n              section: 'useGetLocationLazyQuery',\n            },\n          });\n        },\n        onCompleted: (response) => {\n          if (response?.getLocation) {\n            data = response?.getLocation as LocationOutput[];\n          }\n        },\n      });\n      return data;\n    },\n    [handleError, getLocation],\n  );\n\n  return { locationsLoading, locationHelper };\n}\n\nexport default useHomeNoumAboutMeGetLocationHelper;\n","import { useState, useEffect, useCallback } from 'react';\nimport generate from 'uniqid';\nimport { TextField } from '@/components/TextField';\nimport { Icon } from '@/components/Icon';\nimport { Dropdown, type DropdownValueType } from '@/components/Dropdown';\nimport { useHomeNoumAboutMeGetLocationHelper } from '../../hooks/useHomeNoumAboutMeGetLocationHelper';\nimport { type TSearchSelect } from './types';\n\nexport const SearchSelectAPI = ({\n  options = [],\n  onSelect = () => {},\n  onClear = () => {},\n  showValue = '',\n  error,\n  helperText,\n  setTextFieldValue,\n  register,\n  setSuggestedOptions,\n  ...rest\n}: TSearchSelect) => {\n  const [search, setSearch] = useState<string>(showValue);\n  const [searchFlag, setSearchFlag] = useState<Boolean>(true);\n  const [searchOptions, setOptions] =\n    useState<DropdownValueType<string>[]>(options);\n  const isIPhone = !!window?.navigator.userAgent.match(/iPhone/i);\n\n  const [isListVisible, setIsListVisible] = useState(false);\n  const onInputChange = (val: string) => {\n    setSearchFlag(false);\n    callAPI();\n    setSearch(val);\n    if (setTextFieldValue) {\n      setTextFieldValue(val);\n    }\n  };\n  const clearSelection = () => {\n    setSearch('');\n    onClear();\n  };\n  const { locationHelper, locationsLoading } =\n    useHomeNoumAboutMeGetLocationHelper();\n\n  const callAPI = useCallback(async () => {\n    if (search === '') {\n      return;\n    }\n    const data = await locationHelper(search);\n    const filteredOptions: DropdownValueType<string>[] = data.map((option) => ({\n      key: generate(),\n      type: 'value',\n      label: option?.description || '',\n      value: option?.description || '',\n      fontFamily: 'var(--font-body-medium-bold-font)',\n    }));\n    setOptions(filteredOptions);\n    setSuggestedOptions?.(filteredOptions);\n  }, [locationHelper, search, setSuggestedOptions]);\n\n  useEffect(() => {\n    if (searchFlag) {\n      setSearch(showValue);\n    }\n  }, [searchFlag, showValue]);\n\n  return (\n    <Dropdown\n      inputValue={search}\n      options={searchOptions}\n      onSelectOption={(option) => {\n        setSearch(option.label as string);\n        onSelect(option);\n        setIsListVisible(false);\n      }}\n      onInputChange={onInputChange}\n      hideIcons\n      isLoading={locationsLoading}\n      isOpen={isListVisible && search !== ''}\n      usePortal={false}\n      placement=\"top\"\n      calRefTop={true}\n      usePopStyle={isIPhone}\n    >\n      {({ inputProps, inputRef }) => (\n        <TextField\n          {...inputProps}\n          {...rest}\n          ref={inputRef}\n          inputSize=\"normal\"\n          rightIcon={\n            isListVisible && search !== ''\n              ? search.trim() && (\n                  <Icon\n                    name=\"clear_m\"\n                    color=\"--border-input-brand-primary-default\"\n                    size={16}\n                    onClick={clearSelection}\n                  />\n                )\n              : null\n          }\n          data-testid=\"input-component\"\n          value={search}\n          onChange={(e) => onInputChange(e.target.value)}\n          error={error}\n          helperText={helperText}\n          onFocus={() => {\n            setIsListVisible(true);\n            onInputChange(search);\n          }}\n        />\n      )}\n    </Dropdown>\n  );\n};\n","import styled from 'styled-components';\nimport { sizes } from '@/constants/devices';\n\nexport const ImageWrapper = styled.div`\n  width: 100%;\n  text-align: center;\n  div {\n    margin: auto;\n  }\n  @media (max-width: ${sizes.TABLET_L}) {\n    text-align: left;\n    div {\n      margin: 0;\n    }\n  }\n`;\n\nexport const ProfileImage = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const StyledForm = styled.form`\n  width: 100%;\n  label {\n    width: fit-content;\n  }\n  @media (max-width: ${sizes.TABLET_L}) {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n  }\n`;\n","import { type UserProfileInput } from '@/apollo/generated/types';\nimport { type SpaceOutputFragment } from '@/apollo/graphql';\nimport OwnerDefaultImage from '@/assets/images/profile_default.png';\nimport { EditableAvatar } from '@/features/upload/components';\nimport { Button } from '@/components/Button';\nimport { type DropdownValueType } from '@/components/Dropdown';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { SearchSelectAPI } from '@/features/location/components';\nimport { TextArea } from '@/components/TextArea';\nimport { TextField } from '@/components/TextField';\nimport { TSpan } from '@/components/Typography';\nimport { breakpoints } from '@/constants/devices';\nimport { NAME_REGEX, TWO_LETTERED_NAME_REGEX } from '@/constants/regex';\nimport { useWindowDimensions } from '@/hooks';\nimport { useHomeNoumAboutMeHelper } from '@/features/noums/hooks/noums';\nimport { Spacer } from '@/layout';\nimport { useNoumContext } from '@/screens/Chamber/ViewChamber/ChamberProvider';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport React, { memo, useCallback, useState } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\nimport * as yup from 'yup';\nimport { ImageWrapper, ProfileImage, StyledForm } from './styles';\nimport { type HomeNoumAboutMeProps, type HomeNoumAboutMetype } from './types';\n\nconst initialDetails = (space: SpaceOutputFragment | undefined) => ({\n  profile: {\n    profilePicture: space?.uid?.profile?.profilePicture,\n  },\n  firstName: space?.uid?.firstName || undefined,\n  lastName: space?.uid?.lastName || undefined,\n  title: space?.uid?.title || '',\n  bio: space?.uid?.bio || '',\n  location: space?.uid?.location || '',\n});\n\nexport const HomeNoumAboutMe = memo((props: HomeNoumAboutMeProps) => {\n  const { t } = useTranslation();\n  const { space, refetchConnectedMembers } = useNoumContext();\n  const [profileImage, setProfileImage] = useState<string | undefined>(\n    space?.uid?.profile?.profilePicture || undefined,\n  );\n  const [profileImgDeleted, setProfileImgDeleted] = useState<boolean>(false);\n  const [userProfileDetails, setUserProfileDetails] =\n    useState<UserProfileInput>(() => initialDetails(space));\n  const {\n    homeNoumAboutMeHelper,\n    homeNoumAboutMeProfilePicHelper,\n    loading: updating,\n  } = useHomeNoumAboutMeHelper();\n\n  const homeNoumAboutMeSchema = yup\n    .object({\n      firstName: yup\n        .string()\n        .required(t('noumena.home_noum.about_me.error.name_required'))\n        .min(2, t('noumena.signup.first_name.too_short'))\n        .max(20, t('noumena.signup.first_name.too_long'))\n        .test(\n          'Two letter name validation',\n          t('noumena.signup.two_digit_first_name.incorrect'),\n          (value) => {\n            if (value && value.length <= 2) {\n              return TWO_LETTERED_NAME_REGEX.test(value);\n            }\n            return true;\n          },\n        )\n        .matches(\n          NAME_REGEX,\n          t('noumena.home_noum.about_me.error.first_name_alpha_only'),\n        ),\n      lastName: yup\n        .string()\n        .required(t('noumena.home_noum.about_me.error.name_required'))\n        .min(2, t('noumena.signup.last_name.too_short'))\n        .max(20, t('noumena.signup.last_name.too_long'))\n        .test(\n          'Two letter name validation',\n          t('noumena.signup.two_digit_last_name.incorrect'),\n          (value) => {\n            if (value && value.length <= 2) {\n              return TWO_LETTERED_NAME_REGEX.test(value);\n            }\n            return true;\n          },\n        )\n        .matches(\n          NAME_REGEX,\n          t('noumena.home_noum.about_me.error.last_name_alpha_only'),\n        ),\n      title: yup\n        .string()\n        .notRequired()\n        .max(64, t(`noumena.home_noum.about_me.error.title_maximum_length`)),\n      bio: yup\n        .string()\n        .notRequired()\n        .max(750, t(`noumena.home_noum.about_me.error.bio_maximum_length`)),\n    })\n    .required();\n\n  const {\n    register,\n    reset,\n    trigger,\n    setValue,\n    handleSubmit,\n    formState: { errors, isValid },\n  } = useForm<HomeNoumAboutMetype>({\n    resolver: yupResolver(homeNoumAboutMeSchema),\n    mode: 'all',\n    reValidateMode: 'onBlur',\n  });\n\n  const onSubmit: SubmitHandler<HomeNoumAboutMetype> = useCallback(\n    async (data: HomeNoumAboutMetype) => {\n      let profilePicSuccess = { profilePicSuccess: false };\n      if (profileImgDeleted) {\n        profilePicSuccess = await homeNoumAboutMeProfilePicHelper('');\n      }\n\n      const { success } = await homeNoumAboutMeHelper({\n        ...userProfileDetails,\n        firstName: data.firstName,\n        lastName: data.lastName,\n        profile: profileImage ? { profilePicture: profileImage } : undefined,\n      });\n\n      if (\n        success &&\n        ((profileImgDeleted === true &&\n          profilePicSuccess?.profilePicSuccess === true) ||\n          (profileImgDeleted === false &&\n            profilePicSuccess?.profilePicSuccess === false))\n      ) {\n        props.handleSuccess();\n      }\n      refetchConnectedMembers();\n    },\n    [\n      profileImgDeleted,\n      homeNoumAboutMeHelper,\n      userProfileDetails,\n      profileImage,\n      refetchConnectedMembers,\n      homeNoumAboutMeProfilePicHelper,\n      props,\n    ],\n  );\n\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setUserProfileDetails({\n        ...userProfileDetails,\n        [e.currentTarget.name]: e.currentTarget.value,\n      });\n    },\n    [userProfileDetails, setUserProfileDetails],\n  );\n\n  const handleChangeProfileImage = useCallback(\n    (imageURL: string | undefined) => {\n      setProfileImgDeleted(false);\n      setProfileImage(imageURL);\n      setValue('profileImage', imageURL);\n      trigger('profileImage');\n    },\n    [setProfileImage, setValue, trigger, setProfileImgDeleted],\n  );\n\n  const handleClose = useCallback(() => {\n    setUserProfileDetails(initialDetails(space));\n    setProfileImage(space?.uid?.profile?.profilePicture || undefined);\n    reset();\n    props.handleClose(true);\n  }, [setUserProfileDetails, reset, props, space, setProfileImage]);\n\n  const { width } = useWindowDimensions();\n  const isDesktop = width >= breakpoints.TABLET_L;\n\n  const handleLocationSelect = useCallback(\n    (option: DropdownValueType<string>) => {\n      setUserProfileDetails({ ...userProfileDetails, location: option.value });\n    },\n    [setUserProfileDetails, userProfileDetails],\n  );\n\n  const handleLocationClear = useCallback(() => {\n    setUserProfileDetails({ ...userProfileDetails, location: '' });\n  }, [setUserProfileDetails, userProfileDetails]);\n\n  return (\n    <Modal\n      testId=\"testHomeNoumAboutMe\"\n      open={props.isOpen}\n      onClose={handleClose}\n      enableCloseButton\n      closeButtonStyles={{ tertiary: true }}\n      size={ModalSize.XL}\n      disableBackdropClick\n    >\n      <ModalHeader isFullScreen={!isDesktop}>\n        {t(`noumena.home_noum.about_me.section_title`)}\n      </ModalHeader>\n      <ModalBody mobileFlex align=\"center\">\n        <ImageWrapper>\n          <ProfileImage>\n            <EditableAvatar\n              size=\"XXL\"\n              url={profileImage}\n              onContentChange={handleChangeProfileImage}\n              onClear={() => {\n                handleChangeProfileImage('');\n                setProfileImgDeleted(true);\n              }}\n              maximumFileSize={5}\n              defaultImagePlaceHolder={OwnerDefaultImage}\n            />\n          </ProfileImage>\n        </ImageWrapper>\n        <Spacer height={24} />\n        <StyledForm onSubmit={handleSubmit(onSubmit)}>\n          <TextField\n            {...register('firstName', {\n              required: {\n                value: true,\n                message: t(`noumena.home_noum.about_me.error.name_required`),\n              },\n              onChange: handleChange,\n            })}\n            value={userProfileDetails.firstName || undefined}\n            label={t(`noumena.home_noum.about_me.first_name_label`)}\n            error={!!errors.firstName}\n            helperText={errors.firstName?.message}\n          />\n          <Spacer height={16} />\n          <TextField\n            {...register('lastName', {\n              required: {\n                value: true,\n                message: t(`noumena.home_noum.about_me.error.name_required`),\n              },\n              onChange: handleChange,\n            })}\n            value={userProfileDetails.lastName || undefined}\n            label={t(`noumena.home_noum.about_me.last_name_label`)}\n            error={!!errors.lastName}\n            helperText={errors.lastName?.message}\n          />\n          <Spacer height={16} />\n          <TextField\n            {...register('title', {\n              onChange: handleChange,\n              maxLength: {\n                value: 64,\n                message: t(\n                  'noumena.home_noum.about_me.error.title_maximum_length',\n                ),\n              },\n            })}\n            value={userProfileDetails.title || ''}\n            label={t(`noumena.home_noum.about_me.title_label`)}\n            error={!!errors.title}\n            helperText={errors.title?.message}\n            multiple\n            maxLength={64}\n          />\n          <Spacer height={16} />\n          <TextArea\n            {...register('bio', {\n              onChange: handleChange,\n              maxLength: {\n                value: 750,\n                message: t(\n                  'noumena.home_noum.about_me.error.bio_maximum_length',\n                ),\n              },\n            })}\n            resize={false}\n            autoResize={true}\n            value={userProfileDetails.bio || ''}\n            label={t(`noumena.home_noum.about_me.description_label`)}\n            error={!!errors.bio}\n            helperText={errors.bio?.message}\n            multiple\n            maxLength={750}\n          />\n          <Spacer height={24} />\n          <div>\n            <TSpan\n              data-testid=\"labelLocation\"\n              font=\"body-l-bold\"\n              colorToken=\"--text-body-header-neutral-default\"\n            >\n              {t(`noumena.home_noum.about_me.location.heading`)}\n            </TSpan>\n            <Spacer height={16} />\n            <SearchSelectAPI\n              showValue={userProfileDetails.location || ''}\n              onSelect={handleLocationSelect}\n              onClear={handleLocationClear}\n            />\n          </div>\n        </StyledForm>\n      </ModalBody>\n      <ModalFooter>\n        <Button\n          type=\"submit\"\n          primary\n          size=\"full\"\n          loading={updating}\n          secondary={!isValid}\n          tertiary={!isValid}\n          disabled={!isValid || updating}\n          onClick={handleSubmit(onSubmit)}\n        >\n          {t('noumena.home_noum.about_me.save_changes')}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n});\n","import styled from 'styled-components';\nimport { sizes } from '@/constants/devices';\nimport { noScrollBar } from '@/common/globalStyles';\n\nexport const StyledForm = styled.form`\n  width: 100%;\n  overflow-y: auto;\n  flex: 1;\n  ${noScrollBar}\n  label {\n    width: fit-content;\n  }\n  @media (max-width: ${sizes.TABLET_L}) {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n  }\n`;\n","import { memo, useCallback, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from '@/components/Button';\nimport {\n  BodyContentEnum,\n  type CreateElementInput,\n  ElementStatusEnum,\n  ElementTypeEnum,\n} from '@/apollo/generated/types';\n\nimport { useLaunchDarkly, useWindowDimensions } from '@/hooks';\n\nimport { breakpoints } from '@/constants/devices';\nimport { useNoumContext } from '@/screens/Chamber/ViewChamber/ChamberProvider';\nimport {\n  RichTextEditor,\n  type ReactQuillChangeResult,\n} from '@/features/richTextEditor';\nimport { SpaceUtils } from '@/utils/space';\nimport { ElementUtils } from '@/utils/element';\nimport {\n  useAddElementsHelper,\n  usePublishNoumLayoutHelper,\n  usePublishSpaceHelper,\n  useUpdateElementHelper,\n} from '@/features/noums/hooks/spaceQuery';\nimport { useToast } from '@/hooks/toast';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { StyledForm } from './styles';\nimport { type HomeNoumBusinessBriefProps } from './types';\n\nexport const HomeNoumBusinessBrief = memo(\n  (props: HomeNoumBusinessBriefProps) => {\n    const {\n      flags: { noumEditor2 },\n    } = useLaunchDarkly();\n    const { addToast } = useToast();\n    const { t } = useTranslation();\n    const { space } = useNoumContext();\n    const { addElementsHelper, loading } = useAddElementsHelper();\n\n    const element = SpaceUtils.getElementInSpaceByType(\n      space,\n      ElementTypeEnum.BusinessBrief,\n    );\n    const bodyContentJson = ElementUtils.getBodyContentJson(element);\n    const spaceId = space?._id || '';\n    const { width } = useWindowDimensions();\n    const isDesktop = width > breakpoints.TABLET_L;\n\n    const [initialTextAreaValue] = useState<string>(bodyContentJson || '');\n    const [textAreaValue, setTextAreaValue] = useState<string>(\n      bodyContentJson || '',\n    );\n    const { publishNoumLayoutHelper } = usePublishNoumLayoutHelper();\n\n    const { updateElementHelper, loading: updateElementLoader } =\n      useUpdateElementHelper();\n\n    const { publishSpaceHelper, loading: publishElementLoader } =\n      usePublishSpaceHelper();\n\n    const onSubmit = useCallback(\n      async (event) => {\n        event.preventDefault();\n\n        if (textAreaValue === `<p><br></p>` || !textAreaValue) {\n          addToast(\n            'error',\n            'none',\n            t('noumena.chamber_edit.add_reference.empty_content'),\n          );\n          setTextAreaValue('');\n          return;\n        }\n        if (!element._id) {\n          const newElementInput: CreateElementInput = {\n            elementType: ElementTypeEnum.BusinessBrief,\n            status: ElementStatusEnum.Published,\n            bodyContentType: BodyContentEnum.Json,\n            bodyContent: textAreaValue,\n            bodyContentJson: null,\n            position: 1,\n            percentCompleted: 100,\n          };\n          const isSuccess = await addElementsHelper(\n            spaceId,\n            newElementInput,\n            noumEditor2,\n          );\n          if (noumEditor2) await publishNoumLayoutHelper(spaceId);\n          if (isSuccess) {\n            props.handleSuccess();\n          }\n        } else {\n          const isUpdateSuccess = await updateElementHelper(spaceId, {\n            elementId: element._id,\n            bodyContent: textAreaValue,\n            bodyContentJson: null,\n            position: element.position ?? props.position,\n            status: ElementStatusEnum.Published,\n            bodyContentType: BodyContentEnum.Json,\n            percentCompleted: 100,\n          });\n\n          const isPublishSuccess = await publishSpaceHelper(spaceId, space);\n\n          if (isUpdateSuccess && isPublishSuccess) {\n            props.handleSuccess();\n          }\n        }\n      },\n      [\n        textAreaValue,\n        element._id,\n        element.position,\n        addToast,\n        t,\n        addElementsHelper,\n        spaceId,\n        noumEditor2,\n        publishNoumLayoutHelper,\n        props,\n        updateElementHelper,\n        publishSpaceHelper,\n        space,\n      ],\n    );\n\n    const handleClose = useCallback(() => {\n      setTextAreaValue(bodyContentJson || '');\n      props.handleClose(true);\n    }, [props, setTextAreaValue, bodyContentJson]);\n\n    return (\n      <Modal\n        testId=\"testHomeNoumBusinessBrief\"\n        enableCloseButton\n        open={props.isOpen}\n        onClose={handleClose}\n        size={ModalSize.XL}\n        disableBackdropClick\n      >\n        <ModalHeader>\n          {t(`noumena.home_noum.business_brief.section_title`)}\n        </ModalHeader>\n        <ModalBody style={{ height: isDesktop ? '420px' : '100%' }}>\n          <StyledForm onSubmit={onSubmit}>\n            <RichTextEditor\n              placeholder={t(\n                `noumena.home_noum.business_brief.rte_placeholder`,\n              )}\n              initialValue={initialTextAreaValue}\n              onContentChange={(res: ReactQuillChangeResult) => {\n                setTextAreaValue(res.value ?? '');\n              }}\n              width=\"100%\"\n              inModal\n              editEnabled\n            />\n          </StyledForm>\n        </ModalBody>\n        <ModalFooter marginTop={isDesktop ? 16 : 0}>\n          <Button\n            style={\n              !isDesktop\n                ? { position: 'absolute', right: 24, top: 24 }\n                : undefined\n            }\n            type=\"submit\"\n            primary\n            size={isDesktop ? 'large' : 'small'}\n            loading={loading || updateElementLoader || publishElementLoader}\n            secondary={textAreaValue === ''}\n            tertiary={textAreaValue === ''}\n            disabled={\n              textAreaValue === '' ||\n              loading ||\n              updateElementLoader ||\n              publishElementLoader\n            }\n            onClick={onSubmit}\n          >\n            {t('noumena.homenoum.save_and_publish')}\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  },\n);\n","import { useCallback, useMemo } from 'react';\nimport { useGetNoumReferencesQuery } from '@/apollo/graphql';\nimport { type NoumReferenceStatus } from '@/apollo/generated/types';\nimport { type BottomStatus as InfiniteStatus } from '@/components/Infinite/types';\nimport { cleanList } from '@/utils/list';\n\nconst DEFAULT_PAGE_SIZE = 10;\n\nexport const useGetNoumReferences = (\n  experienceId: string,\n  status: NoumReferenceStatus | NoumReferenceStatus[],\n  isInfinite?: boolean,\n  pageSize = DEFAULT_PAGE_SIZE,\n) => {\n  const { data, loading, error, fetchMore, refetch } =\n    useGetNoumReferencesQuery({\n      variables: {\n        experienceId,\n        status,\n        limit: isInfinite ? pageSize : DEFAULT_PAGE_SIZE,\n      },\n      fetchPolicy: 'cache-and-network',\n      skip: !experienceId,\n    });\n\n  const { references, count, totalCount } = useMemo(\n    () => ({\n      references: data?.getNoumReferences?.data || [],\n      count: (data?.getNoumReferences?.data || []).length,\n      totalCount: data?.getNoumReferences?.count || 0,\n    }),\n    [data],\n  );\n\n  const infiniteState: InfiniteStatus =\n    count < totalCount ? 'hasNextPage' : 'end';\n\n  const fetchMoreReferences = useCallback(async () => {\n    try {\n      await fetchMore({\n        variables: { limit: pageSize, offset: count },\n      });\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.log(e);\n    }\n  }, [count, fetchMore, pageSize]);\n\n  const refetchReferences = useCallback(async () => {\n    try {\n      await refetch();\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.log(e);\n    }\n  }, [refetch]);\n\n  return {\n    references: cleanList(references) || [],\n    loading,\n    error,\n    infiniteState,\n    fetchMoreReferences,\n    refetchReferences,\n  };\n};\n\nexport default useGetNoumReferences;\n","/**\n * Delay the function execution.\n *\n * @param {function} fn target function.\n * @param {number} time delay time.\n * @return {void}.\n */\nexport function delay(fn: Function, time: number = 10) {\n  return new Promise<void>((resolve) => {\n    setTimeout(() => {\n      fn();\n      resolve();\n    }, time);\n  });\n}\n","import { forwardRef, type Ref } from 'react';\nimport { Icon } from '@/components/Icon';\nimport { useLaunchDarkly } from '@/hooks';\nimport { type WrapperViewProp } from './types';\nimport {\n  WrapperHead,\n  WrapperCollapse,\n  WrapperTitleView,\n  WrapperTitleLabel,\n} from './styles';\n\nexport const ViewMode = forwardRef(\n  (\n    {\n      currentTitle = '',\n      rightPadding,\n      isCollapse,\n      setIsCollapse,\n      children,\n      isCollapseDisabled,\n      showFullTitle = false,\n      showCollapseBtn = true,\n      fullWidth,\n      ...rest\n    }: WrapperViewProp,\n    ref: Ref<HTMLDivElement>,\n  ) => {\n    const {\n      flags: { noumEditor2 },\n    } = useLaunchDarkly();\n\n    const handleCollapse = (e: React.MouseEvent<HTMLDivElement>) => {\n      if (isCollapseDisabled) {\n        e.preventDefault();\n      } else {\n        setIsCollapse(!isCollapse);\n      }\n    };\n\n    return (\n      <WrapperHead\n        ref={ref}\n        data-testid=\"WrapperView\"\n        isEditing={false}\n        isCollapseDisabled={!!isCollapseDisabled}\n        fullWidth={fullWidth}\n        {...rest}\n        onClick={handleCollapse}\n      >\n        {!noumEditor2 && (\n          <WrapperCollapse\n            showCollapseBtn={showCollapseBtn}\n            isCollapseDisabled={!!isCollapseDisabled}\n            data-testid=\"collapse-button\"\n            onClick={handleCollapse}\n          >\n            {!isCollapse ? (\n              <Icon\n                name=\"chevron_small_up_m\"\n                size={24}\n                color=\"--icon-button-neutral-default\"\n              />\n            ) : (\n              <Icon\n                name=\"chevron_small_down_m\"\n                size={24}\n                color=\"--icon-button-neutral-default\"\n              />\n            )}\n          </WrapperCollapse>\n        )}\n        <WrapperTitleView\n          collapse={isCollapse}\n          showFullTitle={showFullTitle}\n          rightPadding={`${rightPadding && rightPadding * 0.18}px`}\n        >\n          <WrapperTitleLabel\n            font=\"heading-xs-bold\"\n            colorToken=\"--text-body-header-neutral-default\"\n          >\n            {currentTitle}\n          </WrapperTitleLabel>\n        </WrapperTitleView>\n      </WrapperHead>\n    );\n  },\n);\n","import { memo, useCallback, useMemo } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport * as Sentry from '@sentry/react';\nimport { Button } from '@/components/Button';\nimport {\n  WrapperLoading,\n  WrapperSpinner,\n} from '@/screens/Chamber/components/ElementWrapper/styles';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { Spinner } from '@/components/Spinner';\nimport { TSpan } from '@/components/Typography';\nimport { Spacer } from '@/layout';\nimport { ElementTypeEnum } from '@/apollo/generated/types';\nimport { useRemoveSubWalletMutation } from '@/apollo/graphql';\nimport { useRemoveElementHelper } from '@/features/noums/hooks/spaceQuery';\n\nexport interface ElementDeleteProps {\n  spaceId: string;\n  elementId: string;\n  elementTitle: string;\n  isOpen: boolean;\n  elementType?: ElementTypeEnum;\n  handleClose: (isSuccess?: boolean) => void;\n  handleDeleteProps?: () => void;\n}\n\nexport const ElementDelete = memo((props: ElementDeleteProps) => {\n  const { t } = useTranslation();\n  const { removeElementHelper, loading } = useRemoveElementHelper();\n  const { elementType } = props;\n\n  const modalTitle = useMemo(() => {\n    switch (elementType) {\n      case ElementTypeEnum.Calendar:\n        return t('noumena.container.tool_delete.title');\n      default:\n        return t(`noumena.container.element_delete.title`);\n    }\n  }, [elementType, t]);\n\n  const bodyMessage = useMemo(() => {\n    switch (elementType) {\n      case ElementTypeEnum.Calendar:\n        return (\n          <Trans\n            i18nKey=\"noumena.container.calendar_delete.body\"\n            components={{\n              b: (\n                <TSpan\n                  font=\"body-l\"\n                  colorToken=\"--text-modal-neutral-highlighted\"\n                  textAlign=\"center\"\n                />\n              ),\n            }}\n          />\n        );\n      case ElementTypeEnum.FilesManager:\n        return (\n          <Trans\n            i18nKey=\"noumena.file_manager.element_delete\"\n            components={{\n              b: (\n                <TSpan\n                  font=\"body-l\"\n                  colorToken=\"--text-modal-neutral-highlighted\"\n                />\n              ),\n            }}\n          />\n        );\n      default:\n        return t('noumena.container.element_delete.body', {\n          elementTitle: props.elementTitle,\n        });\n    }\n  }, [elementType, props.elementTitle, t]);\n\n  const extraBodyMessage = useMemo(() => {\n    switch (elementType) {\n      case ElementTypeEnum.Message:\n        return t('noumena.chat.edit_mode.delete_confirmation_message');\n      case ElementTypeEnum.Calendar:\n        return t('noumena.calendar.edit_mode.delete_confirmation_message');\n      default:\n        return null;\n    }\n  }, [elementType, t]);\n\n  const [removeSubWalletMutation] = useRemoveSubWalletMutation();\n\n  const handleDelete = useCallback(async () => {\n    if (\n      Object.prototype.hasOwnProperty.call(props, 'elementType') &&\n      elementType === ElementTypeEnum.Wallet\n    ) {\n      await removeSubWalletMutation({\n        variables: {\n          chamberId: props.spaceId,\n        },\n        onError: ({ networkError = null, graphQLErrors = [] }) => {\n          const [err] = graphQLErrors;\n          Sentry.captureException(new Error(err?.message ?? networkError), {\n            tags: {\n              section: 'deleteQuestionMutation',\n            },\n          });\n        },\n      });\n    }\n    const isSuccess = await removeElementHelper(props.spaceId, props.elementId);\n    props.handleClose(isSuccess);\n  }, [elementType, props, removeElementHelper, removeSubWalletMutation]);\n\n  return (\n    <Modal\n      isFullScreen={false}\n      testId=\"testElementDelete\"\n      open={props.isOpen || loading}\n      onClose={props.handleClose}\n      size={ModalSize.S}\n      disableBackdropClick\n    >\n      {loading ? (\n        <WrapperLoading>\n          <WrapperSpinner>\n            <Spinner />\n            <Spacer height=\"20px\" />\n          </WrapperSpinner>\n          <Spacer height=\"16px\" />\n          <TSpan\n            data-testid=\"bodyElementDeleteSaving\"\n            font=\"body-l\"\n            colorToken=\"--text-modal-neutral-default\"\n          >\n            {t(`noumena.container.element_delete.body.loading`)}\n          </TSpan>\n        </WrapperLoading>\n      ) : (\n        <>\n          <ModalHeader>{modalTitle}</ModalHeader>\n          <ModalBody align=\"center\">\n            <TSpan\n              data-testid=\"bodyElementDelete\"\n              font=\"body-l\"\n              colorToken=\"--text-modal-neutral-default\"\n              textAlign=\"center\"\n            >\n              {bodyMessage}\n            </TSpan>\n            <Spacer height={12} />\n            {extraBodyMessage && (\n              <TSpan\n                data-testid=\"extraBodyElementDelete\"\n                font=\"body-l\"\n                colorToken=\"--text-modal-neutral-default\"\n                textAlign=\"center\"\n              >\n                {extraBodyMessage}\n              </TSpan>\n            )}\n          </ModalBody>\n          <ModalFooter flexDirection=\"column\" marginTop={12} gap={16}>\n            <Button\n              data-testid=\"confirmElementDelete\"\n              primary\n              intent=\"negative\"\n              size=\"full\"\n              onClick={\n                props.handleDeleteProps ? props.handleDeleteProps : handleDelete\n              }\n            >\n              {t(`noumena.container.element_delete`)}\n            </Button>\n            <Button\n              data-testid=\"cancelElementDelete\"\n              tertiary\n              size=\"full\"\n              onClick={() => props.handleClose()}\n            >\n              {t(`noumena.container.element_delete.cancel`)}\n            </Button>\n          </ModalFooter>\n        </>\n      )}\n    </Modal>\n  );\n});\n\nexport default ElementDelete;\n","import { memo, useCallback, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n// import * as Sentry from '@sentry/react';\nimport { Button } from '@/components/Button';\nimport {\n  WrapperLoading,\n  CloseWalletWrapperModalChildren,\n  WrapperSpinner,\n} from '@/screens/Chamber/components/ElementWrapper/styles';\nimport { Spinner } from '@/components/Spinner';\nimport { TSpan } from '@/components/Typography';\nimport { Spacer } from '@/layout';\nimport { Icon } from '@/components/Icon';\nimport { useGetSubWalletBalanceLazyQuery } from '@/apollo/graphql';\nimport {\n  Modal,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { useRemoveElementHelper } from '@/features/noums/hooks/spaceQuery';\n\nexport interface CloseWalletProps {\n  spaceId: string;\n  elementId: string;\n  isOpen: boolean;\n  handleClose: (isSuccess?: boolean) => void;\n  setShowNonZeroWalletModal: Function;\n}\n\nexport const CloseWallet = memo((props: CloseWalletProps) => {\n  const { t } = useTranslation();\n  const [subwalletClosed, setSubWalletClosed] = useState<boolean>(false);\n  // const [removeSubWalletMutation] = useRemoveSubWalletMutation();\n  const [gqlGetSubWalletBalance] = useGetSubWalletBalanceLazyQuery();\n  const { removeElementHelper, loading } = useRemoveElementHelper();\n  const handleDelete = useCallback(async () => {\n    const isSuccess = await removeElementHelper(props.spaceId, props.elementId);\n    props.handleClose(isSuccess);\n    setSubWalletClosed(false);\n  }, [props, removeElementHelper]);\n\n  const handleCloseWallet = useCallback(async () => {\n    // const res = await removeSubWalletMutation({\n    //   variables: {\n    //     chamberId: props.spaceId,\n    //   },\n    //   onError: ({ networkError = null, graphQLErrors = [] }) => {\n    //     const [err] = graphQLErrors;\n    //     Sentry.captureException(new Error(err?.message ?? networkError), {\n    //       tags: {\n    //         section: 'deleteQuestionMutation',\n    //       },\n    //     });\n    //   },\n    // });\n    // if (res.data?.removeSubWallet?.message === 'Successfully removed') {\n    // setSubWalletClosed(true);\n    // } else {\n    //   setSubWalletClosed(false);\n    // }\n    const res = await gqlGetSubWalletBalance({\n      fetchPolicy: 'network-only',\n      variables: {\n        chamberId: props.spaceId,\n      },\n    });\n    const value = res.data?.getSubWalletBalance?.amount?.value;\n    if (value === 0.0 || 0.0 || 0) {\n      setSubWalletClosed(true);\n    } else {\n      props.handleClose();\n      props.setShowNonZeroWalletModal(true);\n    }\n  }, [gqlGetSubWalletBalance, props]);\n\n  return (\n    <Modal\n      testId=\"testCloseWallet\"\n      open={props.isOpen || loading}\n      onClose={props.handleClose}\n      disableBackdropClick={true}\n      size={ModalSize.S}\n    >\n      {loading ? (\n        <WrapperLoading>\n          <WrapperSpinner>\n            <Spinner />\n            <Spacer height=\"20px\" />\n          </WrapperSpinner>\n          <Spacer height=\"16px\" />\n          <TSpan\n            colorToken=\"--text-modal-neutral-default\"\n            data-testid=\"bodyElementDeleteSaving\"\n            font=\"body-l\"\n          >\n            {t(`noumena.container.element_delete.body.loading`)}\n          </TSpan>\n        </WrapperLoading>\n      ) : (\n        <CloseWalletWrapperModalChildren>\n          {subwalletClosed ? (\n            <>\n              <ModalHeader>\n                {t(`noumena.container.close_subWallet.noumwalletclosed`)}\n              </ModalHeader>\n\n              <ModalBody align=\"center\">\n                <Icon name=\"success_cq_xxxl\" size={96} />\n              </ModalBody>\n\n              <ModalFooter flexDirection=\"column\" gap={16}>\n                <Button\n                  data-testid=\"cancel1CloseWallet\"\n                  primary\n                  size=\"full\"\n                  onClick={() => handleDelete()}\n                >\n                  {t(`noumena.container.close_subwallet.close`)}\n                </Button>\n              </ModalFooter>\n            </>\n          ) : (\n            <>\n              <ModalHeader>\n                {t(`noumena.container.close_subWallet.title`)}\n              </ModalHeader>\n              <ModalBody>\n                <TSpan font=\"body-l\" colorToken=\"--text-modal-neutral-default\">\n                  {t(`noumena.container.close_subwallet.walletDeleteText`)}\n                </TSpan>\n              </ModalBody>\n              <ModalFooter flexDirection=\"column\" gap={16}>\n                <Button\n                  data-testid=\"confirmCloseWallet\"\n                  primary\n                  size=\"full\"\n                  onClick={() => handleCloseWallet()}\n                >\n                  {t(`noumena.container.close_subwallet.Continue`)}\n                </Button>\n                <Button\n                  data-testid=\"cancelCloseWallet\"\n                  tertiary\n                  size=\"full\"\n                  onClick={() => props.handleClose()}\n                >\n                  {t(`noumena.container.close_subwallet.Cancel`)}\n                </Button>\n              </ModalFooter>\n            </>\n          )}\n        </CloseWalletWrapperModalChildren>\n      )}\n    </Modal>\n  );\n});\n\nexport default CloseWallet;\n","import { memo, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from '@/components/Button';\nimport { CloseWalletWrapperModalChildren } from '@/screens/Chamber/components/ElementWrapper/styles';\nimport { TSpan } from '@/components/Typography';\nimport {\n  Modal,\n  ModalHeader,\n  ModalFooter,\n  ModalSize,\n} from '@/components/ExtendedModal';\n\nexport interface NonZeroWalletModalProps {\n  isOpen: boolean;\n  handleClose: (isSuccess?: boolean) => void;\n}\n\nexport const NonZeroWalletModal = memo((props: NonZeroWalletModalProps) => {\n  const { t } = useTranslation();\n\n  const handleDelete = useCallback(async () => {\n    props.handleClose();\n  }, [props]);\n\n  return (\n    <Modal\n      size={ModalSize.S}\n      testId=\"testCloseWallet\"\n      open={props.isOpen}\n      onClose={props.handleClose}\n      disableBackdropClick={true}\n    >\n      <CloseWalletWrapperModalChildren>\n        <ModalHeader>\n          {t(`noumena.container.close_subWallet.title`)}\n        </ModalHeader>\n\n        <TSpan colorToken=\"--text-modal-neutral-default\" font=\"body-l\">\n          {t(`noumena.container.close_subwallet.nonZeroWalletBalanceTest`)}\n        </TSpan>\n        <ModalFooter>\n          <Button\n            data-testid=\"confirmCloseWallet\"\n            primary\n            size=\"full\"\n            onClick={() => handleDelete()}\n          >\n            {t(`noumena.container.close_subwallet.Ok`)}\n          </Button>\n        </ModalFooter>\n      </CloseWalletWrapperModalChildren>\n    </Modal>\n  );\n});\n\nexport default NonZeroWalletModal;\n","import { t } from 'i18next';\nimport { forwardRef, type Ref, useCallback, useState } from 'react';\nimport { useGetSubWalletBalanceLazyQuery } from '@/apollo/graphql';\nimport {\n  type ElementInput,\n  ElementStatusEnum,\n  ElementTypeEnum,\n  SpaceTypeEnum,\n} from '@/apollo/generated/types';\nimport { Icon } from '@/components/Icon';\nimport { TextField } from '@/components/TextField/TextField';\nimport { Button } from '@/components/Button';\nimport { ElementDelete } from '@/screens/Chamber/components/modals/ElementDelete';\nimport { CloseWallet } from '@/screens/Chamber/components/modals/CloseWallet';\nimport { NonZeroWalletModal } from '@/screens/Chamber/components/modals/NonZeroWalletModal';\nimport { ElementUtils } from '@/utils/element';\nimport { useUpdateElementHelper } from '@/features/noums/hooks/spaceQuery';\nimport { TSpan } from '@/components/Typography';\nimport { useEditChamberState } from '@/screens/Chamber/EditChamber/provider';\nimport { useLaunchDarkly } from '@/hooks';\nimport {\n  ChamberDeleteButton,\n  ChamberAddButton,\n  HeadContent,\n  WrapperHead,\n  WrapperHeadActionButtons,\n  WrapperHeadCrossButton,\n  WrapperIcons,\n  WrapperInline,\n  WrapperTitle,\n  WrapperTitleNoEdit,\n  WrapperHeadCheckButton,\n  ChamberVisibilityChangeButton,\n  HeadTag,\n  ToolTipHead,\n} from './styles';\nimport { type ElementWrapperProps } from './types';\n\nexport const EditMode = forwardRef(\n  (\n    {\n      spaceId,\n      element,\n      currentTitle = '',\n      currentIndex,\n      totalIndex,\n      children,\n      onUpClick,\n      onDownClick,\n      provided,\n      handleOpenExperienceModal,\n      isCustomPreview,\n      isCustomPreviewVisible,\n      handleCPVisibilityChange,\n      isPostCustomPreview,\n      updateElementLoader,\n      ...rest\n    }: ElementWrapperProps,\n    ref: Ref<HTMLDivElement>,\n  ) => {\n    const {\n      flags: { noumEditor2 },\n    } = useLaunchDarkly();\n    const { space, loading } = useEditChamberState();\n    const { updateElementHelper } = useUpdateElementHelper();\n    const [gqlGetSubWalletBalance] = useGetSubWalletBalanceLazyQuery();\n    const [isEdit, setIsEdit] = useState(false);\n    const [isDeleteModal, setIsDeleteModal] = useState(false);\n    const [isSubWalletDeleteModal, setIsSubWalletDeleteModal] =\n      useState<boolean>(false);\n    const [showNonZeroWalletModal, setShowNonZeroWalletModal] =\n      useState<boolean>(false);\n    const [title, setTitle] = useState(currentTitle);\n    const [profileTitle, setProfileTitle] = useState(currentTitle);\n    const onConfirm = () => {\n      setProfileTitle(title);\n      setIsEdit(!isEdit);\n      handleTitleChange(title);\n    };\n    const elementType = element.elementType as ElementTypeEnum;\n    const identifyWhichModalToOpen = useCallback(async () => {\n      const res = await gqlGetSubWalletBalance({\n        fetchPolicy: 'network-only',\n        variables: {\n          chamberId: spaceId,\n        },\n      });\n      const value = res.data?.getSubWalletBalance?.amount?.value;\n      if (value === 0.0 || 0.0 || 0) {\n        setIsSubWalletDeleteModal(true);\n      } else {\n        setShowNonZeroWalletModal(true);\n      }\n    }, [gqlGetSubWalletBalance, spaceId]);\n\n    const handleTitleChange = useCallback(\n      async (value?: string) => {\n        const input: ElementInput = {\n          elementId: element._id,\n          bodyContent: ElementUtils.getBodyContent(element),\n          bodyContentJson: ElementUtils.getBodyContentJson(element),\n          headerContent:\n            elementType === ElementTypeEnum.Text && !value ? 'TEXT' : value,\n          position: ElementUtils.getPosition(element),\n          status: ElementStatusEnum.Unsaved,\n        };\n        await updateElementHelper(spaceId, input);\n      },\n      [element, spaceId, updateElementHelper, elementType],\n    );\n\n    const onConfirmEnter = (e: React.KeyboardEvent) => {\n      if (e.key === 'Enter') onConfirm();\n    };\n    const onCancel = () => {\n      setIsEdit(!isEdit);\n      setTitle(profileTitle);\n    };\n\n    const onDelete = useCallback(() => {\n      if (\n        elementType === ElementTypeEnum.Wallet &&\n        element.status === ElementStatusEnum.Published\n      ) {\n        identifyWhichModalToOpen();\n      } else {\n        setIsDeleteModal(true);\n      }\n    }, [element.status, elementType, identifyWhichModalToOpen]);\n\n    const handleCloseDeleteModal = () => {\n      setIsDeleteModal(false);\n    };\n\n    const handleCloseSubWalletModal = () => {\n      setIsSubWalletDeleteModal(false);\n    };\n\n    const handleCloseNonZeroWalletModal = () => {\n      setShowNonZeroWalletModal(false);\n    };\n    const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      setTitle(e.target.value);\n    };\n\n    const isHomeNoumType = ElementUtils.isHomeNoumType(elementType);\n    const hideDeleteButton =\n      space?.type === SpaceTypeEnum.Home &&\n      (elementType === ElementTypeEnum.Message ||\n        elementType === ElementTypeEnum.Userposts ||\n        elementType === ElementTypeEnum.Skills);\n\n    const isVisibleAddBtn =\n      elementType === ElementTypeEnum.PublicationDesignPatterns ||\n      elementType === ElementTypeEnum.EducationTraining ||\n      elementType === ElementTypeEnum.AchievementAward ||\n      elementType === ElementTypeEnum.PersonalInterest ||\n      elementType === ElementTypeEnum.SocialInterest ||\n      elementType === ElementTypeEnum.ProjectWorkExperience;\n\n    const handlePlusClick = useCallback(\n      (e) => {\n        e.stopPropagation();\n        if (handleOpenExperienceModal) {\n          handleOpenExperienceModal(elementType);\n        }\n      },\n      [elementType, handleOpenExperienceModal],\n    );\n    const isVisibilityChangeable =\n      elementType === ElementTypeEnum.Text ||\n      elementType === ElementTypeEnum.Video ||\n      elementType === ElementTypeEnum.QuickQuestions ||\n      elementType === ElementTypeEnum.Calendar ||\n      elementType === ElementTypeEnum.Image;\n\n    const handleVisibilityChange = () => {\n      handleCPVisibilityChange?.(true);\n    };\n\n    return (\n      <>\n        <WrapperHead\n          isEditing\n          fullWidth={!noumEditor2 || !isVisibleAddBtn}\n          isPostCustomPreview={isPostCustomPreview}\n          data-testid=\"wrapperEditing\"\n          ref={ref}\n          {...rest}\n        >\n          <HeadContent data-testid=\"headContent\">\n            {(!noumEditor2 || isCustomPreview) && (\n              <>\n                {' '}\n                <WrapperIcons\n                  {...provided?.dragHandleProps}\n                  className=\"xs-hidden\"\n                >\n                  <Icon\n                    name=\"order_m\"\n                    size={24}\n                    color=\"--icon-button-neutral-default\"\n                  />\n                </WrapperIcons>\n                <WrapperInline>\n                  <WrapperIcons\n                    disabled={currentIndex === 0}\n                    onClick={onUpClick}\n                  >\n                    <Icon\n                      name=\"chevron_small_up_m\"\n                      size={24}\n                      color=\"--icon-button-neutral-default\"\n                    />\n                  </WrapperIcons>\n                  <WrapperIcons\n                    disabled={currentIndex === totalIndex}\n                    onClick={onDownClick}\n                  >\n                    <Icon\n                      name=\"chevron_small_down_m\"\n                      size={24}\n                      color=\"--icon-button-neutral-default\"\n                    />\n                  </WrapperIcons>\n                </WrapperInline>\n              </>\n            )}\n            {isEdit ? (\n              <TextField\n                maxLength={30}\n                hideLengthHelperText\n                data-testid=\"TextField\"\n                autoFocus\n                value={title}\n                inputSize=\"small\"\n                onChange={onInputChange}\n                onKeyDown={onConfirmEnter}\n                disabled={elementType === ElementTypeEnum.Wallet}\n              />\n            ) : isHomeNoumType ||\n              elementType === ElementTypeEnum.Message ||\n              elementType === ElementTypeEnum.Wallet ||\n              elementType === ElementTypeEnum.QuickQuestions ||\n              elementType === ElementTypeEnum.Skills ||\n              elementType === ElementTypeEnum.Calendar ||\n              elementType === ElementTypeEnum.FilesManager ||\n              elementType === ElementTypeEnum.ContractManager ||\n              elementType === ElementTypeEnum.Userposts ? (\n              <WrapperTitleNoEdit noumEditor2={noumEditor2 && !isCustomPreview}>\n                <TSpan\n                  font=\"heading-xs-bold\"\n                  colorToken=\"--text-body-header-neutral-default\"\n                >\n                  {currentTitle}\n                </TSpan>\n              </WrapperTitleNoEdit>\n            ) : !noumEditor2 && !isCustomPreview ? (\n              <WrapperTitle\n                data-testid=\"wrapperTitle\"\n                onClick={() => setIsEdit(!noumEditor2 && !isEdit)}\n              >\n                {profileTitle}\n              </WrapperTitle>\n            ) : (\n              (!noumEditor2 || isCustomPreview) && (\n                <WrapperTitleNoEdit>\n                  <TSpan\n                    font=\"heading-xs-bold\"\n                    colorToken=\"--text-body-header-neutral-default\"\n                  >\n                    {currentTitle}\n                  </TSpan>\n                </WrapperTitleNoEdit>\n              )\n            )}\n          </HeadContent>\n\n          <WrapperHeadActionButtons>\n            {isEdit ? (\n              <>\n                <WrapperHeadCrossButton>\n                  <Button\n                    data-testid=\"onClose\"\n                    secondary\n                    size=\"small\"\n                    intent=\"negative\"\n                    textOnly\n                    onClick={onCancel}\n                    icon={\n                      <Icon\n                        color=\"--icon-button-danger-secondary-default\"\n                        name=\"close_m\"\n                        size={24}\n                      />\n                    }\n                  />\n                </WrapperHeadCrossButton>\n                <WrapperHeadCheckButton>\n                  <Button\n                    data-testid=\"onConfirm\"\n                    size=\"small\"\n                    textOnly\n                    onClick={onConfirm}\n                    icon={\n                      <Icon\n                        color=\"--icon-button-brand-secondary-default\"\n                        name=\"check_xs\"\n                        size={24}\n                      />\n                    }\n                  />\n                </WrapperHeadCheckButton>\n              </>\n            ) : (\n              <>\n                {isVisibleAddBtn && (\n                  <ChamberAddButton\n                    primary={!noumEditor2}\n                    secondary={noumEditor2}\n                    type=\"button\"\n                    data-testid=\"addBtn\"\n                    size=\"small\"\n                    onClick={(e) => handlePlusClick(e)}\n                    noumEditor2={noumEditor2 && !isCustomPreview}\n                    loading={updateElementLoader}\n                  >\n                    <Icon\n                      color={\n                        noumEditor2\n                          ? '--icon-button-brand-secondary-default'\n                          : '--icon-button-neutral-alt-default'\n                      }\n                      name=\"plus_m\"\n                      size={24}\n                    />\n                  </ChamberAddButton>\n                )}\n                {isCustomPreview && isVisibilityChangeable && (\n                  <ChamberVisibilityChangeButton\n                    data-testid=\"chamberVisibilityChangeButton\"\n                    secondary\n                    disabled={loading}\n                    size=\"small\"\n                    onClick={handleVisibilityChange}\n                  >\n                    <Icon\n                      name={\n                        isCustomPreviewVisible\n                          ? 'eye_on_solid_m'\n                          : 'eye_off_solid_m'\n                      }\n                      size={24}\n                      color=\"--icon-button-brand-secondary-default\"\n                    />\n                  </ChamberVisibilityChangeButton>\n                )}\n                {isPostCustomPreview ? (\n                  <HeadTag>\n                    <ToolTipHead\n                      data-title={t(\n                        'noumena.noum_edit.custom_previews.tooltip.message',\n                      )}\n                    >\n                      <Icon\n                        name=\"info_m\"\n                        size={20}\n                        color=\"--icon-tag-neutral\"\n                      />\n                    </ToolTipHead>\n                    <TSpan\n                      font=\"body-m-bold\"\n                      colorToken=\"--text-tag-neutral-default\"\n                    >\n                      {t('noumena.noum_edit.custom_previews.hidden.post')}\n                    </TSpan>\n                  </HeadTag>\n                ) : (\n                  !noumEditor2 &&\n                  !hideDeleteButton &&\n                  !isCustomPreview && (\n                    <ChamberDeleteButton\n                      data-testid=\"deleteBtn\"\n                      secondary\n                      size=\"small\"\n                      intent=\"negative\"\n                      onClick={onDelete}\n                    >\n                      {elementType === ElementTypeEnum.Wallet &&\n                      element.status === ElementStatusEnum.Published ? (\n                        'Close This Wallet'\n                      ) : (\n                        <Icon\n                          name=\"delete_m\"\n                          size={24}\n                          color=\"--icon-button-danger-secondary-default\"\n                        />\n                      )}\n                    </ChamberDeleteButton>\n                  )\n                )}\n              </>\n            )}\n          </WrapperHeadActionButtons>\n        </WrapperHead>\n\n        <ElementDelete\n          spaceId={spaceId}\n          elementId={element._id || ''}\n          elementTitle={title}\n          elementType={elementType}\n          isOpen={isDeleteModal}\n          handleClose={handleCloseDeleteModal}\n        />\n        <CloseWallet\n          spaceId={spaceId}\n          elementId={element._id || ''}\n          isOpen={isSubWalletDeleteModal}\n          handleClose={handleCloseSubWalletModal}\n          setShowNonZeroWalletModal={setShowNonZeroWalletModal}\n        />\n        <NonZeroWalletModal\n          isOpen={showNonZeroWalletModal}\n          handleClose={handleCloseNonZeroWalletModal}\n        />\n      </>\n    );\n  },\n);\n","import { forwardRef } from 'react';\nimport { TSpan } from '@/components/Typography';\nimport { type NoumEditorViewProp } from './types';\nimport { TitleContainer } from './styles';\n\nexport const ViewModeNoumEditor = forwardRef(\n  ({ currentTitle = '' }: NoumEditorViewProp) => (\n    <TitleContainer>\n      <TSpan\n        font=\"heading-xs-bold\"\n        colorToken=\"--text-body-header-neutral-default\"\n      >\n        {' '}\n        {currentTitle}{' '}\n      </TSpan>\n    </TitleContainer>\n  ),\n);\n","import {\n  createContext,\n  forwardRef,\n  type Ref,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { delay } from '@/utils/delay';\nimport { ElementTypeEnum } from '@/apollo/generated/types';\nimport { ElementUtils } from '@/utils/element';\nimport { useLaunchDarkly, useToggle } from '@/hooks';\nimport { useNoumContext } from '@/screens/Chamber/ViewChamber/ChamberProvider';\nimport { CustomPreviewTabEnum } from '@/screens/Chamber/CustomPreview/constants';\nimport { ViewMode } from './ViewMode';\nimport { EditMode } from './EditMode';\nimport {\n  Wrapper,\n  WrapperChildContainer,\n  SeeMoreWrapper,\n  CollapseBackground,\n} from './styles';\nimport { type ElementWrapperProps, type Context } from './types';\nimport { ViewModeNoumEditor } from './ViewModeNoumEditor';\n\nexport const ElementWrapperContext = createContext<Context>({\n  isCollapse: false,\n  expand: () => {},\n});\n\nexport const ElementWrapper = forwardRef(\n  (props: ElementWrapperProps, ref: Ref<HTMLDivElement>) => {\n    const {\n      spaceId,\n      element,\n      currentTitle = '',\n      currentIndex,\n      totalIndex,\n      isEditing = false,\n      isSpecialCollapsing = false,\n      children,\n      lift,\n      provided,\n      isBorder = false,\n      handleOpenExperienceModal,\n      hideContent,\n      setShowAll,\n      isCustomPreview,\n      handleCPVisibilityChange,\n      selectedCustomPreviewTab,\n      isHighlight,\n      showFullTitle = false,\n      updateElementLoader,\n      ...rest\n    } = props;\n    const {\n      flags: { noumEditor2, noumCustomPreivewV2 },\n    } = useLaunchDarkly();\n    const { t } = useTranslation();\n    const [isCollapse, setIsCollapseMain] = useState(\n      !(noumEditor2 && !isCustomPreview),\n    );\n    const [titleRef, setTitleRef] = useState<HTMLDivElement | null>();\n    const [childRef, setChildRef] = useState<HTMLSpanElement | null>();\n    const [childHeight, setChildHeight] = useState<number>();\n    const disableCollapse = !setShowAll;\n    const { isConnected, isFollowing } = useNoumContext();\n    useEffect(() => {\n      if (!childHeight) {\n        setChildHeight(childRef?.clientHeight);\n      }\n    }, [childHeight, childRef?.clientHeight]);\n\n    const contentCollapse = useMemo(\n      () =>\n        element.elementType === ElementTypeEnum.BusinessBrief ||\n        element.elementType === ElementTypeEnum.Home ||\n        element.elementType === ElementTypeEnum.Text ||\n        element.elementType === ElementTypeEnum.Skills,\n      [element.elementType],\n    );\n\n    const isBackgroundcontent = useMemo(\n      () =>\n        element.elementType === ElementTypeEnum.Video ||\n        element.elementType === ElementTypeEnum.Text ||\n        element.elementType === ElementTypeEnum.Image ||\n        element.elementType === ElementTypeEnum.BusinessBrief,\n      [element.elementType],\n    );\n\n    const isTitleHide = useMemo(\n      () =>\n        element.elementType === ElementTypeEnum.Video ||\n        element.elementType === ElementTypeEnum.Text ||\n        element.elementType === ElementTypeEnum.Image,\n      [element.elementType],\n    );\n\n    const isPostCustomPreview = useMemo(\n      () =>\n        isCustomPreview &&\n        element.elementType === ElementTypeEnum.Userposts &&\n        !isConnected &&\n        !isFollowing,\n      [element.elementType, isConnected, isCustomPreview, isFollowing],\n    );\n\n    useEffect(() => {\n      let timeout: NodeJS.Timeout | null = null;\n      if (!noumEditor2) {\n        if (contentCollapse) {\n          timeout = setTimeout(() => setIsCollapseMain(true), 10);\n        } else setIsCollapseMain(true);\n      }\n\n      return () => (timeout ? clearTimeout(timeout) : undefined);\n    }, [contentCollapse, isCustomPreview, noumEditor2]);\n\n    const setIsCollapse = useCallback(\n      (value: boolean) => {\n        if (noumEditor2 && !isCustomPreview) return;\n        setIsCollapseMain(value);\n        if (setShowAll) {\n          setShowAll(value);\n        }\n      },\n      [isCustomPreview, noumEditor2, setShowAll],\n    );\n\n    const expand = useCallback(() => {\n      setIsCollapse(false);\n    }, [setIsCollapse]);\n    const contextData = useMemo(\n      () => ({ isCollapse: disableCollapse && isCollapse, expand }),\n      [disableCollapse, isCollapse, expand],\n    );\n\n    const expandConditionally = useCallback(() => {\n      if (\n        element.elementType === ElementTypeEnum.BusinessBrief ||\n        element.elementType === ElementTypeEnum.Home ||\n        element.elementType === ElementTypeEnum.Text\n      ) {\n        return;\n      }\n      if (!isEditing && isCollapse) {\n        setIsCollapse(false);\n      }\n    }, [element.elementType, isCollapse, isEditing, setIsCollapse]);\n\n    const move = useCallback(\n      async (type: 'up' | 'down') => {\n        if (!lift) return;\n\n        const actions = lift(`${element._id}`);\n\n        if (!actions) return;\n\n        const { moveDown, moveUp, drop } = actions;\n\n        if (type === 'up') {\n          await delay(moveUp, 0);\n        }\n        if (type === 'down') {\n          await delay(moveDown);\n        }\n        await delay(drop, 0);\n      },\n      [lift, element],\n    );\n\n    const onUpClick = useCallback(() => move('up'), [move]);\n    const onDownClick = useCallback(() => move('down'), [move]);\n\n    const [isCustomPreviewVisible, toggle] = useToggle(\n      ElementUtils.isCustomPreviewVisible(element),\n    );\n    const onChangeCPVisibility = () => {\n      handleCPVisibilityChange?.(!isCustomPreviewVisible);\n      toggle();\n    };\n\n    const noumEditor2Mode =\n      noumEditor2 && (!isCustomPreview || noumCustomPreivewV2);\n\n    return (\n      <ElementWrapperContext.Provider value={contextData}>\n        <Wrapper\n          isHighlight={isHighlight}\n          ref={ref}\n          data-testid=\"wrapper\"\n          {...rest}\n          isVisible={\n            !isCustomPreview || (isCustomPreview && isCustomPreviewVisible)\n          }\n          isPostCustomPreview={isPostCustomPreview}\n          noumEditor2={noumEditor2Mode}\n          isBackground={noumEditor2 && isBackgroundcontent && !isCustomPreview}\n          isContent={noumEditor2 && isTitleHide}\n        >\n          <>\n            {(isEditing && !isCustomPreview) ||\n            selectedCustomPreviewTab === CustomPreviewTabEnum.Edit ? (\n              <EditMode\n                ref={(newRef) => setTitleRef(newRef)}\n                spaceId={spaceId}\n                element={element}\n                currentTitle={currentTitle}\n                currentIndex={currentIndex}\n                totalIndex={totalIndex}\n                onUpClick={onUpClick}\n                onDownClick={onDownClick}\n                provided={provided}\n                handleOpenExperienceModal={handleOpenExperienceModal}\n                isCustomPreview={isCustomPreview}\n                isCustomPreviewVisible={isCustomPreviewVisible}\n                handleCPVisibilityChange={onChangeCPVisibility}\n                isPostCustomPreview={isPostCustomPreview}\n                updateElementLoader={updateElementLoader}\n              />\n            ) : noumEditor2 && !isTitleHide && !isCustomPreview ? (\n              <ViewModeNoumEditor currentTitle={currentTitle} />\n            ) : (\n              (!noumEditor2 || isCustomPreview) && (\n                <ViewMode\n                  ref={(newRef) => setTitleRef(newRef)}\n                  rightPadding={\n                    ElementUtils.isImageAndVideoNotEmpty(element)\n                      ? childRef?.clientWidth\n                      : 0\n                  }\n                  spaceId={spaceId}\n                  element={element}\n                  currentTitle={currentTitle}\n                  isCollapse={isCollapse}\n                  setIsCollapse={setIsCollapse}\n                  showFullTitle={showFullTitle}\n                />\n              )\n            )}\n          </>\n\n          {!hideContent && (\n            <>\n              <WrapperChildContainer\n                ref={(newRef) => setChildRef(newRef)}\n                height={titleRef?.clientHeight}\n                isEditing={isEditing}\n                childHeight={childHeight}\n                width={childRef?.clientHeight}\n                isBorder={isBorder}\n                data-testid=\"childContainer\"\n                collapse={\n                  disableCollapse &&\n                  isCollapse &&\n                  !isEditing &&\n                  !isSpecialCollapsing\n                }\n                preview={\n                  element.elementType === ElementTypeEnum.Video ||\n                  element.elementType === ElementTypeEnum.Image\n                }\n                isEditor={contentCollapse}\n                onClick={expandConditionally}\n                isPostCustomPreview={isPostCustomPreview}\n                isVisible={\n                  !isCustomPreview ||\n                  (isCustomPreview && isCustomPreviewVisible)\n                }\n                noumEditor2={noumEditor2Mode}\n              >\n                {children}\n              </WrapperChildContainer>\n              {contentCollapse && isCollapse && !isEditing && (\n                <>\n                  <CollapseBackground\n                    onClick={() =>\n                      !isEditing ? setIsCollapse(!isCollapse) : ''\n                    }\n                  />\n                  <SeeMoreWrapper\n                    font=\"body-m-bold\"\n                    colorToken=\"--text-button-brand-primary-default\"\n                    onClick={() => setIsCollapse(false)}\n                  >\n                    {t('noumena.see_more')}\n                  </SeeMoreWrapper>\n                </>\n              )}\n            </>\n          )}\n        </Wrapper>\n      </ElementWrapperContext.Provider>\n    );\n  },\n);\n\nexport default ElementWrapper;\n","import styled, { css } from 'styled-components';\nimport { ellipsisText } from '@/common/globalStyles';\nimport { Button } from '@/components/Button';\nimport { xsHidden } from '@/components/Header/styles';\nimport { TSpan } from '@/components/Typography';\nimport { type SingleOptionHeaderProps } from './types';\n\nexport const HomeChamberOptionsWrapper = styled.div<{\n  isNoumEditor2?: boolean;\n  isContianerWidth?: boolean;\n}>`\n  display: grid;\n  grid-gap: ${({ isContianerWidth }) => (isContianerWidth ? ' 0' : ' 16px')};\n  padding: ${({ isNoumEditor2, isContianerWidth }) =>\n    isNoumEditor2 && isContianerWidth\n      ? '0'\n      : isNoumEditor2 && ' 0 16px 16px 16px'};\n`;\n\nexport const SingleOptionWrapper = styled.div<{\n  isOverLap?: boolean;\n  isContianerWidth?: boolean;\n}>`\n  box-sizing: border-box;\n  width: 100%;\n  background: var(--bg-card-neutral-alt-default);\n  border: 1px solid var(--border-card-neutral-highlighted);\n  border-radius: ${({ isContianerWidth }) =>\n    isContianerWidth ? ' 0' : ' 8px'};\n  position: relative;\n  max-height: 100%;\n  ${({ isOverLap }) =>\n    isOverLap &&\n    `\n    max-height: 250px;\n    overflow-y: hidden;\n    -webkit-box-shadow: 0 8px 6px -6px var(--bg-card-neutral-alt-default);\n    -moz-box-shadow: 0 8px 6px -6px var(--bg-card-neutral-alt-default);\n    box-shadow: 0 8px 6px -6px var(--bg-card-neutral-alt-default);\n    &:after {\n      bottom: 0;\n      background: linear-gradient(to right, rgba(0,0,0,0), rgba(0,0,0,0.2));\n    }\n  `}\n`;\n\nexport const SingleOptionHeader = styled.div<SingleOptionHeaderProps>`\n  display: grid;\n  height: 48px;\n  justify-content: center;\n  align-items: center;\n  grid-template-columns: ${({ isEditMode, isNoumEditor2 }) =>\n    isNoumEditor2 && isEditMode\n      ? '1fr 28px 50px'\n      : isEditMode\n      ? '20px 20px 1fr 50px 50px'\n      : ' 1fr 36px'};\n  cursor: pointer;\n  ${({ isEditMode, isNoumEditor2 }) =>\n    isEditMode && !isNoumEditor2 ? 'padding: 16px;' : ''};\n`;\n\nexport const TextHeader = styled(TSpan)`\n  margin: 0;\n  padding: 12px;\n  width: 96%;\n  ${ellipsisText}\n`;\n\nexport const ChamberEditButton = styled(Button)<{ isNoumEditor2?: boolean }>`\n  padding: 8px;\n  margin-left: 8px;\n  ${({ isNoumEditor2 }) =>\n    isNoumEditor2 &&\n    css`\n      background: none;\n      &:hover {\n        background: none;\n      }\n    `}\n`;\n\nexport const ChamberDeleteButton = styled(Button)<{ isNoumEditor2?: boolean }>`\n  padding: 8px;\n  margin-left: 8px;\n  ${({ isNoumEditor2 }) =>\n    isNoumEditor2 &&\n    css`\n      background: none;\n      &:hover {\n        background: none;\n      }\n    `}\n`;\nexport const IconWrapper = styled.div<{\n  disabled?: boolean;\n  isMobile?: boolean;\n}>`\n  cursor: pointer;\n  opacity: ${(p) => (p.disabled ? '0.2' : '1')};\n  ${({ isMobile }) => isMobile && `align-self: center;`}\n  &.xs-hidden {\n    ${xsHidden}\n  }\n`;\n\nexport const ShowMoreWrapper = styled.div`\n  background: var(--gradient-base-overlay-default);\n  width: 100%;\n  text-align: center;\n  position: absolute;\n  bottom: 0;\n`;\n\nexport const ShowMoreButton = styled.button`\n  border: 1px solid var(--bg-separator-neutral-default);\n  border-radius: 12px 12px 0px 0px;\n  background: var(--bg-button-neutral-alt-default);\n  padding: 16px;\n  color: var(--text-button-brand-primary-default);\n  font-weight: 600;\n  font-size: 14px;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n","import { useState, useEffect, useRef } from 'react';\nimport { t } from 'i18next';\nimport generate from 'uniqid';\nimport { Icon } from '@/components/Icon';\nimport { ElementDelete } from '@/screens/Chamber/components/modals/ElementDelete';\nimport { RichTextEditorView } from '@/features/richTextEditor';\nimport {\n  SingleOptionHeader,\n  SingleOptionWrapper,\n  TextHeader,\n  ChamberEditButton,\n  ChamberDeleteButton,\n  IconWrapper,\n  ShowMoreWrapper,\n  ShowMoreButton,\n} from './styles';\nimport { type SingleArrayOptionProps, type SingleOptionsProps } from './types';\n\nconst SingleOption = ({\n  id,\n  title,\n  body,\n  isEditMode = false,\n  index,\n  status,\n  fullSize,\n  isOpen: isOpenByDefault,\n  handleMoveTopOption,\n  handleMoveDownOption,\n  handleOpenAddExperienceModal,\n  handleDeleteOption,\n  handleSelectOption,\n  setDefaultData,\n  noumEditor2,\n  isContianerWidth,\n}: SingleOptionsProps) => {\n  const singleOptionWrapperRef = useRef<HTMLDivElement>(null);\n  const viewRef = useRef<HTMLDivElement>(null);\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [openedAlways, setOpenedAlways] = useState(isOpenByDefault);\n  const [previousBody, setPreviousBody] = useState(body);\n\n  const [contentKey, setContentKey] = useState(generate());\n\n  useEffect(() => {\n    if (previousBody !== body) {\n      setPreviousBody(body);\n      setContentKey(generate());\n    }\n  }, [previousBody, body]);\n\n  useEffect(() => {\n    setOpenedAlways(isOpenByDefault);\n  }, [isOpenByDefault]);\n  const [isOverFlow, setIsOverFlow] = useState<boolean>(false);\n\n  const isOpenModal = isOpen || openedAlways;\n\n  const handleSetValues = () => {\n    setDefaultData({ id, title, body, position: index, status });\n    handleOpenAddExperienceModal();\n  };\n\n  useEffect(() => {\n    if (isEditMode) {\n      setOpenedAlways(true);\n    }\n  }, [isEditMode]);\n\n  useEffect(() => {\n    if (!isEditMode && singleOptionWrapperRef.current) {\n      if (singleOptionWrapperRef.current.clientHeight > 250) {\n        setIsOverFlow(true);\n      } else {\n        setIsOverFlow(false);\n      }\n    }\n  }, [singleOptionWrapperRef, isEditMode, isOpenModal]);\n\n  const [isDeleteModal, setIsDeleteModal] = useState(false);\n\n  const handleDeleteItem = () => {\n    setIsDeleteModal(false);\n    handleDeleteOption(id);\n  };\n\n  const headerHandler = () => {\n    if (noumEditor2 && !isEditMode) {\n      handleSelectOption({\n        id,\n        body,\n        title,\n      } as SingleArrayOptionProps);\n    } else {\n      setIsOverFlow((prev) => {\n        if (isEditMode) return prev;\n        setIsOpen(prev);\n        return !prev;\n      });\n    }\n  };\n\n  return (\n    <>\n      <SingleOptionWrapper\n        data-testid=\"SingleOptionWrapper\"\n        ref={singleOptionWrapperRef}\n        isOverLap={isOverFlow}\n        isContianerWidth={isContianerWidth}\n      >\n        <SingleOptionHeader\n          data-testid=\"SingleOptionHeader\"\n          isEditMode={isEditMode}\n          onClick={headerHandler}\n          isNoumEditor2={noumEditor2}\n        >\n          {!noumEditor2 && isEditMode && (\n            <IconWrapper\n              disabled={index === 0}\n              onClick={() => index !== 0 && handleMoveTopOption(index)}\n            >\n              <Icon\n                name=\"chevron_small_up_m\"\n                size={24}\n                color=\"--icon-button-neutral-default\"\n              />\n            </IconWrapper>\n          )}\n          {!noumEditor2 && isEditMode && (\n            <IconWrapper\n              disabled={index === fullSize - 1}\n              onClick={() =>\n                index !== fullSize - 1 && handleMoveDownOption(index)\n              }\n            >\n              <Icon\n                name=\"chevron_small_down_m\"\n                size={24}\n                color=\"--icon-button-neutral-default\"\n              />\n            </IconWrapper>\n          )}\n          <TextHeader\n            font={\n              isOpenModal && !noumEditor2 ? 'heading-xs-bold' : 'body-m-bold'\n            }\n            colorToken=\"--text-card-header-neutral-highlighted\"\n          >\n            {title}\n          </TextHeader>\n          {!isEditMode && (\n            <Icon\n              onClick={(event) => {\n                event.preventDefault();\n                event.stopPropagation();\n                if (noumEditor2) {\n                  headerHandler();\n                } else {\n                  handleSelectOption({\n                    id,\n                    body,\n                    title,\n                  } as SingleArrayOptionProps);\n                  setIsOverFlow(() => {\n                    setIsOpen(false);\n                    return true;\n                  });\n                }\n              }}\n              name={isOpen ? 'chevron_small_down_m' : 'chevron_small_right_m'}\n              size={24}\n              color=\"--icon-button-neutral-default\"\n            />\n          )}\n          {isEditMode && (\n            <ChamberEditButton\n              tertiary\n              size=\"small\"\n              onClick={(event) => {\n                event.stopPropagation();\n                handleSetValues();\n              }}\n              isNoumEditor2={noumEditor2}\n            >\n              <Icon\n                name=\"edit_m\"\n                size={24}\n                color={\n                  noumEditor2\n                    ? '--icon-card-neutral-default'\n                    : '--icon-button-neutral-default'\n                }\n              />\n            </ChamberEditButton>\n          )}\n          {isEditMode && (\n            <ChamberDeleteButton\n              secondary\n              size=\"small\"\n              intent=\"negative\"\n              onClick={(event) => {\n                event.stopPropagation();\n                setIsDeleteModal(true);\n              }}\n              isNoumEditor2={noumEditor2}\n            >\n              <Icon\n                name=\"delete_m\"\n                size={24}\n                color=\"--icon-button-danger-secondary-default\"\n              />\n            </ChamberDeleteButton>\n          )}\n        </SingleOptionHeader>\n        {!noumEditor2 && isOpenModal && (\n          <RichTextEditorView\n            key={contentKey}\n            ref={viewRef}\n            data-testid=\"RichTextEditorView\"\n            clickable={!isEditMode}\n            onClick={() =>\n              !isEditMode &&\n              handleSelectOption({\n                id,\n                body,\n                title,\n              } as SingleArrayOptionProps)\n            }\n            html={body}\n          />\n        )}\n        {!isEditMode &&\n          !isOpen &&\n          (isOverFlow ? (\n            <ShowMoreWrapper data-testid=\"ShowMoreWrapper\">\n              <ShowMoreButton\n                onClick={() => {\n                  handleSelectOption({\n                    id,\n                    body,\n                    title,\n                  } as SingleArrayOptionProps);\n                  setIsOverFlow((prev) => !prev);\n                }}\n              >\n                {t('noumena.chambers.toolbox.button.seemore')}\n              </ShowMoreButton>\n            </ShowMoreWrapper>\n          ) : (\n            <></>\n          ))}\n      </SingleOptionWrapper>\n      <ElementDelete\n        spaceId=\"\"\n        elementId=\"\"\n        elementTitle={title}\n        isOpen={isDeleteModal}\n        handleClose={() => setIsDeleteModal(false)}\n        handleDeleteProps={handleDeleteItem}\n      />\n    </>\n  );\n};\n\nexport default SingleOption;\n","import { breakpoints } from '@/constants/devices';\nimport { useLaunchDarkly, useWindowDimensions } from '@/hooks';\nimport { clone } from 'lodash';\nimport { useMemo } from 'react';\nimport SingleOption from './SingleOption';\nimport { HomeChamberOptionsWrapper } from './styles';\nimport { type HomeChamberOptionsProps } from './types';\n\nconst HomeChamberOptions = ({\n  arrayOfOptions,\n  isEditMode,\n  isOpen,\n  handleMoveDownOption,\n  handleMoveTopOption,\n  handleOpenAddExperienceModal,\n  handleDeleteOption,\n  handleSelectOption,\n  setDefaultData,\n  columnWidth,\n}: HomeChamberOptionsProps) => {\n  const { width } = useWindowDimensions();\n  const isMobile = useMemo(() => width <= breakpoints.MOBILE_MAX, [width]);\n  const sortedOptions = clone(arrayOfOptions).sort((a, b) =>\n    a.position > b.position ? 1 : -1,\n  );\n  const {\n    flags: { noumEditor2 },\n  } = useLaunchDarkly();\n  const isContianerWidth = useMemo(\n    () => (columnWidth ? columnWidth < 475 : false || isMobile),\n    [columnWidth, isMobile],\n  );\n  return (\n    <HomeChamberOptionsWrapper\n      data-testid=\"homeChamberOptionsWrapper\"\n      isNoumEditor2={noumEditor2}\n      isContianerWidth={isContianerWidth}\n    >\n      {sortedOptions.map((el, index) => (\n        <SingleOption\n          key={el.id}\n          {...el}\n          isEditMode={isEditMode}\n          index={index}\n          isOpen={isOpen}\n          fullSize={arrayOfOptions.length}\n          handleMoveDownOption={handleMoveDownOption}\n          handleMoveTopOption={handleMoveTopOption}\n          handleOpenAddExperienceModal={handleOpenAddExperienceModal}\n          handleDeleteOption={handleDeleteOption}\n          handleSelectOption={handleSelectOption}\n          setDefaultData={setDefaultData}\n          noumEditor2={noumEditor2}\n          isContianerWidth={isContianerWidth}\n        />\n      ))}\n    </HomeChamberOptionsWrapper>\n  );\n};\n\nexport default HomeChamberOptions;\n","import { useState, useEffect, useContext, useCallback, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  BodyContentEnum,\n  ElementStatusEnum,\n  ElementTypeEnum,\n} from '@/apollo/generated/types';\nimport { DisablePublishOrDraftContext } from '@/providers';\nimport { useUpdateElementHelper } from '@/features/noums/hooks/spaceQuery';\nimport { last } from 'lodash';\nimport { type UseHomeChambersProps } from './types';\nimport { type SingleArrayOptionProps } from '../HomeChamberOptions';\n\nfunction arrayMoveMutable(\n  array: SingleArrayOptionProps[],\n  fromIndex: number,\n  toIndex: number,\n) {\n  const startIndex = fromIndex < 0 ? array.length + fromIndex : fromIndex;\n\n  if (startIndex >= 0 && startIndex < array.length) {\n    const endIndex = toIndex < 0 ? array.length + toIndex : toIndex;\n\n    const [item] = array.splice(fromIndex, 1);\n    array.splice(endIndex, 0, item);\n  }\n}\n\nexport function arrayMoveImmutable(\n  array: SingleArrayOptionProps[],\n  fromIndex: number,\n  toIndex: number,\n) {\n  const newArray = [...array];\n  arrayMoveMutable(newArray, fromIndex, toIndex);\n  return newArray;\n}\n\nexport const useHomeChambers = ({\n  spaceId,\n  elementId,\n  elementType,\n  elementPosition,\n  bodyContentJson = '[]',\n}: UseHomeChambersProps) => {\n  const { setDisableUpdate, disabledUpdateElement, setdisabledUpdateElement } =\n    useContext(DisablePublishOrDraftContext);\n\n  const firstRender = useRef(true);\n  const [showExperienceModal, setShowExperienceModal] = useState(false);\n  const [showReferenceModal, setShowReferenceModal] = useState<\n    'manually' | 'ask' | ''\n  >('');\n  const { t } = useTranslation();\n  const [defaultData, setDefaultData] = useState<\n    Omit<SingleArrayOptionProps, 'position'> & {\n      position?: number;\n    }\n  >({\n    id: '',\n    title: '',\n    body: '',\n    status: ElementStatusEnum.Unsaved,\n  });\n  const [arrayOfOption, setArrayOfOptions] = useState<SingleArrayOptionProps[]>(\n    bodyContentJson\n      ? typeof bodyContentJson === 'string'\n        ? JSON.parse(bodyContentJson).map((item: SingleArrayOptionProps) => ({\n            ...item,\n            id: item._id,\n            status: ElementStatusEnum.Published,\n          })) || []\n        : (bodyContentJson as SingleArrayOptionProps[]).map((item) => ({\n            ...item,\n            id: item._id,\n            status: ElementStatusEnum.Published,\n          }))\n      : [],\n  );\n  const handleCloseExperienceModal = () => {\n    setDefaultData({\n      id: '',\n      title: '',\n      body: '',\n      status: ElementStatusEnum.Unsaved,\n    });\n    setShowExperienceModal(false);\n  };\n  const handleCloseAddReferenceModal = () => {\n    setShowReferenceModal('');\n  };\n  const handleOpenAddReferenceModal = (arg: 'manually' | 'ask') => {\n    setShowReferenceModal(arg);\n  };\n\n  const { updateElementHelper, loading: updateElementLoader } =\n    useUpdateElementHelper();\n\n  useEffect(() => {\n    setDisableUpdate(updateElementLoader);\n  }, [setDisableUpdate, updateElementLoader]);\n\n  const addReferenceData = {\n    [ElementTypeEnum.ProjectWorkExperience]: {\n      title: t('noumena.homeChambers.addExperience'),\n    },\n    [ElementTypeEnum.EducationTraining]: {\n      title: t('noumena.homeChambers.addEducation'),\n    },\n    [ElementTypeEnum.AchievementAward]: {\n      title: t('noumena.homeChambers.addAchievement'),\n    },\n    [ElementTypeEnum.PublicationDesignPatterns]: {\n      title: t('noumena.homeChambers.addNew'),\n    },\n    [ElementTypeEnum.PersonalInterest]: {\n      title: t('noumena.homeChambers.addNew'),\n    },\n    [ElementTypeEnum.SocialInterest]: {\n      title: t('noumena.homeChambers.addNew'),\n    },\n  };\n  const dataForAddReference = addReferenceData[elementType];\n\n  const handleOpenExperienceModal = () => {\n    setIsAddedOption(true);\n    setShowExperienceModal(true);\n  };\n  const handleAddOption = useCallback(\n    async (title: string, body: string, _id: string, position?: number) => {\n      if (typeof position === 'number') {\n        const newArray = arrayOfOption.map((el, loopPosition) => {\n          if (position === loopPosition) {\n            return {\n              ...el,\n              title,\n              body,\n            };\n          }\n          return el;\n        });\n        setArrayOfOptions(newArray);\n      } else {\n        if (!elementId) return;\n        const response = await updateElementHelper(\n          spaceId,\n          {\n            elementId,\n            bodyContentJson: [\n              ...arrayOfOption,\n              { _id, body, title, position: arrayOfOption.length },\n            ],\n            position: elementPosition,\n            status: ElementStatusEnum.Unsaved,\n            bodyContentType: BodyContentEnum.Json,\n          },\n          elementId,\n        );\n        if (response) {\n          const foundElement = response?.find(\n            (item) => item?._id === elementId,\n          );\n          if (!foundElement?.unSaved?.bodyContentJson) return;\n          const newOption = foundElement.unSaved.bodyContentJson.map(\n            (item: SingleArrayOptionProps) => ({\n              ...item,\n              id: item._id,\n            }),\n          );\n\n          const newestElement = last(newOption) as SingleArrayOptionProps;\n          if (!newestElement) return;\n          setDefaultData({\n            ...newestElement,\n            status: ElementStatusEnum.Unsaved,\n          });\n          setArrayOfOptions(newOption);\n        }\n      }\n    },\n    [elementId, arrayOfOption, spaceId, elementPosition, updateElementHelper],\n  );\n\n  const handleDeleteOption = (id: string) => {\n    const filteredArray = arrayOfOption.filter((el) => el.id !== id);\n    setArrayOfOptions(filteredArray);\n  };\n\n  const handleMoveTopOption = (position: number) => {\n    const copiedArrayOfOptions = [...arrayOfOption];\n    const newArray = arrayMoveImmutable(\n      copiedArrayOfOptions,\n      position,\n      position - 1,\n    );\n\n    const updatedPositionArray = newArray.map((_item, _index) => ({\n      ..._item,\n      position: _index,\n    }));\n\n    setArrayOfOptions(updatedPositionArray);\n  };\n\n  const handleMoveDownOption = (position: number) => {\n    const copiedArrayOfOptions = [...arrayOfOption];\n    const newArray = arrayMoveImmutable(\n      copiedArrayOfOptions,\n      position,\n      position + 1,\n    );\n\n    const updatedPositionArray = newArray.map((_item, _index) => ({\n      ..._item,\n      position: _index,\n    }));\n\n    setArrayOfOptions(updatedPositionArray);\n  };\n\n  const [isAddedOption, setIsAddedOption] = useState(false);\n\n  useEffect(() => {\n    if (arrayOfOption?.length && !isAddedOption) {\n      setIsAddedOption(true);\n    }\n    if (!arrayOfOption?.length && isAddedOption) {\n      setIsAddedOption(false);\n    }\n  }, [arrayOfOption, isAddedOption]);\n\n  useEffect(() => {\n    if (\n      spaceId &&\n      elementId &&\n      !firstRender.current &&\n      !disabledUpdateElement\n    ) {\n      updateElementHelper(spaceId, {\n        elementId,\n        bodyContentJson: arrayOfOption,\n        position: elementPosition,\n        status: ElementStatusEnum.Unsaved,\n        bodyContentType: BodyContentEnum.Json,\n      });\n    }\n    if (firstRender.current) {\n      firstRender.current = false;\n      setdisabledUpdateElement(false);\n    }\n  }, [\n    elementId,\n    arrayOfOption,\n    elementPosition,\n    spaceId,\n    updateElementHelper,\n    disabledUpdateElement,\n    setdisabledUpdateElement,\n  ]);\n\n  const sectionTitle = {\n    [ElementTypeEnum.ProjectWorkExperience]: t(\n      'noumena.homeChambers.addExperience.currentTitle',\n    ),\n    [ElementTypeEnum.EducationTraining]: t(\n      'noumena.homeChambers.addEducation.currentTitle',\n    ),\n    [ElementTypeEnum.AchievementAward]: t(\n      'noumena.homeChambers.addAchievement.currentTitle',\n    ),\n    [ElementTypeEnum.PublicationDesignPatterns]: t(\n      'noumena.homeChambers.publicationAndDesign.currentTitle',\n    ),\n    [ElementTypeEnum.PersonalInterest]: t(\n      'noumena.homeChambers.personalInterest.currentTitle',\n    ),\n    [ElementTypeEnum.SocialInterest]: t(\n      'noumena.homeChambers.socialInterest.currentTitle',\n    ),\n    [ElementTypeEnum.Calendar]: t('noumena.homeChambers.calendar.currentTitle'),\n  };\n\n  return {\n    dataForAddReference,\n    showExperienceModal,\n    handleOpenExperienceModal,\n    handleCloseExperienceModal,\n    showReferenceModal,\n    handleCloseAddReferenceModal,\n    handleOpenAddReferenceModal,\n    handleAddOption,\n    arrayOfOption,\n    handleDeleteOption,\n    handleMoveTopOption,\n    handleMoveDownOption,\n    isAddedOption,\n    title: sectionTitle[elementType],\n    setDefaultData,\n    defaultData,\n    updateElementLoader,\n    setArrayOfOptions,\n  };\n};\n","import styled from 'styled-components';\nimport { Button } from '@/components/Button';\nimport { TSpan } from '@/components/Typography';\nimport { ModalHeader as ExtendedModalHeader } from '@/components/ExtendedModal';\nimport { sizes } from '@/constants/devices';\nimport { Stack } from '@/layout';\n\nexport const HeaderContainerNonModal = styled.div<{\n  isEditReference?: boolean;\n  gridTemplateColumns?: string;\n  basicToolbar?: boolean;\n}>`\n  display: ${({ isEditReference }) =>\n    isEditReference ? 'inline-block' : 'grid'};\n  grid-template-columns: ${({ gridTemplateColumns, basicToolbar }) =>\n    gridTemplateColumns ||\n    (basicToolbar === false ? '68px 1fr' : '68px 1fr 68px')};\n  align-items: center;\n  width: 100%;\n  min-height: 40px;\n\n  @media (min-width: ${sizes.TABLET}) {\n    grid-template-columns: ${({ gridTemplateColumns, basicToolbar }) =>\n      gridTemplateColumns ||\n      (basicToolbar === false ? '50px 1fr 150px' : '50px 1fr 150px 65px')};\n  }\n\n  @media (min-width: ${sizes.LAPTOP}) {\n    grid-template-columns: ${({ gridTemplateColumns }) =>\n      gridTemplateColumns || '150px 1fr 150px'};\n    min-width: 70px;\n    justify-content: center;\n    margin: 0;\n  }\n`;\n\nexport const StyledHeaderText = styled(TSpan)<{ isEdit?: boolean }>`\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    margin-left: auto;\n    margin-right: auto;\n  }\n  @media (min-width: ${sizes.MOBILE_MAX}) {\n    position: absolute;\n    margin-right: ${({ isEdit }) => (isEdit ? '50%' : '40%')};\n    text-align: center;\n  }\n  @media (min-width: ${sizes.TABLET_L}) {\n    position: relative;\n    margin-right: auto;\n    margin-left: auto;\n  }\n`;\n\nexport const ModalHeader = styled(ExtendedModalHeader)<{ isEdit?: boolean }>`\n  justify-content: flex-end;\n  @media (min-width: ${sizes.TABLET_L}) {\n    flex-direction: row-reverse;\n    justify-content: space-between;\n    width: ${({ isEdit }) => (isEdit ? '75%' : '100%')};\n  }\n`;\n\nexport const StyledAddReferenceButton = styled(Button)`\n  font-size: var(--font-body-large-size);\n  &:hover,\n  :active {\n    background-color: transparent;\n  }\n`;\n\nexport const StyledSaveButton = styled(Button)`\n  margin-left: auto;\n  padding: 16px 32px;\n  font-size: var(--font-input-medium-size);\n  font-family: var(--font-button-medium-font);\n`;\n\nexport const StyledSaveButtonTableMobile = styled(Button)`\n  font-size: var(--font-input-medium-size);\n  font-family: var(--font-button-medium-font);\n  margin-left: 12px;\n`;\n\nexport const ContentContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 16px;\n  flex: 2;\n`;\n\nexport const StyledTabWrapper = styled.div<{\n  fullWidth?: boolean;\n}>`\n  display: flex;\n  flex-direction: column;\n  overflow-x: hidden;\n  ${({ fullWidth }) => fullWidth && 'width: 100%;'};\n\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    padding-top: 0;\n  }\n\n  @media (max-width: ${sizes.TABLET_L}) {\n    flex: 2;\n  }\n`;\n\nexport const EditReferenceDescription = styled.div`\n  margin: 8px 0px;\n`;\n\nexport const EditReferenceForm = styled.form`\n  width: 100%;\n  height: 100%;\n  grid-template-rows: 1fr 56px;\n  display: grid;\n`;\n\nexport const FieldWrapper = styled.div`\n  width: 100%;\n`;\n\nexport const ButtonWrapper = styled.div<{ flexDirection?: 'column' | 'row' }>`\n  display: flex;\n  margin-top: 16px;\n  flex-direction: ${({ flexDirection }) => flexDirection ?? 'row'};\n`;\n\nexport const ReferenceInnerContainer = styled(Stack)`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  margin-top: 24px;\n`;\n\nexport const TabContainer = styled.div`\n  width: fit-content;\n`;\n\nexport const CloseBtnContainer = styled.div`\n  display: flex;\n  align-self: baseline;\n`;\n\nexport const ReferenceImageContainer = styled.div`\n  width: 100%;\n  border-radius: 8px;\n  box-sizing: border-box;\n  border: 1px solid var(--border-card-neutral-highlighted);\n  background: var(--bg-card-neutral-alt-default);\n`;\n\nexport const RefereneceImageHeader = styled.div`\n  padding: 16px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const RefereneceImageDetailHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ReferenceImageCloseButton = styled(Button)`\n  padding: 0;\n  width: auto;\n`;\n\nexport const ReferenceImage = styled.img`\n  background-size: contain;\n  background-position: center;\n  width: 100%;\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    max-height: 222px;\n  }\n`;\n\nexport const StyledRichEditor = styled.div`\n  width: 100%;\n  gap: 16px;\n  box-sizing: border-box;\n  margin-top: 16px;\n  flex: 1;\n  display: flex;\n`;\n\nexport const ModalDescription = styled(TSpan)`\n  white-space: pre-line;\n`;\n\nexport const ReferenceDetailContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nexport const ReferenceContainer = styled(ReferenceDetailContainer)`\n  margin-bottom: 16px;\n  width: 100%;\n`;\n\nexport const ReferenceDetail = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nexport const ReferenceClient = styled(TSpan)``;\n\nexport const ReferenceDescription = styled(TSpan)`\n  margin: 16px 0;\n`;\n\nexport const IconMainContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n","import { useState } from 'react';\nimport { t } from 'i18next';\n\nimport {\n  RichTextEditor,\n  type ReactQuillChangeResult,\n} from '@/features/richTextEditor';\nimport { TextField } from '@/components/TextField';\n\nimport { type EditElementProps } from './types';\nimport { ContentContainer, StyledTabWrapper } from './styles';\n\nexport const EditElement = ({\n  title,\n  content,\n  handleChangeTitle,\n  handleChangeContent,\n  basicToolbar = false,\n}: EditElementProps) => {\n  const [initialValue] = useState(content);\n\n  return (\n    <StyledTabWrapper data-testid=\"EditElementWrapper\" fullWidth>\n      <TextField\n        placeholder={t('noumena.chamber_edit.add_experience.title')}\n        value={title}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n          handleChangeTitle(e.target.value)\n        }\n      />\n      <ContentContainer>\n        <RichTextEditor\n          placeholder={t('noumena.chamber_edit.add_experience.placeholder')}\n          initialValue={initialValue}\n          onContentChange={(res: ReactQuillChangeResult) => {\n            handleChangeContent(res.value ?? '');\n          }}\n          basicToolbar={basicToolbar}\n          minHeight=\"100%\"\n          width=\"calc(100% - 2px)\"\n          inModal\n          editEnabled\n        />\n      </ContentContainer>\n    </StyledTabWrapper>\n  );\n};\n","import ElementResizable from '@/components/ElementResizable/ElementResizable';\nimport { VideoPlayerView } from '@/components/VideoPlayer';\nimport { useLaunchDarkly } from '@/hooks';\nimport { useEditChamberState } from '@/screens/Chamber/EditChamber/provider';\nimport NoumLayoutToolWrapper from '@/screens/Chamber/components/ElementWrapper/NoumLayoutToolWrapper';\nimport { memo, useCallback, useMemo } from 'react';\nimport { type VideoPlayerViewProps } from '@/components/VideoPlayer';\nimport UploadProgress from '../MediaElement/UploadProgress';\nimport { type NoumLayoutToolMetaValues } from '../../ElementWrapper';\n\ninterface VideoViewProps extends VideoPlayerViewProps {\n  meta?: NoumLayoutToolMetaValues;\n}\n\nconst VideoView = memo((props: VideoViewProps) => {\n  const {\n    flags: { noumEditor2 },\n  } = useLaunchDarkly();\n  const {\n    toolMetaValue,\n    handleChangeToolMetaValue,\n    updateToolMetaValue,\n    activeEditingTool,\n    mediaUploadPercentage,\n    mediaUploadTempFile,\n  } = useEditChamberState();\n\n  const isActiveEditing = useMemo(\n    () => activeEditingTool?._id === props.elementId,\n    [activeEditingTool?._id, props.elementId],\n  );\n  const percentageSize: number | undefined = useMemo(\n    () =>\n      noumEditor2\n        ? isActiveEditing\n          ? toolMetaValue?.percentageSize\n          : props.meta?.percentageSize || 30\n        : undefined,\n    [\n      isActiveEditing,\n      noumEditor2,\n      props.meta?.percentageSize,\n      toolMetaValue?.percentageSize,\n    ],\n  );\n\n  const handleResize = useCallback(\n    (e, direction, ref) => {\n      const numericPercentage = Math.floor(ref?.style?.width?.replace('%', ''));\n      handleChangeToolMetaValue?.({ percentageSize: numericPercentage });\n    },\n    [handleChangeToolMetaValue],\n  );\n\n  return (\n    <>\n      {noumEditor2 && !props.isCustomPreview ? (\n        <NoumLayoutToolWrapper\n          meta={props.meta}\n          data-testid=\"video-element-view\"\n        >\n          <>\n            {isActiveEditing && mediaUploadTempFile ? (\n              <UploadProgress\n                file={mediaUploadTempFile}\n                uploadPercentage={mediaUploadPercentage}\n              />\n            ) : (\n              <ElementResizable\n                onResize={handleResize}\n                onResizeStop={updateToolMetaValue}\n                disable={!noumEditor2 || !isActiveEditing}\n                percentSize={percentageSize}\n              >\n                <VideoPlayerView\n                  url={\n                    activeEditingTool?.unSaved?.bodyContentJson?.videoURL ||\n                    props.url\n                  }\n                  fullHeight={noumEditor2}\n                  fileType={props.fileType}\n                  onLoadedData={props.onLoadedData}\n                  isCollapse={props.isCollapse}\n                  bigPlayButton={props.bigPlayButton}\n                  controls={props.controls}\n                  viewOnly\n                  width={props.width}\n                  height={props.height}\n                  isSquare={props.isSquare}\n                />\n              </ElementResizable>\n            )}\n          </>\n        </NoumLayoutToolWrapper>\n      ) : (\n        <VideoPlayerView {...props} />\n      )}\n    </>\n  );\n});\n\nexport default VideoView;\n","import { Icon } from '@/components/Icon';\nimport { TSpan } from '@/components/Typography';\nimport { breakpoints } from '@/constants/devices';\nimport { useWindowDimensions } from '@/hooks';\nimport VideoView from '@/screens/Chamber/components/elements/VideoElement/VideoView';\nimport { getFileExtension, getVideoMimeType } from '@/utils/file';\nimport {\n  ReferenceImageContainer,\n  RefereneceImageHeader,\n  RefereneceImageDetailHeader,\n  ReferenceImageCloseButton,\n  ReferenceImage,\n} from './styles';\n\nconst ReferenceMedia: React.FC<{\n  mediaName?: string;\n  mediaSize?: number;\n  mediaType?: string;\n  mediaSrc: string;\n  clearMedia?: () => void;\n}> = ({ clearMedia, mediaName, mediaSize, mediaType, mediaSrc }) => {\n  const { width } = useWindowDimensions();\n  const isMobile = width <= breakpoints.MOBILE_MAX;\n  return (\n    <ReferenceImageContainer>\n      {mediaName && (\n        <RefereneceImageHeader>\n          <RefereneceImageDetailHeader>\n            <TSpan\n              font=\"body-m\"\n              colorToken=\"--text-card-header-neutral-highlighted\"\n            >\n              {mediaName}\n            </TSpan>\n            {!!mediaSize && (\n              <TSpan\n                font=\"systemInfo-s\"\n                colorToken=\"--text-card-neutral-default\"\n              >\n                {`${mediaSize}mb`}\n              </TSpan>\n            )}\n          </RefereneceImageDetailHeader>\n          {clearMedia && (\n            <ReferenceImageCloseButton\n              onClick={clearMedia}\n              size=\"small\"\n              textOnly\n              icon={\n                <Icon\n                  name=\"close_m\"\n                  size={24}\n                  color=\"--icon-card-neutral-default\"\n                />\n              }\n            />\n          )}\n        </RefereneceImageHeader>\n      )}\n      {mediaType === 'image' ? (\n        <ReferenceImage src={mediaSrc} />\n      ) : mediaType === 'video' ? (\n        <VideoView\n          url={mediaSrc}\n          fileType={getVideoMimeType(getFileExtension(mediaSrc))}\n          height={isMobile ? 222 : 413}\n        />\n      ) : null}\n    </ReferenceImageContainer>\n  );\n};\n\nexport default ReferenceMedia;\n","import { type NoumReferenceCapacity } from '@/apollo/generated/types';\nimport { type DropdownValueType } from '@/components/Dropdown';\nimport { imageTypesArr, videoTypesArr } from '@/constants/fileTypes';\nimport { getFileExtension, getFileNameFromUrl } from '@/utils/file';\n\nexport const getCapacityLabelFromValue = (\n  value: NoumReferenceCapacity | undefined,\n  capacityOptions: DropdownValueType<string>[],\n) => {\n  const item = capacityOptions.find((options) => options.value === value);\n  return item?.label as string;\n};\n\nexport const getFileDetails = (fileUrl: string) => ({\n  fileType: getFileType(getFileExtension(fileUrl) ?? ''),\n  fileName: getFileNameFromUrl(fileUrl),\n});\n\nexport const getFileType = (fileExt: string) => {\n  if (\n    imageTypesArr.find(\n      (item) => item === fileExt || item.split('/')[1] === fileExt,\n    )\n  )\n    return 'image';\n  if (\n    videoTypesArr.find(\n      (item) => item === fileExt || item.split('/')[1] === fileExt,\n    )\n  )\n    return 'video';\n  return '';\n};\n","import { useTranslation } from 'react-i18next';\nimport {\n  Modal,\n  ModalFooter,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { Button } from '@/components/Button';\nimport { Spacer } from '@/layout';\n\nimport * as S from './styles';\nimport { type DeleteReferenceModalProps } from './types';\n\nexport const DeleteChamberBroadcastModal = ({\n  isOpen,\n  onClose,\n  handleDiscardReference,\n}: DeleteReferenceModalProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <Modal\n      testId=\"reference-delete-modal\"\n      open={isOpen}\n      onClose={onClose}\n      size={ModalSize.S}\n      disableBackdropClick\n    >\n      <ModalHeader>\n        {t(`noumena.chamber_edit.delete_reference.heading`)}\n      </ModalHeader>\n      <S.ModalDescription\n        style={{\n          textAlign: 'center',\n        }}\n        font=\"body-l\"\n        colorToken=\"--text-modal-neutral-default\"\n      >\n        {t(`noumena.chamber_edit.delete_reference.subheading`)}\n      </S.ModalDescription>\n      <ModalFooter flexDirection=\"column\">\n        <Button\n          size=\"full\"\n          intent=\"negative\"\n          secondary\n          testId=\"delete-reference-btn\"\n          onClick={handleDiscardReference}\n        >\n          {t(`noumena.chamber_edit.delete_reference.discard`)}\n        </Button>\n        <Spacer height={16} />\n        <Button\n          size=\"full\"\n          tertiary\n          testId=\"delete-reference-no-btn\"\n          onClick={onClose}\n        >\n          {t(`noumena.cancel`)}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default DeleteChamberBroadcastModal;\n","import { t } from 'i18next';\nimport * as yup from 'yup';\nimport { NoumReferenceCapacity } from '@/apollo/generated/types';\nimport { type InputListTypes } from '@/components/Tabs/types';\nimport { type ReferenceDetailsInput } from './types';\n\nexport const listOfTabs: InputListTypes[] = [\n  {\n    name: t('noumena.chambers.project_types'),\n    image: 'terms_m',\n    text: t('noumena.chambers.project_types'),\n    labelSize: 'auto',\n  },\n  {\n    name: t('noumena.chamber_view.references'),\n    image: 'terms_m',\n    text: t('noumena.chamber_view.references'),\n    labelSize: 'auto',\n  },\n];\n\nexport const listOfAddReferenceTab: InputListTypes[] = [\n  {\n    name: t('noumena.chamber_edit.add_reference.ask_for_a_reference'),\n    image: 'terms_m',\n    text: t('noumena.chamber_edit.add_reference.ask_for_a_reference'),\n    labelSize: 'auto',\n  },\n  {\n    name: t('noumena.chamber_edit.add_reference.enter_manually'),\n    image: 'terms_m',\n    text: t('noumena.chamber_edit.add_reference.enter_manually'),\n    labelSize: 'auto',\n  },\n];\n\nexport const intialReferenceDetails: ReferenceDetailsInput = {\n  providerName: '',\n  capacity: NoumReferenceCapacity.Client,\n  providerEmail: '',\n  referenceText: '',\n  isManual: false,\n  file: undefined,\n};\n\nexport const testFileImageUrl =\n  'https://noumena-img.s3-accelerate.amazonaws.com/alex-gruber-ewHvqzqLQZU-unsplash.OhSVgh4J.jpg';\n\nexport const testFileVideoUrl =\n  'https://noumena-img.s3-accelerate.amazonaws.com/alex-gruber-ewHvqzqLQZU-unsplash.OhSVgh4J.mp4';\n\nexport const addManualReferenceSchema = yup\n  .object({\n    providerName: yup\n      .string()\n      .min(3, t('noumena.chamber_edit.add_reference.input_length'))\n      .required(t('noumena.input.not_empty')),\n    capacity: yup\n      .string()\n      .min(3, t('noumena.input.not_empty'))\n      .required(t('noumena.input.not_empty')),\n    referenceText: yup\n      .string()\n      .test(\n        'minLength',\n        t('noumena.chamber_edit.add_reference.input_length_min_max'),\n        (val) => (val?.length ? val.split(' ').length >= 3 : false),\n      )\n      .test(\n        'maxLength',\n        t('noumena.chamber_edit.add_reference.input_length_min_max'),\n        (val) => (val?.length ? val.split(' ').length <= 2000 : false),\n      )\n      .required(t('noumena.input.not_empty')),\n  })\n  .required();\n\nexport const askForReferenceSchema = yup\n  .object({\n    providerName: yup\n      .string()\n      .min(3, t('noumena.chamber_edit.add_reference.input_length'))\n      .required(t('noumena.input.not_empty')),\n    capacity: yup\n      .string()\n      .min(3, t('noumena.input.not_empty'))\n      .required(t('noumena.input.not_empty')),\n    providerEmail: yup\n      .string()\n      .email(\n        t('noumena.email_login_form.valid_email.error_message_without_example'),\n      )\n      .required(t('noumena.input.not_empty')),\n  })\n  .required();\n","import { useMemo, useState, useEffect, useCallback } from 'react';\nimport { t } from 'i18next';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Controller, useForm } from 'react-hook-form';\nimport { type UpdateNoumReferencePayload } from '@/apollo/generated/types';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from '@/components/ExtendedModal';\nimport { Icon } from '@/components/Icon';\nimport { TextField } from '@/components/TextField';\nimport { Dropdown } from '@/components/Dropdown';\nimport { TextArea } from '@/components/TextArea';\nimport { UploadMedia } from '@/features/upload/components';\nimport { Button } from '@/components/Button';\nimport { useWindowDimensions } from '@/hooks/dimensions';\nimport { Spacer } from '@/layout';\nimport { breakpoints } from '@/constants/devices';\nimport { mediaTypes } from '@/constants/fileTypes';\nimport ReferenceMedia from '../ReferenceMedia';\nimport {\n  getFileType,\n  getFileDetails,\n  getCapacityLabelFromValue,\n} from '../helpers';\nimport { addManualReferenceSchema } from '../data';\nimport { type UpdateReferenceProps } from '../types';\n\nconst UpdateReference = ({\n  isOpen,\n  onClose,\n  reference,\n  capacityOptions,\n  referenceLoading,\n  onSubmitReference,\n}: UpdateReferenceProps) => {\n  const { capacity, imageUrl, providerName, referenceText } = reference;\n\n  const { fileName, fileType } = getFileDetails(imageUrl ?? '');\n\n  const { width } = useWindowDimensions();\n  const isDesktop = useMemo(() => width > breakpoints.TABLET_L, [width]);\n  const isMobile = useMemo(() => width <= breakpoints.MOBILE_MAX, [width]);\n\n  const [, setMediaUploading] = useState(false);\n  const [media, setMedia] = useState(imageUrl ?? '');\n  const [mediaDetail, setMediaDetail] = useState({\n    name: fileName,\n    type: fileType,\n    size: 0,\n  });\n\n  const {\n    reset,\n    control,\n    setValue,\n    handleSubmit: handleFormSubmit,\n    formState: { isValid },\n  } = useForm<UpdateNoumReferencePayload>({\n    defaultValues: {\n      providerName: providerName ?? '',\n      referenceText: referenceText ?? '',\n      capacity: capacity ?? '',\n      imageUrl: imageUrl ?? '',\n    },\n    resolver: yupResolver(addManualReferenceSchema),\n    mode: 'onTouched',\n    reValidateMode: 'onSubmit',\n  });\n\n  const handleClose = () => {\n    reset();\n    setMedia('');\n    onClose();\n  };\n\n  const handleSubmit = async () => {\n    await handleFormSubmit(onSubmitReference)();\n  };\n\n  useEffect(() => {\n    setValue('imageUrl', media);\n  }, [media, setValue]);\n\n  const handleSetMediaDetails = useCallback((e: File) => {\n    setMediaDetail({\n      name: e.name,\n      type: getFileType(e.type),\n      size: Number((Math.round(e.size) / 1000000).toPrecision(2)),\n    });\n  }, []);\n\n  const handleSetMediaUploading = useCallback((uploading: boolean) => {\n    setMediaUploading(uploading);\n  }, []);\n\n  return (\n    <Modal\n      open={!!isOpen}\n      onClose={handleClose}\n      testId=\"update-reference-modal\"\n      isFullScreen={!isDesktop}\n      style={{\n        width: isDesktop ? 752 : undefined,\n      }}\n      hasBackButton\n      enableCloseButton\n      closeButtonStyles={{\n        enforceLeft: true,\n        transparentModalCloseButton: true,\n        defaultBtnForMobile: false,\n      }}\n      disableBackdropClick\n    >\n      <ModalHeader isFullScreen={!isDesktop}>\n        {t(`noumena.chamber_edit.edit_reference.title`)}\n      </ModalHeader>\n      <ModalBody\n        style={{\n          textAlign: 'left',\n        }}\n        minHeight=\"55vh\"\n        isFullScreen={!isDesktop}\n        noFooter\n      >\n        <Spacer height={24} />\n        <Controller\n          control={control}\n          name=\"providerName\"\n          render={({\n            field: { value, onChange, onBlur },\n            fieldState: { error },\n          }) => (\n            <TextField\n              label={t(\n                'noumena.chamber_edit.add_reference.ask_for_a_reference.provider.full_name',\n              )}\n              onBlur={onBlur}\n              value={value ?? ''}\n              onChange={onChange}\n              error={!!error?.message}\n              helperText={error?.message}\n            />\n          )}\n        />\n        <Spacer height=\"16px\" />\n        <Controller\n          control={control}\n          name=\"capacity\"\n          render={({ field: { value, onChange }, fieldState: { error } }) => (\n            <Dropdown\n              containerStyle={{\n                padding: '0',\n              }}\n              observerMinHeight=\"0px\"\n              hideIcons\n              placement=\"bottom-start\"\n              options={capacityOptions}\n              inputValue={value ?? ''}\n              onSelectOption={(e) => {\n                onChange(e.value);\n              }}\n              usePopStyle={!isMobile}\n              renderContainerFromBottom={isMobile}\n              dropdownItemStyle={isMobile ? { textAlign: 'center' } : undefined}\n            >\n              {({ inputProps, inputRef, toggle }) => (\n                <TextField\n                  readOnly\n                  {...inputProps}\n                  ref={inputRef}\n                  value={getCapacityLabelFromValue(\n                    value || undefined,\n                    capacityOptions,\n                  )}\n                  label={t(\n                    'noumena.chamber_edit.add_reference.ask_for_a_reference.capacity',\n                  )}\n                  spellCheck=\"false\"\n                  error={!!error?.message}\n                  helperText={error?.message}\n                  rightIcon={\n                    <Icon\n                      name=\"chevron_down_m\"\n                      size={16}\n                      color=\"--icon-input-neutral-default\"\n                      onClick={toggle}\n                    />\n                  }\n                />\n              )}\n            </Dropdown>\n          )}\n        />\n        <Spacer height=\"16px\" />\n        <Controller\n          control={control}\n          name=\"referenceText\"\n          render={({\n            field: { value, onChange, onBlur },\n            fieldState: { error },\n          }) => (\n            <TextArea\n              label={t(\n                `noumena.chamber_edit.add_reference.ask_for_a_reference.reference_text`,\n              )}\n              autoResize\n              value={value ?? ''}\n              onBlur={onBlur}\n              onChange={onChange}\n              error={!!error?.message}\n              helperText={error?.message}\n            />\n          )}\n        />\n        <Spacer height=\"16px\" />\n        {media?.length ? (\n          <ReferenceMedia\n            mediaSrc={media}\n            clearMedia={() => setMedia('')}\n            mediaName={mediaDetail.name}\n            mediaSize={mediaDetail.size}\n            mediaType={mediaDetail.type}\n          />\n        ) : (\n          <UploadMedia\n            acceptedFileTypes={mediaTypes}\n            onUploading={handleSetMediaUploading}\n            maxSize={500}\n            setMediaDetail={handleSetMediaDetails}\n            onContentChange={setMedia}\n          />\n        )}\n        <Spacer height=\"16px\" />\n      </ModalBody>\n      <ModalFooter isFullScreen={!isDesktop} justifyContent=\"space-between\">\n        <Button\n          tertiary\n          testId=\"add-reference-cancel-action\"\n          size=\"full\"\n          softDisabled={referenceLoading}\n          disabled={!isValid}\n          onClick={handleClose}\n        >\n          {t(`noumena.cancel`)}\n        </Button>\n        <Spacer width={16} />\n        <Button\n          testId=\"add-reference-save-action\"\n          primary\n          size=\"full\"\n          softDisabled={referenceLoading}\n          disabled={!isValid}\n          onClick={handleSubmit}\n        >\n          {t('noumena.button.save')}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default UpdateReference;\n","import { t } from 'i18next';\nimport { capitalize } from 'lodash';\nimport { useCallback, useMemo, useState } from 'react';\nimport {\n  NoumReferenceStatus,\n  type UpdateNoumReferencePayload,\n} from '@/apollo/generated/types';\nimport { Spacer } from '@/layout';\nimport { TSpan } from '@/components/Typography';\nimport { Icon } from '@/components/Icon';\nimport { Button } from '@/components/Button';\nimport {\n  ReferenceContainer,\n  ReferenceDetail,\n  ReferenceDetailContainer,\n  ReferenceClient,\n  IconMainContainer,\n  ReferenceDescription,\n  ButtonWrapper,\n} from './styles';\nimport ReferenceMedia from './ReferenceMedia';\nimport { getFileDetails } from './helpers';\nimport { type ReferecneViewItemProps } from './types';\nimport DeleteReference from './DeleteReference';\nimport UpdateReference from './UpdateReference';\n\nexport const ReferenceViewItem = ({\n  reference,\n  isEditing,\n  approveReference,\n  rejectReference,\n  discardReference,\n  updateReference,\n  loading,\n  capacityOptions,\n}: ReferecneViewItemProps) => {\n  const {\n    _id: id,\n    capacity,\n    imageUrl,\n    providerName,\n    referenceText,\n    status,\n  } = reference;\n\n  const { formattedCapacity, fileName, fileType } = useMemo(\n    () => ({\n      formattedCapacity: capacity\n        .replaceAll('_', ' ')\n        .split(' ')\n        .map((item) => capitalize(item))\n        .join(' '),\n      ...getFileDetails(imageUrl ?? ''),\n    }),\n    [capacity, imageUrl],\n  );\n\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n\n  const handleDiscardReference = useCallback(async () => {\n    await discardReference?.(id);\n    setShowDeleteModal(false);\n  }, [discardReference, id]);\n\n  const handleUpdateReference = useCallback(\n    async (payload: UpdateNoumReferencePayload) => {\n      await updateReference?.(id, payload);\n      setShowEditModal(false);\n    },\n    [updateReference, id],\n  );\n\n  return (\n    <>\n      <ReferenceContainer>\n        <ReferenceDetail>\n          <ReferenceDetailContainer>\n            <TSpan\n              colorToken=\"--text-card-header-neutral-highlighted\"\n              font=\"body-xl-bold\"\n            >\n              {providerName}\n            </TSpan>\n            <ReferenceClient\n              font=\"body-m-bold\"\n              colorToken=\"--text-card-header-neutral-default\"\n            >\n              {formattedCapacity}\n            </ReferenceClient>\n            {status === NoumReferenceStatus.Pending && (\n              <>\n                <Spacer height={16} />\n                <ReferenceClient\n                  font=\"body-m\"\n                  colorToken=\"--text-card-header-neutral-default\"\n                >\n                  {t('noumena.chamber_edit.add_reference.subheading')}\n                </ReferenceClient>\n              </>\n            )}\n          </ReferenceDetailContainer>\n          {isEditing && (\n            <IconMainContainer>\n              <Button\n                tertiary\n                size=\"small\"\n                icon={\n                  <Icon\n                    name=\"edit_m\"\n                    size={24}\n                    color=\"--icon-button-neutral-default\"\n                  />\n                }\n                onClick={() => setShowEditModal(true)}\n              />\n              <Button\n                secondary\n                intent=\"negative\"\n                size=\"small\"\n                icon={\n                  <Icon\n                    name=\"delete_m\"\n                    size={24}\n                    color=\"--icon-button-danger-secondary-default\"\n                  />\n                }\n                onClick={() => setShowDeleteModal(true)}\n              />\n            </IconMainContainer>\n          )}\n        </ReferenceDetail>\n        <ReferenceDescription\n          textAlign=\"left\"\n          font=\"body-m\"\n          colorToken=\"--text-card-neutral-highlighted\"\n        >\n          {referenceText}\n        </ReferenceDescription>\n        {imageUrl && (\n          <ReferenceMedia\n            mediaSrc={imageUrl}\n            mediaName={fileName}\n            mediaType={fileType}\n          />\n        )}\n        {status === NoumReferenceStatus.Pending && (\n          <ButtonWrapper>\n            <Button\n              size=\"small\"\n              loading={loading}\n              onClick={() => approveReference?.(id)}\n              intent=\"positive\"\n              secondary\n            >\n              {t('noumena.keep')}\n            </Button>\n            <Spacer width={8} />\n            <Button\n              size=\"small\"\n              loading={loading}\n              onClick={() => rejectReference?.(id)}\n              intent=\"negative\"\n              secondary\n            >\n              {t('noumena.discard')}\n            </Button>\n          </ButtonWrapper>\n        )}\n      </ReferenceContainer>\n      {isEditing && showDeleteModal && (\n        <DeleteReference\n          isOpen={showDeleteModal}\n          onClose={() => setShowDeleteModal(false)}\n          handleDiscardReference={handleDiscardReference}\n        />\n      )}\n      {isEditing && showEditModal && (\n        <UpdateReference\n          isOpen={showEditModal}\n          onClose={() => setShowEditModal(false)}\n          reference={reference}\n          referenceLoading={!!loading}\n          capacityOptions={capacityOptions || []}\n          onSubmitReference={handleUpdateReference}\n        />\n      )}\n    </>\n  );\n};\n","import { memo, useCallback, useEffect, useMemo, useState } from 'react';\nimport { t } from 'i18next';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\n\nimport { ElementStatusEnum, ElementTypeEnum } from '@/apollo/generated/types';\nimport { breakpoints } from '@/constants/devices';\nimport { useLaunchDarkly, useToast, useWindowDimensions } from '@/hooks';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { Icon } from '@/components/Icon';\nimport { Infinite } from '@/components/Infinite';\nimport {\n  Dropdown,\n  type DropdownTargetProps,\n  type DropdownValueType,\n} from '@/components/Dropdown';\nimport BasicChipsTabsForm from '@/components/Tabs/TabsForm';\nimport { Spinner } from '@/components/Spinner';\nimport { EditElement } from '../EditElement';\nimport { ReferenceViewItem } from '../ReferenceViewItem';\nimport {\n  ReferenceInnerContainer,\n  StyledAddReferenceButton,\n  StyledRichEditor,\n  StyledSaveButton,\n  StyledSaveButtonTableMobile,\n  TabContainer,\n} from '../styles';\nimport { listOfTabs } from '../data';\nimport { type AddExperienceProps, type EditElementSchema } from '../types';\n\nconst elementSchema = yup\n  .object({\n    title: yup.string().required(),\n    content: yup.string().required(),\n  })\n  .required();\n\nconst AddExperience = ({\n  elementType,\n  title: propTitle,\n  isEditing,\n  onClose,\n  isOpen,\n  handleAddOption,\n  handleDeleteOption,\n  defaultData,\n  handleOpenAddReferenceModal: openReferenceModal,\n  approveReference,\n  rejectReference,\n  discardReference,\n  updateReference,\n  capacityOptions,\n  loading,\n  referenceFetching,\n  referenceData,\n  fetchMoreReferences,\n  infiniteState,\n  setShowDiscardExperienceModal,\n}: AddExperienceProps) => {\n  const { addToast } = useToast();\n  const {\n    flags: { references },\n  } = useLaunchDarkly();\n  const { width } = useWindowDimensions();\n  const [activeTab, setActiveTab] = useState(0);\n  const [internalTitle, setTitle] = useState<string>(defaultData.title);\n  const [content, setContentMain] = useState<string>(defaultData.body);\n  const [loader, setLoader] = useState(false);\n  const isDesktop = useMemo(() => width >= breakpoints.LAPTOP, [width]);\n  const isMobile = useMemo(() => width <= breakpoints.MOBILE_MAX, [width]);\n  const enableReference = elementType === ElementTypeEnum.ProjectWorkExperience;\n\n  const addReferenceOptions: DropdownValueType<string>[] = useMemo(\n    () => [\n      {\n        value: 'ask_for_reference',\n        key: 'ask_for_reference',\n        type: 'value',\n        label: t('noumena.chamber_edit.add_reference.ask_for_a_reference'),\n        description: t('noumena.chamber_edit.publish_project'),\n        disabled:\n          !defaultData.body.length ||\n          !defaultData.id?.length ||\n          !(defaultData.status === ElementStatusEnum.Published),\n      },\n      {\n        value: 'add_reference_manually',\n        key: 'add_reference_manually',\n        type: 'value',\n        label: t('noumena.chamber_edit.add_manually'),\n        disabled: !defaultData.id?.length,\n      },\n    ],\n    [defaultData],\n  );\n\n  const setContent = useCallback(\n    (value: string) => {\n      setContentMain(value);\n    },\n    [setContentMain],\n  );\n\n  const {\n    reset,\n    trigger,\n    setValue,\n    formState: { isValid },\n  } = useForm<EditElementSchema>({\n    resolver: yupResolver(elementSchema),\n    mode: 'all',\n    reValidateMode: 'onBlur',\n  });\n\n  const handleChange = useCallback(\n    (value: string) => {\n      if (!Number.isNaN(value)) {\n        const parsedValue = Number(value);\n        setActiveTab(parsedValue);\n      }\n    },\n    [setActiveTab],\n  );\n\n  const handleSaveChanges = useCallback(async () => {\n    if (defaultData.title && !internalTitle) {\n      addToast(\n        'error',\n        'none',\n        t('noumena.chamber_edit.add_reference.empty_title'),\n      );\n      return;\n    }\n    if (content === `<p><br></p>` || !content) {\n      addToast(\n        'error',\n        'none',\n        t('noumena.chamber_edit.add_reference.empty_content'),\n      );\n      setContent('');\n      return;\n    }\n\n    await handleAddOption(\n      internalTitle,\n      content,\n      defaultData.id,\n      defaultData.position,\n    );\n    setTimeout(() => {\n      setLoader(false);\n      onClose();\n      reset();\n    }, 1000);\n  }, [\n    defaultData.title,\n    defaultData.id,\n    defaultData.position,\n    internalTitle,\n    content,\n    handleAddOption,\n    onClose,\n    reset,\n    addToast,\n    setContent,\n  ]);\n\n  const handleOpenReferenceModal = useCallback(\n    (e: DropdownValueType<unknown>) => {\n      if (e.key === 'add_reference_manually') {\n        openReferenceModal('manually');\n      } else {\n        openReferenceModal('ask');\n      }\n    },\n    [openReferenceModal],\n  );\n\n  const handleSaveNewExperience = useCallback(() => {\n    setLoader(true);\n    if (internalTitle !== defaultData.title || content !== defaultData.body) {\n      handleSaveChanges();\n    } else {\n      onClose();\n    }\n  }, [\n    internalTitle,\n    defaultData.title,\n    defaultData.body,\n    content,\n    handleSaveChanges,\n    onClose,\n  ]);\n\n  const handleCloseModal = useCallback(() => {\n    if (\n      !internalTitle &&\n      !content &&\n      !defaultData.body &&\n      !defaultData.title &&\n      defaultData._id\n    ) {\n      handleDeleteOption(defaultData._id);\n      onClose();\n    } else if (\n      internalTitle !== defaultData.title ||\n      content !== defaultData.body\n    ) {\n      setShowDiscardExperienceModal();\n    } else {\n      onClose();\n    }\n  }, [\n    content,\n    defaultData,\n    internalTitle,\n    handleDeleteOption,\n    onClose,\n    setShowDiscardExperienceModal,\n  ]);\n\n  useEffect(() => {\n    setValue('title', internalTitle);\n    setValue('content', content);\n    trigger('content');\n    trigger('title');\n  }, [internalTitle, content, setValue, trigger]);\n\n  useEffect(() => {\n    if (referenceData.length === 0) setActiveTab(0);\n  }, [referenceData]);\n\n  return (\n    <Modal\n      open={!!isOpen}\n      size={ModalSize.XL}\n      testId=\"add_experience_modal\"\n      isFullScreen={!isDesktop}\n      onClose={handleCloseModal}\n      enableCloseButton\n      disableBackdropClick\n      disableEscapeKeyDown\n    >\n      <ModalHeader\n        maxTitleWidth={310}\n        isFullScreen={!isDesktop}\n        rightMobileContainer={\n          <StyledSaveButtonTableMobile\n            secondary={isValid}\n            disabled={!isValid || loading}\n            loading={loader}\n            size=\"small\"\n            onClick={handleSaveNewExperience}\n          >\n            {t('noumena.chamber_edit.visibility.save')}\n          </StyledSaveButtonTableMobile>\n        }\n        action={\n          enableReference && (\n            <Dropdown\n              isPopperStyle\n              isAnimation={false}\n              containerStyle={{\n                padding: '0',\n              }}\n              observerMinHeight=\"0px\"\n              hideIcons\n              placement=\"bottom-start\"\n              options={addReferenceOptions}\n              onSelectOption={handleOpenReferenceModal}\n              usePortal={false}\n            >\n              {({\n                targetProps,\n                targetRef,\n                toggle,\n              }: DropdownTargetProps<HTMLButtonElement>) => (\n                <StyledAddReferenceButton\n                  ref={targetRef}\n                  {...targetProps}\n                  data-testid=\"add_reference_btn\"\n                  neutral={isDesktop}\n                  primary={!isDesktop}\n                  textOnly\n                  leftIcon={\n                    <Icon\n                      name=\"add_m\"\n                      size={24}\n                      color=\"--icon-button-brand-primary-default\"\n                    />\n                  }\n                  onClick={toggle}\n                >\n                  {t('noumena.chamber_edit.add_reference')}\n                </StyledAddReferenceButton>\n              )}\n            </Dropdown>\n          )\n        }\n      >\n        {defaultData.title.length ? defaultData.title : propTitle}\n      </ModalHeader>\n      <ModalBody minHeight=\"55vh\" isFullScreen={!isDesktop} noFooter>\n        {referenceFetching && referenceData.length === 0 ? (\n          <Spinner />\n        ) : (\n          <>\n            {enableReference && references && referenceData.length ? (\n              <TabContainer>\n                <BasicChipsTabsForm\n                  onChange={handleChange}\n                  inputList={listOfTabs}\n                  selectedId={activeTab.toString()}\n                  mode=\"isBackground\"\n                  isWithoutImage\n                  fontSize=\"--font-body-medium-regular-size\"\n                  textFont=\"--font-body-medium-regular-font\"\n                />\n              </TabContainer>\n            ) : (\n              <></>\n            )}\n            {activeTab === 0 && (\n              <StyledRichEditor>\n                <EditElement\n                  title={internalTitle}\n                  content={content}\n                  handleChangeTitle={setTitle}\n                  handleChangeContent={setContent}\n                  basicToolbar={false}\n                />\n              </StyledRichEditor>\n            )}\n            {activeTab === 1 && (\n              <Infinite\n                onFetchMore={fetchMoreReferences}\n                status={infiniteState}\n                scrollbarWidth={0}\n                paddingBottom=\"15px\"\n                width=\"100%\"\n              >\n                <ReferenceInnerContainer>\n                  {referenceData.map((reference) => (\n                    <ReferenceViewItem\n                      key={reference._id}\n                      {...{\n                        reference,\n                        loading,\n                        isEditing,\n                        approveReference,\n                        rejectReference,\n                        discardReference,\n                        updateReference,\n                        capacityOptions,\n                      }}\n                    />\n                  ))}\n                </ReferenceInnerContainer>\n              </Infinite>\n            )}\n          </>\n        )}\n      </ModalBody>\n      <ModalFooter isFullScreen={!isDesktop}>\n        {!isMobile && (\n          <StyledSaveButton\n            primary={isValid || loading}\n            disabled={!isValid}\n            loading={loader}\n            onClick={handleSaveNewExperience}\n          >\n            {t('noumena.chamber_edit.visibility.save')}\n          </StyledSaveButton>\n        )}\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default memo(AddExperience);\n","import { useCallback, useMemo, useState } from 'react';\nimport { t } from 'i18next';\n\nimport { NoumReferenceStatus } from '@/apollo/generated/types';\nimport { Modal, ModalBody, ModalHeader } from '@/components/ExtendedModal';\nimport { RichTextEditorView } from '@/features/richTextEditor';\nimport BasicChipsTabsForm from '@/components/Tabs/TabsForm';\nimport { type InputListTypes } from '@/components/Tabs/types';\nimport { Infinite } from '@/components/Infinite';\nimport { useWindowDimensions } from '@/hooks';\nimport { useGetNoumReferences } from '@/features/noums/hooks/references';\nimport { Spacer } from '@/layout';\nimport { breakpoints } from '@/constants/devices';\n\nimport { ReferenceViewItem } from './ReferenceViewItem';\nimport { type ViewReferenceProps } from './types';\nimport { ReferenceInnerContainer, TabContainer } from './styles';\n\nconst listOfTabs: InputListTypes[] = [\n  {\n    name: 'test1',\n    image: 'terms_m',\n    text: t('noumena.chamber_view.experiences'),\n    labelSize: 'auto',\n  },\n  {\n    name: 'test1',\n    image: 'terms_m',\n    text: t('noumena.chamber_view.references'),\n    labelSize: 'auto',\n  },\n];\n\nexport const ViewExperience = ({\n  id,\n  body,\n  title,\n  isOpen,\n  onClose,\n}: ViewReferenceProps) => {\n  const { width } = useWindowDimensions();\n\n  const isMobile = useMemo(() => width <= breakpoints.MOBILE_MAX, [width]);\n  const isDesktop = useMemo(() => width >= breakpoints.LAPTOP, [width]);\n  const isTablet = useMemo(() => width >= breakpoints.TABLET, [width]);\n\n  const {\n    fetchMoreReferences,\n    infiniteState,\n    loading: referenceLoading,\n    references: referencesData,\n  } = useGetNoumReferences(id, NoumReferenceStatus.Accepted, true, 4);\n\n  const [activeTab, setActiveTab] = useState(0);\n  const handleSelectTab = useCallback(\n    (value: string) => {\n      setActiveTab(value ? Number(value) : 0);\n    },\n    [setActiveTab],\n  );\n\n  return (\n    <Modal\n      open={isOpen}\n      testId=\"view_reference_modal\"\n      isFullScreen={isMobile}\n      onClose={onClose}\n      style={{\n        width: isDesktop || isTablet ? 750 : undefined,\n      }}\n      enableCloseButton\n      disableBackdropClick\n    >\n      <ModalHeader isFullScreen={isMobile}>{title}</ModalHeader>\n      {referencesData && referencesData.length > 0 && (\n        <TabContainer>\n          <BasicChipsTabsForm\n            onChange={handleSelectTab}\n            inputList={listOfTabs}\n            selectedId={activeTab.toString()}\n            mode=\"isBackground\"\n            isWithoutImage\n            fontSize=\"--font-body-medium-regular-size\"\n            textFont=\"--font-body-medium-regular-font\"\n          />\n        </TabContainer>\n      )}\n      <Spacer height={16} />\n      <ModalBody isFullScreen={isMobile} noFooter>\n        {activeTab === 0 && (\n          <RichTextEditorView\n            style={{ padding: 0 }}\n            data-testid=\"RichTextEditorView\"\n            html={body ?? ''}\n          />\n        )}\n        {!referenceLoading && activeTab === 1 && referencesData.length && (\n          <Infinite\n            onFetchMore={fetchMoreReferences}\n            status={infiniteState}\n            paddingBottom=\"15px\"\n            paddingRight=\"12px\"\n            width=\"100%\"\n          >\n            <ReferenceInnerContainer>\n              {referencesData.map((reference) => (\n                <ReferenceViewItem\n                  key={reference._id}\n                  loading={false}\n                  isEditing={false}\n                  reference={reference}\n                />\n              ))}\n            </ReferenceInnerContainer>\n          </Infinite>\n        )}\n      </ModalBody>\n    </Modal>\n  );\n};\n","import { Stack } from '@/layout';\nimport styled from 'styled-components';\n\nexport const HomeChambersWrapper = styled.div`\n  display: grid;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ImageWrapper = styled.div`\n  margin: 0 auto;\n  margin-top: 24px;\n`;\nexport const StyledText = styled.div`\n  text-align: center;\n  color: var(--text-placeholder-neutral-default);\n  font-size: var(--font-body-xlarge-regular-size);\n  font-family: var(--font-body-xlarge-regular-font);\n  margin-top: 12px;\n`;\nexport const ButtonWrapper = styled.div`\n  margin: 16px auto;\n  font-weight: 500;\n`;\n\nexport const StoriesCnt = styled.div`\n  display: flex;\n`;\n\nexport const IconWrapper = styled.div`\n  display: none;\n`;\n\nexport const StackWrapper = styled(Stack)`\n  cursor: pointer;\n  border: 1px solid var(--border-card-neutral-highlighted);\n  border-radius: 8px;\n  &:hover ${IconWrapper} {\n    display: flex;\n  }\n`;\n\nexport const HomeNoumAddContianer = styled.div`\n  padding: 0 16px 16px 16px;\n`;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { t } from 'i18next';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { type SubmitHandler, useForm } from 'react-hook-form';\n\nimport { NoumReferenceCapacity } from '@/apollo/generated/types';\nimport BasicChipsTabsForm from '@/components/Tabs/TabsForm';\nimport { type InputListTypes } from '@/components/Tabs/types';\nimport { TSpan } from '@/components/Typography';\nimport { type DropdownValueType } from '@/components/Dropdown/types';\nimport { TextField } from '@/components/TextField';\nimport { Button } from '@/components/Button';\nimport { TextArea } from '@/components/TextArea';\nimport { Spacer } from '@/layout';\n\nimport {\n  StyledTabWrapper,\n  EditReferenceDescription,\n  EditReferenceForm,\n  FieldWrapper,\n  ButtonWrapper,\n  TabContainer,\n} from './styles';\nimport { type EditReferenceProps, type ReferenceDetailsInput } from './types';\n\nconst listOfTabs: InputListTypes[] = [\n  {\n    name: t('noumena.chamber_edit.add_reference.ask_for_a_reference'),\n    image: 'terms_m',\n    text: t('noumena.chamber_edit.add_reference.ask_for_a_reference'),\n    labelSize: 'auto',\n  },\n  {\n    name: 'test1',\n    image: 'terms_m',\n    text: t('noumena.chamber_edit.add_reference.enter_manually'),\n    labelSize: 'auto',\n  },\n];\n\nconst intialReferenceDetails: ReferenceDetailsInput = {\n  providerName: '',\n  capacity: NoumReferenceCapacity.Client,\n  providerEmail: '',\n  referenceText: '',\n  isManual: false,\n  file: undefined,\n};\n\n// const capacityOptions: DropdownValueType<string>[] = [\n//   {\n//     key: 'manager',\n//     value: 'Manager',\n//     type: 'value',\n//     label: 'Manager',\n//   },\n// ];\n\nconst referenceSchema = yup\n  .object({\n    providerName: yup.string().required(t('noumena.input.not_empty')),\n    capacity: yup.string().required(t('noumena.input.not_empty')),\n    email: yup.string().when('isManual', {\n      is: false,\n      then: yup\n        .string()\n        .email(\n          t(\n            'noumena.email_login_form.valid_email.error_message_without_example',\n          ),\n        )\n        .required(t('noumena.input.not_empty')),\n    }),\n    referenceText: yup.string().when('isManual', {\n      is: true,\n      then: yup.string().required(t('noumena.input.not_empty')),\n    }),\n    isManual: yup.boolean().required(),\n  })\n  .required();\n\nconst EditReference = ({ onClose }: EditReferenceProps) => {\n  const [activeTab, setActiveTab] = useState(0);\n  const [, setSelectedCapacity] = useState<\n    DropdownValueType<string> | undefined\n  >(undefined);\n  const [referenceDetails, setReferenceDetails] =\n    useState<ReferenceDetailsInput>({\n      ...intialReferenceDetails,\n      isManual: false,\n    });\n\n  const {\n    register,\n    reset,\n    trigger,\n    setValue,\n    handleSubmit,\n    formState: { errors, isValid },\n  } = useForm<ReferenceDetailsInput>({\n    resolver: yupResolver(referenceSchema),\n    mode: 'all',\n    reValidateMode: 'onBlur',\n  });\n\n  const handleChange = (value: string) => {\n    const parsedValue = Number(value);\n    setActiveTab(parsedValue);\n    setReferenceDetails({\n      ...referenceDetails,\n      isManual: parsedValue === 1,\n    });\n  };\n\n  const handleInputChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setReferenceDetails({\n        ...referenceDetails,\n        [e.currentTarget.name]: e.currentTarget.value,\n      });\n\n      if (\n        e.currentTarget.name === 'providerEmail' ||\n        e.currentTarget.name === 'referenceText'\n      ) {\n        setValue(e.currentTarget.name, e.currentTarget.value);\n        trigger(e.currentTarget.name);\n      }\n    },\n    [setReferenceDetails, setValue, trigger, referenceDetails],\n  );\n\n  // const handleSelectCapacity = useCallback(\n  //   (option: DropdownValueType<string>) => {\n  //     setReferenceDetails({ ...referenceDetails, capacity: option.value });\n  //     setSelectedCapacity(option);\n  //     setValue('capacity', option.value);\n  //     trigger('capacity');\n  //   },\n  //   [\n  //     referenceDetails,\n  //     setReferenceDetails,\n  //     setSelectedCapacity,\n  //     setValue,\n  //     trigger,\n  //   ],\n  // );\n\n  /*\n  const handleUploadFile = useCallback(\n    (fileURL: string | undefined) => {\n      setValue('file', fileURL);\n      trigger('file');\n    },\n    [setValue, trigger],\n  );\n  */\n\n  const handleCancel = useCallback(() => {\n    setReferenceDetails(intialReferenceDetails);\n    setSelectedCapacity(undefined);\n    reset();\n    onClose();\n  }, [setReferenceDetails, setSelectedCapacity, onClose, reset]);\n\n  const onSubmit: SubmitHandler<ReferenceDetailsInput> = useCallback(\n    async (data: ReferenceDetailsInput) => {\n      // eslint-disable-next-line no-console\n      console.log(data);\n    },\n    [],\n  );\n\n  useEffect(() => {\n    setValue('isManual', activeTab === 1);\n    trigger('isManual');\n  }, [activeTab, setValue, trigger]);\n\n  return (\n    <StyledTabWrapper\n      data-testid=\"EditReferenceWrapper\"\n      fullWidth\n      style={{ height: '100%' }}\n    >\n      <TabContainer>\n        <BasicChipsTabsForm\n          onChange={handleChange}\n          inputList={listOfTabs}\n          selectedId={activeTab.toString()}\n          mode=\"isBackground\"\n          isWithoutImage\n          fontSize=\"--font-body-medium-regular-size\"\n          textFont=\"--font-body-medium-regular-font\"\n        />\n      </TabContainer>\n      {activeTab === 0 && (\n        <EditReferenceDescription>\n          <TSpan colorToken=\"--text-modal-neutral-default\" font=\"body-l\">\n            {t(\n              'noumena.chamber_edit.add_reference.ask_for_a_reference.description',\n            )}\n          </TSpan>\n        </EditReferenceDescription>\n      )}\n      <Spacer height={16} />\n      <EditReferenceForm onSubmit={handleSubmit(onSubmit)}>\n        <FieldWrapper>\n          <TextField\n            {...register('providerName', {\n              required: {\n                value: true,\n                message: t(`noumena.input.not_empty`),\n              },\n              onChange: handleInputChange,\n            })}\n            value={referenceDetails.providerName}\n            label={t(\n              `noumena.chamber_edit.add_reference.ask_for_a_reference.provider.full_name`,\n            )}\n            error={!!errors.providerName}\n            helperText={errors.providerName?.message}\n          />\n          <Spacer height={16} />\n          {/* <Dropdown\n            hideIcons\n            placement=\"bottom-start\"\n            options={capacityOptions}\n            inputValue={selectedCapacity?.value}\n            onSelectOption={handleSelectCapacity}\n            usePortal={false}\n          >\n            {({ inputProps, inputRef, toggle }) => (\n              <TextField\n                readOnly\n                {...inputProps}\n                ref={inputRef}\n                value={selectedCapacity ? String(selectedCapacity.label) : ''}\n                label={t(\n                  'noumena.chamber_edit.add_reference.ask_for_a_reference.capacity',\n                )}\n                spellCheck=\"false\"\n                onChange={() => {\n                  setValue('capacity', selectedCapacity?.value || '');\n                }}\n                error={!!errors.capacity}\n                helperText={errors.capacity?.message}\n                rightIcon={\n                  <Icon name=\"chevron_down_m\" color=\"--icon-input-neutral-default\" size={16} onClick={toggle} />\n                }\n              />\n            )}\n          </Dropdown> */}\n          <Spacer height={16} />\n          {activeTab === 0 && (\n            <>\n              <TextField\n                {...register('providerEmail', {\n                  required: {\n                    value: true,\n                    message: t(`noumena.input.not_empty`),\n                  },\n                  onChange: handleInputChange,\n                })}\n                value={referenceDetails.providerEmail}\n                label={t(\n                  `noumena.chamber_edit.add_reference.ask_for_a_reference.provider.providerEmail`,\n                )}\n                error={!!errors.providerEmail}\n                helperText={errors.providerEmail?.message}\n              />\n              <Spacer height={16} />\n            </>\n          )}\n          {activeTab === 1 && (\n            <>\n              <TextArea\n                {...register('referenceText', {\n                  required: {\n                    value: true,\n                    message: t(`noumena.input.not_empty`),\n                  },\n                  onChange: handleInputChange,\n                })}\n                value={referenceDetails.referenceText}\n                label={t(\n                  `noumena.chamber_edit.add_reference.ask_for_a_reference.reference_text`,\n                )}\n                error={!!errors.referenceText}\n                helperText={errors.referenceText?.message}\n                multiple\n              />\n              <Spacer height={16} />\n            </>\n          )}\n          <Spacer height={72} />\n        </FieldWrapper>\n        <ButtonWrapper>\n          <Button onClick={() => handleCancel()} secondary tertiary size=\"full\">\n            {t('noumena.cancel')}\n          </Button>\n          <Spacer width={16} />\n          {activeTab === 0 && (\n            <Button\n              type=\"submit\"\n              primary\n              size=\"full\"\n              loading={false}\n              secondary={!isValid}\n              tertiary={!isValid}\n              disabled={!isValid}\n            >\n              {t('noumena.send')}\n            </Button>\n          )}\n          {activeTab === 1 && (\n            <Button\n              type=\"submit\"\n              primary\n              size=\"full\"\n              loading={false}\n              secondary={!isValid}\n              tertiary={!isValid}\n              disabled={!isValid}\n            >\n              {t('noumena.chamber_edit.visibility.save')}\n            </Button>\n          )}\n        </ButtonWrapper>\n      </EditReferenceForm>\n    </StyledTabWrapper>\n  );\n};\n\nexport default EditReference;\n","import { useCallback, useEffect, useState } from 'react';\nimport { t } from 'i18next';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\n\nimport { Icon } from '@/components/Icon';\nimport { TSpan } from '@/components/Typography';\nimport { Modal, ModalBody, ModalFooter } from '@/components/ExtendedModal';\nimport { ModalSize } from '@/components/ExtendedModal/types';\nimport { Button } from '@/components/Button';\nimport BasicChipsTabsForm from '@/components/Tabs/TabsForm';\nimport { Spacer } from '@/layout';\nimport { breakpoints } from '@/constants/devices';\nimport { useLaunchDarkly, useToast, useWindowDimensions } from '@/hooks';\nimport {\n  HeaderContainerNonModal,\n  ModalHeader,\n  StyledRichEditor,\n  StyledSaveButton,\n  StyledSaveButtonTableMobile,\n  TabContainer,\n} from './styles';\nimport {\n  type AddReferenceNonModalProps,\n  type EditElementSchema,\n} from './types';\nimport { listOfTabs } from './data';\nimport EditReference from './EditReference';\nimport { EditElement } from './EditElement';\n\nconst AddReferenceNonModal = ({\n  title: propsTitle,\n  isEmpty = true,\n  onClose,\n  handleAddOption,\n  defaultData,\n  basicToolbar = true,\n}: AddReferenceNonModalProps) => {\n  const { addToast } = useToast();\n  const {\n    flags: { references },\n  } = useLaunchDarkly();\n  const { width, height } = useWindowDimensions();\n  const isDesktop = width > breakpoints.TABLET_L;\n  const isTablet = width > breakpoints.MOBILE_MAX;\n\n  const [addReferences, setAddReferences] = useState<boolean>(false);\n  const [activeTab, setActiveTab] = useState(0);\n  const [internalTitle, setTitle] = useState<string>(defaultData.title);\n  const [content, setContent] = useState<string>(defaultData.body);\n\n  const elementSchema = yup\n    .object({\n      title: yup.string().required(),\n      content: yup.string().required(),\n    })\n    .required();\n\n  const {\n    reset,\n    trigger,\n    setValue,\n    formState: { isValid },\n  } = useForm<EditElementSchema>({\n    resolver: yupResolver(elementSchema),\n    mode: 'all',\n    reValidateMode: 'onBlur',\n  });\n\n  const handleChange = (value: string) => {\n    const parsedValue = Number(value);\n    setActiveTab(parsedValue);\n  };\n\n  const handleSaveChanges = useCallback(async () => {\n    if (!internalTitle) {\n      addToast(\n        'error',\n        'none',\n        t('noumena.chamber_edit.add_reference.empty_title'),\n      );\n      return;\n    }\n    if (content === `<p><br></p>` || !content) {\n      addToast(\n        'error',\n        'none',\n        t('noumena.chamber_edit.add_reference.empty_content'),\n      );\n      setContent('');\n      return;\n    }\n\n    await handleAddOption({\n      title: internalTitle,\n      body: content,\n      _id: defaultData.id,\n      position: defaultData.position,\n    });\n    reset();\n  }, [\n    internalTitle,\n    content,\n    handleAddOption,\n    reset,\n    addToast,\n    defaultData.id,\n    defaultData.position,\n  ]);\n\n  useEffect(() => {\n    setValue('title', internalTitle);\n    setValue('content', content);\n    trigger('content');\n    trigger('title');\n  }, [internalTitle, content, setValue, trigger]);\n\n  return (\n    <Modal\n      testId=\"testHomeNoumProjectWorkExperience\"\n      open={true}\n      onClose={onClose}\n      hasBackButton={!isDesktop}\n      enableCloseButton={isDesktop}\n      size={ModalSize.XL}\n      disableBackdropClick\n    >\n      {activeTab === 0 && (\n        <>\n          <ModalHeader\n            rightMobileContainer={\n              <StyledSaveButtonTableMobile\n                primary={isValid}\n                disabled={!isValid}\n                size=\"small\"\n                onClick={handleSaveChanges}\n              >\n                {t('noumena.chamber_edit.visibility.save')}\n              </StyledSaveButtonTableMobile>\n            }\n            action={\n              references &&\n              basicToolbar && (\n                <Button\n                  data-testid=\"add_reference_btn\"\n                  textOnly\n                  leftIcon={\n                    <Icon\n                      name=\"add_m\"\n                      size={24}\n                      color=\"--icon-button-brand-primary-default\"\n                    />\n                  }\n                  onClick={() => setAddReferences(false)}\n                >\n                  {t('noumena.chamber_edit.add_reference')}\n                </Button>\n              )\n            }\n          >\n            <TSpan\n              font=\"heading-xs-bold\"\n              colorToken=\"--text-modal-header-neutral-default\"\n            >\n              {propsTitle}\n            </TSpan>\n          </ModalHeader>\n\n          <ModalBody\n            minHeight={\n              isDesktop && height < 720 ? 'calc(100vh - 296px)' : '55vh'\n            }\n          >\n            <StyledRichEditor>\n              <EditElement\n                title={internalTitle}\n                content={content}\n                handleChangeTitle={setTitle}\n                handleChangeContent={setContent}\n              />\n            </StyledRichEditor>\n          </ModalBody>\n\n          {isDesktop && (\n            <ModalFooter marginTop={isDesktop && height < 720 ? 16 : 24}>\n              <StyledSaveButton\n                primary={!isEmpty || isValid}\n                disabled={!isValid}\n                onClick={handleSaveChanges}\n              >\n                {t('noumena.chamber_edit.visibility.save')}\n              </StyledSaveButton>\n            </ModalFooter>\n          )}\n        </>\n      )}\n\n      {activeTab === 1 && (\n        <HeaderContainerNonModal\n          isEditReference={!isDesktop && !isTablet}\n          gridTemplateColumns={\n            !isDesktop && isTablet ? '50px 1fr 50px' : undefined\n          }\n        >\n          <Icon\n            name=\"arrow_left_m\"\n            size={24}\n            color=\"--icon-button-brand-primary-default\"\n            onClick={() => setActiveTab(0)}\n          />\n          {!isDesktop && !isTablet && <Spacer height={20} />}\n          <TSpan\n            colorToken=\"--text-modal-header-neutral-default\"\n            style={{\n              alignSelf: 'center',\n            }}\n            font=\"heading-xs-bold\"\n          >\n            {t('noumena.chamber_edit.add_reference.title')}\n          </TSpan>\n        </HeaderContainerNonModal>\n      )}\n      {addReferences && activeTab === 0 && (\n        <TabContainer>\n          <BasicChipsTabsForm\n            onChange={handleChange}\n            inputList={listOfTabs}\n            selectedId={activeTab.toString()}\n            mode=\"isBackground\"\n            isWithoutImage\n            fontSize=\"--font-body-medium-regular-size\"\n            textFont=\"--font-body-medium-regular-font\"\n          />\n        </TabContainer>\n      )}\n      {addReferences && activeTab === 1 && (\n        <EditReference onClose={() => setActiveTab(0)} />\n      )}\n    </Modal>\n  );\n};\n\nexport default AddReferenceNonModal;\n","import { ElementTypeEnum } from '@/apollo/generated/types';\nimport {\n  type HomeChambersElementsProps,\n  type HomeChambersEnum,\n} from '@/screens/Chamber/components/Element/types';\n\nconst homeChambersElements: HomeChambersElementsProps = {\n  [ElementTypeEnum.PublicationDesignPatterns]: {\n    image: 'bulb_m',\n    text: 'No Publications, Designs or Patents Added Yet',\n    buttonText: 'Add New',\n  },\n  [ElementTypeEnum.EducationTraining]: {\n    image: 'education_m',\n    text: 'No Education Added Yet',\n    buttonText: 'Add Education',\n    AddNewbuttonText: 'Add New Education',\n  },\n  [ElementTypeEnum.AchievementAward]: {\n    image: 'avard_m',\n    text: 'No Achievements Added Yet',\n    buttonText: 'Add Achievement',\n  },\n  [ElementTypeEnum.PersonalInterest]: {\n    image: 'interest_m',\n    text: 'No Personal Interests Added Yet',\n    buttonText: 'Add New',\n  },\n  [ElementTypeEnum.SocialInterest]: {\n    image: 'heart_m',\n    text: 'No Social Interests Added Yet',\n    buttonText: 'Add New',\n  },\n  [ElementTypeEnum.ProjectWorkExperience]: {\n    image: 'briefcase_m',\n    text: 'No Experience Added Yet',\n    buttonText: 'Add Experience',\n    AddNewbuttonText: 'Add New Experience',\n  },\n};\n\nexport const homeChamberUtils = {\n  getHomeChamberElements: () => homeChambersElements,\n  getHomeChamberElementByType: (type: HomeChambersEnum) =>\n    homeChambersElements[type as HomeChambersEnum],\n};\n","import styled from 'styled-components';\nimport { sizes } from '@/constants/devices';\nimport { TSpan } from '@/components/Typography';\nimport { noScrollBar } from '@/common/globalStyles';\n\nexport const ImageWrapper = styled.div`\n  margin: 0 auto;\n`;\n\nexport const FormElements = styled.div<{\n  isAddedOption?: boolean;\n}>`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  ${({ isAddedOption }) =>\n    !isAddedOption && 'height: 553px; justify-content: center;'}\n  ${noScrollBar}\n`;\n\nexport const StyledHeaderWrapper = styled.div`\n  width: 100%;\n  text-align: center;\n  div {\n    margin: auto;\n  }\n  @media (max-width: ${sizes.MOBILE_L}) {\n    div {\n      margin: 0;\n    }\n  }\n`;\n\nexport const StyledForm = styled.form<{\n  isAddedOption?: boolean;\n}>`\n  width: 100%;\n  overflow: auto;\n  label {\n    width: fit-content;\n  }\n\n  ${({ isAddedOption }) =>\n    isAddedOption === false && ' justify-content: center; align-items: center;'}\n`;\n\nexport const AddExpButtonWrapper = styled.div`\n  display: inline-flex;\n  width: 100%;\n\n  button {\n    @media (max-width: ${sizes.TABLET_L}) {\n      width: 100%;\n      button {\n        z-index: 1001;\n      }\n    }\n  }\n  justify-content: center;\n`;\n\nexport const StyledTitle = styled(TSpan)`\n  margin-left: auto;\n  margin-right: auto;\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    float: left;\n  }\n`;\n","import { memo } from 'react';\nimport { useWindowDimensions } from '@/hooks';\nimport { TSpan } from '@/components/Typography';\nimport { Button } from '@/components/Button';\nimport { sizes } from '@/constants/devices';\nimport { StyledHeaderWrapper, StyledTitle } from './styles';\nimport { type InitilaModeProps } from './types';\n\nconst tabletMinWidth = parseInt(sizes.TABLET, 10) || 768;\n\nexport const InitialMode = memo((props: InitilaModeProps) => {\n  const windowSize = useWindowDimensions();\n  const { width } = windowSize;\n\n  const itemsAdded = props?.arrayOfOption ?? [];\n  const { title, buttonText, handleOpenExperienceModal } = props;\n  return (\n    <StyledHeaderWrapper>\n      {width >= tabletMinWidth && (\n        <TSpan\n          data-testid=\"testTitleHomeNoumProjectWorkExperience\"\n          font=\"heading-xs-bold\"\n          colorToken=\"--text-modal-header-neutral-default\"\n        >\n          {title}\n        </TSpan>\n      )}\n\n      {itemsAdded.length > 0 && (\n        <Button\n          style={{ float: 'right' }}\n          secondary\n          size=\"small\"\n          type=\"button\"\n          onClick={() => {\n            handleOpenExperienceModal();\n          }}\n        >\n          {buttonText}\n        </Button>\n      )}\n\n      {width < tabletMinWidth && (\n        <>\n          <StyledTitle\n            data-testid=\"testTitleHomeNoumProjectWorkExperience\"\n            font=\"heading-xs-bold\"\n            colorToken=\"--text-modal-header-neutral-default\"\n          >\n            {title}\n          </StyledTitle>\n        </>\n      )}\n    </StyledHeaderWrapper>\n  );\n});\n","import { memo, useCallback, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport {\n  useHomeChambers,\n  HomeChambersWrapper,\n  AddReferenceNonModal,\n} from '@/features/homeNoums/components/HomeChambers';\nimport {\n  type SingleArrayOptionProps,\n  HomeChamberOptions,\n} from '@/features/homeNoums/components/HomeChamberOptions';\nimport {\n  useAddElementsHelper,\n  usePublishNoumLayoutHelper,\n  usePublishSpaceHelper,\n  useUpdateElementHelper,\n} from '@/features/noums/hooks/spaceQuery';\n\nimport { Button } from '@/components/Button';\nimport { Spacer } from '@/layout';\nimport { Icon } from '@/components/Icon';\nimport {\n  BodyContentEnum,\n  ElementStatusEnum,\n  ElementTypeEnum,\n} from '@/apollo/generated/types';\nimport { useLaunchDarkly } from '@/hooks';\nimport { useNoumContext } from '@/screens/Chamber/ViewChamber/ChamberProvider';\nimport { SpaceUtils } from '@/utils/space';\nimport { ElementUtils } from '@/utils/element';\nimport { homeChamberUtils } from '@/utils/homeChambersElements';\nimport { TSpan } from '@/components/Typography/Typography';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from '@/components/ExtendedModal';\nimport { ModalSize } from '@/components/ExtendedModal/types';\nimport { type HomeChambersEnum } from '../../Element/types';\nimport { InitialMode } from './InitialMode';\nimport {\n  AddExpButtonWrapper,\n  FormElements,\n  ImageWrapper,\n  StyledForm,\n} from './styles';\nimport { type HomeNoumProjectWorkExperienceProps } from './types';\n\nexport const HomeNoumProjectWorkExperience = memo(\n  (props: HomeNoumProjectWorkExperienceProps) => {\n    const { t } = useTranslation();\n    const {\n      flags: { noumEditor2 },\n    } = useLaunchDarkly();\n    const { space } = useNoumContext();\n    const { addElementsHelper, loading } = useAddElementsHelper();\n\n    const element = SpaceUtils.getElementInSpaceByType(\n      space,\n      props.elementType,\n    );\n    const bodyContentJson = ElementUtils.getBodyContentJson(element);\n    const spaceId = space?._id || '';\n    const [showAll] = useState(true);\n\n    const {\n      dataForAddReference,\n      handleOpenExperienceModal,\n      handleCloseExperienceModal,\n      isAddedOption,\n      arrayOfOption,\n      handleMoveTopOption,\n      handleMoveDownOption,\n      title,\n      handleDeleteOption,\n      defaultData,\n      setDefaultData,\n      showExperienceModal,\n      setArrayOfOptions,\n    } = useHomeChambers({\n      elementType:\n        (element.elementType as HomeChambersEnum) ?? props.elementType,\n      spaceId,\n      elementPosition: element.position ?? props.position,\n      bodyContentJson,\n      elementId: undefined,\n    });\n\n    const homeChambersObject = homeChamberUtils.getHomeChamberElementByType(\n      (element.elementType as HomeChambersEnum) || props.elementType,\n    );\n\n    const [, setSelectedOption] = useState<SingleArrayOptionProps | undefined>(\n      undefined,\n    );\n    const { publishNoumLayoutHelper } = usePublishNoumLayoutHelper();\n    const { updateElementHelper, loading: updateElementLoader } =\n      useUpdateElementHelper();\n\n    const { publishSpaceHelper, loading: publishElementLoader } =\n      usePublishSpaceHelper();\n\n    const handleSelectOption = useCallback(\n      (option: SingleArrayOptionProps) => {\n        setSelectedOption(option);\n        handleOpenExperienceModal();\n      },\n      [setSelectedOption, handleOpenExperienceModal],\n    );\n\n    const handleAddNewElement = useCallback(\n      async (data: Partial<SingleArrayOptionProps>) => {\n        const input = {\n          status: ElementStatusEnum.Published,\n          bodyContentType: BodyContentEnum.Json,\n          bodyContentJson: [data],\n          position: 0,\n          percentCompleted: 100,\n        };\n        const isSuccess = await addElementsHelper(\n          spaceId,\n          {\n            ...input,\n            elementType:\n              (element.elementType as HomeChambersEnum) ?? props.elementType,\n          },\n          noumEditor2,\n        );\n        if (isSuccess) {\n          props.handleSuccess();\n          handleCloseExperienceModal();\n        }\n      },\n      [\n        addElementsHelper,\n        spaceId,\n        element.elementType,\n        props,\n        noumEditor2,\n        handleCloseExperienceModal,\n      ],\n    );\n    const onSubmit = useCallback(\n      async (event) => {\n        event.preventDefault();\n\n        const input = {\n          status: ElementStatusEnum.Published,\n          bodyContentType: BodyContentEnum.Json,\n          bodyContentJson: arrayOfOption,\n          position: element.position ?? props.position,\n          percentCompleted: 100,\n        };\n\n        if (!element._id) {\n          const isSuccess = await addElementsHelper(spaceId, {\n            ...input,\n            elementType:\n              (element.elementType as HomeChambersEnum) ?? props.elementType,\n          });\n          if (noumEditor2) await publishNoumLayoutHelper(spaceId);\n          if (isSuccess) {\n            props.handleSuccess();\n          }\n        } else {\n          const isUpdateSuccess = await updateElementHelper(spaceId, {\n            ...input,\n            elementId: element._id,\n          });\n\n          const isPublishSuccess = await publishSpaceHelper(spaceId, space);\n\n          if (isUpdateSuccess && isPublishSuccess) {\n            props.handleSuccess();\n          }\n        }\n      },\n      [\n        arrayOfOption,\n        element.position,\n        element._id,\n        element.elementType,\n        props,\n        addElementsHelper,\n        spaceId,\n        noumEditor2,\n        publishNoumLayoutHelper,\n        updateElementHelper,\n        publishSpaceHelper,\n        space,\n      ],\n    );\n\n    const handleClose = useCallback(() => {\n      setArrayOfOptions(bodyContentJson || []);\n      props.handleClose(true);\n    }, [props, bodyContentJson, setArrayOfOptions]);\n\n    if (showExperienceModal) {\n      return (\n        <AddReferenceNonModal\n          onClose={handleCloseExperienceModal}\n          handleAddOption={handleAddNewElement}\n          defaultData={defaultData as SingleArrayOptionProps}\n          basicToolbar={\n            props.elementType === ElementTypeEnum.ProjectWorkExperience\n          }\n          {...dataForAddReference}\n        />\n      );\n    }\n\n    return (\n      <Modal\n        testId=\"testHomeNoumProjectWorkExperience\"\n        open={props.isOpen}\n        onClose={handleClose}\n        enableCloseButton={!showExperienceModal}\n        size={ModalSize.XL}\n        disableBackdropClick\n      >\n        <ModalHeader>\n          <InitialMode\n            title={title}\n            loading={loading || updateElementLoader || publishElementLoader}\n            arrayOfOption={arrayOfOption}\n            handleOpenExperienceModal={handleOpenExperienceModal}\n            onSubmit={onSubmit}\n            buttonText={homeChambersObject.AddNewbuttonText || ''}\n          />\n        </ModalHeader>\n        <StyledForm isAddedOption={isAddedOption} onSubmit={onSubmit}>\n          <ModalBody>\n            <FormElements isAddedOption={isAddedOption}>\n              {!isAddedOption ? (\n                <>\n                  <HomeChambersWrapper data-testid=\"homechambers-testid\">\n                    <ImageWrapper>\n                      <Icon\n                        color=\"--icon-card-placeholder-neutral-default\"\n                        name={homeChambersObject.image}\n                        size={96}\n                      />\n                    </ImageWrapper>\n                    <Spacer height={18} />\n                    <TSpan\n                      font=\"body-xl\"\n                      colorToken=\"--text-placeholder-neutral-default\"\n                    >\n                      {homeChambersObject.text}\n                    </TSpan>\n                    <Spacer height={16} />\n                    <AddExpButtonWrapper>\n                      <Button\n                        secondary\n                        size=\"small\"\n                        type=\"button\"\n                        onClick={handleOpenExperienceModal}\n                      >\n                        {homeChambersObject.buttonText}\n                      </Button>\n                    </AddExpButtonWrapper>\n                  </HomeChambersWrapper>\n                </>\n              ) : (\n                <HomeChamberOptions\n                  isEditMode={true}\n                  arrayOfOptions={arrayOfOption}\n                  handleMoveTopOption={handleMoveTopOption}\n                  handleMoveDownOption={handleMoveDownOption}\n                  handleOpenAddExperienceModal={handleOpenExperienceModal}\n                  handleDeleteOption={handleDeleteOption}\n                  handleSelectOption={handleSelectOption}\n                  setDefaultData={setDefaultData}\n                  isOpen={!showAll}\n                />\n              )}\n            </FormElements>\n          </ModalBody>\n          {arrayOfOption?.length > 0 && (\n            <>\n              <ModalFooter>\n                <Button\n                  style={{ float: 'right' }}\n                  type=\"submit\"\n                  primary\n                  size=\"large\"\n                  loading={loading}\n                  secondary={arrayOfOption?.length <= 0}\n                  tertiary={arrayOfOption?.length <= 0}\n                  disabled={arrayOfOption?.length <= 0 || loading}\n                >\n                  {t('noumena.homenoum.save_and_publish')}\n                </Button>\n              </ModalFooter>\n            </>\n          )}\n        </StyledForm>\n      </Modal>\n    );\n  },\n);\n","import { type FC, useMemo, useCallback } from 'react';\nimport { Spinner } from '@/components/Spinner';\nimport {\n  ElementTypeEnum,\n  type Maybe,\n  type SpaceProfileValue,\n  SpaceTypeEnum,\n  UserStatus,\n} from '@/apollo/generated/types';\n\nimport {\n  NoumProgress,\n  type NoumProgressItemProps,\n} from '@/features/noums/components/NoumProgress';\nimport { SpaceUtils } from '@/utils/space';\nimport { useNoumContext } from '@/screens/Chamber/ViewChamber/ChamberProvider';\nimport { Stack } from '@/layout';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useToggle } from '@/hooks';\nimport HomeNoumAboutMe from '../modals/HomeNoumAboutMe';\nimport HomeNoumBusinessBrief from '../modals/HomeNoumBusinessBrief';\nimport HomeNoumProjectWorkExperience from '../modals/HomeNoumProjectWorkExperience';\n\nexport const ChamberCompleteness: FC = () => {\n  const { space, spaceConfig, onRefetchSpaceByConfig, onRefetchSpaceById } =\n    useNoumContext();\n\n  const { masterId: mainSpaceId, loading: loadingMainSpace } = useAuth();\n  const [isOpen, toggle] = useToggle(false);\n  const [isBusinessBriefOpen, businessBriefToggle] = useToggle(false);\n  const [isProjectWorkExperienceOpen, projectWorkExperienceToggle] =\n    useToggle(false);\n  const [isEducationTrainingOpen, educationTrainingToggle] = useToggle(false);\n\n  const prepareProgressBarItems = (\n    tempProgressItems: Maybe<SpaceProfileValue>[] | undefined,\n  ) => {\n    const progressBarItems: NoumProgressItemProps[] = [];\n    if (tempProgressItems) {\n      tempProgressItems.forEach((element) => {\n        if (element && element.id && element.name) {\n          progressBarItems.push({ id: element.id, name: element.name });\n        }\n      });\n    }\n    return progressBarItems;\n  };\n\n  const spaceElements = useMemo(() => SpaceUtils.getElements(space), [space]);\n  const progressItems: NoumProgressItemProps[] = useMemo(() => {\n    if (spaceConfig && spaceConfig?.length > 0 && spaceElements.length > 0) {\n      const tempProgressItems: Maybe<SpaceProfileValue>[] | undefined =\n        SpaceUtils.getProgressBarItems(space, spaceConfig);\n      const items = prepareProgressBarItems(tempProgressItems);\n      return items;\n    }\n    return [];\n  }, [space, spaceConfig, spaceElements]);\n\n  const progressItemClicked = useCallback(\n    (progressItemsID: string) => {\n      switch (progressItemsID) {\n        case ElementTypeEnum.Profile:\n          toggle();\n          break;\n\n        case ElementTypeEnum.BusinessBrief:\n          businessBriefToggle();\n          break;\n\n        case ElementTypeEnum.ProjectWorkExperience:\n          projectWorkExperienceToggle();\n          break;\n\n        case ElementTypeEnum.EducationTraining:\n          educationTrainingToggle();\n          break;\n\n        default:\n          break;\n      }\n    },\n    [\n      toggle,\n      businessBriefToggle,\n      projectWorkExperienceToggle,\n      educationTrainingToggle,\n    ],\n  );\n\n  const handleSuccess = () => {\n    toggle();\n    refetch();\n  };\n\n  const handleBusinessBriefSuccess = () => {\n    businessBriefToggle();\n    refetch();\n  };\n\n  const handleProjectWorkExperienceSuccess = () => {\n    projectWorkExperienceToggle();\n    refetch();\n  };\n\n  const handleEducationTrainingSuccess = () => {\n    educationTrainingToggle();\n    refetch();\n  };\n\n  const refetch = () => {\n    onRefetchSpaceById();\n    onRefetchSpaceByConfig();\n  };\n\n  if (loadingMainSpace && !mainSpaceId) {\n    return (\n      <Stack>\n        <Spinner />\n      </Stack>\n    );\n  }\n\n  if (\n    spaceConfig &&\n    spaceConfig.length &&\n    space &&\n    space?.type === SpaceTypeEnum.Home &&\n    space?.uid?.userStatus === UserStatus.Active\n  ) {\n    return (\n      <>\n        <NoumProgress\n          profileProgressPercentage={space?.percentCompleted || 0}\n          profileProgressItems={progressItems}\n          onItemClicked={progressItemClicked}\n          isTokensAlloted={!!space?.token?.count || false}\n        />\n        <HomeNoumAboutMe\n          isOpen={isOpen}\n          handleClose={toggle}\n          handleSuccess={handleSuccess}\n        />\n        <HomeNoumBusinessBrief\n          isOpen={isBusinessBriefOpen}\n          handleClose={businessBriefToggle}\n          handleSuccess={handleBusinessBriefSuccess}\n          position={1}\n        />\n        <HomeNoumProjectWorkExperience\n          isOpen={isProjectWorkExperienceOpen}\n          handleClose={projectWorkExperienceToggle}\n          handleSuccess={handleProjectWorkExperienceSuccess}\n          elementType={ElementTypeEnum.ProjectWorkExperience}\n          position={2}\n        />\n        <HomeNoumProjectWorkExperience\n          isOpen={isEducationTrainingOpen}\n          handleClose={educationTrainingToggle}\n          handleSuccess={handleEducationTrainingSuccess}\n          elementType={ElementTypeEnum.EducationTraining}\n          position={3}\n        />\n      </>\n    );\n  }\n\n  return null;\n};\n\nexport default ChamberCompleteness;\n"],"names":["useRemoveElementHelper","addToast","useToast","removeElement","loading","useRemoveElementMutation","removeElementHelper","useCallback","spaceId","elementId","isSuccess","variables","update","cache","data","id","editorV2Enabled","status","NoumLayoutStatusFilter","Unpublished","writeQuery","query","GetSpaceByIdDocument","getSpaceById","category","t","error","message","Error","Sentry","tags","section","usePublishSpaceHelper","updateProfile","useUpdateUserProfileMutation","removeCalendar","useRemoveCalendarMutation","publishElementState","usePublishElementStateMutation","updateElementHelper","updateElementLoader","useUpdateElementHelper","changeProjectChamberStatus","isLoading","useChangeProjectChamberStatusMutation","clearCalendar","chamberId","elements","some","el","elementType","ElementTypeEnum","Calendar","unSaved","isDeleted","publishSpaceHelper","space","isNoumEditor","callback","type","SpaceTypeEnum","Home","SpaceUtils","getElements","updateElements","reduce","acc","ele","ElementUtils","isHomeNoumProgressBarType","draft","push","_id","bodyContent","getBodyContent","bodyContentJson","getBodyContentJson","position","getPosition","ElementStatusEnum","Published","bodyContentType","BodyContentEnum","Json","percentCompleted","length","networkElem","find","Usernetwork","body","JSON","parse","socailLinks","Object","keys","map","key","link","makeSocialLink","name","undefined","input","profile","socialLinks","prevStates","Unsaved","Draft","currentState","SpaceStatusEnum","usePublishNoumLayoutHelper","publishNoumLayout","usePublishNoumLayoutMutation","publishNoumLayoutHelper","ID","useHomeNoumAboutMeHelper","refetchUserData","useAuth","handleError","networkError","handleSuccess","profileUpdateLoading","updateProfilePic","picUpdateLoading","useUpdateUserProfilePictureMutation","homeNoumAboutMeHelper","successObj","success","onError","graphQLErrors","err","onCompleted","homeNoumAboutMeProfilePicHelper","profilePictureLink","profilePicSuccess","StyledNoumProgressWrapper","styled","div","sizes","TABLET_L","MOBILE_MAX","StyledNoum","StyledFrame","StyledItem","StyledDiv","StyledButtonDiv","ProgressBarWrapper","ProgressItems","NoumProgressWrapper","profileProgressItems","profileProgressPercentage","onItemClicked","isTokensAlloted","useTranslation","deviceType","useDeviceType","jsx","jsxs","TSpan","completeness","Trans","bold","ProgressBar","item","DeviceTypeEnum","MOBILE","capitalizeFirstLetter","useHomeNoumAboutMeGetLocationHelper","getLocation","locationsLoading","useGetLocationLazyQuery","locationHelper","search","response","SearchSelectAPI","options","onSelect","onClear","showValue","helperText","setTextFieldValue","register","setSuggestedOptions","rest","setSearch","useState","searchFlag","setSearchFlag","searchOptions","setOptions","isIPhone","window","navigator","userAgent","match","isListVisible","setIsListVisible","onInputChange","val","callAPI","clearSelection","filteredOptions","option","generate","label","description","value","fontFamily","useEffect","Dropdown","inputProps","inputRef","TextField","trim","Icon","e","target","ImageWrapper","ProfileImage","StyledForm","form","initialDetails","profilePicture","uid","firstName","lastName","title","bio","location","HomeNoumAboutMe","memo","props","refetchConnectedMembers","useNoumContext","profileImage","setProfileImage","profileImgDeleted","setProfileImgDeleted","userProfileDetails","setUserProfileDetails","updating","homeNoumAboutMeSchema","yup","string","required","min","max","test","TWO_LETTERED_NAME_REGEX","matches","NAME_REGEX","notRequired","reset","trigger","setValue","handleSubmit","formState","errors","isValid","useForm","resolver","yupResolver","mode","reValidateMode","onSubmit","handleChange","currentTarget","handleChangeProfileImage","imageURL","handleClose","width","useWindowDimensions","isDesktop","breakpoints","handleLocationSelect","handleLocationClear","Modal","isOpen","tertiary","ModalSize","XL","ModalHeader","ModalBody","EditableAvatar","OwnerDefaultImage","Spacer","onChange","maxLength","TextArea","ModalFooter","Button","noScrollBar","HomeNoumBusinessBrief","flags","noumEditor2","useLaunchDarkly","addElementsHelper","useAddElementsHelper","element","getElementInSpaceByType","BusinessBrief","initialTextAreaValue","textAreaValue","setTextAreaValue","publishElementLoader","event","preventDefault","isUpdateSuccess","isPublishSuccess","newElementInput","height","RichTextEditor","res","right","top","DEFAULT_PAGE_SIZE","useGetNoumReferences","experienceId","isInfinite","pageSize","fetchMore","refetch","useGetNoumReferencesQuery","limit","fetchPolicy","skip","references","count","totalCount","useMemo","getNoumReferences","infiniteState","fetchMoreReferences","offset","console","log","refetchReferences","cleanList","delay","fn","time","Promise","resolve","setTimeout","ViewMode","forwardRef","currentTitle","rightPadding","isCollapse","setIsCollapse","children","isCollapseDisabled","showFullTitle","showCollapseBtn","fullWidth","ref","handleCollapse","WrapperHead","WrapperCollapse","WrapperTitleView","WrapperTitleLabel","ElementDelete","modalTitle","bodyMessage","b","FilesManager","elementTitle","extraBodyMessage","Message","removeSubWalletMutation","useRemoveSubWalletMutation","handleDelete","prototype","hasOwnProperty","call","Wallet","S","WrapperLoading","WrapperSpinner","Spinner","Fragment","handleDeleteProps","CloseWallet","subwalletClosed","setSubWalletClosed","gqlGetSubWalletBalance","useGetSubWalletBalanceLazyQuery","handleCloseWallet","getSubWalletBalance","amount","setShowNonZeroWalletModal","CloseWalletWrapperModalChildren","NonZeroWalletModal","EditMode","currentIndex","totalIndex","onUpClick","onDownClick","provided","handleOpenExperienceModal","isCustomPreview","isCustomPreviewVisible","handleCPVisibilityChange","isPostCustomPreview","useEditChamberState","isEdit","setIsEdit","isDeleteModal","setIsDeleteModal","isSubWalletDeleteModal","setIsSubWalletDeleteModal","showNonZeroWalletModal","setTitle","profileTitle","setProfileTitle","onConfirm","handleTitleChange","identifyWhichModalToOpen","headerContent","Text","onConfirmEnter","onCancel","onDelete","handleCloseDeleteModal","handleCloseSubWalletModal","handleCloseNonZeroWalletModal","isHomeNoumType","hideDeleteButton","Userposts","Skills","isVisibleAddBtn","PublicationDesignPatterns","EducationTraining","AchievementAward","PersonalInterest","SocialInterest","ProjectWorkExperience","handlePlusClick","stopPropagation","isVisibilityChangeable","Video","QuickQuestions","Image","handleVisibilityChange","HeadContent","WrapperIcons","dragHandleProps","WrapperInline","ContractManager","WrapperTitleNoEdit","WrapperTitle","WrapperHeadActionButtons","WrapperHeadCrossButton","WrapperHeadCheckButton","ChamberAddButton","ChamberVisibilityChangeButton","HeadTag","ToolTipHead","ChamberDeleteButton","ViewModeNoumEditor","TitleContainer","ElementWrapperContext","createContext","expand","ElementWrapper","isEditing","isSpecialCollapsing","lift","isBorder","hideContent","setShowAll","selectedCustomPreviewTab","isHighlight","noumCustomPreivewV2","setIsCollapseMain","titleRef","setTitleRef","childRef","setChildRef","childHeight","setChildHeight","disableCollapse","isConnected","isFollowing","clientHeight","contentCollapse","isBackgroundcontent","isTitleHide","timeout","clearTimeout","contextData","expandConditionally","move","actions","moveDown","moveUp","drop","toggle","useToggle","onChangeCPVisibility","noumEditor2Mode","Wrapper","CustomPreviewTabEnum","Edit","newRef","isImageAndVideoNotEmpty","clientWidth","WrapperChildContainer","CollapseBackground","SeeMoreWrapper","HomeChamberOptionsWrapper","isContianerWidth","isNoumEditor2","SingleOptionWrapper","isOverLap","SingleOptionHeader","isEditMode","TextHeader","ellipsisText","ChamberEditButton","css","IconWrapper","p","disabled","isMobile","xsHidden","ShowMoreWrapper","ShowMoreButton","button","SingleOption","index","fullSize","isOpenByDefault","handleMoveTopOption","handleMoveDownOption","handleOpenAddExperienceModal","handleDeleteOption","handleSelectOption","setDefaultData","singleOptionWrapperRef","useRef","viewRef","setIsOpen","openedAlways","setOpenedAlways","previousBody","setPreviousBody","contentKey","setContentKey","isOverFlow","setIsOverFlow","isOpenModal","handleSetValues","current","handleDeleteItem","headerHandler","prev","RichTextEditorView","`SingleOption-RichTextEditorView-${contentKey}`","HomeChamberOptions","arrayOfOptions","columnWidth","sortedOptions","clone","sort","a","arrayMoveMutable","array","fromIndex","toIndex","startIndex","endIndex","splice","arrayMoveImmutable","newArray","useHomeChambers","elementPosition","setDisableUpdate","disabledUpdateElement","setdisabledUpdateElement","useContext","DisablePublishOrDraftContext","firstRender","showExperienceModal","setShowExperienceModal","showReferenceModal","setShowReferenceModal","defaultData","arrayOfOption","setArrayOfOptions","handleCloseExperienceModal","handleCloseAddReferenceModal","handleOpenAddReferenceModal","arg","dataForAddReference","setIsAddedOption","handleAddOption","loopPosition","foundElement","newOption","newestElement","last","filteredArray","filter","copiedArrayOfOptions","updatedPositionArray","_item","_index","isAddedOption","sectionTitle","HeaderContainerNonModal","isEditReference","gridTemplateColumns","basicToolbar","TABLET","LAPTOP","ExtendedModalHeader","StyledAddReferenceButton","StyledSaveButton","StyledSaveButtonTableMobile","ContentContainer","StyledTabWrapper","EditReferenceDescription","EditReferenceForm","FieldWrapper","ButtonWrapper","flexDirection","ReferenceInnerContainer","Stack","TabContainer","ReferenceImageContainer","RefereneceImageHeader","RefereneceImageDetailHeader","ReferenceImageCloseButton","ReferenceImage","img","StyledRichEditor","ModalDescription","ReferenceDetailContainer","ReferenceContainer","ReferenceDetail","ReferenceClient","ReferenceDescription","IconMainContainer","EditElement","content","handleChangeTitle","handleChangeContent","initialValue","VideoView","toolMetaValue","handleChangeToolMetaValue","updateToolMetaValue","activeEditingTool","mediaUploadPercentage","mediaUploadTempFile","isActiveEditing","percentageSize","meta","handleResize","direction","numericPercentage","Math","floor","style","replace","NoumLayoutToolWrapper","UploadProgress","ElementResizable","VideoPlayerView","videoURL","url","fileType","onLoadedData","bigPlayButton","controls","isSquare","ReferenceMedia","clearMedia","mediaName","mediaSize","mediaType","mediaSrc","getVideoMimeType","getFileExtension","getCapacityLabelFromValue","capacityOptions","getFileDetails","fileUrl","getFileType","fileName","getFileNameFromUrl","fileExt","imageTypesArr","split","videoTypesArr","DeleteChamberBroadcastModal","onClose","handleDiscardReference","S.ModalDescription","textAlign","listOfTabs","image","text","labelSize","NoumReferenceCapacity","Client","addManualReferenceSchema","providerName","capacity","referenceText","askForReferenceSchema","providerEmail","email","UpdateReference","reference","referenceLoading","onSubmitReference","imageUrl","setMediaUploading","media","setMedia","mediaDetail","setMediaDetail","size","control","handleFormSubmit","defaultValues","handleSetMediaDetails","Number","round","toPrecision","handleSetMediaUploading","uploading","enforceLeft","transparentModalCloseButton","defaultBtnForMobile","Controller","field","onBlur","fieldState","padding","UploadMedia","mediaTypes","ReferenceViewItem","approveReference","rejectReference","discardReference","updateReference","formattedCapacity","replaceAll","capitalize","join","showEditModal","setShowEditModal","showDeleteModal","setShowDeleteModal","handleUpdateReference","payload","NoumReferenceStatus","Pending","DeleteReference","elementSchema","AddExperience","propTitle","openReferenceModal","referenceFetching","referenceData","setShowDiscardExperienceModal","activeTab","setActiveTab","internalTitle","setContentMain","loader","setLoader","enableReference","addReferenceOptions","setContent","isNaN","parsedValue","handleSaveChanges","handleOpenReferenceModal","handleSaveNewExperience","handleCloseModal","targetProps","targetRef","BasicChipsTabsForm","toString","Infinite","ViewExperience","isTablet","referencesData","Accepted","handleSelectTab","HomeChambersWrapper","StyledText","StackWrapper","HomeNoumAddContianer","intialReferenceDetails","isManual","file","referenceSchema","when","is","then","EditReference","setSelectedCapacity","referenceDetails","setReferenceDetails","handleInputChange","handleCancel","AddReferenceNonModal","propsTitle","isEmpty","addReferences","setAddReferences","alignSelf","homeChambersElements","buttonText","AddNewbuttonText","homeChamberUtils","getHomeChamberElements","getHomeChamberElementByType","FormElements","StyledHeaderWrapper","MOBILE_L","AddExpButtonWrapper","StyledTitle","tabletMinWidth","parseInt","InitialMode","windowSize","itemsAdded","float","HomeNoumProjectWorkExperience","showAll","homeChambersObject","setSelectedOption","handleAddNewElement","ChamberCompleteness","spaceConfig","onRefetchSpaceByConfig","onRefetchSpaceById","masterId","mainSpaceId","loadingMainSpace","isBusinessBriefOpen","businessBriefToggle","isProjectWorkExperienceOpen","projectWorkExperienceToggle","isEducationTrainingOpen","educationTrainingToggle","prepareProgressBarItems","tempProgressItems","progressBarItems","forEach","spaceElements","progressItems","getProgressBarItems","items","progressItemClicked","progressItemsID","Profile","handleBusinessBriefSuccess","handleProjectWorkExperienceSuccess","handleEducationTrainingSuccess","userStatus","UserStatus","Active","NoumProgress","token"],"mappings":"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"}