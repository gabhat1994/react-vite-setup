{"version":3,"file":"Access-1be4e985.js","sources":["../../src/screens/Access/useAccesshelper.tsx","../../src/screens/Access/styles.ts","../../src/screens/Access/index.tsx"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { t } from 'i18next';\nimport { useNavigate } from 'react-router';\nimport ROUTES from '@/constants/routes';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useRecaptcha, useToast } from '@/hooks';\nimport { IdentityServices } from '@/services/rest/identity';\nimport errors from '@/constants/errors';\nimport { setLocalStorage } from '@/utils/localStorage';\nimport accessLocalStorage from '@/constants/accessLocalStorage';\nimport { type LoginData, type OTPVerifyData } from '../Login/types';\n\nexport const useAccessHelper = () => {\n  const { addToast } = useToast();\n\n  const { signIn, user, initialNoumId, loading: authLoading } = useAuth();\n\n  const [loginData, setLoginData] = useState<LoginData>();\n  const [otp, setOtp] = useState<string>();\n  const [otpSent, setOtpSent] = useState(false);\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [errorMsg, setErrorMsg] = useState<string>('');\n  const [remainingRequests, setRemainingCount] = useState<number>(3);\n  const [isResendLoading, setIsResendLoading] = useState<boolean>(false);\n  const [timeLeftForNextResend, setTimeLeftForNextResend] = useState<number>(0);\n\n  const params = new URLSearchParams(window.location.search);\n  const token = params.get('token');\n  const redirectUri = params.get('redirectUrl');\n\n  const { recaptchaToken } = useRecaptcha();\n  const navigate = useNavigate();\n  const [loader, setLoader] = useState(true);\n\n  const onLogin = useCallback(async () => {\n    if (token) {\n      const resp = await IdentityServices.ottValidate(token);\n      if (!resp.errorMessage && resp.isValid) {\n        setLoader(false);\n        setLoginData({ type: 'email', value: resp.email });\n      } else {\n        navigate(ROUTES.ACCESS_DENIED);\n      }\n    }\n  }, [navigate, token]);\n\n  useEffect(() => {\n    if (!token) {\n      return;\n    }\n    if (!user?._id) {\n      onLogin();\n    } else {\n      navigate(redirectUri ? `../${redirectUri}` : '../');\n    }\n  }, [onLogin, token, user?._id, navigate, redirectUri]);\n\n  useEffect(() => {\n    const uri = redirectUri || '';\n    setLocalStorage(accessLocalStorage.GUEST_REDIRECT_TO_URI, uri);\n  }, [redirectUri]);\n\n  useEffect(() => {\n    if (isSignedIn && !authLoading && user && !initialNoumId) {\n      navigate(ROUTES.GUEST_HOME);\n    }\n  }, [user, initialNoumId, navigate, authLoading, isSignedIn, redirectUri]);\n\n  useEffect(() => {\n    const onOttValidate = async () => {\n      if (!otpSent && recaptchaToken && loginData?.value) {\n        const resp = await IdentityServices.signInEmail(\n          loginData?.value,\n          recaptchaToken,\n        );\n        if (resp) {\n          setOtpSent(true);\n        }\n      }\n    };\n    if (loginData?.value && recaptchaToken) {\n      onOttValidate();\n    }\n  }, [loginData?.value, otpSent, recaptchaToken]);\n\n  const disabledSubmit = useCallback(\n    (\n      _otp: string | undefined,\n      _loginData?: LoginData | undefined,\n      _isResendLoading?: boolean | undefined,\n    ) =>\n      !_loginData ||\n      !_loginData.value ||\n      !_otp ||\n      _otp.length !== 4 ||\n      _isResendLoading,\n    [],\n  );\n\n  const beforeSubmit = useCallback(() => {\n    setErrorMsg('');\n    setLoading(true);\n  }, []);\n\n  const onVerifyFailed = useCallback(\n    (msg: string) => {\n      setErrorMsg(msg);\n      addToast(\n        'error',\n        'none',\n        msg === errors.BLOCKED_IP\n          ? msg\n          : `${t('noumena.toast_error.text')}: ${msg}`,\n      );\n      setLoading(false);\n    },\n    [addToast],\n  );\n\n  const onVerifySuccess = useCallback(\n    (resp) => {\n      signIn({\n        accessToken: resp.token.accessToken,\n        refreshToken: resp.token.refreshToken,\n        noumId: resp.noumId,\n      });\n      setIsSignedIn(true);\n    },\n    [signIn],\n  );\n\n  const onVerify = useCallback(async () => {\n    if (!otp || !loginData || disabledSubmit(otp, loginData, isResendLoading))\n      return;\n    beforeSubmit();\n\n    const data: OTPVerifyData = { ...loginData, otp };\n\n    const verifyFunc = IdentityServices.signInEmailVerification;\n\n    const resp = await verifyFunc(data.value, data.otp, token ?? '');\n\n    if (resp?.errorMessage) {\n      onVerifyFailed(\n        resp.errorStatus === 102 ? errors.BLOCKED_IP : resp.errorMessage,\n      );\n      return;\n    }\n    onVerifySuccess(resp);\n  }, [\n    beforeSubmit,\n    disabledSubmit,\n    isResendLoading,\n    loginData,\n    onVerifyFailed,\n    onVerifySuccess,\n    otp,\n    token,\n  ]);\n\n  const onEnter = () => {\n    if (otp?.trim().length === 4 && otp.indexOf(' ') < 0) {\n      onVerify();\n    }\n  };\n\n  useEffect(() => {\n    if (errorMsg !== '') {\n      setOtp('');\n    }\n  }, [errorMsg]);\n\n  const onLoginSuccess = useCallback(\n    (\n      msg: string,\n      nextRequestAfterInSecond: number,\n      remainingRequest: number,\n      data: LoginData,\n      isResend?: boolean,\n    ) => {\n      addToast(\n        'success',\n        'none',\n        t('noumena.verification_code_sent.text') || msg,\n      );\n      if (!remainingRequest) {\n        setTimeLeftForNextResend(0);\n        setRemainingCount(0);\n      } else {\n        setTimeLeftForNextResend(nextRequestAfterInSecond);\n        setRemainingCount(remainingRequest);\n      }\n      if (isResend) {\n        setIsResendLoading(false);\n      } else {\n        setLoading(false);\n      }\n      setLoginData(data);\n    },\n    [addToast],\n  );\n\n  const onBeforeLogin = useCallback((isResend = false) => {\n    if (isResend) {\n      setIsResendLoading(true);\n    } else {\n      setLoading(true);\n    }\n  }, []);\n\n  const onLoginFailed = useCallback(\n    (type: 'phone' | 'email', errStatus: number, errMessage: string) => {\n      let errMsg = errMessage;\n      if (errStatus === 404) {\n        errMsg = t('noumena.email_login_form.email_address.not_exist_error');\n      }\n\n      addToast('error', 'none', `${t('noumena.toast_error.text')}: ${errMsg}`);\n      setLoading(false);\n    },\n    [addToast],\n  );\n\n  return {\n    otp,\n    setOtp,\n    loading,\n    isResendLoading,\n    loginData,\n    remainingRequests,\n    timeLeftForNextResend,\n    onEnter,\n    onLoginSuccess,\n    onBeforeLogin,\n    onLoginFailed,\n    disabledSubmit,\n    onVerify,\n    loader,\n    ottEmail: loginData?.value,\n  };\n};\n","import styled from 'styled-components';\nimport { sizes } from '@/constants/devices';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: var(--bg-body-neutral-alt-highlighted);\n  height: 100vh;\n`;\n\nexport const Header = styled.header`\n  display: flex;\n  justify-content: center;\n  height: 72px;\n  width: 100%;\n  align-items: center;\n  padding-left: 16px;\n  background-color: var(--bg-top-nav-neutral-alt-default);\n  margin-bottom: 72px;\n  @media (min-width: ${sizes.TABLET_L}) {\n    padding-left: 40px;\n  }\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    margin-bottom: 0px;\n  }\n`;\n\nexport const LogoContainer = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: 1408px;\n`;\n\nexport const Main = styled.main`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 402px;\n  min-height: 326px;\n  border-radius: 16px;\n  padding: 24px;\n  text-align: center;\n  background-color: var(--bg-card-neutral-alt-default);\n  header {\n    width: 100%;\n    text-align: center;\n    padding: 3px 0px 24px 0px;\n  }\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    width: 90vw;\n    height: 100%;\n  }\n`;\nexport const ContainerOTP = styled.div`\n  padding: 16px 0px 32px 0px;\n`;\nexport const TextHead = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: inherit;\n  padding-top: 85px;\n`;\n\nexport const StyledSpacer = styled.div`\n  padding-top: 16px;\n`;\n","import { t } from 'i18next';\nimport { TSpan } from '@/components/Typography';\nimport { OtpInput } from '@/components/Otp/OtpInput';\nimport { Button } from '@/components/Button';\nimport { Spinner } from '@/components/Spinner';\nimport Logo from '@/components/Logo';\nimport { useAccessHelper } from './useAccesshelper';\nimport OTPResend from '../Login/OTPResend';\nimport {\n  Container,\n  ContainerOTP,\n  Header,\n  LogoContainer,\n  Main,\n  StyledSpacer,\n  TextHead,\n} from './styles';\n\nconst Access = () => {\n  const {\n    otp,\n    setOtp,\n    loading,\n    isResendLoading,\n    loginData,\n    remainingRequests,\n    timeLeftForNextResend,\n    onEnter,\n    onLoginSuccess,\n    onBeforeLogin,\n    onLoginFailed,\n    disabledSubmit,\n    onVerify,\n    loader,\n    ottEmail,\n  } = useAccessHelper();\n  return (\n    <Container data-testid=\"t-nm-login\">\n      {loader ? (\n        <>\n          <Spinner />\n          <TextHead>\n            {' '}\n            <TSpan\n              font=\"heading-xs-bold\"\n              colorToken=\"--text-card-neutral-highlighted\"\n            >\n              {t('noumena.non_member.login_loader_text')}\n            </TSpan>\n          </TextHead>\n        </>\n      ) : (\n        <>\n          <Header>\n            <LogoContainer>\n              <Logo />\n            </LogoContainer>\n          </Header>\n          <Main>\n            <div>\n              <header>\n                <TSpan\n                  font=\"heading-xs-bold\"\n                  colorToken=\"--text-modal-header-neutral-default\"\n                >\n                  {t('noumena.non_member.verify_your_identity')}\n                </TSpan>\n              </header>\n              <TSpan font=\"body-l\" colorToken=\"--text-modal-neutral-default\">\n                {t('noumena.non_member.enter_code')}\n              </TSpan>\n              <div>\n                <TSpan\n                  font=\"body-l\"\n                  colorToken=\"--text-modal-neutral-highlighted\"\n                >\n                  {ottEmail}\n                </TSpan>\n              </div>\n              <ContainerOTP>\n                <OtpInput\n                  value={otp}\n                  onChange={(val) => setOtp(val)}\n                  isDisabled={isResendLoading}\n                  onEnter={onEnter}\n                />\n              </ContainerOTP>\n              <OTPResend\n                minHeight=\"0px\"\n                loginData={loginData}\n                remainingRequests={remainingRequests}\n                timeLeftForNextResend={timeLeftForNextResend}\n                beforeSubmit={onBeforeLogin}\n                onLoginFailed={onLoginFailed}\n                onLoginSuccess={onLoginSuccess}\n                isResendLoading={isResendLoading}\n              />\n            </div>\n            <StyledSpacer />\n            <Button\n              data-testid=\"otp-submit-button\"\n              primary\n              size=\"full\"\n              disabled={disabledSubmit(otp?.trim(), loginData) || loading}\n              loading={loading}\n              onClick={onVerify}\n            >\n              {t('noumena.continue')}\n            </Button>\n          </Main>\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default Access;\n"],"names":["useAccessHelper","addToast","useToast","signIn","user","initialNoumId","loading","authLoading","useAuth","loginData","setLoginData","useState","otp","setOtp","otpSent","setOtpSent","isSignedIn","setIsSignedIn","setLoading","errorMsg","setErrorMsg","remainingRequests","setRemainingCount","isResendLoading","setIsResendLoading","timeLeftForNextResend","setTimeLeftForNextResend","params","URLSearchParams","window","location","search","token","get","redirectUri","recaptchaToken","useRecaptcha","navigate","useNavigate","loader","setLoader","onLogin","useCallback","resp","IdentityServices","ottValidate","errorMessage","isValid","type","value","email","ROUTES","ACCESS_DENIED","useEffect","_id","uri","accessLocalStorage","GUEST_REDIRECT_TO_URI","GUEST_HOME","onOttValidate","signInEmail","disabledSubmit","_otp","_loginData","_isResendLoading","length","beforeSubmit","onVerifyFailed","msg","errors","BLOCKED_IP","t","onVerifySuccess","accessToken","refreshToken","noumId","onVerify","data","verifyFunc","signInEmailVerification","errorStatus","onEnter","trim","indexOf","onLoginSuccess","nextRequestAfterInSecond","remainingRequest","isResend","onBeforeLogin","onLoginFailed","errStatus","errMessage","errMsg","ottEmail","Container","styled","div","Header","header","sizes","TABLET_L","MOBILE_MAX","LogoContainer","Main","main","ContainerOTP","TextHead","StyledSpacer","Access","jsxs","Fragment","jsx","Spinner","TSpan","Logo","OtpInput","val","OTPResend","Button","Access$1"],"mappings":"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"}