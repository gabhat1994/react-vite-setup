{"version":3,"file":"index-c3d1598e.js","sources":["../../src/constants/resendOTP.ts","../../src/screens/Login/OTPResend/index.tsx"],"sourcesContent":["export const resendOtpMsgs: { [name: number | string]: string } = {\n  0: 'noumena.resend_otp_please_wait_24h.text',\n  1: 'noumena.resend_otp_last_resend_code.text',\n  2: 'noumena.resend_otp_limit_resend_code.text',\n  phone: 'noumena.resend_otp_correct_phone_number.text',\n  email: 'noumena.resend_otp_correct_email.text',\n};\n\nexport const LOCAL_STORAGE_KEY = 'LC';\nexport const OTP_KEY = 'OTP_KEY';\n","import { type FC, useCallback, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { IdentityServices } from '@/services/rest/identity';\nimport { TSpan } from '@/components/Typography';\nimport { Button } from '@/components/Button';\nimport Timer from '@/components/Timer/Timer';\nimport { Spinner } from '@/components/Spinner';\nimport { resendOtpMsgs } from '@/constants/resendOTP';\nimport { useRecaptcha } from '@/hooks';\nimport { type OTPResendProps } from './types';\nimport * as Styles from './styles';\n\nconst OTPResend: FC<OTPResendProps> = ({\n  loginData,\n  minHeight,\n  isResendLoading,\n  remainingRequests,\n  beforeSubmit,\n  onLoginFailed,\n  onLoginSuccess,\n  timeLeftForNextResend = 0,\n}) => {\n  const { t } = useTranslation();\n  const { recaptchaToken, returnNewReCaptcha } = useRecaptcha();\n  const [timerElapsed, setIsTimedOut] = useState<boolean>(false);\n\n  const onLogin = useCallback(async () => {\n    if (!loginData) return;\n    setIsTimedOut(false);\n\n    if (!recaptchaToken) return;\n    beforeSubmit(true);\n\n    const token = await returnNewReCaptcha();\n    const signInFunc =\n      loginData.type === 'phone'\n        ? IdentityServices.signInPhone\n        : IdentityServices.signInEmail;\n    const resp = await signInFunc(loginData.value, token);\n\n    if (resp?.errorMessage) {\n      onLoginFailed(loginData.type, resp.errorStatus, resp.errorMessage);\n      return;\n    }\n\n    onLoginSuccess(\n      resp.message,\n      resp.nextRequestAfterInSecond,\n      resp.remainingRequest,\n      loginData,\n      true,\n    );\n  }, [\n    loginData,\n    recaptchaToken,\n    beforeSubmit,\n    returnNewReCaptcha,\n    onLoginSuccess,\n    onLoginFailed,\n  ]);\n\n  const timedOut = () => {\n    setIsTimedOut(true);\n  };\n\n  const resendButton = () => (\n    <Styles.StyledButton>\n      <Button\n        secondary\n        textOnly\n        onClick={onLogin}\n        data-testid=\"resend-verify-button\"\n      >\n        <TSpan\n          colorToken=\"--text-button-brand-secondary-default\"\n          font=\"button-m\"\n        >\n          {t('noumena.resend_verification_code.text')}\n        </TSpan>\n      </Button>\n    </Styles.StyledButton>\n  );\n\n  const loadMessage = (count: number) => {\n    let message = '';\n    if (count === 2) {\n      message = resendOtpMsgs[loginData?.type ?? 0] ?? <></>;\n    }\n    return (\n      <div>\n        <TSpan\n          font=\"body-m\"\n          $fill\n          colorToken=\"--text-body-neutral-default\"\n          data-testid=\"resend-caution-message\"\n        >\n          {t(message)} {t(resendOtpMsgs[count])}\n        </TSpan>\n      </div>\n    );\n  };\n\n  const loadTimer = (timeLeft: number) => (\n    <>\n      <Styles.StyledResendSpan data-testid=\"code-sent-span\">\n        <TSpan font=\"body-m\" $fill colorToken=\"--text-body-neutral-default\">\n          {t('noumena.resend_otp_code_sent.text')}{' '}\n        </TSpan>\n      </Styles.StyledResendSpan>\n      <Styles.StyledResendWaitSpan\n        duration={timeLeft}\n        data-testid=\"resend-wait-span\"\n      >\n        <TSpan font=\"body-m\" $fill colorToken=\"--text-body-neutral-default\">\n          {t('noumena.resend_otp_please_wait.text')}{' '}\n          {<Timer initialSeconds={timeLeft} timedOut={timedOut} />}{' '}\n          {t('noumena.resend_otp_before_request.text')}\n        </TSpan>\n      </Styles.StyledResendWaitSpan>\n    </>\n  );\n\n  const renderResendOTP = () => {\n    if (remainingRequests !== 0 && !timerElapsed) {\n      return <>{loadTimer(timeLeftForNextResend)}</>;\n    }\n    if (timerElapsed || remainingRequests === 0) {\n      return (\n        <>\n          {loadMessage(remainingRequests)}\n          <Styles.StyledSpacer />\n          {remainingRequests > 0 ? resendButton() : <></>}\n        </>\n      );\n    }\n    return <>{resendButton()}</>;\n  };\n\n  return (\n    <Styles.StyledResendOTPWrapper minHeight={minHeight}>\n      {isResendLoading ? (\n        <Styles.StyledSpinner>\n          <Spinner />\n        </Styles.StyledSpinner>\n      ) : (\n        renderResendOTP()\n      )}\n    </Styles.StyledResendOTPWrapper>\n  );\n};\nexport default OTPResend;\n"],"names":["resendOtpMsgs","phone","email","OTPResend","loginData","minHeight","isResendLoading","remainingRequests","beforeSubmit","onLoginFailed","onLoginSuccess","timeLeftForNextResend","t","useTranslation","recaptchaToken","returnNewReCaptcha","useRecaptcha","timerElapsed","setIsTimedOut","useState","onLogin","useCallback","token","resp","type","IdentityServices","signInPhone","signInEmail","value","errorMessage","errorStatus","message","nextRequestAfterInSecond","remainingRequest","timedOut","resendButton","jsx","Styles.StyledButton","Button","TSpan","loadMessage","count","Fragment","loadTimer","timeLeft","jsxs","Styles.StyledResendSpan","Styles.StyledResendWaitSpan","Timer","Styles.StyledResendOTPWrapper","Styles.StyledSpinner","Spinner","renderResendOTP","Styles.StyledSpacer"],"mappings":"8NAAO,MAAMA,EAAqD,CAChE,EAAG,0CACH,EAAG,2CACH,EAAG,4CACHC,MAAO,+CACPC,MAAO,uCACT,ECOMC,EAAgCA,CAAC,CACrCC,UAAAA,EACAC,UAAAA,EACAC,gBAAAA,EACAC,kBAAAA,EACAC,aAAAA,EACAC,cAAAA,EACAC,eAAAA,EACAC,sBAAAA,EAAwB,CAC1B,IAAM,CACE,KAAA,CAAEC,EAAAA,GAAMC,EAAgB,EACxB,CAAEC,eAAAA,EAAgBC,mBAAAA,GAAuBC,EAAc,EACvD,CAACC,EAAcC,CAAa,EAAIC,WAAkB,EAAK,EAEvDC,EAAUC,EAAAA,YAAY,SAAY,CAItC,GAHI,CAACjB,IACLc,EAAc,EAAK,EAEf,CAACJ,GAAgB,OACrBN,EAAa,EAAI,EAEXc,MAAAA,EAAQ,MAAMP,IAKdQ,EAAO,MAHXnB,EAAUoB,OAAS,QACfC,EAAiBC,YACjBD,EAAiBE,aACOvB,EAAUwB,MAAON,CAAK,EAEpD,GAAIC,GAAAA,MAAAA,EAAMM,aAAc,CACtBpB,EAAcL,EAAUoB,KAAMD,EAAKO,YAAaP,EAAKM,YAAY,EACjE,OAGFnB,EACEa,EAAKQ,QACLR,EAAKS,yBACLT,EAAKU,iBACL7B,EACA,EAAI,CAAA,EAEL,CACDA,EACAU,EACAN,EACAO,EACAL,EACAD,CAAa,CACd,EAEKyB,EAAWA,IAAM,CACrBhB,EAAc,EAAI,CAAA,EAGdiB,EAAeA,IAClBC,EAAAC,EAAA,CACC,SAACD,EAAAE,EAAA,CACC,UAAS,GACT,SAAQ,GACR,QAASlB,EACT,cAAY,uBAAsB,YAAA,gCAElC,SAAAgB,EAACG,EACC,CAAA,WAAW,wCACX,KAAK,WAAU,YAAA,+BAEd3B,SAAAA,EAAE,uCAAuC,CAAA,CAC5C,EACF,CACF,CAAA,EAGI4B,EAAeC,GAAkB,CACrC,IAAIV,EAAU,GACd,OAAIU,IAAU,IACZV,EAAU/B,GAAcI,GAAAA,YAAAA,EAAWoB,OAAQ,CAAC,GAAOY,EAAAM,EAAA,CAAA,CAAA,GAGlDN,EAAA,MAAA,CAAG,YAAA,wBACF,WAACG,EACC,CAAA,KAAK,SACL,MAAK,GACL,WAAW,8BACX,cAAY,yBAAwB,YAAA,8BAEnC3B,SAAAA,CAAAA,EAAEmB,CAAO,EAAE,IAAEnB,EAAEZ,EAAcyC,CAAK,CAAC,CAAA,CACtC,CAAA,CACF,CAAA,CAAA,EAIEE,EAAaC,GAEfC,EAAAH,EAAA,CAAA,SAAA,CAAAN,EAACU,EAAA,CAAwB,cAAY,iBACnC,SAACD,EAAAN,EAAA,CAAM,KAAK,SAAS,MAAK,GAAC,WAAW,8BAA6B,YAAA,4BAChE3B,SAAAA,CAAAA,EAAE,mCAAmC,EAAG,GAAA,CAAA,CAC3C,CACF,CAAA,IACCmC,EAAA,CACC,SAAUH,EACV,cAAY,mBAEZ,SAACC,EAAAN,EAAA,CAAM,KAAK,SAAS,MAAK,GAAC,WAAW,8BAA6B,YAAA,4BAChE3B,SAAAA,CAAAA,EAAE,qCAAqC,EAAG,MACzCoC,EAAM,CAAA,eAAgBJ,EAAU,SAAAV,EAAsB,YAAA,4BAAA,EAAE,IACzDtB,EAAE,wCAAwC,CAAA,CAAA,CAC7C,CACF,CAAA,CACF,CAAA,CAAA,EAmBF,SACGqC,EAAA,CAA8B,UAAA5C,EAC5BC,WACE8B,EAAAc,EAAA,CACC,WAACC,EAAO,CAAA,YAAA,oBAAA,CACV,CAAA,GArBkBC,IAClB7C,IAAsB,GAAK,CAACU,EACvBmB,EAAAM,EAAA,CAAGC,SAAUhC,EAAAA,CAAqB,CAAE,CAAA,EAEzCM,GAAgBV,IAAsB,EAGnCiC,EAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAYjC,CAAiB,EAC9B6B,EAACiB,EAAA,EAAmB,EACnB9C,EAAoB,EAAI4B,EAAY,EAAOC,EAAAM,EAAA,CAAA,CAAA,CAC9C,CAAA,CAAA,EAGGN,EAAAM,EAAA,CAAGP,YAAe,CAAA,GAYzB,CAAA,CAAA,CAEJ"}