{"version":3,"file":"UnauthenticatedAccess-4be25a2c.js","sources":["../../src/screens/UnauthenticatedAccess/index.tsx"],"sourcesContent":["import { useCallback, useEffect, useRef } from 'react';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useToast } from '@/hooks';\nimport { Spinner } from '@/components/Spinner';\nimport { IdentityServices } from '@/services/rest/identity';\nimport { isResponseError } from '@/services/rest/utils';\nimport jwtDecode from 'jwt-decode';\nimport { type AccessTokenPayload } from '@/apollo/client.helpers';\nimport { type EmailSubscriptionType } from '../CoreSettings/NotificationsSettings/types';\n\nconst UnauthenticatedAccess = () => {\n  const params = new URLSearchParams(window.location.search);\n  const token = params.get('token');\n  const invoiceId = params.get('invoiceId');\n  const contractId = params.get('contractId');\n  const sowId = params.get('sowId');\n  const unsubscribeFrom = params.get(\n    'unsubscribeFrom',\n  ) as EmailSubscriptionType;\n  const ott = params.get('ott');\n\n  const { signIn, user, setAuthData } = useAuth();\n  const { addErrorToast } = useToast();\n\n  const isInitialized = useRef(false);\n\n  const handleOTTAuthentication = useCallback(async () => {\n    if (!ott) return;\n    const response = await IdentityServices.verifyWithOneTimeAuth(ott);\n\n    if (isResponseError(response)) {\n      addErrorToast('One-Time token authentication failed');\n    } else {\n      signIn({\n        accessToken: response.accessToken,\n        refreshToken: response.refreshToken,\n      });\n    }\n  }, [addErrorToast, ott, signIn]);\n\n  useEffect(() => {\n    if (isInitialized.current) return;\n\n    const decoded = jwtDecode<AccessTokenPayload>(token ?? '');\n\n    if (user?._id === decoded._id) {\n      setAuthData({\n        invoiceId: invoiceId || undefined,\n        contractId: contractId || undefined,\n        sowId: sowId || undefined,\n        unsubscribeFrom,\n      });\n    } else if (token) {\n      signIn({\n        accessToken: token,\n        invoiceId: invoiceId || undefined,\n        contractId: contractId || undefined,\n        sowId: sowId || undefined,\n        unsubscribeFrom,\n      });\n    } else if (ott) {\n      handleOTTAuthentication();\n    }\n    isInitialized.current = true;\n  }, [\n    contractId,\n    handleOTTAuthentication,\n    invoiceId,\n    ott,\n    setAuthData,\n    signIn,\n    sowId,\n    token,\n    unsubscribeFrom,\n    user?._id,\n  ]);\n\n  return <Spinner />;\n};\n\nexport default UnauthenticatedAccess;\n"],"names":["UnauthenticatedAccess","params","URLSearchParams","window","location","search","token","get","invoiceId","contractId","sowId","unsubscribeFrom","ott","signIn","user","setAuthData","useAuth","addErrorToast","useToast","isInitialized","useRef","handleOTTAuthentication","useCallback","response","IdentityServices","verifyWithOneTimeAuth","isResponseError","accessToken","refreshToken","useEffect","current","decoded","jwtDecode","_id","undefined","jsx","Spinner","UnauthenticatedAccess$1"],"mappings":"4HAUA,MAAMA,EAAwBA,IAAM,CAClC,MAAMC,EAAS,IAAIC,gBAAgBC,OAAOC,SAASC,MAAM,EACnDC,EAAQL,EAAOM,IAAI,OAAO,EAC1BC,EAAYP,EAAOM,IAAI,WAAW,EAClCE,EAAaR,EAAOM,IAAI,YAAY,EACpCG,EAAQT,EAAOM,IAAI,OAAO,EAC1BI,EAAkBV,EAAOM,IAC7B,iBAAiB,EAEbK,EAAMX,EAAOM,IAAI,KAAK,EAEtB,CAAEM,OAAAA,EAAQC,KAAAA,EAAMC,YAAAA,GAAgBC,EAAS,EACzC,CAAEC,cAAAA,GAAkBC,EAAU,EAE9BC,EAAgBC,SAAO,EAAK,EAE5BC,EAA0BC,EAAAA,YAAY,SAAY,CACtD,GAAI,CAACV,EAAK,OACV,MAAMW,EAAW,MAAMC,EAAiBC,sBAAsBb,CAAG,EAE7Dc,EAAgBH,CAAQ,EAC1BN,EAAc,sCAAsC,EAE7CJ,EAAA,CACLc,YAAaJ,EAASI,YACtBC,aAAcL,EAASK,YAAAA,CACxB,CAEF,EAAA,CAACX,EAAeL,EAAKC,CAAM,CAAC,EAE/BgB,OAAAA,EAAAA,UAAU,IAAM,CACd,GAAIV,EAAcW,QAAS,OAErBC,MAAAA,EAAUC,EAA8B1B,GAAS,EAAE,GAErDQ,GAAAA,YAAAA,EAAMmB,OAAQF,EAAQE,IACZlB,EAAA,CACVP,UAAWA,GAAa0B,OACxBzB,WAAYA,GAAcyB,OAC1BxB,MAAOA,GAASwB,OAChBvB,gBAAAA,CAAAA,CACD,EACQL,EACFO,EAAA,CACLc,YAAarB,EACbE,UAAWA,GAAa0B,OACxBzB,WAAYA,GAAcyB,OAC1BxB,MAAOA,GAASwB,OAChBvB,gBAAAA,CAAAA,CACD,EACQC,GACgBS,IAE3BF,EAAcW,QAAU,EACvB,EAAA,CACDrB,EACAY,EACAb,EACAI,EACAG,EACAF,EACAH,EACAJ,EACAK,EACAG,GAAAA,YAAAA,EAAMmB,GAAG,CACV,EAEME,EAACC,EAAU,CAAA,YAAA,+BAAA,CAAA,CACpB,EAEAC,EAAerC"}