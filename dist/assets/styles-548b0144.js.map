{"version":3,"file":"styles-548b0144.js","sources":["../../src/features/contracts/components/AgreementCheckbox/AgreementCheckbox.tsx","../../src/features/contracts/components/EntityDisplay/EntityDisplay.tsx","../../src/features/contracts/components/LabelValue/styles.ts","../../src/features/contracts/components/LabelValue/LabelValue.tsx","../../src/features/contracts/utils/documentTimeline.ts","../../src/features/contracts/components/DocumentTimeline/useDocumentTimeline.ts","../../src/features/contracts/components/DocumentTimeline/DocumentTimeline.tsx","../../src/features/contracts/hooks/documentPreviewSignatureForm.ts","../../src/features/contracts/hooks/contractPreviewForm.ts","../../src/features/contracts/components/DeclineDocumentConfirmationModal/styles.ts"],"sourcesContent":["import { type ReactNode } from 'react';\nimport { Controller, type FieldValues, type Path, useFormContext } from 'react-hook-form';\nimport { TickCheckbox } from '@/components/Checkbox';\nimport { TSpan } from '@/components/Typography';\nimport { Stack } from '@/layout';\n\ninterface AgreementCheckboxProps<FormValues> {\n  label: ReactNode;\n  name: Path<FormValues>;\n  disabled?: boolean;\n}\nexport function AgreementCheckbox<FormValues extends FieldValues>({\n  label,\n  name,\n  disabled,\n}: AgreementCheckboxProps<FormValues>) {\n  const { control } = useFormContext<FormValues>();\n\n  return (\n    <Stack gap={8}>\n      <Controller\n        name={name}\n        control={control}\n        render={({ field: { value, onChange }, fieldState }) => (\n          <TickCheckbox\n            size={16}\n            isChecked={value}\n            onChange={onChange}\n            hasError={!!fieldState.error}\n            disabled={disabled}\n          />\n        )}\n      />\n      <TSpan font=\"footnote\">{label}</TSpan>\n    </Stack>\n  );\n}\n","import { Avatar } from '@/components/Avatar/Avatar';\nimport { TSpan } from '@/components/Typography';\nimport { Stack } from '@/layout';\n\ninterface EntityDisplayProps {\n  avatarUrl?: string;\n  name: string;\n}\n\nexport function EntityDisplay({ name, avatarUrl }: EntityDisplayProps) {\n  return (\n    <Stack gap={8} align=\"center\">\n      <Avatar size=\"M\" url={avatarUrl} />\n      <TSpan font=\"body-m\">{name}</TSpan>\n    </Stack>\n  );\n}\n","import styled from 'styled-components';\nimport { TSpan } from '@/components/Typography';\nimport { type FontTypeRegular } from '@/components/Typography/Typography';\nimport { Stack } from '@/layout';\nimport { type LabelValueSize } from './types';\n\nconst sizeFontMap: Record<LabelValueSize, FontTypeRegular> = {\n  small: 'footnote',\n  medium: 'body-m',\n};\n\nfunction getFont(size: LabelValueSize, bold: boolean) {\n  const baseFont = sizeFontMap[size];\n  return bold ? `${baseFont}-bold` : baseFont;\n}\n\nconst sizeGapMap: Record<LabelValueSize, number> = {\n  small: 4,\n  medium: 8,\n};\n\nfunction getGap(size: LabelValueSize, gap?: number) {\n  return gap ?? sizeGapMap[size];\n}\n\nconst Container = styled(Stack).attrs<{\n  size: LabelValueSize;\n  gap?: number;\n  isVertical: boolean;\n}>(({ size, gap, isVertical }) => ({\n  gap: getGap(size, gap),\n  vertical: isVertical,\n  align: isVertical ? 'start' : 'baseline',\n}))<{ size: LabelValueSize; gap?: number; isVertical: boolean }>``;\n\nconst Label = styled(TSpan).attrs<{ size: LabelValueSize }>(({ size }) => ({\n  font: getFont(size, false),\n  colorToken: '--text-card-neutral-default',\n}))<{ size: LabelValueSize }>``;\n\nconst Value = styled(TSpan).attrs<{ size: LabelValueSize; bold: boolean }>(\n  ({ size, bold }) => ({\n    font: getFont(size, bold),\n  }),\n)<{ size: LabelValueSize; bold: boolean }>``;\n\nexport default {\n  Container,\n  Label,\n  Value,\n};\n","import { isValidElement, type ReactNode } from 'react';\nimport S from './styles';\nimport { type LabelValueLayout, type LabelValueSize } from './types';\n\ninterface LabelValueProps {\n  label: string;\n  value: ReactNode;\n  layout?: LabelValueLayout;\n  gap?: number;\n  size?: LabelValueSize;\n  bold?: boolean;\n}\n\nexport function LabelValue({\n  label,\n  value,\n  gap,\n  layout = 'vertical',\n  size = 'medium',\n  bold = false,\n}: LabelValueProps) {\n  const isVertical = layout === 'vertical';\n\n  return (\n    <S.Container size={size} gap={gap} isVertical={isVertical}>\n      <S.Label size={size}>{label}</S.Label>\n      {isValidElement(value) ? (\n        value\n      ) : (\n        <S.Value size={size} bold={bold}>\n          {value}\n        </S.Value>\n      )}\n    </S.Container>\n  );\n}\n","import { addSeconds } from 'date-fns';\nimport { type ContractSowTimelineFragment } from '@/apollo/graphql/fragments/contractSowTimeline.generated';\nimport { type ActivityLogItemProps } from '@/components/ActivityLog';\nimport { DocumentType } from '../types';\n\nconst ActivityLog = {\n  isCreated(item: ContractSowTimelineFragment) {\n    return item.fromStatus === null && item.toStatus === 'DRAFT';\n  },\n  isSentForSigning(item: ContractSowTimelineFragment) {\n    return item.fromStatus === 'DRAFT' && item.toStatus === 'ISSUED';\n  },\n  isDeclined(item: ContractSowTimelineFragment) {\n    return item.fromStatus === 'ISSUED' && item.toStatus === 'DRAFT';\n  },\n  isSigned(item: ContractSowTimelineFragment) {\n    return item.fromStatus === 'ISSUED' && item.toStatus === 'SIGNED';\n  },\n};\n\ninterface GenerateTimelineItemsOptions {\n  items: ContractSowTimelineFragment[];\n  usersMap: Record<string, string>;\n  currentUserId: string;\n  documentType: DocumentType;\n}\n\nexport function generateTimelineItems({\n  items,\n  usersMap,\n  currentUserId,\n  documentType,\n}: GenerateTimelineItemsOptions): ActivityLogItemProps[] {\n  const timelineItems: ActivityLogItemProps[] = [];\n\n  items.forEach((item, index) => {\n    const isDoneByCurrentUser = currentUserId === item.userId;\n    const userDisplayName = isDoneByCurrentUser\n      ? 'You'\n      : (item.userId ? usersMap[item.userId] : undefined) ?? 'Unknown User';\n\n    if (ActivityLog.isCreated(item)) {\n      timelineItems.push({\n        iconName: 'edit_m',\n        description: 'Created',\n        timestamp: item.timestamp,\n      });\n    }\n\n    if (ActivityLog.isSentForSigning(item)) {\n      const isSentAgain = items\n        .slice(0, index)\n        .some(ActivityLog.isSentForSigning);\n\n      timelineItems.push(\n        {\n          iconName: 'check_xs',\n          description: `Signed by ${userDisplayName}`,\n          timestamp: item.timestamp,\n        },\n        {\n          iconName: 'time_m',\n          description: isSentAgain ? 'Re-sent for signing' : 'Sent for signing',\n          timestamp: addSeconds(new Date(item.timestamp), 2),\n        },\n      );\n    }\n\n    if (ActivityLog.isDeclined(item)) {\n      timelineItems.push({\n        iconName: 'close_m',\n        description: `${\n          isDoneByCurrentUser ? `You have` : `${userDisplayName} has`\n        } returned the ${\n          documentType === DocumentType.Contract ? 'contract' : 'SOW'\n        } to make amendments`,\n        timestamp: item.timestamp,\n      });\n    }\n\n    if (ActivityLog.isSigned(item)) {\n      timelineItems.push(\n        {\n          iconName: 'check_xs',\n          description: `Signed by ${userDisplayName}`,\n          timestamp: item.timestamp,\n        },\n        {\n          iconName: 'thumb_up_m',\n          description: 'Fully executed',\n          timestamp: addSeconds(new Date(item.timestamp), 2),\n        },\n      );\n    }\n  });\n\n  return timelineItems;\n}\n","import { reverse } from 'lodash';\nimport { type ContractSowTimelineFragment } from '@/apollo/graphql/fragments/contractSowTimeline.generated';\nimport { useAuth } from '@/features/auth/contexts';\nimport { type DocumentType } from '../../types';\nimport { generateTimelineItems } from '../../utils/documentTimeline';\n\nexport function useDocumentTimeline(\n  items: ContractSowTimelineFragment[],\n  usersMap: Record<string, string>,\n  documentType: DocumentType,\n) {\n  const { user } = useAuth();\n\n  return reverse(\n    generateTimelineItems({\n      items,\n      usersMap,\n      currentUserId: user?._id ?? '',\n      documentType,\n    }),\n  );\n}\n","import { type Maybe } from '@/apollo/generated/types';\nimport { type NoumContactBasicFragment } from '@/apollo/graphql';\nimport { type ContractSowTimelineFragment } from '@/apollo/graphql/fragments/contractSowTimeline.generated';\nimport { ActivityLog } from '@/components/ActivityLog';\nimport { type DocumentType } from '../../types';\nimport { useDocumentTimeline } from './useDocumentTimeline';\n\nfunction createUsersMapEntry(\n  contact: Maybe<NoumContactBasicFragment> | undefined,\n): Record<string, string> | undefined {\n  if (!contact || !contact.userId._id || !contact.displayName) {\n    return undefined;\n  }\n\n  return {\n    [contact.userId._id]: contact.displayName,\n  };\n}\n\ninterface DocumentTimelineProps {\n  items: ContractSowTimelineFragment[];\n  buyer: Maybe<NoumContactBasicFragment> | undefined;\n  serviceProvider: Maybe<NoumContactBasicFragment> | undefined;\n  documentType: DocumentType;\n}\n\nexport function DocumentTimeline({\n  items,\n  buyer,\n  serviceProvider,\n  documentType,\n}: DocumentTimelineProps) {\n  const activities = useDocumentTimeline(\n    items,\n    {\n      ...createUsersMapEntry(buyer),\n      ...createUsersMapEntry(serviceProvider),\n    },\n    documentType,\n  );\n\n  return (\n    <ActivityLog.List>\n      {activities.map((activity) => (\n        <ActivityLog.Item\n          key={activity.timestamp.toString()}\n          iconName={activity.iconName}\n          description={activity.description}\n          timestamp={activity.timestamp}\n        />\n      ))}\n    </ActivityLog.List>\n  );\n}\n","import { yupResolver } from '@hookform/resolvers/yup';\nimport { type DefaultValues, useForm, useFormContext } from 'react-hook-form';\nimport * as yup from 'yup';\n\nconst documentPreviewSignatureFormSchema = yup.object({\n  documentContentsChecked: yup.boolean().oneOf([true]),\n  validSignature: yup.boolean().oneOf([true]),\n});\n\nexport type DocumentPreviewSignatureFormValues = yup.InferType<\n  typeof documentPreviewSignatureFormSchema\n>;\n\ninterface UseDocumentPreviewSignatureFormOptions {\n  defaultValues?: DefaultValues<DocumentPreviewSignatureFormValues>;\n}\n\nexport function useDocumentPreviewSignatureForm({\n  defaultValues,\n}: UseDocumentPreviewSignatureFormOptions = {}) {\n  return useForm<DocumentPreviewSignatureFormValues>({\n    defaultValues,\n    resolver: yupResolver(documentPreviewSignatureFormSchema),\n    mode: 'onSubmit',\n  });\n}\n\nexport function useDocumentPreviewSignatureFormContext() {\n  return useFormContext<DocumentPreviewSignatureFormValues>();\n}\n","import { yupResolver } from '@hookform/resolvers/yup';\nimport { type DefaultValues, useForm, useFormContext } from 'react-hook-form';\nimport * as yup from 'yup';\n\nconst contractPreviewFormSchema = yup.object({\n  isAuthorized: yup.boolean().oneOf([true]),\n  termsAndConditions: yup.boolean().oneOf([true]),\n  eSign: yup.boolean().oneOf([true]),\n});\n\nexport type ContractPreviewFormValues = yup.InferType<\n  typeof contractPreviewFormSchema\n>;\n\ninterface UseContractPreviewFormOptions {\n  defaultValues?: DefaultValues<ContractPreviewFormValues>;\n  context?: { siema: string };\n}\n\nexport function useContractPreviewForm({\n  defaultValues,\n}: UseContractPreviewFormOptions = {}) {\n  return useForm<ContractPreviewFormValues>({\n    defaultValues,\n    resolver: yupResolver(contractPreviewFormSchema),\n    mode: 'onSubmit',\n  });\n}\n\nexport function useContractPreviewFormContext() {\n  return useFormContext<ContractPreviewFormValues>();\n}\n","import styled from 'styled-components';\nimport { TSpan } from '@/components/Typography';\n\nconst Title = styled(TSpan).attrs(() => ({\n  font: 'body-l',\n  colorToken: '--text-modal-neutral-highlighted',\n}))`\n  word-break: break-word;\n`;\n\nexport default {\n  Title,\n};\n"],"names":["AgreementCheckbox","label","name","disabled","control","useFormContext","jsxs","Stack","jsx","Controller","field","value","onChange","fieldState","TickCheckbox","error","TSpan","EntityDisplay","avatarUrl","Avatar","sizeFontMap","small","medium","getFont","size","bold","baseFont","sizeGapMap","getGap","gap","Container","styled","attrs","isVertical","vertical","align","Label","font","colorToken","Value","S$1","LabelValue","layout","S","isValidElement","ActivityLog","isCreated","item","fromStatus","toStatus","isSentForSigning","isDeclined","isSigned","generateTimelineItems","items","usersMap","currentUserId","documentType","timelineItems","forEach","index","isDoneByCurrentUser","userId","userDisplayName","undefined","push","iconName","description","timestamp","isSentAgain","slice","some","addSeconds","Date","DocumentType","Contract","useDocumentTimeline","user","useAuth","reverse","_id","createUsersMapEntry","contact","displayName","DocumentTimeline","buyer","serviceProvider","activities","map","activity","toString","documentPreviewSignatureFormSchema","yup","documentContentsChecked","oneOf","validSignature","useDocumentPreviewSignatureForm","defaultValues","useForm","resolver","yupResolver","mode","useDocumentPreviewSignatureFormContext","contractPreviewFormSchema","isAuthorized","termsAndConditions","eSign","useContractPreviewForm","useContractPreviewFormContext","Title"],"mappings":"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"}