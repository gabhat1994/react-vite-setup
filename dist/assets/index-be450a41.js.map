{"version":3,"file":"index-be450a41.js","sources":["../../src/components/FormControl/FormControl.tsx","../../src/hooks/formLocalDraft.ts","../../src/features/contracts/components/DocumentPdfThumbnail/PreviewModal.tsx","../../src/features/contracts/components/DocumentPdfThumbnail/DocumentPdfThumbnail.tsx","../../src/components/FieldArrayWizard/shared/context.tsx","../../src/components/FormError/FormError.tsx","../../src/components/FieldArrayWizard/shared/ErrorMessage.tsx","../../src/components/FieldArrayWizard/shared/LineNumber.tsx","../../src/components/FieldArrayWizard/shared/Rows.tsx","../../src/components/FieldArrayWizard/shared/Buttons.tsx","../../src/components/FieldArrayWizard/InlineEdit/EditMode.tsx","../../src/components/FieldArrayWizard/InlineEdit/Wizard.tsx","../../src/components/FieldArrayWizard/InlineEdit/index.ts"],"sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Stack, StackItem } from '@/layout';\nimport { TSpan } from '../Typography';\n\ninterface FormControlProps {\n  label: string;\n  optional?: boolean;\n  description?: string;\n  children: React.ReactNode;\n  horizontal?: boolean;\n}\n\nexport function FormControl({\n  label,\n  optional,\n  description,\n  children,\n  horizontal = false,\n}: FormControlProps) {\n  const { t } = useTranslation();\n\n  if (horizontal) {\n    return (\n      <Stack data-testid=\"horizontal\" gap={16} align=\"center\" fullWidth>\n        <Stack gap={4} vertical align=\"stretch\">\n          <TSpan font=\"body-m-bold\">\n            {label}\n            {optional && (\n              <>\n                {' '}\n                <TSpan\n                  font=\"body-m\"\n                  colorToken=\"--text-tablecell-header-neutral-default\"\n                >\n                  {t('noumena.form_control.optional')}\n                </TSpan>\n              </>\n            )}\n          </TSpan>\n        </Stack>\n        <StackItem grow>{children}</StackItem>\n      </Stack>\n    );\n  }\n\n  return (\n    <Stack data-testid=\"vertical\" gap={16} vertical align=\"start\" fullWidth>\n      <Stack gap={4} vertical fullWidth align=\"stretch\">\n        <TSpan font=\"body-m-bold\">\n          {label}\n          {optional && (\n            <>\n              {' '}\n              <TSpan\n                font=\"body-m\"\n                colorToken=\"--text-tablecell-header-neutral-default\"\n              >\n                {t('noumena.form_control.optional')}\n              </TSpan>\n            </>\n          )}\n        </TSpan>\n        {description && (\n          <TSpan font=\"body-m\" colorToken=\"--text-card-neutral-default\">\n            {description}\n          </TSpan>\n        )}\n      </Stack>\n      {children}\n    </Stack>\n  );\n}\n","import { useState, useEffect, useCallback } from 'react';\nimport { type FieldValues, type UseFormReturn } from 'react-hook-form';\n\ninterface UseFormLocalDraftOptions<Values extends FieldValues> {\n  form: UseFormReturn<Values>;\n}\n\nexport function useFormLocalDraft<Values extends FieldValues>({\n  form,\n}: UseFormLocalDraftOptions<Values>) {\n  const [lastSavedAt, setLastSavedAt] = useState<Date | null>(null);\n\n  const markLocalChangesAsSaved = useCallback(() => {\n    setLastSavedAt(new Date());\n  }, []);\n\n  const { reset } = form;\n\n  useEffect(() => {\n    if (lastSavedAt) {\n      reset(undefined, { keepValues: true, keepDirty: false });\n    }\n  }, [lastSavedAt, reset]);\n\n  return {\n    lastSavedAt,\n    markLocalChangesAsSaved,\n  };\n}\n","import LightBox from '@/components/LightBox';\nimport { ViewType } from '@/components/LightBox/types';\n\ntype PreviewModalProps = {\n  isOpen: boolean;\n  base64Data: string;\n  onClose(): void;\n  downloadFileName: string;\n};\n\nexport function PreviewModal({\n  isOpen,\n  base64Data,\n  downloadFileName,\n  onClose,\n}: PreviewModalProps) {\n  return (\n    <LightBox\n      isOpen={isOpen}\n      type={ViewType.PDF}\n      url={base64Data}\n      downloadFileName={downloadFileName}\n      handleClose={onClose}\n    />\n  );\n}\n","import { useState } from 'react';\nimport { PdfPreviewThumbnail } from '@/components/PdfPreviewThumbnail';\nimport { PreviewModal } from './PreviewModal';\n\ninterface DocumentPdfThumbnailProps {\n  data: string | null;\n  downloadFileName: string;\n  isLoading?: boolean;\n}\n\nfunction DocumentPdfThumbnail({\n  data,\n  downloadFileName,\n  isLoading,\n}: DocumentPdfThumbnailProps) {\n  const [isPreviewModalOpen, setIsPreviewModalOpen] = useState(false);\n\n  return (\n    <>\n      <PdfPreviewThumbnail\n        data={data ?? undefined}\n        isLoading={isLoading}\n        onClick={() => {\n          setIsPreviewModalOpen(true);\n        }}\n      />\n      {data && (\n        <PreviewModal\n          isOpen={isPreviewModalOpen}\n          base64Data={data}\n          onClose={() => setIsPreviewModalOpen(false)}\n          downloadFileName={downloadFileName}\n        />\n      )}\n    </>\n  );\n}\n\nexport default DocumentPdfThumbnail;\n","import { createContext, type PropsWithChildren, useContext } from 'react';\nimport { type FieldArrayPath, type FieldValues } from 'react-hook-form';\nimport { type FieldArrayWizardApi } from '@/hooks/fieldArrayWizard/useFieldArrayWizard';\n\ntype PickPartial<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>;\n\ninterface FieldArrayWizardFlags {\n  canAdd: boolean;\n  canEdit: boolean;\n  canDelete: boolean;\n}\n\ninterface FieldArrayWizardFormContextApi<\n  Values extends FieldValues = FieldValues,\n  Name extends FieldArrayPath<Values> = FieldArrayPath<Values>,\n> extends FieldArrayWizardApi<Values, Name>,\n    FieldArrayWizardFlags {\n  name: Name;\n}\n\nconst FieldArrayWizardFormContext =\n  createContext<FieldArrayWizardFormContextApi | null>(null);\n\nexport type FieldArrayWizardFormContextProviderProps<\n  Values extends FieldValues,\n  Name extends FieldArrayPath<Values>,\n> = PickPartial<\n  FieldArrayWizardFormContextApi<Values, Name>,\n  'canAdd' | 'canEdit' | 'canDelete'\n>;\n\nexport function FieldArrayWizardFormContextProvider<\n  Values extends FieldValues,\n  Name extends FieldArrayPath<Values>,\n>({\n  children,\n  ...value\n}: PropsWithChildren<FieldArrayWizardFormContextProviderProps<Values, Name>>) {\n  return (\n    <FieldArrayWizardFormContext.Provider\n      value={value as unknown as FieldArrayWizardFormContextApi}\n    >\n      {children}\n    </FieldArrayWizardFormContext.Provider>\n  );\n}\n\nexport function useFieldArrayWizardFormContext<\n  Values extends FieldValues,\n  Name extends FieldArrayPath<Values>,\n>() {\n  const context = useContext(FieldArrayWizardFormContext);\n\n  if (!context) {\n    throw new Error(\n      'useFieldArrayWizardFormContext must be called within FieldArrayWizardFormContext.',\n    );\n  }\n\n  return context as unknown as FieldArrayWizardFormContextApi<Values, Name>;\n}\n","import { type ReactNode } from 'react';\nimport { TSpan } from '../Typography';\n\ninterface FormErrorProps {\n  message: ReactNode;\n}\n\nexport function FormError({ message }: FormErrorProps) {\n  if (!message) {\n    return null;\n  }\n\n  return (\n    <TSpan font=\"footnote\" colorToken=\"--text-input-danger-primary-default\">\n      {message}\n    </TSpan>\n  );\n}\n","import { type FieldError, type FieldErrorsImpl, type Merge } from 'react-hook-form';\nimport { FormError } from '@/components/FormError';\n\ninterface ErrorMessageProps {\n  message?: string | FieldError | Merge<FieldError, FieldErrorsImpl>;\n}\n\nexport function ErrorMessage({ message }: ErrorMessageProps) {\n  return <FormError message={message} />;\n}\n","import styled from 'styled-components';\nimport { TSpan } from '@/components/Typography';\nimport { Stack } from '@/layout';\n\nconst Container = styled(Stack).attrs<{ hasInputs: boolean }>(() => ({\n  shrink: 0,\n  grow: 0,\n}))<{ hasInputs: boolean }>`\n  padding: ${({ hasInputs }) => (hasInputs ? `8px 0 0` : `0px`)};\n  width: 32px;\n`;\n\ninterface LineNumberProps {\n  index: number;\n  hasInputs: boolean;\n}\n\nexport function LineNumber({ index, hasInputs }: LineNumberProps) {\n  return (\n    <Container hasInputs={hasInputs}>\n      <TSpan font=\"body-m\" colorToken=\"--text-card-neutral-default\">\n        #{index + 1}\n      </TSpan>\n    </Container>\n  );\n}\n","import React from 'react';\nimport { Stack, StackItem } from '@/layout';\nimport { LineNumber } from './LineNumber';\n\ninterface MainRowProps {\n  children: React.ReactNode;\n  index: number;\n  displayLineNumbers: boolean;\n  actionButtons?: React.ReactNode;\n  hasInputs?: boolean;\n}\n\nexport function MainRow({\n  index,\n  children,\n  displayLineNumbers,\n  actionButtons,\n  hasInputs = false,\n}: MainRowProps) {\n  return (\n    <Stack gap={16} align={hasInputs ? 'start' : 'center'} fullWidth>\n      {displayLineNumbers && <LineNumber index={index} hasInputs={hasInputs} />}\n      <StackItem grow>{children}</StackItem>\n      {actionButtons ? (\n        <StackItem shrink={0} padding={hasInputs ? '7px 0 0' : undefined}>\n          {actionButtons}\n        </StackItem>\n      ) : null}\n    </Stack>\n  );\n}\n\ninterface SecondaryRowProps {\n  children: React.ReactNode;\n}\n\nexport function SecondaryRow({ children }: SecondaryRowProps) {\n  return <>{children}</>;\n}\n\ninterface FooterRowProps {\n  children: React.ReactNode;\n  actionButtons?: React.ReactNode;\n}\n\nexport function FooterRow({ children, actionButtons }: FooterRowProps) {\n  return (\n    <StackItem grow>\n      <Stack gap={24} align=\"center\">\n        {children}\n\n        <Stack gap={8} align=\"center\">\n          {actionButtons}\n        </Stack>\n      </Stack>\n    </StackItem>\n  );\n}\n","import { Button } from '@/components/Button';\nimport { type ButtonProps } from '@/components/Button/types';\nimport { Icon } from '@/components/Icon';\n\ntype AddButtonProps = Pick<ButtonProps, 'onClick' | 'children'>;\n\nexport function AddButton({ onClick, children }: AddButtonProps) {\n  return (\n    <Button\n      textOnly\n      size=\"small\"\n      leftIcon={<Icon name=\"add_m\" size={24} />}\n      onClick={onClick}\n    >\n      {children}\n    </Button>\n  );\n}\n\ntype EditButtonProps = Pick<ButtonProps, 'onClick' | 'children'>;\n\nexport function EditButton({ onClick, children }: EditButtonProps) {\n  return (\n    <Button\n      size=\"small\"\n      textOnly\n      intent=\"positive\"\n      icon={<Icon name=\"edit_m\" size={24} />}\n      onClick={onClick}\n    >\n      {children}\n    </Button>\n  );\n}\n\ntype DeleteButtonProps = Pick<ButtonProps, 'onClick' | 'children'>;\n\nexport function DeleteButton({ onClick, children }: DeleteButtonProps) {\n  return (\n    <Button\n      size=\"small\"\n      textOnly\n      intent=\"negative\"\n      icon={<Icon name=\"delete_m\" size={24} />}\n      onClick={onClick}\n    >\n      {children}\n    </Button>\n  );\n}\n\ntype SaveButtonProps = Pick<\n  ButtonProps,\n  'onClick' | 'children' | 'softDisabled'\n>;\n\nexport function SaveButton({\n  onClick,\n  children,\n  softDisabled,\n}: SaveButtonProps) {\n  return (\n    <Button\n      size=\"small\"\n      secondary\n      intent=\"positive\"\n      softDisabled={softDisabled}\n      onClick={onClick}\n    >\n      {children}\n    </Button>\n  );\n}\n\ntype CancelButtonProps = Pick<ButtonProps, 'onClick' | 'children'>;\n\nexport function CancelButton({ onClick, children }: CancelButtonProps) {\n  return (\n    <Button size=\"small\" secondary intent=\"negative\" onClick={onClick}>\n      {children}\n    </Button>\n  );\n}\n","import React from 'react';\nimport {\n  type FieldErrorsImpl,\n  type FieldValues,\n  FormProvider,\n  useFormContext,\n  type UseFormReturn,\n} from 'react-hook-form';\nimport { Stack } from '@/layout';\nimport * as Shared from '../shared';\nimport { useFieldArrayWizardFormContext } from '../shared/context';\n\ninterface FormMainRowProps {\n  index: number;\n  children: React.ReactNode;\n  displayLineNumbers?: boolean;\n}\n\nexport function FormMainRow({\n  index,\n  children,\n  displayLineNumbers = false,\n}: FormMainRowProps) {\n  const { deleteItem, canDelete } = useFieldArrayWizardFormContext();\n\n  return (\n    <Shared.MainRow\n      index={index}\n      displayLineNumbers={displayLineNumbers}\n      actionButtons={\n        canDelete ? (\n          <Shared.DeleteButton onClick={() => deleteItem(index)} />\n        ) : null\n      }\n      hasInputs\n    >\n      {children}\n    </Shared.MainRow>\n  );\n}\n\nexport const FormSecondaryRow = Shared.SecondaryRow;\n\ninterface FormErrorMessageProps {\n  index: number;\n}\n\nexport function FormErrorMessage({ index }: FormErrorMessageProps) {\n  const {\n    formState: { errors: allErrors },\n  } = useFormContext();\n\n  const { name } = useFieldArrayWizardFormContext();\n\n  // TS can't know this is an array of fields, because the library's typing is inaccurate.\n  const wizardErrors = allErrors[name] as unknown as\n    | FieldErrorsImpl\n    | undefined;\n  const rowErrors = wizardErrors?.[index];\n\n  if (!rowErrors) {\n    return null;\n  }\n\n  const error = Object.values(rowErrors)[0];\n\n  return <Shared.ErrorMessage message={error.message} />;\n}\n\nexport interface EditModeProps<Values extends FieldValues> {\n  children: (options: UseFormReturn<Values>) => React.ReactNode;\n}\n\nexport function EditMode<Values extends FieldValues>({\n  children,\n}: EditModeProps<Values>) {\n  const form = useFormContext<Values>();\n\n  return (\n    <FormProvider {...form}>\n      <Stack gap={16} vertical align=\"stretch\">\n        {children(form)}\n      </Stack>\n    </FormProvider>\n  );\n}\n","import React, { type ComponentType } from 'react';\nimport {\n  type FieldArrayPath,\n  type FieldArrayPathValue,\n  type FieldArrayWithId,\n  type FieldValues,\n  useFormContext,\n} from 'react-hook-form';\nimport { Separator } from '@/components/Separator/Separator';\nimport { Stack, StackItem } from '@/layout';\nimport * as Shared from '../shared';\nimport {\n  FieldArrayWizardFormContextProvider,\n  type FieldArrayWizardFormContextProviderProps,\n} from '../shared/context';\nimport { type RenderOptions, type SummaryOptions } from '../shared/types';\n\ntype WizardProps<\n  Values extends FieldValues,\n  Name extends FieldArrayPath<Values>,\n> = FieldArrayWizardFormContextProviderProps<Values, Name> & {\n  newItemValues: FieldArrayWithId<Values, Name>;\n  hasSeparators?: boolean;\n  EditModeComponent: ComponentType<RenderOptions<Values, Name>>;\n  SummaryComponent?: ComponentType<SummaryOptions<Values, Name>>;\n};\n\nexport function Wizard<\n  Values extends FieldValues,\n  Name extends FieldArrayPath<Values>,\n>({\n  name,\n  newItemValues,\n  hasSeparators = false,\n  EditModeComponent,\n  SummaryComponent,\n  canAdd = true,\n  canEdit = true,\n  canDelete = true,\n  ...wizardApi\n}: WizardProps<Values, Name>) {\n  const { watch } = useFormContext<Values>();\n\n  // React Hook Form library has an issue with infinite recursion of types.\n  // Throws: \"Type instantiation is excessively deep and possibly infinite.ts(2589)\"\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const allValues = watch(name as any) as FieldArrayPathValue<Values, Name>;\n\n  return (\n    <FieldArrayWizardFormContextProvider<Values, Name>\n      name={name}\n      canAdd={canAdd}\n      canEdit={canEdit}\n      canDelete={canDelete}\n      {...wizardApi}\n    >\n      <Stack vertical gap={16} align=\"stretch\">\n        {wizardApi.fields.map((row, index) => (\n          <React.Fragment key={row.id}>\n            <EditModeComponent\n              values={row}\n              index={index}\n              name={name}\n              fieldNamePrefix={`${name}.${index}.`}\n            />\n            {hasSeparators && <Separator fullWidth noMargin />}\n          </React.Fragment>\n        ))}\n\n        <StackItem>\n          <Stack justify=\"space-between\">\n            <StackItem>\n              {canAdd && (\n                <Shared.AddButton\n                  onClick={() => wizardApi.addNewItem(newItemValues)}\n                >\n                  Add New Item\n                </Shared.AddButton>\n              )}\n            </StackItem>\n            {SummaryComponent && <SummaryComponent rows={allValues} />}\n          </Stack>\n        </StackItem>\n      </Stack>\n    </FieldArrayWizardFormContextProvider>\n  );\n}\n","import {\n  EditMode,\n  FormErrorMessage,\n  FormMainRow,\n  FormSecondaryRow,\n} from './EditMode';\nimport { Wizard } from './Wizard';\n\nexport const InlineEdit = {\n  Wizard,\n  EditMode,\n  FormMainRow,\n  FormSecondaryRow,\n  FormErrorMessage,\n};\n"],"names":["FormControl","label","optional","description","children","horizontal","t","useTranslation","jsxs","Stack","jsx","TSpan","Fragment","StackItem","useFormLocalDraft","form","lastSavedAt","setLastSavedAt","useState","markLocalChangesAsSaved","useCallback","Date","reset","useEffect","undefined","keepValues","keepDirty","PreviewModal","isOpen","base64Data","downloadFileName","onClose","LightBox","ViewType","PDF","DocumentPdfThumbnail","data","isLoading","isPreviewModalOpen","setIsPreviewModalOpen","PdfPreviewThumbnail","FieldArrayWizardFormContext","createContext","FieldArrayWizardFormContextProvider","value","useFieldArrayWizardFormContext","context","useContext","Error","FormError","message","ErrorMessage","Container","styled","attrs","shrink","grow","hasInputs","LineNumber","index","MainRow","displayLineNumbers","actionButtons","SecondaryRow","FooterRow","AddButton","onClick","Button","Icon","EditButton","DeleteButton","SaveButton","softDisabled","CancelButton","FormMainRow","deleteItem","canDelete","Shared.MainRow","Shared.DeleteButton","FormSecondaryRow","Shared","FormErrorMessage","formState","errors","allErrors","useFormContext","name","wizardErrors","rowErrors","error","Object","values","Shared.ErrorMessage","EditMode","FormProvider","Wizard","newItemValues","hasSeparators","EditModeComponent","SummaryComponent","canAdd","canEdit","wizardApi","watch","allValues","fields","map","row","React","Separator","id","Shared.AddButton","addNewItem","InlineEdit"],"mappings":"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"}