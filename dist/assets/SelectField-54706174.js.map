{"version":3,"file":"SelectField-54706174.js","sources":["../../src/components/SelectField/styles.ts","../../src/components/SelectField/SelectField.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Stack } from '@/layout';\nimport { Icon } from '../Icon';\nimport { TextField as OriginalTextField } from '../TextField';\n\nconst Container = styled.div`\n  width: 100%;\n`;\n\nconst RightIcon = styled(Icon).attrs(() => ({\n  size: 16,\n  color: '--icon-button-neutral-default',\n}))<{ isOpen?: boolean }>`\n  transition: transform 0.3s;\n  ${({ isOpen }) => isOpen && 'transform: rotate(180deg)'};\n`;\n\nconst InputRightElements = styled(Stack).attrs(() => ({\n  gap: 16,\n  align: 'center',\n}))`\n  span {\n    visibility: visible;\n  }\n`;\n\nconst TextField = styled(OriginalTextField)<{ $searchable?: boolean }>`\n  cursor: ${(props) => (props.$searchable ? 'text' : 'pointer')};\n`;\n\nexport default {\n  RightIcon,\n  Container,\n  InputRightElements,\n  TextField,\n};\n","import React, { useLayoutEffect, useRef, useState } from 'react';\nimport { useWindowDimensions } from '@/hooks';\nimport {\n  Dropdown,\n  type DropdownProps,\n  type DropdownValueType,\n} from '../Dropdown';\nimport { type ITextField } from '../TextField/types';\nimport S from './styles';\n\nexport type SelectFieldProps<\n  Key extends string,\n  Data extends unknown = Key,\n> = Omit<DropdownProps<Data, HTMLInputElement, string, Key>, 'children'> &\n  Pick<\n    ITextField,\n    'inputSize' | 'error' | 'helperText' | 'label' | 'disabledIconColor'\n  > & {\n    value: Key | undefined;\n    onChange: (option: DropdownValueType<Data, Key>) => void;\n  } & {\n    inputRightElement?: React.ReactNode;\n    noChevron?: boolean;\n    searchable?: boolean;\n  };\n\nexport function SelectField<\n  Key extends string = string,\n  Data extends unknown = Key,\n>({\n  options,\n  label,\n  value,\n  onChange,\n  inputSize,\n  disabled,\n  leftIcon,\n  hideIcons = true,\n  error,\n  helperText,\n  inputRightElement,\n  noChevron = false,\n  disabledIconColor,\n  searchable = true,\n  inputValue,\n  ...dropdownProps\n}: SelectFieldProps<Key, Data>) {\n  const dimensions = useWindowDimensions();\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [width, setWidth] = useState(0);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const selectedOption = value\n    ? (options.find(\n        (_option) => _option.type === 'value' && _option.key === value,\n      ) as DropdownValueType<Data, Key> | null)\n    : null;\n\n  useLayoutEffect(() => {\n    if (containerRef.current) {\n      setWidth(containerRef.current.clientWidth);\n    }\n  }, [containerRef, dimensions]);\n\n  const displayedInputValue =\n    inputValue ||\n    (selectedOption &&\n      typeof selectedOption.label === 'string' &&\n      selectedOption.label) ||\n    '';\n\n  return (\n    <S.Container ref={containerRef}>\n      <Dropdown\n        {...dropdownProps}\n        hideIcons={hideIcons}\n        inputValue={displayedInputValue}\n        options={options}\n        usePortal={false}\n        containerWidth={`${width}px`}\n        disabled={disabled}\n        onSelectOption={onChange}\n        onOpen={() => setIsOpen(true)}\n        onClose={() => setIsOpen(false)}\n      >\n        {({ inputProps, inputRef, toggle }) => (\n          <S.TextField\n            ref={inputRef}\n            {...inputProps}\n            $searchable={searchable}\n            inputSize={inputSize}\n            disabled={disabled}\n            label={label}\n            leftIcon={selectedOption?.icon ?? leftIcon}\n            helperText={helperText}\n            error={!!error}\n            readOnly={!searchable}\n            rightIcon={\n              <S.InputRightElements>\n                {inputRightElement}\n                {disabled || noChevron ? null : (\n                  <S.RightIcon\n                    name=\"chevron_down_m\"\n                    isOpen={isOpen}\n                    onClick={toggle}\n                  />\n                )}\n              </S.InputRightElements>\n            }\n            disabledIconColor={disabledIconColor}\n          />\n        )}\n      </Dropdown>\n    </S.Container>\n  );\n}\n"],"names":["Container","styled","div","RightIcon","Icon","attrs","size","color","isOpen","InputRightElements","Stack","gap","align","TextField","OriginalTextField","props","$searchable","S","SelectField","options","label","value","onChange","inputSize","disabled","leftIcon","hideIcons","error","helperText","inputRightElement","noChevron","disabledIconColor","searchable","inputValue","dropdownProps","dimensions","useWindowDimensions","containerRef","useRef","width","setWidth","useState","setIsOpen","selectedOption","find","_option","type","key","useLayoutEffect","current","clientWidth","displayedInputValue","jsx","Dropdown","inputProps","inputRef","toggle","icon","jsxs"],"mappings":"8HAKA,MAAMA,EAAYC,EAAOC;AAAAA;AAAAA,EAInBC,EAAYF,EAAOG,CAAI,EAAEC,MAAM,KAAO,CAC1CC,KAAM,GACNC,MAAO,+BACT,EAAE;AAAA;AAAA,IAEE,CAAC,CAAEC,OAAAA,CAAO,IAAMA,GAAU;AAAA,EAGxBC,EAAqBR,EAAOS,CAAK,EAAEL,MAAM,KAAO,CACpDM,IAAK,GACLC,MAAO,QACT,EAAE;AAAA;AAAA;AAAA;AAAA,EAMIC,EAAYZ,EAAOa,CAAiB;AAAA,YAC7BC,GAAWA,EAAMC,YAAc,OAAS;AAAA,EAGtCC,EAAA,CACbd,UAAAA,EACAH,UAAAA,EACAS,mBAAAA,EACAI,UAAAA,CACF,ECTO,SAASK,EAGd,CACAC,QAAAA,EACAC,MAAAA,EACAC,MAAAA,EACAC,SAAAA,EACAC,UAAAA,EACAC,SAAAA,EACAC,SAAAA,EACAC,UAAAA,EAAY,GACZC,MAAAA,EACAC,WAAAA,EACAC,kBAAAA,EACAC,UAAAA,EAAY,GACZC,kBAAAA,EACAC,WAAAA,EAAa,GACbC,WAAAA,EACA,GAAGC,CACwB,EAAG,CAC9B,MAAMC,EAAaC,IACbC,EAAeC,SAAuB,IAAI,EAC1C,CAACC,EAAOC,CAAQ,EAAIC,WAAS,CAAC,EAC9B,CAACjC,EAAQkC,CAAS,EAAID,WAAS,EAAK,EAEpCE,EAAiBtB,EAClBF,EAAQyB,KACNC,GAAYA,EAAQC,OAAS,SAAWD,EAAQE,MAAQ1B,CAAK,EAEhE,KAEJ2B,EAAAA,gBAAgB,IAAM,CAChBX,EAAaY,SACNZ,EAAAA,EAAaY,QAAQC,WAAW,CAC3C,EACC,CAACb,EAAcF,CAAU,CAAC,EAEvBgB,MAAAA,EACJlB,GACCU,GACC,OAAOA,EAAevB,OAAU,UAChCuB,EAAevB,OACjB,GAEF,OACGgC,EAAAnC,EAAE,UAAF,CAAY,IAAKoB,EAChB,SAAAe,EAACC,EACC,CAAA,GAAInB,EACJ,UAAAR,EACA,WAAYyB,EACZ,QAAAhC,EACA,UAAW,GACX,eAAiB,GAAEoB,MACnB,SAAAf,EACA,eAAgBF,EAChB,OAAQ,IAAMoB,EAAU,EAAI,EAC5B,QAAS,IAAMA,EAAU,EAAK,EAAE,YAAA,WAE/B,SAAC,CAAA,CAAEY,WAAAA,EAAYC,SAAAA,EAAUC,OAAAA,CACxB,IAAAJ,EAACnC,EAAE,UAAF,CACC,IAAKsC,EACL,GAAID,EACJ,YAAatB,EACb,UAAAT,EACA,SAAAC,EACA,MAAAJ,EACA,UAAUuB,GAAAA,YAAAA,EAAgBc,OAAQhC,EAClC,WAAAG,EACA,MAAO,CAAC,CAACD,EACT,SAAU,CAACK,EACX,UACG0B,EAAAzC,EAAE,mBAAF,CACEY,SAAAA,CAAAA,EACAL,GAAYM,EAAY,KACtBsB,EAAAnC,EAAE,UAAF,CACC,KAAK,iBACL,OAAAT,EACA,QAASgD,CAEZ,CAAA,CACH,CAAA,CAAA,EAEF,kBAAAzB,CAEH,CAAA,CACH,CAAA,CACF,CAAA,CAEJ"}