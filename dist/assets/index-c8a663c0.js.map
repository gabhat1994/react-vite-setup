{"version":3,"file":"index-c8a663c0.js","sources":["../../src/layout/ListLayout/index.tsx"],"sourcesContent":["import React, {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  useLocation,\n  useNavigate,\n  type Location,\n  type NavigateFunction,\n} from 'react-router-dom';\n\nimport { Button } from '@/components/Button';\nimport { Header } from '@/components/Header';\nimport { GuestHeader } from '@/layout/GuestHeader';\nimport { MainHeader } from '@/layout/MainHeader';\nimport { SideNav } from '@/components/SideNav';\nimport { StickyContainer } from '@/components/StickyContainer';\nimport { TSpan } from '@/components/Typography';\nimport accessLocalStorage from '@/constants/accessLocalStorage';\nimport { breakpoints } from '@/constants/devices';\nimport sideNavItems from '@/constants/sideNavItems';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useLaunchDarkly, useWindowDimensions } from '@/hooks';\nimport * as Storyblok from '@/services/rest/storyblok';\nimport { getLocalStorage, setLocalStorage } from '@/utils/localStorage';\nimport { UserUtil } from '@/utils/user';\nimport { AppLayout } from '../AppLayout';\nimport { Stack, StackItem } from '../Stack';\nimport {\n  Container,\n  Content,\n  LeftContent,\n  Main,\n  RightContent,\n  StyledBanner,\n} from './styles';\nimport { type BannerContent, type LayoutProps, type RootObject } from './types';\n\nconst ListLayout: React.FC<LayoutProps> = ({\n  type,\n  rightContent,\n  children,\n  onGoBack,\n}) => {\n  const navigate: NavigateFunction = useNavigate();\n  const location: Location = useLocation();\n  const { user, isUnregistered, isUnauthenticated } = useAuth();\n  const { flags } = useLaunchDarkly();\n\n  const [activePath, setActivePath] = useState<string>('');\n  const [showBanner, setShowBanner] = useState<boolean>(true);\n\n  const [bannerContent, setBannerContent] = useState<BannerContent>();\n  const componentMounted = useRef(true);\n\n  useEffect(() => {\n    const showBannerFromLocalStorage =\n      getLocalStorage(accessLocalStorage.SHOW_BANNER) === null;\n    setShowBanner(showBannerFromLocalStorage);\n  }, [showBanner]);\n\n  useEffect(() => {\n    async function getBannerContent() {\n      const { data }: { data: RootObject } = await Storyblok.getBannerContent();\n      if (componentMounted.current) {\n        const description = data?.story?.content?.Description;\n        const buttonText = data?.story?.content?.ButtonText;\n        const buttonLink = data?.story?.content?.ButtonLink;\n        setBannerContent({ description, buttonText, buttonLink });\n      }\n    }\n\n    getBannerContent();\n  }, []);\n\n  useLayoutEffect(() => {\n    let path = '/';\n    sideNavItems.some((navItem) => {\n      if (\n        navItem.value.length > 1 &&\n        location.pathname.includes(navItem.value)\n      ) {\n        path = navItem.value;\n        return true;\n      }\n      return false;\n    });\n\n    setActivePath(path);\n  }, [location.pathname]);\n\n  const onNavigate = useCallback(\n    (nextPath: string) => {\n      setActivePath(nextPath);\n      navigate(nextPath, { replace: false });\n    },\n    [navigate],\n  );\n\n  const windowDimensions = useWindowDimensions();\n  const isUptoTablet = windowDimensions.width < breakpoints.LAPTOP;\n\n  if (flags.newAppNavigation) {\n    return (\n      <AppLayout.Layout\n        onGoBack={onGoBack}\n        topNavbar={\n          isUnauthenticated ? null : isUnregistered ? (\n            <Header isBorderRadius={false}>\n              <GuestHeader leftNavButton={true} />\n            </Header>\n          ) : (\n            <AppLayout.TopBar />\n          )\n        }\n        sideNav={<AppLayout.SideNavigation />}\n      >\n        <AppLayout.MainContent>\n          <Stack vertical align=\"stretch\" gap={24} fullWidth>\n            {showBanner && bannerContent?.buttonText && (\n              <StyledBanner>\n                <TSpan\n                  font=\"body-m\"\n                  colorToken=\"--text-campaign-banner-success-primary-default\"\n                >\n                  {bannerContent?.description}\n                </TSpan>\n                <div className=\"action-buttons\">\n                  <Button\n                    primary\n                    intent=\"positive\"\n                    onClick={() =>\n                      onNavigate(\n                        `/article?slug=articles/${bannerContent?.buttonLink}`,\n                      )\n                    }\n                  >\n                    {bannerContent?.buttonText}\n                  </Button>\n                  <TSpan\n                    font=\"button-m\"\n                    colorToken=\"--text-button-success-secondary-default\"\n                    onClick={() => {\n                      setShowBanner(false);\n                      setLocalStorage(accessLocalStorage.SHOW_BANNER, false);\n                    }}\n                  >\n                    Dismiss\n                  </TSpan>\n                </div>\n              </StyledBanner>\n            )}\n\n            <Stack gap={24} align=\"start\" justify=\"stretch\" fullWidth>\n              <StackItem grow>{children}</StackItem>\n\n              {!!rightContent && (\n                <RightContent data-testid=\"layout-right-content\">\n                  <StickyContainer>{rightContent}</StickyContainer>\n                </RightContent>\n              )}\n            </Stack>\n          </Stack>\n        </AppLayout.MainContent>\n      </AppLayout.Layout>\n    );\n  }\n\n  return (\n    <Container data-testid=\"layout-container\">\n      {isUnauthenticated ? null : (\n        <Header isBorderRadius={false}>\n          {isUnregistered ? (\n            <GuestHeader leftNavButton={true} />\n          ) : (\n            <MainHeader\n              avatar={UserUtil.getProfilePicture(user) || undefined}\n              userName={user?.firstName || undefined}\n            />\n          )}\n        </Header>\n      )}\n      {showBanner && bannerContent?.buttonText && (\n        <StyledBanner>\n          <TSpan\n            font=\"body-m\"\n            colorToken=\"--text-campaign-banner-success-primary-default\"\n          >\n            {bannerContent?.description}\n          </TSpan>\n          <div className=\"action-buttons\">\n            <Button\n              primary\n              intent=\"positive\"\n              onClick={() =>\n                onNavigate(\n                  `/article?slug=articles/${bannerContent?.buttonLink}`,\n                )\n              }\n            >\n              {bannerContent?.buttonText}\n            </Button>\n            <TSpan\n              font=\"button-m\"\n              colorToken=\"--text-button-success-secondary-default\"\n              onClick={() => {\n                setShowBanner(false);\n                setLocalStorage(accessLocalStorage.SHOW_BANNER, false);\n              }}\n            >\n              Dismiss\n            </TSpan>\n          </div>\n        </StyledBanner>\n      )}\n      <Main\n        data-testid=\"layout-main\"\n        type={type}\n        style={{\n          display: type === 'Community' && isUptoTablet ? 'block' : 'flex',\n        }}\n      >\n        <LeftContent data-testid=\"layout-left-content\" type={type}>\n          <StickyContainer leftNav>\n            <SideNav\n              onNavChange={onNavigate}\n              navItems={sideNavItems}\n              activeNavValue={activePath}\n            />\n          </StickyContainer>\n        </LeftContent>\n        <Content data-testid=\"layout-main-content\" type={type}>\n          {children}\n        </Content>\n        {!!rightContent && (\n          <RightContent data-testid=\"layout-right-content\">\n            <StickyContainer>{rightContent}</StickyContainer>\n          </RightContent>\n        )}\n      </Main>\n    </Container>\n  );\n};\n\nexport default ListLayout;\n"],"names":["ListLayout","type","rightContent","children","onGoBack","navigate","useNavigate","location","useLocation","user","isUnregistered","isUnauthenticated","useAuth","flags","useLaunchDarkly","activePath","setActivePath","useState","showBanner","setShowBanner","bannerContent","setBannerContent","componentMounted","useRef","useEffect","showBannerFromLocalStorage","getLocalStorage","accessLocalStorage","SHOW_BANNER","getBannerContent","data","Storyblok","current","description","story","content","Description","buttonText","ButtonText","buttonLink","ButtonLink","useLayoutEffect","path","sideNavItems","some","navItem","value","length","pathname","includes","onNavigate","useCallback","nextPath","replace","isUptoTablet","useWindowDimensions","width","breakpoints","LAPTOP","newAppNavigation","jsx","AppLayout","Header","GuestHeader","jsxs","Stack","StyledBanner","TSpan","Button","StackItem","RightContent","StickyContainer","Container","MainHeader","UserUtil","getProfilePicture","undefined","firstName","Main","display","LeftContent","SideNav","Content"],"mappings":"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"}