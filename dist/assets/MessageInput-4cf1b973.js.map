{"version":3,"file":"MessageInput-4cf1b973.js","sources":["../../src/features/conversation/components/MessageInput/PreviewFile.tsx","../../src/features/conversation/components/MessageInput/MessageInput.tsx"],"sourcesContent":["import { type FC, useCallback, useMemo, useState } from 'react';\nimport { Icon } from '@/components/Icon';\nimport LightBox from '@/components/LightBox';\nimport { ViewType } from '@/components/LightBox/types';\nimport { getMediaType } from '../../helpers';\n\nimport {\n  PreviewFileWrapper,\n  PreivewImage,\n  PreviewVideo,\n  RemoveFileWrapper,\n} from './styles';\nimport { type PreviewFileProps } from './types';\n\nexport const PreviewFile: FC<PreviewFileProps> = ({\n  file,\n  index,\n  onRemoveFile,\n}) => {\n  const [isControl, setIsControl] = useState<boolean>(false);\n  const [showFullScreen, setShowFullScreen] = useState(false);\n\n  const mediaType = getMediaType(file.type);\n\n  const blobURL = useMemo(() => URL.createObjectURL(file), [file]);\n\n  const onMouseEnterHandler = () => setIsControl(true);\n\n  const onMouseLeaveHandler = () => setIsControl(false);\n\n  const onRemoveHandler = useCallback(\n    () => onRemoveFile?.(index),\n    [index, onRemoveFile],\n  );\n\n  return (\n    <PreviewFileWrapper\n      onMouseEnter={onMouseEnterHandler}\n      onMouseLeave={onMouseLeaveHandler}\n    >\n      {mediaType === 'image' && (\n        <PreivewImage\n          data-testid=\"preivew-image\"\n          src={blobURL}\n          alt=\"\"\n          onClick={() => setShowFullScreen(true)}\n        />\n      )}\n      {mediaType === 'video' && (\n        <PreviewVideo\n          data-testid=\"preivew-video\"\n          autoPlay\n          loop\n          muted\n          onClick={() => setShowFullScreen(true)}\n        >\n          <source src={blobURL} type={file.type} />\n        </PreviewVideo>\n      )}\n\n      <RemoveFileWrapper isControl={isControl} onClick={onRemoveHandler}>\n        <Icon name=\"clear_m\" size={20} color=\"--icon-button-neutral-pressed\" />\n      </RemoveFileWrapper>\n\n      <LightBox\n        url={blobURL || ''}\n        isOpen={showFullScreen}\n        type={mediaType === 'video' ? ViewType.VIDEO : ViewType.IMAGE}\n        contentType={file.type}\n        handleClose={() => setShowFullScreen(false)}\n      />\n    </PreviewFileWrapper>\n  );\n};\n","import {\n  type ChangeEvent,\n  type FC,\n  useCallback,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n  type ClipboardEvent,\n} from 'react';\n\nimport { useTranslation } from 'react-i18next';\nimport { SlackSelector } from '@charkour/react-reactions';\nimport { Icon } from '@/components/Icon';\nimport { TextArea } from '@/components/TextArea';\nimport { chromeSupportedVideoTypes } from '@/constants/fileTypes';\nimport { removeItemAtIndex } from '@/utils/list';\nimport { ActiveConversationContext } from '@/features/conversation/contexts/ActiveConversationContext';\nimport { Upload } from '@/features/upload/components';\n\nimport { PreviewFile } from './PreviewFile';\nimport {\n  EmojiButton,\n  EmojiContainer,\n  FileChooserWrapper,\n  FilesWrapper,\n  InputWrapper,\n  SendButtonWrapper,\n  Wrapper,\n} from './styles';\nimport { type MessageInputProps } from './types';\n\nexport const MessageInput: FC<MessageInputProps> = ({\n  withLeftPadding,\n  onSendMessage,\n  disabled,\n}) => {\n  const { t } = useTranslation();\n\n  const ref = useRef<HTMLTextAreaElement>(null);\n  const { activeConversationSid } = useContext(ActiveConversationContext);\n\n  const [loading, setLoading] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>('');\n  const [files, setFiles] = useState<File[]>([]);\n  const [isFocused, setIsFocused] = useState<boolean>(false);\n  const active = isFocused || !!message.trim() || files.length > 0;\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n\n  const onFileChange = useCallback((file: File) => {\n    if (file) {\n      setFiles((prev) => [...prev, file]);\n    }\n  }, []);\n\n  const onRemoveFile = useCallback((index: number) => {\n    setFiles((prev) => removeItemAtIndex(prev, index));\n  }, []);\n\n  const onTextChange = (e: ChangeEvent<HTMLTextAreaElement>) =>\n    setMessage(e.target.value);\n\n  const onAddEmoji = (id: string) => {\n    const cursorPosition = ref.current?.selectionStart || 0;\n\n    setMessage((prev) => {\n      const before = prev.substring(0, cursorPosition);\n      const after = prev.substring(cursorPosition);\n      return `${before}${id}${after}`;\n    });\n    setShowEmojiPicker(false);\n    ref.current?.focus();\n  };\n\n  const onTextFocus = useCallback(() => {\n    setIsFocused(true);\n    setShowEmojiPicker(false);\n  }, []);\n\n  const onTextBlur = () => setIsFocused(false);\n\n  const handleSendMessage = useCallback(async () => {\n    if (loading) return;\n\n    setLoading(true);\n\n    const trimmedMessage = message.trim();\n\n    if (!trimmedMessage && !files.length) {\n      setMessage('');\n      setLoading(false);\n      return;\n    }\n    await onSendMessage(trimmedMessage, files);\n\n    setFiles([]);\n    setMessage('');\n    setLoading(false);\n  }, [loading, message, files, onSendMessage]);\n\n  const onKeyDown = useCallback(\n    (e: React.KeyboardEvent) => {\n      if (e.key === 'Enter' && !e.shiftKey) {\n        e.preventDefault();\n        handleSendMessage();\n      }\n    },\n    [handleSendMessage],\n  );\n\n  useEffect(() => {\n    setFiles([]);\n    setMessage('');\n  }, [activeConversationSid]);\n\n  const handlePaste = (e: ClipboardEvent<HTMLTextAreaElement>) => {\n    if (e.clipboardData.files.length) {\n      const fileObject = e.clipboardData.files[0] as File;\n\n      setFiles((prev) => [...prev, fileObject]);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <Upload\n        // exclude `video/quicktime` extension as it's not supported by chrome\n        acceptedFileTypes={chromeSupportedVideoTypes}\n        uploadToS3={false}\n        onUploadFile={onFileChange}\n      >\n        {({ onClickHandler }) => (\n          <>\n            <FileChooserWrapper withLeftPadding={withLeftPadding}>\n              <Icon\n                name=\"picture_m\"\n                size={24}\n                onClick={onClickHandler}\n                color=\"--icon-button-neutral-default\"\n              />\n            </FileChooserWrapper>\n            <InputWrapper active={active}>\n              <FilesWrapper>\n                {files.map(\n                  (file, index) =>\n                    file && (\n                      <PreviewFile\n                        file={file}\n                        index={index}\n                        key={file.name}\n                        onRemoveFile={onRemoveFile}\n                      />\n                    ),\n                )}\n              </FilesWrapper>\n              <TextArea\n                ref={ref}\n                disabled={disabled}\n                value={message}\n                placeholder={t('noumena.message.input_placeholder')}\n                noBorder\n                autoResize\n                showScroll\n                hasRightIcon\n                resize={false}\n                maxHeight={136}\n                lineHeight=\"130%\"\n                onChange={onTextChange}\n                onFocus={onTextFocus}\n                onBlur={onTextBlur}\n                onKeyDown={onKeyDown}\n                onPaste={handlePaste}\n              />\n              <EmojiButton\n                onClick={() => setShowEmojiPicker((prev) => !prev)}\n                icon={\n                  <Icon\n                    color=\"--icon-button-neutral-default\"\n                    name=\"emoji_m\"\n                    size={24}\n                  />\n                }\n                size=\"small\"\n              />\n            </InputWrapper>\n\n            {showEmojiPicker && (\n              <EmojiContainer>\n                <SlackSelector onSelect={onAddEmoji} scrollHeight=\"220px\" />\n              </EmojiContainer>\n            )}\n            <SendButtonWrapper active={!!message.trim() || files.length > 0}>\n              <Icon\n                name=\"send_m\"\n                size={24}\n                color=\"--icon-button-neutral-pressed\"\n                onClick={handleSendMessage}\n              />\n            </SendButtonWrapper>\n          </>\n        )}\n      </Upload>\n    </Wrapper>\n  );\n};\n\nexport default MessageInput;\n"],"names":["PreviewFile","file","index","onRemoveFile","isControl","setIsControl","useState","showFullScreen","setShowFullScreen","mediaType","getMediaType","type","blobURL","useMemo","URL","createObjectURL","onMouseEnterHandler","onMouseLeaveHandler","onRemoveHandler","useCallback","PreviewFileWrapper","jsx","PreivewImage","PreviewVideo","RemoveFileWrapper","Icon","LightBox","ViewType","VIDEO","IMAGE","MessageInput","withLeftPadding","onSendMessage","disabled","t","useTranslation","ref","useRef","activeConversationSid","useContext","ActiveConversationContext","loading","setLoading","message","setMessage","files","setFiles","isFocused","setIsFocused","active","trim","length","showEmojiPicker","setShowEmojiPicker","onFileChange","prev","removeItemAtIndex","onTextChange","e","target","value","onAddEmoji","id","cursorPosition","current","selectionStart","before","substring","after","focus","onTextFocus","onTextBlur","handleSendMessage","trimmedMessage","onKeyDown","key","shiftKey","preventDefault","useEffect","handlePaste","clipboardData","fileObject","Wrapper","Upload","chromeSupportedVideoTypes","onClickHandler","jsxs","Fragment","FileChooserWrapper","InputWrapper","FilesWrapper","map","name","TextArea","EmojiButton","EmojiContainer","SlackSelector","SendButtonWrapper"],"mappings":"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"}