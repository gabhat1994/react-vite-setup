{"version":3,"file":"Money-3dfaaa98.js","sources":["../../src/screens/Money/FinancialSolution/Content/Article.tsx","../../src/screens/Money/FinancialSolution/Content/SwiperComponent.tsx","../../src/screens/Money/FinancialSolution/Content/FinancialSolutionHeader.tsx","../../src/screens/Money/styles.ts","../../src/screens/Money/Payments/PaymentSideBar/styles.ts","../../src/screens/Money/Payments/Wallets/Setup.tsx","../../src/screens/Money/Payments/Wallets/Processing.tsx","../../src/screens/Money/Payments/Wallets/Verification.tsx","../../src/screens/Money/Payments/Wallets/Rejected.tsx","../../src/screens/Money/Payments/Wallets/Active.tsx","../../src/screens/Money/Payments/Wallets/Utils.ts","../../src/screens/Money/Payments/Wallets/useWallets.ts","../../src/screens/Money/Payments/Wallets/Error.tsx","../../src/screens/Money/Payments/Wallets/index.tsx","../../src/screens/Money/Payments/CapitalQuotient/style.ts","../../src/screens/Money/Payments/CapitalQuotient/index.tsx","../../src/screens/Money/Payments/Tokens/index.tsx","../../src/screens/Money/Payments/PaymentSideBar/index.tsx","../../src/screens/Money/Payments/PaymentMain/styles.ts","../../src/screens/Money/Payments/PaymentMain/index.tsx","../../src/screens/Money/FinancialSolution/HowItWorksSection/styles.tsx","../../src/screens/Money/FinancialSolution/HowItWorksSection/SwiperFreeMode.tsx","../../src/screens/Money/FinancialSolution/HowItWorksSection/HowItWorksSection.tsx","../../src/screens/Money/FinancialSolution/NoumsForYouSection/styles.tsx","../../src/screens/Money/FinancialSolution/NoumsForYouSection/SwiperFreeMode.tsx","../../src/screens/Money/FinancialSolution/NoumsForYouSection/NoumsForYouSection.tsx","../../src/screens/Money/index.tsx"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router';\nimport { t } from 'i18next';\nimport { Button } from '@/components/Button';\nimport * as Storyblok from '@/services/rest/storyblok';\nimport { TSpan } from '@/components/Typography';\nimport { Stack } from '@/layout';\nimport routes from '@/constants/routes';\nimport { useToast } from '@/hooks/toast';\nimport { useLaunchDarkly } from '@/hooks/launchDarkly';\nimport { useAuth } from '@/features/auth/contexts';\nimport {\n  type FinancialSolution,\n  type ArticleRootObject,\n  type ArticleContent,\n} from '../../types';\nimport {\n  ButtonContainer,\n  ArticleContainer,\n  ArticleHeader,\n  LoadingContainer,\n  HeaderText,\n  BodyTextArticle,\n} from './styles';\n\nconst Article = (props: { data: FinancialSolution }) => {\n  const { flags } = useLaunchDarkly();\n  const { addToast } = useToast();\n  const { isActive } = useAuth();\n  const [content, setContent] = useState<ArticleContent | undefined>(undefined);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetch = async () => {\n      const { data }: { data: ArticleRootObject } =\n        await Storyblok.getArticleDetails(props.data.Article.cached_url);\n      setContent(data?.story?.content);\n    };\n    fetch();\n  }, [props.data.Article.cached_url]);\n\n  const navigateToArticleDetail = useCallback(\n    (slug) => {\n      navigate({\n        pathname: routes.MONEY_ARTICLE,\n        search: `?slug=${slug}`,\n      });\n    },\n    [navigate],\n  );\n\n  if (!content) {\n    return (\n      <ArticleContainer isAppUiV2={flags.newAppNavigation}>\n        <LoadingContainer>\n          <Button neutral loading />\n        </LoadingContainer>\n      </ArticleContainer>\n    );\n  }\n  return (\n    <ArticleContainer isAppUiV2={flags.newAppNavigation}>\n      <ArticleHeader>\n        <Stack>\n          {/* <Icon name=\"grow_m\" size={56} />\n          <Spacer width={10} /> */}\n          <HeaderText>\n            <TSpan\n              font=\"body-l-bold\"\n              colorToken=\"--text-body-neutral-highlighted\"\n            >\n              {content.Title}\n            </TSpan>\n          </HeaderText>\n        </Stack>\n      </ArticleHeader>\n      <BodyTextArticle>\n        <TSpan font=\"body-m\" colorToken=\"--text-card-neutral-default\">\n          {content.Short_Description}\n        </TSpan>\n      </BodyTextArticle>\n      <ButtonContainer>\n        <Button\n          secondary\n          size=\"full_small\"\n          onClick={() => {\n            if (isActive)\n              navigateToArticleDetail(props.data.Article.cached_url);\n            else\n              addToast(\n                'error',\n                'none',\n                `${t('noumena.money.setup_wallet.not.authorized')}`,\n              );\n          }}\n        >\n          {content.Main_Button_Label}\n        </Button>\n      </ButtonContainer>\n    </ArticleContainer>\n  );\n};\n\nexport default Article;\n","import { useState, type FC } from 'react';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper-bundle.min.css';\nimport 'swiper/swiper.min.css';\nimport 'swiper/components/pagination/pagination.min.css';\nimport type SwiperCore from 'swiper';\nimport { Icon } from '@/components/Icon';\nimport { Spacer } from '@/layout/Stack';\nimport { DeviceTypeEnum, useDeviceType } from '@/hooks';\nimport useEvent from '@/hooks/useEvent';\nimport { StyledSwiperControls } from './styles';\n\ninterface SwiperComponentProps {\n  SwiperSlidesOptions: JSX.Element[] | undefined;\n  slidesPerView: number;\n  handleHidePadding: (progress: number) => void;\n}\n\nconst SwiperComponent: FC<SwiperComponentProps> = ({\n  SwiperSlidesOptions,\n  slidesPerView,\n  handleHidePadding,\n}) => {\n  const [disablePrevBtn, setDisablePrevBtn] = useState(true);\n  const [disableNextBtn, setDisableNextBtn] = useState(false);\n  const [swiper, setSwiper] = useState<SwiperCore>();\n  const deviceType = useDeviceType();\n\n  const prevSlide = useEvent(() => {\n    if (swiper && !swiper.destroyed) {\n      swiper.slidePrev();\n      setDisableNextBtn(false);\n    }\n  });\n\n  const nextSlide = useEvent(() => {\n    if (swiper && !swiper.destroyed) {\n      swiper.slideNext();\n      setDisablePrevBtn(false);\n    }\n  });\n\n  const showArraowsForScrolling = SwiperSlidesOptions\n    ? SwiperSlidesOptions?.length > slidesPerView\n    : false;\n\n  return (\n    <Swiper\n      slidesPerView={slidesPerView}\n      spaceBetween={16}\n      freeMode={true}\n      className=\"mySwiper\"\n      onInit={(swiperInstance) => setSwiper(swiperInstance)}\n      onReachBeginning={() => setDisablePrevBtn(true)}\n      onActiveIndexChange={({ activeIndex }) => handleHidePadding(activeIndex)}\n      onReachEnd={() => {\n        const progress = swiper?.progress || 0;\n        if (progress > 0.5) setDisableNextBtn(true);\n      }}\n      onSliderMove={({ progress }) => handleHidePadding(progress)}\n    >\n      <StyledSwiperControls>\n        {showArraowsForScrolling && (\n          <div className=\"swiper-icons\">\n            <div className=\"stepper\">\n              <Icon\n                className={disablePrevBtn ? 'disabled' : ''}\n                name=\"chevron_left_m\"\n                size={16}\n                color=\"--icon-button-neutral-alt-default\"\n                onClick={prevSlide}\n              />\n            </div>\n            <div className=\"stepper\">\n              <Icon\n                className={disableNextBtn ? 'disabled' : ''}\n                name=\"chevron_right_m\"\n                size={16}\n                color=\"--icon-button-neutral-alt-default\"\n                onClick={nextSlide}\n              />\n            </div>\n          </div>\n        )}\n        {deviceType !== DeviceTypeEnum.MOBILE && <Spacer height={36} />}\n      </StyledSwiperControls>\n      {SwiperSlidesOptions?.map((slide) => (\n        <SwiperSlide key={slide.key}>{slide}</SwiperSlide>\n      ))}\n    </Swiper>\n  );\n};\n\nexport default SwiperComponent;\n","import { memo, useMemo, useState } from 'react';\nimport { breakpoints } from '@/constants/devices';\nimport { useLaunchDarkly } from '@/hooks/launchDarkly';\nimport { useWindowDimensions } from '@/hooks/dimensions';\nimport { Spacer } from '@/layout/Stack';\nimport {\n  FinancialSolutionWrapper,\n  Title,\n  SubTitle,\n  SubSubTitle,\n  TitleWrapper,\n  FinancialSolutionHeaderWrapper,\n  ArticlesContainer,\n  ArticlesContainerFlex,\n} from './styles';\nimport { type Section01 } from '../../types';\nimport Article from './Article';\nimport SwiperComponent from './SwiperComponent';\n\nfunction getSlidesPerView(width: number, isAppUiV2: boolean) {\n  let slidesPerView = 1;\n  if (isAppUiV2) {\n    slidesPerView = 1.25;\n    if (width >= breakpoints.TABLET && width < breakpoints.LAPTOP) {\n      slidesPerView = 2.5;\n    } else if (width >= breakpoints.LAPTOP && width < breakpoints.LAPTOP_SM) {\n      slidesPerView = 1.75;\n    } else if (width >= breakpoints.LAPTOP_SM && width < breakpoints.LAPTOP_L) {\n      slidesPerView = 2.25;\n    } else if (width >= breakpoints.LAPTOP_L) {\n      slidesPerView = 2.75;\n    }\n  } else {\n    slidesPerView = 1;\n    // TODO: Simplyfiy responsiveness calculation\n    // If we consider the standerd slasp in 'breakponits' object it looks odd for uneven margin between two slides\n    if (width > breakpoints.LAPTOP_M) {\n      slidesPerView = 2.4;\n    } else if (\n      width <= breakpoints.LAPTOP_M &&\n      width > breakpoints.LAPTOP_M - 30\n    ) {\n      slidesPerView = 2.1;\n    } else if (\n      width <= breakpoints.LAPTOP_M - 30 &&\n      width > breakpoints.LAPTOP_SM + 90\n    ) {\n      slidesPerView = 1.9;\n    } else if (\n      width <= breakpoints.LAPTOP_SM + 90 &&\n      width > breakpoints.LAPTOP_SM + 30\n    ) {\n      slidesPerView = 1.7;\n    } else if (\n      width <= breakpoints.LAPTOP_SM + 30 &&\n      width > breakpoints.LAPTOP_SM\n    ) {\n      slidesPerView = 1.6;\n    } else if (\n      width <= breakpoints.LAPTOP_SM &&\n      width > breakpoints.LAPTOP + 100\n    ) {\n      slidesPerView = 1.5;\n    } else if (\n      width <= breakpoints.LAPTOP + 100 &&\n      width > breakpoints.LAPTOP + 66\n    ) {\n      slidesPerView = 1.4;\n    } else if (\n      width <= breakpoints.LAPTOP + 66 &&\n      width > breakpoints.TABLET_L\n    ) {\n      slidesPerView = 1.15;\n    } else if (\n      width <= breakpoints.TABLET_L &&\n      width > breakpoints.TABLET + 152\n    ) {\n      slidesPerView = 2.3;\n    } else if (\n      width <= breakpoints.TABLET + 152 &&\n      width > breakpoints.TABLET + 112\n    ) {\n      slidesPerView = 2.3;\n    } else if (\n      width <= breakpoints.TABLET + 112 &&\n      width > breakpoints.TABLET + 52\n    ) {\n      slidesPerView = 2.1;\n    } else if (\n      width <= breakpoints.TABLET + 52 &&\n      width > breakpoints.TABLET - 48\n    ) {\n      slidesPerView = 1.8;\n    } else if (\n      width <= breakpoints.TABLET - 48 &&\n      width > breakpoints.MOBILE_MAX - 100\n    ) {\n      slidesPerView = 1.63;\n    } else if (\n      width <= breakpoints.MOBILE_MAX - 100 &&\n      width > breakpoints.MOBILE_MAX - 148\n    ) {\n      slidesPerView = 1.51;\n    } else if (\n      width <= breakpoints.MOBILE_MAX - 148 &&\n      width > breakpoints.MOBILE_L + 155\n    ) {\n      slidesPerView = 1.4;\n    } else if (\n      width <= breakpoints.MOBILE_L + 155 &&\n      width > breakpoints.MOBILE_L + 75\n    ) {\n      slidesPerView = 1.1;\n    } else if (\n      width <= breakpoints.MOBILE_L + 75 &&\n      width > breakpoints.MOBILE_L + 15\n    ) {\n      slidesPerView = 1;\n    } else if (\n      width <= breakpoints.MOBILE_L + 15 &&\n      width > breakpoints.MOBILE_S\n    ) {\n      slidesPerView = 0.9;\n    } else if (width <= breakpoints.MOBILE_S) {\n      slidesPerView = 0.8;\n    }\n  }\n\n  return slidesPerView;\n}\n\ntype FinancialSolutionHeaderProps = {\n  data: Section01 | undefined;\n};\n\nconst FinancialSolutionHeader = (props: FinancialSolutionHeaderProps) => {\n  const { data } = props;\n  const [hidePadding, setHidePadding] = useState(false);\n  const { width } = useWindowDimensions();\n  const { flags } = useLaunchDarkly();\n\n  const slidesPerView = getSlidesPerView(width, flags.newAppNavigation);\n\n  const SwiperSlidesOptions = useMemo(\n    () =>\n      data?.Financial_Solutions?.map((item) => (\n        <Article key={item.Article.id} data={item} />\n      )),\n    [data?.Financial_Solutions],\n  );\n\n  const handleHidePadding = (progress: number) => {\n    if (progress > 0) {\n      setHidePadding(true);\n    } else {\n      setHidePadding(false);\n    }\n  };\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\n      <FinancialSolutionWrapper>\n        <TitleWrapper>\n          <Title\n            font=\"heading-m-bold\"\n            colorToken=\"--text-card-header-neutral-alt-default\"\n          >\n            {data?.Title || ''}\n          </Title>\n          <Spacer height={8} />\n          <SubTitle\n            font=\"body-l\"\n            colorToken=\"--text-card-brand-secondary-default\"\n          >\n            {data?.Description || ''}\n          </SubTitle>\n          <SubSubTitle\n            font=\"footnote-bold\"\n            colorToken=\"--text-card-neutral-alt-default\"\n          >\n            {data?.Subtitle || ''}\n          </SubSubTitle>\n        </TitleWrapper>\n      </FinancialSolutionWrapper>\n      <FinancialSolutionHeaderWrapper hidePadding={hidePadding}>\n        <ArticlesContainer>\n          <ArticlesContainerFlex>\n            {!!SwiperSlidesOptions?.length && (\n              <SwiperComponent\n                SwiperSlidesOptions={SwiperSlidesOptions}\n                slidesPerView={slidesPerView}\n                handleHidePadding={handleHidePadding}\n              />\n            )}\n          </ArticlesContainerFlex>\n        </ArticlesContainer>\n      </FinancialSolutionHeaderWrapper>\n    </div>\n  );\n};\n\nexport default memo(FinancialSolutionHeader);\n","import styled from 'styled-components';\nimport { sizes, mediaSizes, breakpoints } from '@/constants/devices';\n\nconst MoneyWrapper = styled.div<{ isAppUiV2: boolean }>`\n  display: flex;\n  font-family: var(--font-family);\n  flex-direction: column;\n  justify-content: flex-start;\n  height: 100%;\n  gap: 16px;\n\n  ${(props) =>\n    props.isAppUiV2\n      ? `\n  max-width: 100vw;\n`\n      : `\n  @media (width: ${sizes.TABLET_L}) {\n    width: 100%\n    max-width: 925px;\n  }\n  @media (min-width: ${breakpoints.TABLET_L + 1}px) {\n    width: calc(100vw - 512px);\n  }\n  @media (min-width: ${sizes.LAPTOP_L}) {\n    max-width: 925px;\n  }\n  @media (max-width: ${mediaSizes.TABLET_MAX}) {\n    margin-bottom: 60px;\n  }\n`}\n`;\n\nexport const SectionWarpper = styled.div<{ isAppUiV2: boolean }>`\n  ${(props) =>\n    !props.isAppUiV2 &&\n    `\n  @media only screen and (max-width: ${sizes.TABLET_L}) and (min-width: ${sizes.TABLET}) {\n    padding: 0 16px;\n  }\n`}\n`;\nexport default MoneyWrapper;\n","import styled from 'styled-components';\nimport { mediaSizes } from '@/constants/devices';\n\nconst PaymentSideBarWrapper = styled.div`\n  width: 288px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  @media (max-width: ${mediaSizes.TABLET_MAX}) {\n    display: none;\n  }\n`;\nexport default PaymentSideBarWrapper;\n","import { type FC, useCallback, useEffect, useState } from 'react';\nimport { t } from 'i18next';\nimport { useNavigate } from 'react-router';\nimport { Button } from '@/components/Button';\nimport ROUTES from '@/constants/routes';\nimport { useGetCurrentUserStatusLazyQuery } from '@/apollo/graphql';\nimport { DeviceTypeEnum, useDeviceType, useToast } from '@/hooks';\nimport { useLaunchDarkly } from '@/hooks/launchDarkly';\nimport { Icon } from '@/components/Icon';\nimport { Spacer } from '@/layout';\nimport * as Styles from '../styles';\n\nconst Setup: FC = () => {\n  const {\n    flags: { payments },\n  } = useLaunchDarkly();\n  const [gqlCurrentUserStatus, { loading }] =\n    useGetCurrentUserStatusLazyQuery();\n  const navigate = useNavigate();\n  const deviceType = useDeviceType();\n  const { addToast } = useToast();\n  const [isActiveUser, setIsActiveUser] = useState(false);\n  const handleSetUpWallet = useCallback(() => {\n    if (isActiveUser) {\n      navigate(ROUTES.WALLET_SETUP);\n      return;\n    }\n    addToast(\n      'error',\n      'none',\n      `${t('noumena.money.setup_wallet.not.authorized')}`,\n    );\n  }, [isActiveUser, addToast, navigate]);\n  useEffect(() => {\n    gqlCurrentUserStatus({\n      fetchPolicy: 'network-only',\n      onCompleted(data) {\n        if (\n          data.currentUser?.userStatus &&\n          data.currentUser.userStatus === 'ACTIVE'\n        ) {\n          setIsActiveUser(true);\n        }\n      },\n    });\n  }, [gqlCurrentUserStatus]);\n  return (\n    <Styles.CardWrapper style={{ height: '100%' }}>\n      <Styles.CardHeader>\n        <Styles.CardInformation\n          font=\"body-l-bold\"\n          colorToken=\"--text-card-header-neutral-highlighted\"\n        >\n          {t('noumena.money.wallet.title')}\n        </Styles.CardInformation>\n      </Styles.CardHeader>\n      <Styles.ContentWrapper\n        style={\n          deviceType === DeviceTypeEnum.TABLET\n            ? { height: '100%', width: '50%', alignSelf: 'center' }\n            : undefined\n        }\n      >\n        <Icon\n          name=\"wallet_m\"\n          size={96}\n          color=\"--icon-card-placeholder-neutral-default\"\n        />\n        <Spacer height={16} />\n        <Styles.HelperText\n          font=\"body-m\"\n          colorToken=\"--text-placeholder-neutral-default\"\n        >\n          {t('noumena.money.wallet.helperText')}\n        </Styles.HelperText>\n      </Styles.ContentWrapper>\n      <Styles.SetupWalletButton data-testid=\"money-wallet-setup-button\">\n        <Button\n          secondary\n          onClick={handleSetUpWallet}\n          size=\"full_small\"\n          loading={loading}\n          disabled={!payments}\n        >\n          {t('noumena.money.wallet.button.setup.wallet')}\n        </Button>\n      </Styles.SetupWalletButton>\n    </Styles.CardWrapper>\n  );\n};\n\nexport default Setup;\n","import { t } from 'i18next';\nimport { Spacer } from '@/layout';\nimport * as Styles from '../styles';\n\ntype ProcessingProps = {\n  refetchWallet: () => void;\n  allowRefetch: boolean;\n};\n\nconst Processing = ({ refetchWallet, allowRefetch }: ProcessingProps) => {\n  const handleRefresh = () => {\n    refetchWallet();\n  };\n  return (\n    <Styles.CardWrapper\n      style={{\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'space-around',\n      }}\n    >\n      <Styles.CardHeader>\n        <Styles.CardInformation\n          font=\"body-l-bold\"\n          colorToken=\"--text-card-header-neutral-highlighted\"\n        >\n          {t('noumena.money.wallet.title')}\n        </Styles.CardInformation>\n      </Styles.CardHeader>\n      <Spacer height={16} />\n      <Styles.ContentWrapper style={{ gap: '16px' }}>\n        <Styles.CardInformation\n          style={{ width: '100%' }}\n          font=\"body-l-bold\"\n          colorToken=\"--text-card-header-neutral-highlighted\"\n        >\n          {t('noumena.money.wallet.processing.titile')}\n        </Styles.CardInformation>\n        <Spacer height={12} />\n        <Styles.HelperText\n          font=\"body-m\"\n          colorToken=\"--text-placeholder-neutral-default\"\n        >\n          {t('noumena.money.wallet.processing.sub.titile')}.{' '}\n          {allowRefetch && (\n            <>\n              {' '}\n              Click\n              <Styles.RefreshLink onClick={handleRefresh}>\n                {' '}\n                refresh{' '}\n              </Styles.RefreshLink>\n              to view the latest status.{' '}\n            </>\n          )}\n        </Styles.HelperText>\n      </Styles.ContentWrapper>\n    </Styles.CardWrapper>\n  );\n};\n\nexport default Processing;\n","import { t } from 'i18next';\nimport { Button } from '@/components/Button';\nimport { Spacer } from '@/layout';\nimport { DeviceTypeEnum, useDeviceType } from '@/hooks';\nimport * as Styles from '../styles';\n\ntype VerificationProps = {\n  helperText: string;\n  buttonText: string;\n  onNavigate: () => void;\n};\n\nconst Verification = ({\n  helperText,\n  buttonText,\n  onNavigate,\n}: VerificationProps) => {\n  const deviceType = useDeviceType();\n\n  return (\n    <Styles.CardWrapper style={{ height: '100%' }}>\n      <Styles.CardHeader>\n        <Styles.CardInformation\n          font=\"body-l-bold\"\n          colorToken=\"--text-card-header-neutral-highlighted\"\n        >\n          {t('noumena.money.wallet.title')}\n        </Styles.CardInformation>\n      </Styles.CardHeader>\n      <Styles.ContentWrapper\n        style={\n          deviceType === DeviceTypeEnum.TABLET\n            ? { height: '100%', width: '50%', alignSelf: 'center' }\n            : undefined\n        }\n      >\n        <Styles.CardInformation\n          font=\"body-l-bold\"\n          colorToken=\"--text-card-header-neutral-highlighted\"\n        >\n          {t('noumena.money.wallet.verification.sub.title')}\n        </Styles.CardInformation>\n        <Spacer height={16} />\n        <Styles.HelperText\n          font=\"body-m\"\n          colorToken=\"--text-placeholder-neutral-default\"\n        >\n          {helperText}\n        </Styles.HelperText>\n      </Styles.ContentWrapper>\n      <Styles.SetupWalletButton data-testid=\"money-wallet-setup-button\">\n        <Button secondary size=\"full_small\" onClick={onNavigate}>\n          {buttonText}\n        </Button>\n      </Styles.SetupWalletButton>\n    </Styles.CardWrapper>\n  );\n};\n\nexport default Verification;\n","import { type FC } from 'react';\nimport { t } from 'i18next';\nimport { Spacer } from '@/layout';\nimport * as Styles from '../styles';\n\nconst Rejected: FC = () => (\n  <Styles.CardWrapper\n    style={{ height: '100%', display: 'flex', justifyContent: 'space-around' }}\n  >\n    <Styles.CardHeader>\n      <Styles.CardInformation\n        font=\"body-l-bold\"\n        colorToken=\"--text-card-header-neutral-highlighted\"\n      >\n        {t('noumena.money.wallet.title')}\n      </Styles.CardInformation>\n    </Styles.CardHeader>\n    <Spacer height={16} />\n    <Styles.ContentWrapper style={{ gap: '16px' }}>\n      <Styles.CardInformation\n        style={{ width: '100%' }}\n        font=\"body-l-bold\"\n        colorToken=\"--text-card-header-neutral-highlighted\"\n      >\n        {t('noumena.money.wallet.rejected.title')}\n      </Styles.CardInformation>\n      <Spacer height={12} />\n      <Styles.HelperText\n        font=\"body-m\"\n        colorToken=\"--text-placeholder-neutral-default\"\n      >\n        {t('noumena.money.wallet.rejected.sub.title')}\n      </Styles.HelperText>\n    </Styles.ContentWrapper>\n  </Styles.CardWrapper>\n);\n\nexport default Rejected;\n","import { t } from 'i18next';\nimport { type FC, useCallback } from 'react';\nimport { useNavigate } from 'react-router';\nimport ROUTES from '@/constants/routes';\nimport { Icon } from '@/components/Icon';\nimport { Button } from '@/components/Button';\nimport { Spacer, Stack } from '@/layout';\nimport { TransactionModalType } from '@/features/TransactionModal';\nimport { type CurrencyEnum } from '@/apollo/generated/types';\nimport convertToCurrency from '@/utils/currencyToCurrency';\nimport { TSpan } from '@/components/Typography';\nimport * as Styles from '../styles';\n\ninterface ActiveWalletProps {\n  handlePayment: (\n    type: TransactionModalType.TRANSFER | TransactionModalType.PAY,\n  ) => void;\n  total:\n    | {\n        __typename?: 'CurrencyData' | undefined;\n        currency?: CurrencyEnum | null | undefined;\n        value?: number | null | undefined;\n      }\n    | null\n    | undefined;\n}\n\nconst Active: FC<ActiveWalletProps> = ({ total, handlePayment }) => {\n  const navigate = useNavigate();\n  const handleNavigation = useCallback(async () => {\n    navigate(ROUTES.MONEY_DETAILS);\n  }, [navigate]);\n\n  return (\n    <Styles.CardWrapper>\n      <Styles.CardHeader>\n        <Styles.CardInformation\n          font=\"body-l-bold\"\n          colorToken=\"--text-card-header-neutral-highlighted\"\n        >\n          {t('noumena.money.wallet.title')}\n        </Styles.CardInformation>\n        <Button\n          size=\"small\"\n          style={{ width: '40px', height: '40px' }}\n          leftIcon={\n            <Icon\n              name=\"arrow_right_m\"\n              size={24}\n              color=\"--icon-button-neutral-default\"\n            />\n          }\n          data-testid=\"stepTwoBackButton\"\n          tertiary\n          onClick={() => handleNavigation()}\n        />\n      </Styles.CardHeader>\n      <Styles.ContentWrapper>\n        <TSpan font=\"footnote\" colorToken=\"--text-card-neutral-default\">\n          {t('noumena.money.wallet.verification.total.balance')}\n        </TSpan>\n        <Spacer height={2} />\n        <TSpan font=\"heading-m\" colorToken=\"--text-card-neutral-highlighted\">\n          {convertToCurrency(total ? total.value! : 0, total?.currency!, 2)}\n        </TSpan>\n        <Spacer height={16} />\n        <Stack\n          fullWidth\n          gap={10}\n          align=\"center\"\n          justify=\"center\"\n          style={{ paddingLeft: '16px', paddingRight: '16px' }}\n        >\n          <Button\n            size=\"full_small\"\n            secondary\n            leftIcon={\n              <Icon\n                name=\"transfer_m\"\n                size={24}\n                color=\"--icon-button-brand-secondary-default\"\n              />\n            }\n            onClick={() => handlePayment(TransactionModalType.TRANSFER)}\n          >\n            {t('noumena.money.transer')}\n          </Button>\n          <Button\n            onClick={() => handlePayment(TransactionModalType.PAY)}\n            size=\"full_small\"\n            secondary\n            leftIcon={\n              <Icon\n                name=\"pay\"\n                size={24}\n                color=\"--icon-button-brand-secondary-default\"\n              />\n            }\n            data-testid=\"active-wallet-pay\"\n          >\n            {t('noumena.money.pay')}\n          </Button>\n        </Stack>\n      </Styles.ContentWrapper>\n    </Styles.CardWrapper>\n  );\n};\n\nexport default Active;\n","import { DocumentStatusV2, EWalletStatus } from './types';\n\nconst canUploadDocument = (status: string) =>\n  !Object.values(DocumentStatusV2).includes(status as DocumentStatusV2);\n\nconst canCreateWallet = (status: string) =>\n  status === EWalletStatus.CUSTOMER_NOT_CREATED;\n\nexport const Utils = {\n  canUploadDocument,\n  canCreateWallet,\n};\n","import { useGetWalletQuery } from '@/apollo/graphql';\nimport { useNavigate } from 'react-router';\nimport ROUTES from '@/constants/routes';\nimport { useCallback } from 'react';\nimport { NetworkStatus } from '@apollo/client';\nimport { useAuth } from '@/features/auth/contexts';\nimport { t } from 'i18next';\nimport { Utils } from './Utils';\nimport {\n  CustomerType,\n  DocumentStatusV2,\n  EWalletStatus,\n  NoumenaStatus,\n  ProviderStatus,\n} from './types';\n\nexport const useWallets = () => {\n  const { data, refetch, networkStatus, error } = useGetWalletQuery({\n    fetchPolicy: 'cache-and-network',\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const { isPending } = useAuth();\n\n  const navigate = useNavigate();\n\n  const applicationReview = useCallback(() => {\n    navigate(ROUTES.APPLICATION_REVIEW);\n  }, [navigate]);\n\n  const walletSetupRetry = useCallback(() => {\n    navigate(ROUTES.WALLET_SETUP_RETRY);\n  }, [navigate]);\n\n  const { status, docStatus, customerType, noumenaStatus, providerStatus } =\n    data?.getWalletBalance || {};\n\n  const createWallet = Utils.canCreateWallet(status || '');\n\n  const walletRejected =\n    noumenaStatus === NoumenaStatus.REJECTED ||\n    providerStatus === ProviderStatus.DEACTIVATED ||\n    providerStatus === ProviderStatus.SUSPENDED;\n\n  const walletRetry =\n    customerType === CustomerType.UNVERIFIED ||\n    (providerStatus === ProviderStatus.RETRY &&\n      docStatus !== DocumentStatusV2.UPLOADED);\n\n  const uploadDocument =\n    (providerStatus === ProviderStatus.VERIFIED ||\n      providerStatus === ProviderStatus.DOCUMENT) &&\n    customerType === CustomerType.VERIFIED &&\n    Utils.canUploadDocument(docStatus || '');\n\n  const showWallet = noumenaStatus === NoumenaStatus.APPROVED;\n\n  const walletProcessing =\n    !walletRetry &&\n    !uploadDocument &&\n    !showWallet &&\n    !walletRejected &&\n    status !== EWalletStatus.CUSTOMER_NOT_CREATED;\n\n  const balance = data?.getWalletBalance?.total;\n\n  const canRefreshWallet = !providerStatus;\n\n  const errorMessage = isPending\n    ? t('noumena.money.setup_wallet.not.authorized.v2')\n    : t('noumena.money.setup_wallet.error.generic');\n\n  return {\n    refetch,\n    loading:\n      networkStatus === NetworkStatus.loading ||\n      networkStatus === NetworkStatus.refetch,\n    canRefreshWallet,\n    wallet: {\n      balance,\n    },\n    render: {\n      createWallet,\n      walletRejected,\n      walletRetry,\n      uploadDocument,\n      showWallet,\n      walletProcessing,\n      errorScreen: {\n        show: !!error,\n        errorMessage,\n      },\n    },\n    goTo: {\n      applicationReview,\n      walletSetupRetry,\n    },\n  };\n};\n","import { EmptyWalletCard, HelperText } from '../styles';\n\ntype ErrorProps = {\n  message: string;\n};\n\nexport const Error = ({ message }: ErrorProps) => (\n  <EmptyWalletCard>\n    <HelperText font=\"body-m\" colorToken=\"--text-placeholder-neutral-default\">\n      {message}\n    </HelperText>\n  </EmptyWalletCard>\n);\n","import { Spinner } from '@/components/Spinner';\nimport { t } from 'i18next';\nimport { useState } from 'react';\nimport {\n  TransactionModal,\n  TransactionModalType,\n} from '@/features/TransactionModal';\nimport Setup from './Setup';\nimport Processing from './Processing';\nimport Verification from './Verification';\nimport Rejected from './Rejected';\nimport Active from './Active';\n\nimport { WalletWrapper, EmptyWalletCard } from '../styles';\nimport { useWallets } from './useWallets';\nimport { Error } from './Error';\n\nconst Wallet = () => {\n  const [open, setOpen] = useState(false);\n  const [modalType, setModalType] = useState<\n    TransactionModalType.TRANSFER | TransactionModalType.PAY\n  >(TransactionModalType.PAY);\n  const { refetch, render, loading, goTo, wallet, canRefreshWallet } =\n    useWallets();\n\n  const handlePayment = (\n    paymentType: TransactionModalType.TRANSFER | TransactionModalType.PAY,\n  ) => {\n    setModalType(paymentType);\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n    refetch();\n  };\n\n  const getWallet = () => {\n    let walletComponent = null;\n\n    if (render.errorScreen.show) {\n      walletComponent = <Error message={render.errorScreen.errorMessage} />;\n    } else if (render.createWallet) {\n      walletComponent = <Setup />;\n    } else if (render.showWallet) {\n      walletComponent = (\n        <Active handlePayment={handlePayment} total={wallet.balance} />\n      );\n    } else if (render.walletRejected) {\n      walletComponent = <Rejected />;\n    } else if (render.uploadDocument) {\n      walletComponent = (\n        <Verification\n          helperText={t('noumena.money.wallet.verification.helper.text')}\n          buttonText={t('noumena.money.wallet.verification.button.title')}\n          onNavigate={goTo.applicationReview}\n        />\n      );\n    } else if (render.walletRetry) {\n      walletComponent = (\n        <Verification\n          helperText={t('noumena.money.wallet.verification.retry_helper.text')}\n          onNavigate={goTo.walletSetupRetry}\n          buttonText={t('noumena.money.wallet.verification.button.retry_title')}\n        />\n      );\n    } else {\n      walletComponent = (\n        <Processing refetchWallet={refetch} allowRefetch={canRefreshWallet} />\n      );\n    }\n\n    return walletComponent;\n  };\n  return (\n    <WalletWrapper>\n      {loading ? (\n        <EmptyWalletCard>\n          <Spinner />\n        </EmptyWalletCard>\n      ) : (\n        getWallet()\n      )}\n      {open && (\n        <TransactionModal\n          type={modalType}\n          open={open}\n          handleClose={handleClose}\n        />\n      )}\n    </WalletWrapper>\n  );\n};\n\nexport default Wallet;\n","import styled from 'styled-components';\nimport { Icon } from '@/components/Icon';\n\nexport const PrivacyDropdownSelctedValue = styled.input`\n  border: 0;\n  color: var(--text-card-neutral-default);\n  font-style: normal;\n  font-weight: var(--font-body-medium-regular-weight);\n  font-size: var(--font-body-medium-size);\n  outline: none;\n  display: inline-flex;\n  align-items: center;\n  width: 30%;\n`;\n\nexport const RightIcon = styled(Icon)<{ isOpen?: boolean }>`\n  transition: transform 0.3s;\n  ${({ isOpen }) => isOpen && 'transform: rotate(180deg)'};\n  // padding: -4px;\n  // width: 9.2px !important;\n  // height: 5.2px !important;\n  align-self: center;\n`;\n","import { t } from 'i18next';\nimport * as Sentry from '@sentry/react';\nimport { useEffect, useState, useCallback } from 'react';\nimport { Icon } from '@/components/Icon';\nimport { Spacer } from '@/layout';\nimport { Spinner } from '@/components/Spinner';\nimport { TSpan } from '@/components/Typography';\nimport { useUpdatePrivacyMutation } from '@/apollo/graphql';\nimport { Dropdown, type DropdownValueType } from '@/components/Dropdown';\nimport { useCQ, useGenerateTokenForCQ } from '@/features/money/hooks';\nimport { Button } from '@/components/Button';\nimport { DeviceTypeEnum, useDeviceType, useToast } from '@/hooks';\nimport { PrivacyDropdownSelctedValue, RightIcon } from './style';\nimport * as Styles from '../styles';\n\nconst CapitalQuotient = () => {\n  const cqURl = process.env.VITE_CQ_URL;\n  const deviceType = useDeviceType();\n  const [updatePrivacyMutation] = useUpdatePrivacyMutation();\n  const { cqData } = useCQ();\n  const { addToast } = useToast();\n  const generateTokenForCQ = useGenerateTokenForCQ();\n  const [privacy, setPrivacy] = useState<DropdownValueType<string>>({\n    label: '',\n    key: '',\n    type: 'value',\n    value: '',\n  });\n\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  useEffect(() => {\n    const newData: DropdownValueType<string> = {\n      ...privacy,\n      key:\n        (cqData?.visibility as string).charAt(0).toUpperCase() +\n        (cqData?.visibility as string).slice(1),\n      type: 'value',\n      value:\n        (cqData?.visibility as string).charAt(0).toUpperCase() +\n        (cqData?.visibility as string).slice(1),\n    };\n    setPrivacy(newData);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cqData]);\n\n  const options: DropdownValueType<string>[] = [\n    {\n      key: 'private',\n      label: (\n        <TSpan\n          font=\"body-m-bold\"\n          colorToken=\"--text-tablecell-header-neutral-highlighted\"\n        >\n          {t(`noumena.money.cq.private`)}\n        </TSpan>\n      ),\n      type: 'value',\n      value: 'private',\n    },\n    {\n      key: 'public',\n      label: (\n        <TSpan\n          font=\"body-m-bold\"\n          colorToken=\"--text-tablecell-header-neutral-highlighted\"\n        >\n          {t(`noumena.money.cq.public`)}\n        </TSpan>\n      ),\n      type: 'value',\n      value: 'public',\n    },\n  ];\n\n  const handleNavigation = useCallback(async () => {\n    const { token, error } = await generateTokenForCQ();\n    if (token) {\n      const formedUrl: string = `${cqURl}?access_token=${token}`;\n      window.open(formedUrl, '_blank');\n    }\n    if (error) {\n      addToast('error', 'none', `${error.message}`);\n    }\n  }, [addToast, cqURl, generateTokenForCQ]);\n\n  const updatePrivacy = useCallback(\n    async (option) => {\n      setPrivacy(option);\n      await updatePrivacyMutation({\n        variables: {\n          input: {\n            noumId: cqData.noumId || '',\n            visibility: option.value.toUpperCase(),\n          },\n        },\n        onError: ({ networkError = null, graphQLErrors = [] }) => {\n          const [err] = graphQLErrors;\n          Sentry.captureException(new Error(err?.message ?? networkError), {\n            tags: {\n              section: 'deleteQuestionMutation',\n            },\n          });\n        },\n      });\n    },\n    [cqData.noumId, updatePrivacyMutation],\n  );\n\n  return (\n    <Styles.CardWrapper style={{ padding: 0 }}>\n      <Styles.CardHeader style={{ padding: '16px 16px 16px 16px' }}>\n        <Styles.CardInformation\n          font=\"body-l-bold\"\n          colorToken=\"--text-card-header-neutral-highlighted\"\n        >\n          {t('noumena.money.wallet.capitalquotient')}\n        </Styles.CardInformation>\n        <Button\n          size=\"small\"\n          style={{ width: '40px', height: '40px' }}\n          leftIcon={\n            <Icon\n              name=\"arrow_right_m\"\n              size={24}\n              color=\"--icon-button-neutral-default\"\n            />\n          }\n          data-testid=\"stepTwoBackButton\"\n          tertiary\n          onClick={() => handleNavigation()}\n        />\n      </Styles.CardHeader>\n      <Spacer height={deviceType === DeviceTypeEnum.MOBILE ? 8 : 10} />\n      {cqData.fetching && <Spinner />}\n      {!cqData.fetching && (\n        <>\n          <TSpan\n            style={{ paddingLeft: '16px' }}\n            font=\"heading-m\"\n            colorToken=\"--text-card-neutral-highlighted\"\n          >\n            {cqData.score}\n          </TSpan>\n          <Styles.TextWraaper style={{ paddingBottom: '4px' }}>\n            {cqData.status !== 'InComplete' && (\n              <Styles.HelperTextWrapper\n                font=\"body-m\"\n                colorToken=\"--text-card-neutral-default\"\n              >\n                <Icon\n                  name=\"check_xs\"\n                  size={16}\n                  color=\"--icon-card-neutral-default\"\n                />\n                {cqData.status}\n              </Styles.HelperTextWrapper>\n            )}\n            {cqData.status === 'InComplete' && Number(cqData.score) < 500 && (\n              <Styles.WarningTextWrapper\n                font=\"body-m\"\n                colorToken=\"--text-card-neutral-highlighted\"\n              >\n                {t('noumena.money.cq.incomplete_displayText')}\n              </Styles.WarningTextWrapper>\n            )}\n\n            {/* <Styles.HelperTextWrapper\n              font=\"body-m\"\n              colorToken=\"--text-card-neutral-default\"\n              style={{ marginTop: '-3px' }}\n            >\n              .\n            </Styles.HelperTextWrapper> */}\n          </Styles.TextWraaper>\n          <Styles.TextWraaper>\n            <Dropdown\n              hideIcons\n              inputValue={\n                (privacy?.value as string).charAt(0).toUpperCase() +\n                  (privacy?.value as string).slice(1) ?? ''\n              }\n              options={options}\n              onSelectOption={(option) => {\n                updatePrivacy(option);\n              }}\n              onOpen={() => setIsOpen(true)}\n              onClose={() => setIsOpen(false)}\n              renderContainerFromBottom={true}\n            >\n              {({ inputProps, inputRef, toggle }) => (\n                <Styles.HelperTextWrapper\n                  font=\"body-m\"\n                  colorToken=\"--text-card-neutral-default\"\n                >\n                  <PrivacyDropdownSelctedValue {...inputProps} ref={inputRef} />\n                  <RightIcon\n                    size={12}\n                    name=\"chevron_down_m\"\n                    color=\"--icon-card-neutral-default\"\n                    isOpen={isOpen}\n                    onClick={toggle}\n                  />\n                </Styles.HelperTextWrapper>\n              )}\n            </Dropdown>\n          </Styles.TextWraaper>\n        </>\n      )}\n    </Styles.CardWrapper>\n  );\n};\n\nexport default CapitalQuotient;\n","import { t } from 'i18next';\nimport { useState, useMemo } from 'react';\nimport { Icon } from '@/components/Icon';\nimport { Spacer } from '@/layout';\nimport { TSpan } from '@/components/Typography';\nimport { useGetTokenQuery } from '@/apollo/graphql';\nimport { Button } from '@/components/Button';\nimport { DeviceTypeEnum, useDeviceType } from '@/hooks';\nimport TokenModal from './TokenModal';\nimport * as Styles from '../styles';\n\nconst Tokens = () => {\n  const [open, setOpen] = useState(false);\n  const deviceType = useDeviceType();\n  const { data, loading } = useGetTokenQuery();\n  const info = useMemo(() => {\n    if (data?.getSpaceByType && data?.getSpaceByType[0]) {\n      return data?.getSpaceByType[0];\n    }\n    return {\n      token: {\n        count: '--',\n      },\n    };\n  }, [data]);\n  return (\n    <Styles.CardWrapper style={{ padding: 0 }}>\n      <Styles.CardHeader style={{ padding: '16px 16px 16px 16px' }}>\n        <Styles.CardInformation\n          font=\"body-l-bold\"\n          colorToken=\"--text-card-header-neutral-highlighted\"\n        >\n          {t('noumena.money.wallet.tokens')}\n        </Styles.CardInformation>\n        <Button\n          size=\"small\"\n          style={{ width: '40px', height: '40px' }}\n          data-testid=\"stepTwoBackButton\"\n          leftIcon={\n            <Icon\n              name=\"arrow_right_m\"\n              size={24}\n              color=\"--icon-button-neutral-default\"\n            />\n          }\n          tertiary\n          onClick={() => setOpen(true)}\n        />\n      </Styles.CardHeader>\n      <Spacer height={deviceType === DeviceTypeEnum.MOBILE ? 8 : 10} />\n      <Styles.HelperTextWrapper\n        font=\"body-m\"\n        colorToken=\"--text-card-neutral-default\"\n        style={{ paddingLeft: '16px', alignSelf: 'flex-start' }}\n      >\n        {t('noumena.money.tokens.subheading')}\n      </Styles.HelperTextWrapper>\n      <TSpan\n        style={{ paddingLeft: '16px', paddingBottom: '16px' }}\n        font=\"heading-m\"\n        colorToken=\"--text-card-neutral-highlighted\"\n      >\n        {loading ? '...' : info.token?.count}\n      </TSpan>\n      <TokenModal open={open} onClose={() => setOpen(false)} />\n    </Styles.CardWrapper>\n  );\n};\n\nexport default Tokens;\n","import PaymentSideBarWrapper from './styles';\nimport Wallet from '../Wallets';\nimport CapitalQuotient from '../CapitalQuotient';\nimport Tokens from '../Tokens';\n\nconst PaymentSideBar = () => (\n  <PaymentSideBarWrapper>\n    <Wallet />\n    <CapitalQuotient />\n    <Tokens />\n  </PaymentSideBarWrapper>\n);\n\nexport default PaymentSideBar;\n","import styled from 'styled-components';\nimport { mediaSizes } from '@/constants/devices';\n\nexport const PaymentMainWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  gap: 16px;\n  @media (min-width: 1024px) {\n    display: none;\n  }\n  flex-direction: column;\n  @media (max-width: ${mediaSizes.MOBILE_L_MAX}) {\n    flex-direction: column;\n  }\n`;\n\nexport const WalletWrapper = styled.div<{ isTablet: boolean }>`\n  display: flex;\n  flex-grow: 1;\n  // width: ${({ isTablet }) => (isTablet ? '50%' : '100%')};\n  width: 100%;\n  flex-direction: ${({ isTablet }) => (isTablet ? 'row' : 'column')};\n  gap: 16px;\n`;\nexport const CQTokenWrapper = styled.div<{ isTablet: boolean }>`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: ${({ isTablet }) => (isTablet ? 'row' : 'column')};\n  gap: 16px;\n`;\n","import { DeviceTypeEnum, useDeviceType } from '@/hooks';\nimport { PaymentMainWrapper, CQTokenWrapper, WalletWrapper } from './styles';\nimport Wallet from '../Wallets';\nimport CapitalQuotient from '../CapitalQuotient';\nimport Tokens from '../Tokens';\n\nconst PaymentMain = () => {\n  const deviceType = useDeviceType();\n\n  return (\n    <PaymentMainWrapper>\n      <WalletWrapper isTablet={deviceType === DeviceTypeEnum.TABLET}>\n        <Wallet />\n      </WalletWrapper>\n      <CQTokenWrapper isTablet={deviceType === DeviceTypeEnum.TABLET}>\n        <CapitalQuotient />\n        <Tokens />\n      </CQTokenWrapper>\n    </PaymentMainWrapper>\n  );\n};\n\nexport default PaymentMain;\n","import styled from 'styled-components';\nimport { sizes, mediaSizes } from '@/constants/devices';\nimport { Button } from '@/components/Button';\nimport { TSpan } from '@/components/Typography';\nimport { singleLineEllipisText } from '@/common/globalStyles';\n\nexport const StyledHowItWorksSection = styled.div`\n  h2 {\n    margin-top: 0;\n  }\n  box-sizing: border-box;\n  padding: 16px;\n  width: 100%;\n  min-width: 322px;\n  min-height: 182px;\n  background: var(--bg-card-neutral-alt-default);\n  border-radius: 16px;\n  flex: none;\n  flex-grow: 0;\n\n  @media (max-width: ${sizes.TABLET_L}) {\n    min-width: 704px;\n    min-height: 160px;\n  }\n\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    width: 100vw;\n    min-width: unset;\n    margin: unset;\n    min-height: 182px;\n    border-radius: unset;\n    padding: 16px;\n  }\n`;\n\nexport const HeaderWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    // padding: 16px;\n    padding-bottom: 0px;\n  }\n`;\nexport const HeaderTitle = styled(TSpan)`\n  display: flex;\n  @media (max-width: ${mediaSizes.TABLET_MAX}) {\n    width: 60%;\n    font-weight: 600;\n    font-size: 18px;\n    line-height: 160%;\n  }\n  @media (max-width: ${mediaSizes.MOBILE_L_MAX}) {\n    display: inline-flex;\n    width: 85%;\n    word-break: break-word;\n  }\n  @media (max-width: ${mediaSizes.MOBILE_L_MAX}) {\n    width: 70%;\n  }\n  @media (max-width: ${mediaSizes.MOBILE_L_MIN}) {\n    width: 60%;\n  }\n`;\nexport const ShowAllButton = styled(Button)`\n  display: none;\n`;\n\nexport const StyledCardsSection = styled.div`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 150%;\n  text-align: center;\n  width: 100%;\n  .mySwiper {\n    display: flex;\n    flex-direction: column-reverse;\n    .swiper-slide {\n      height: auto;\n    }\n  }\n`;\n\nexport const StyledSwiperControls = styled.div<{\n  showOnlyNavigationIcons: boolean;\n}>`\n  display: flex;\n  justify-content: ${({ showOnlyNavigationIcons }) =>\n    showOnlyNavigationIcons ? 'flex-end' : 'space-between'};\n  padding-bottom: 16px;\n  margin-left: -6px;\n  .swiper-icons {\n    display: flex;\n    align-items: center;\n    .disabled {\n      opacity: 0.5;\n      cursor: not-allowed;\n    }\n    .swiper-control-btn {\n      box-sizing: border-box;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      padding: 8px;\n      gap: 10px;\n      width: 40px;\n      height: 40px;\n      background: var(--bg-button-neutral-disabled);\n      border-radius: 8px;\n    }\n    .show-all {\n      display: flex;\n      align-items: center;\n      margin-left: 16px;\n    }\n    > div:first-of-type {\n      margin-right: 8px;\n    }\n    @media (max-width: ${sizes.MOBILE_MAX}) {\n      display: none;\n    }\n  }\n`;\n\nexport const StyledCard = styled.div.attrs(\n  (props: { imageUrl: string }) => props,\n)`\n  cursor: pointer;\n  box-sizing: border-box;\n  height: 100%;\n  padding: 8px !important;\n  display: flex;\n  flex-direction: column;\n  padding: 0px;\n  background: var(--bg-card-neutral-alt-default);\n  border: 1px solid var(--border-card-neutral-highlighted);\n  border-radius: 20px;\n  &.featured {\n    display: flex;\n    flex-direction: row;\n  }\n  &.featured .article-image {\n    height: 100%;\n    width: 50%;\n    min-width: 50%;\n  }\n  &.featured .article-details {\n    padding: 24px;\n    .title {\n      display: -webkit-box;\n      -webkit-line-clamp: 2;\n      -webkit-box-orient: vertical;\n      overflow: hidden;\n      font-size: 18px;\n      line-height: 160%;\n    }\n    .content {\n      display: -webkit-box;\n      -webkit-line-clamp: 4;\n      -webkit-box-orient: vertical;\n      overflow: hidden;\n    }\n  }\n  .article-image {\n    border-radius: 12px;\n    width: 100%;\n    height: 134px;\n    background: url(${(props) => props.imageUrl}) no-repeat center center;\n    background-size: cover;\n  }\n  .article-details {\n    padding: 8px;\n    text-align: left;\n    .type {\n      font-style: normal;\n      font-weight: 600;\n      font-size: 12px;\n      line-height: 160%;\n      color: var(--text-card-header-neutral-default);\n    }\n    .title {\n      font-style: normal;\n      font-weight: 600;\n      font-size: 16px;\n      line-height: 150%;\n      color: var(--text-card-header-neutral-highlighted);\n      ${singleLineEllipisText}\n    }\n    .content {\n      padding-top: 4px;\n      font-style: normal;\n      font-weight: 400;\n      font-size: 14px;\n      line-height: 160%;\n      color: var(--text-card-neutral-default);\n      opacity: 0.75;\n      display: -webkit-box;\n      -webkit-line-clamp: 2;\n      -webkit-box-orient: vertical;\n      overflow: hidden;\n    }\n    .link {\n      padding-top: 0.75rem;\n      display: flex;\n      align-items: center;\n      font-style: normal;\n      font-weight: 500;\n      font-size: 16px;\n      line-height: 100%;\n      color: var(--text-button-brand-primary-default);\n      > div {\n        padding-left: 8px;\n      }\n    }\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { capitalize } from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport 'swiper/swiper-bundle.min.css';\nimport 'swiper/swiper.min.css';\nimport 'swiper/components/pagination/pagination.min.css';\nimport type SwiperCore from 'swiper';\nimport { Icon } from '@/components/Icon';\nimport { Button } from '@/components/Button';\nimport { getArticleDetails } from '@/services/rest/storyblok';\nimport routes from '@/constants/routes';\nimport useEvent from '@/hooks/useEvent';\nimport { useWindowDimensions } from '@/hooks';\nimport { breakpoints } from '@/constants/devices';\nimport BasicChipsTabsForm from '@/components/Tabs/TabsForm';\nimport { type InputListTypes } from '@/components/Tabs/types';\nimport { type SettledPromise, type Story, type Article } from './types';\nimport { StyledSwiperControls, StyledCard } from './styles';\n\ntype SwiperFreeModeProps = {\n  articles: Article[];\n  showOnlyNavigationIcons: boolean;\n  showCategory: boolean;\n};\n\nconst tagsList: InputListTypes[] = [\n  {\n    name: 'test1',\n    image: 'terms_m',\n    text: 'Knowledge Base',\n    labelSize: 'auto',\n  },\n];\n\nexport const SwiperFreeMode: React.FC<SwiperFreeModeProps> = (props) => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const [disablePrevBtn, setDisablePrevBtn] = useState(true);\n  const [disableNextBtn, setDisableNextBtn] = useState(false);\n  const { articles, showOnlyNavigationIcons, showCategory } = props;\n  const [fetchedArticles, setFetchedArticles] = useState<Story[]>([]);\n  const [swiper, setSwiper] = useState<SwiperCore>();\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  const { width } = useWindowDimensions();\n\n  let slidesPerView = 3;\n  if (width < breakpoints.TABLET) {\n    slidesPerView = 1.25;\n  }\n\n  useEffect(() => {\n    const fetchArticles = async () => {\n      const settledPromises: unknown[] = await Promise.allSettled(\n        articles?.map(async (article) =>\n          getArticleDetails(article?.Link?.cached_url),\n        ) || [],\n      );\n      const fetchedArticlesRes = settledPromises?.map((promise) => {\n        const item = promise as SettledPromise;\n        return item?.value?.data?.story || null;\n      });\n      setFetchedArticles([...fetchedArticlesRes]);\n    };\n    fetchArticles();\n  }, [articles]);\n\n  const navigateToArticles = useEvent(() => {\n    navigate(routes.ARTICLES);\n  });\n\n  const prevSlide = useEvent(() => {\n    if (swiper && !swiper.destroyed) {\n      swiper.slidePrev();\n      setDisableNextBtn(false);\n    }\n  });\n\n  const nextSlide = useEvent(() => {\n    if (swiper && !swiper.destroyed) {\n      swiper.slideNext();\n      setDisablePrevBtn(false);\n    }\n  });\n\n  const onTabChange = (value: string) => {\n    setSelectedTab(Number(value));\n  };\n\n  const showArraowsForScrolling = fetchedArticles?.length > slidesPerView;\n\n  return (\n    <>\n      <Swiper\n        slidesPerView={slidesPerView}\n        spaceBetween={16}\n        freeMode={true}\n        className=\"mySwiper\"\n        onInit={(swiperInstance) => setSwiper(swiperInstance)}\n        onReachBeginning={() => setDisablePrevBtn(true)}\n        onReachEnd={() => {\n          const progress = swiper?.progress || 0;\n          if (progress > 0.5) setDisableNextBtn(true);\n        }}\n      >\n        <StyledSwiperControls showOnlyNavigationIcons={showOnlyNavigationIcons}>\n          {showOnlyNavigationIcons || (\n            <BasicChipsTabsForm\n              onChange={onTabChange}\n              selectedId={selectedTab.toString()}\n              mode=\"isBackground\"\n              isWithoutImage\n              inputList={tagsList}\n              fontSize=\"--font-link-medium-size\"\n            />\n          )}\n          <div className=\"swiper-icons\">\n            {showArraowsForScrolling && (\n              <Icon\n                className={`swiper-control-btn ${\n                  disablePrevBtn ? 'disabled' : ''\n                }`}\n                name=\"chevron_left_m\"\n                size={16}\n                color={\n                  disablePrevBtn\n                    ? '--icon-button-neutral-disabled'\n                    : '--icon-button-neutral-default'\n                }\n                onClick={prevSlide}\n              />\n            )}\n            {showArraowsForScrolling && (\n              <Icon\n                className={`swiper-control-btn ${\n                  disableNextBtn ? 'disabled' : ''\n                }`}\n                name=\"chevron_right_m\"\n                size={16}\n                color={\n                  disableNextBtn\n                    ? '--icon-button-neutral-disabled'\n                    : '--icon-button-neutral-default'\n                }\n                onClick={nextSlide}\n              />\n            )}\n            {showOnlyNavigationIcons || (\n              <Button\n                className=\"show-all\"\n                textOnly\n                onClick={navigateToArticles}\n                rightIcon={\n                  <Icon\n                    name=\"chevron_right_m\"\n                    size={16}\n                    color=\"--icon-button-brand-primary-default\"\n                  />\n                }\n              >\n                {t('noumena.home.show_all')}\n              </Button>\n            )}\n          </div>\n        </StyledSwiperControls>\n\n        {fetchedArticles?.map((article, index) => {\n          const { id, content, full_slug: slug } = article;\n          const imageUrl = content?.Main_Image?.filename;\n          const title = content?.Title;\n          const description = content?.Short_Description;\n          const type = capitalize(\n            content?.Main_Category.split('_').join(' ') || '',\n          );\n          return (\n            <SwiperSlide key={`${index + 0}-${id}`}>\n              <StyledCard\n                imageUrl={imageUrl}\n                onClick={() => {\n                  navigate({\n                    pathname: routes.ARTICLE,\n                    search: `?slug=${slug}`,\n                  });\n                }}\n              >\n                <div className=\"article-image\" />\n                <div className=\"article-details\">\n                  {showCategory && <div className=\"type\">{type}</div>}\n                  <div className=\"title\">{title}</div>\n                  <div className=\"content\">{description}</div>\n                </div>\n              </StyledCard>\n            </SwiperSlide>\n          );\n        })}\n      </Swiper>\n    </>\n  );\n};\n","import { useNavigate } from 'react-router';\nimport { useTranslation } from 'react-i18next';\nimport { Icon } from '@/components/Icon';\nimport useEvent from '@/hooks/useEvent';\nimport routes from '@/constants/routes';\nimport { SwiperFreeMode } from './SwiperFreeMode';\nimport {\n  StyledHowItWorksSection,\n  StyledCardsSection,\n  HeaderWrapper,\n  ShowAllButton,\n  HeaderTitle,\n} from './styles';\nimport { type Section01 } from './types';\n\nexport type HowItWorksSectionProps = {\n  data: Section01 | undefined;\n  showOnlyNavigationIcons?: boolean;\n  showCategory?: boolean;\n};\n\nexport default function HowItWorksSection({\n  data,\n  showOnlyNavigationIcons = false,\n  showCategory = true,\n}: HowItWorksSectionProps) {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const title = data?.Title;\n  const articles = data?.Articles || [];\n\n  const navigateToArticles = useEvent(() => {\n    navigate(routes.ARTICLES);\n  });\n\n  return articles && articles?.length ? (\n    <StyledHowItWorksSection data-testid=\"onboarding-section-testid\">\n      <HeaderWrapper>\n        <HeaderTitle\n          font=\"heading-xs-bold\"\n          colorToken=\"--text-card-header-neutral-highlighted\"\n        >\n          {title}\n        </HeaderTitle>\n        <ShowAllButton\n          className=\"show-all\"\n          textOnly\n          onClick={navigateToArticles}\n          rightIcon={\n            <Icon\n              name=\"chevron_right_m\"\n              size={16}\n              color=\"--icon-button-brand-primary-default\"\n            />\n          }\n        >\n          {t('noumena.home.show_all')}\n        </ShowAllButton>\n      </HeaderWrapper>\n      <StyledCardsSection>\n        <SwiperFreeMode\n          articles={articles}\n          showOnlyNavigationIcons={showOnlyNavigationIcons}\n          showCategory={showCategory}\n        />\n      </StyledCardsSection>\n    </StyledHowItWorksSection>\n  ) : null;\n}\n","import styled from 'styled-components';\nimport { sizes } from '@/constants/devices';\nimport { Stack } from '@/layout';\n\nexport const StyledNoumsForYouSection = styled.div`\n  box-sizing: border-box;\n  padding: 16px;\n  width: 100%;\n  min-width: 322px;\n  min-height: 182px;\n  background: var(--bg-card-neutral-alt-default);\n  border-radius: 16px;\n  flex: none;\n  flex-grow: 0;\n  @media (max-width: ${sizes.TABLET_L}) {\n    min-width: 704px;\n    min-height: 160px;\n  }\n\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    width: 100vw;\n    min-width: unset;\n    margin: unset;\n    min-height: 182px;\n    border-radius: unset;\n    margin-bottom: 16px;\n    padding: 16;\n  }\n`;\n\nexport const StyledCardsSection = styled.div`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 150%;\n  text-align: center;\n  width: 100%;\n  .mySwiper {\n    display: flex;\n    flex-direction: column-reverse;\n    @media (max-width: 767px) {\n      flex-direction: column;\n    }\n  }\n`;\n\nexport const HeaderWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding-bottom: 16px;\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    padding: 16px;\n  }\n`;\n\nexport const StyledSwiperControls = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  padding-bottom: 16px;\n  margin-left: -6px;\n  .swiper-icons {\n    display: flex;\n    .disabled {\n      opacity: 0.5;\n      cursor: not-allowed;\n    }\n    .swiper-control-btn {\n      box-sizing: border-box;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      padding: 8px;\n      gap: 10px;\n      width: 40px;\n      height: 40px;\n      background: var(--bg-button-neutral-default);\n      border-radius: 8px;\n    }\n    .show-all {\n      cursor: pointer;\n      background: transparent;\n      border: none;\n      display: flex;\n      align-items: center;\n      font-style: normal;\n      font-weight: 500;\n      font-size: 16px;\n      line-height: 100%;\n      color: var(--text-button-brand-primary-default);\n      margin-left: 16px;\n    }\n    > div:first-of-type {\n      margin-right: 8px;\n    }\n    @media (max-width: ${sizes.MOBILE_MAX}) {\n      display: none;\n    }\n  }\n`;\n\nexport const StyledNoumCard = styled.div.attrs(\n  (props: { imageUrl: string; backgroundColor: string; color: string }) =>\n    props,\n)`\n  cursor: pointer;\n  padding: 8px !important;\n  display: flex;\n  flex-direction: column;\n  padding: 0px;\n  background: var(--bg-card-neutral-alt-default);\n  border: 1px solid var(--border-card-neutral-highlighted);\n  border-radius: 20px;\n  .cover {\n    height: 56px;\n    background-color: ${(props) => `var(${props.backgroundColor})`};\n    border-radius: 12px;\n  }\n`;\n\nexport const SpinnerContainer = styled(Stack)`\n  position: relative;\n  padding: 5px;\n  height: 245px;\n`;\n","import { useState, useEffect } from 'react';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper-bundle.min.css';\nimport 'swiper/swiper.min.css';\nimport 'swiper/components/pagination/pagination.min.css';\nimport type SwiperCore from 'swiper';\nimport { useTranslation } from 'react-i18next';\nimport { Icon } from '@/components/Icon';\nimport {\n  useGetSpaceByIdLazyQuery,\n  type GetSpaceByIdQuery,\n} from '@/apollo/graphql';\nimport { SpaceStatusEnum } from '@/apollo/generated/types';\nimport { Spinner } from '@/components/Spinner';\nimport { breakpoints } from '@/constants/devices';\nimport { useWindowDimensions } from '@/hooks';\nimport ChamberBox from '@/components/ChamberBox/ChamberBox';\nimport OwnerDefaultImage from '@/assets/images/profile_default.png';\nimport { ChamberBoxNameEnum } from '@/components/ChamberBox/types';\nimport { getFullName } from '@/utils/fullName';\nimport { ChamberItem } from '@/features/discovery/components';\nimport { StyledSwiperControls, SpinnerContainer } from './styles';\n\nexport const SwiperFreeMode: React.FC<{ recommendedNoumIds: string[] }> = ({\n  recommendedNoumIds,\n}) => {\n  const [gqlSpace] = useGetSpaceByIdLazyQuery();\n  const [recommendedNoums, setRecommendedNoums] = useState<\n    GetSpaceByIdQuery['getSpaceById'][]\n  >([]);\n  const [index, setIndex] = useState<number>(0);\n\n  const [disablePrevBtn, setDisablePrevBtn] = useState(true);\n  const [disableNextBtn, setDisableNextBtn] = useState(false);\n  const [swiper, setSwiper] = useState<SwiperCore>();\n\n  useEffect(() => {\n    if (index < recommendedNoumIds.length) {\n      gqlSpace({\n        variables: {\n          id: recommendedNoumIds[index],\n        },\n        onCompleted(response) {\n          setRecommendedNoums((prv) => [...prv, response.getSpaceById]);\n          setIndex((prv) => prv + 1);\n        },\n      });\n    }\n  }, [gqlSpace, index, recommendedNoumIds]);\n\n  const { width } = useWindowDimensions();\n  const { t } = useTranslation();\n\n  let slidesPerView = 3;\n  if (width < breakpoints.TABLET) {\n    slidesPerView = 1.25;\n  }\n\n  const showArraowsForScrolling = recommendedNoums?.length > slidesPerView;\n\n  if (!recommendedNoums.length) {\n    return (\n      <SpinnerContainer>\n        <Spinner />\n      </SpinnerContainer>\n    );\n  }\n\n  return (\n    <Swiper\n      slidesPerView={slidesPerView}\n      spaceBetween={16}\n      freeMode={true}\n      className=\"mySwiper\"\n      onInit={(swiperInstance) => setSwiper(swiperInstance)}\n      onReachBeginning={() => setDisablePrevBtn(true)}\n      onReachEnd={() => {\n        const progress = swiper?.progress || 0;\n        if (progress > 0.5) setDisableNextBtn(true);\n      }}\n    >\n      {showArraowsForScrolling && (\n        <StyledSwiperControls>\n          <div className=\"swiper-icons\">\n            <Icon\n              className={`swiper-control-btn ${\n                disablePrevBtn ? 'disabled' : ''\n              }`}\n              name=\"chevron_left_m\"\n              size={16}\n              color={\n                disablePrevBtn\n                  ? '--icon-button-neutral-disabled'\n                  : '--icon-button-neutral-default'\n              }\n              onClick={() => {\n                if (swiper && !swiper.destroyed) {\n                  swiper.slidePrev();\n                  setDisableNextBtn(false);\n                }\n              }}\n            />\n            <Icon\n              className={`swiper-control-btn ${\n                disableNextBtn ? 'disabled' : ''\n              }`}\n              name=\"chevron_right_m\"\n              size={16}\n              color={\n                disableNextBtn\n                  ? '--icon-button-neutral-disabled'\n                  : '--icon-button-neutral-default'\n              }\n              onClick={() => {\n                if (swiper && !swiper.destroyed) {\n                  swiper.slideNext();\n                  setDisablePrevBtn(false);\n                }\n              }}\n            />\n          </div>\n        </StyledSwiperControls>\n      )}\n\n      {recommendedNoums?.map((noum) => {\n        const id = noum?._id;\n        return (\n          <SwiperSlide key={id}>\n            <ChamberItem key={`${noum?._id}-${noum?.name}`} isBordered>\n              <ChamberBox\n                id={noum?._id}\n                chamberUrl={`/noum/${id}`}\n                url={noum?.profileImage ?? undefined}\n                ownerImageURL={\n                  noum?.uid?.profile?.profilePicture || OwnerDefaultImage\n                }\n                title={noum?.uid?.title || ''}\n                chamberTitle={noum?.name || ''}\n                name={\n                  (noum?.category?.name?.toLowerCase() as ChamberBoxNameEnum) ||\n                  ChamberBoxNameEnum.member\n                }\n                ownedby={\n                  noum?._id === noum?.uid?._id\n                    ? t('noumena.you')\n                    : getFullName(\n                        noum?.uid?.firstName,\n                        noum?.uid?.middleName,\n                        noum?.uid?.lastName,\n                      ) ?? undefined\n                }\n                archived={noum?.status === SpaceStatusEnum.Archived}\n                followers={noum?.followersCount || 0}\n                location={noum?.uid?.location ?? undefined}\n              />\n            </ChamberItem>\n          </SwiperSlide>\n        );\n      })}\n    </Swiper>\n  );\n};\n","import { useTranslation } from 'react-i18next';\nimport { TSpan } from '@/components/Typography';\nimport { SwiperFreeMode } from './SwiperFreeMode';\nimport {\n  StyledNoumsForYouSection,\n  StyledCardsSection,\n  HeaderWrapper,\n} from './styles';\n\nexport default function NoumsForYouSection({\n  recommendedNoumIds,\n  storyBlockTitle,\n}: {\n  recommendedNoumIds: string[];\n  storyBlockTitle?: string;\n}) {\n  const { t } = useTranslation();\n  return (\n    <StyledNoumsForYouSection data-testid=\"noums-for-you-section-testid\">\n      <HeaderWrapper>\n        <TSpan\n          font=\"heading-xs-bold\"\n          colorToken=\"--text-card-header-neutral-highlighted\"\n        >\n          {storyBlockTitle || t('noumena.home.recommended.noums.header')}\n        </TSpan>\n      </HeaderWrapper>\n      <StyledCardsSection>\n        <SwiperFreeMode recommendedNoumIds={recommendedNoumIds} />\n      </StyledCardsSection>\n    </StyledNoumsForYouSection>\n  );\n}\n","import { useEffect, useMemo, useState } from 'react';\nimport MoneyLayout from '@/layout/MoneyLayout';\nimport * as Storyblok from '@/services/rest/storyblok';\nimport { Spinner } from '@/components/Spinner';\nimport { useLaunchDarkly } from '@/hooks';\nimport FinancialSolutionHeader from './FinancialSolution/Content/FinancialSolutionHeader';\nimport MoneyWrapper, { SectionWarpper } from './styles';\nimport PaymentSideBar from './Payments/PaymentSideBar';\nimport PaymentMain from './Payments/PaymentMain';\nimport { type Content, type RootObject } from './types';\nimport HowItWorksSection from './FinancialSolution/HowItWorksSection/HowItWorksSection';\nimport NoumsForYouSection from './FinancialSolution/NoumsForYouSection/NoumsForYouSection';\n\nconst Money = () => {\n  const [content, setContent] = useState<Content>();\n  const { flags } = useLaunchDarkly();\n\n  useEffect(() => {\n    async function getContent() {\n      const { data }: { data: RootObject } =\n        await Storyblok.getMoneyPageMainPageLayout();\n      setContent(data?.story?.content);\n    }\n    getContent();\n  }, []);\n  const noumIds = useMemo(() => {\n    if (!content?.Money_Page_Layout[1]?.Description) return [];\n    const idsArray = content?.Money_Page_Layout[1]?.Description.split(',').map(\n      (_id) => _id.trim(),\n    );\n    return idsArray;\n  }, [content]);\n\n  if (!content) {\n    return (\n      <MoneyLayout\n        type=\"Chambers\"\n        rightContent={<PaymentSideBar />}\n        data-testid=\"money-layout\"\n      >\n        <MoneyWrapper isAppUiV2={flags.newAppNavigation}>\n          <Spinner />\n        </MoneyWrapper>\n      </MoneyLayout>\n    );\n  }\n  return (\n    <MoneyLayout\n      type=\"Money\"\n      rightContent={<PaymentSideBar />}\n      data-testid=\"money-layout\"\n    >\n      <MoneyWrapper isAppUiV2={flags.newAppNavigation}>\n        <FinancialSolutionHeader\n          data={content?.Money_Page_Header[0] || undefined}\n        />\n        <SectionWarpper isAppUiV2={flags.newAppNavigation}>\n          <PaymentMain />\n        </SectionWarpper>\n        <SectionWarpper isAppUiV2={flags.newAppNavigation}>\n          <HowItWorksSection\n            data={content?.Money_Page_Layout[0]}\n            showOnlyNavigationIcons={true}\n            showCategory={false}\n          />\n        </SectionWarpper>\n        <SectionWarpper isAppUiV2={flags.newAppNavigation}>\n          <NoumsForYouSection\n            recommendedNoumIds={noumIds}\n            storyBlockTitle={content?.Money_Page_Layout[1].Title || ''}\n          />\n        </SectionWarpper>\n        <SectionWarpper isAppUiV2={flags.newAppNavigation}>\n          <HowItWorksSection\n            data={content?.Money_Page_Layout[2]}\n            showOnlyNavigationIcons={true}\n          />\n        </SectionWarpper>\n      </MoneyWrapper>\n    </MoneyLayout>\n  );\n};\n\nexport default Money;\n"],"names":["Article","props","flags","useLaunchDarkly","addToast","useToast","isActive","useAuth","content","setContent","useState","undefined","navigate","useNavigate","useEffect","data","Storyblok","cached_url","story","navigateToArticleDetail","useCallback","slug","pathname","routes","MONEY_ARTICLE","search","ArticleContainer","newAppNavigation","jsx","ArticleHeader","Stack","HeaderText","TSpan","Title","BodyTextArticle","Short_Description","ButtonContainer","Button","t","Main_Button_Label","LoadingContainer","SwiperComponent","SwiperSlidesOptions","slidesPerView","handleHidePadding","disablePrevBtn","setDisablePrevBtn","disableNextBtn","setDisableNextBtn","swiper","setSwiper","deviceType","useDeviceType","prevSlide","useEvent","destroyed","slidePrev","nextSlide","slideNext","showArraowsForScrolling","length","jsxs","Swiper","swiperInstance","activeIndex","progress","StyledSwiperControls","Icon","DeviceTypeEnum","MOBILE","Spacer","map","slide","SwiperSlide","key","getSlidesPerView","width","isAppUiV2","breakpoints","TABLET","LAPTOP","LAPTOP_SM","LAPTOP_L","LAPTOP_M","TABLET_L","MOBILE_MAX","MOBILE_L","MOBILE_S","FinancialSolutionHeader","hidePadding","setHidePadding","useWindowDimensions","useMemo","Financial_Solutions","item","id","display","flexDirection","FinancialSolutionWrapper","TitleWrapper","SubTitle","Description","SubSubTitle","Subtitle","FinancialSolutionHeaderWrapper","ArticlesContainer","ArticlesContainerFlex","memo","MoneyWrapper","styled","div","sizes","mediaSizes","TABLET_MAX","SectionWarpper","PaymentSideBarWrapper","Setup","payments","gqlCurrentUserStatus","loading","useGetCurrentUserStatusLazyQuery","isActiveUser","setIsActiveUser","handleSetUpWallet","ROUTES","WALLET_SETUP","fetchPolicy","onCompleted","currentUser","userStatus","Styles.CardWrapper","height","Styles.CardHeader","Styles.CardInformation","Styles.ContentWrapper","alignSelf","Styles.HelperText","Styles.SetupWalletButton","Processing","refetchWallet","allowRefetch","handleRefresh","justifyContent","gap","Fragment","Styles.RefreshLink","Verification","helperText","buttonText","onNavigate","Rejected","Active","total","handlePayment","handleNavigation","MONEY_DETAILS","convertToCurrency","value","currency","paddingLeft","paddingRight","TransactionModalType","TRANSFER","PAY","canUploadDocument","status","Object","values","DocumentStatusV2","includes","canCreateWallet","EWalletStatus","CUSTOMER_NOT_CREATED","Utils","useWallets","refetch","networkStatus","error","useGetWalletQuery","notifyOnNetworkStatusChange","isPending","applicationReview","APPLICATION_REVIEW","walletSetupRetry","WALLET_SETUP_RETRY","docStatus","customerType","noumenaStatus","providerStatus","getWalletBalance","createWallet","walletRejected","NoumenaStatus","REJECTED","ProviderStatus","DEACTIVATED","SUSPENDED","walletRetry","CustomerType","UNVERIFIED","RETRY","UPLOADED","uploadDocument","VERIFIED","DOCUMENT","showWallet","APPROVED","walletProcessing","balance","canRefreshWallet","errorMessage","NetworkStatus","wallet","render","errorScreen","show","goTo","Error","message","EmptyWalletCard","HelperText","Wallet","open","setOpen","modalType","setModalType","paymentType","handleClose","WalletWrapper","Spinner","getWallet","walletComponent","TransactionModal","PrivacyDropdownSelctedValue","input","RightIcon","isOpen","CapitalQuotient","cqURl","process","updatePrivacyMutation","useUpdatePrivacyMutation","cqData","useCQ","generateTokenForCQ","useGenerateTokenForCQ","privacy","setPrivacy","label","type","setIsOpen","newData","visibility","charAt","toUpperCase","slice","options","token","formedUrl","updatePrivacy","option","variables","noumId","onError","networkError","graphQLErrors","err","Sentry","tags","section","padding","fetching","score","Styles.TextWraaper","paddingBottom","Styles.HelperTextWrapper","Number","Styles.WarningTextWrapper","Dropdown","inputProps","inputRef","toggle","Tokens","useGetTokenQuery","info","getSpaceByType","count","TokenModal","PaymentSideBar","PaymentMainWrapper","MOBILE_L_MAX","isTablet","CQTokenWrapper","PaymentMain","StyledHowItWorksSection","HeaderWrapper","HeaderTitle","MOBILE_L_MIN","ShowAllButton","StyledCardsSection","showOnlyNavigationIcons","StyledCard","attrs","imageUrl","singleLineEllipisText","tagsList","name","image","text","labelSize","SwiperFreeMode","useTranslation","articles","showCategory","fetchedArticles","setFetchedArticles","selectedTab","setSelectedTab","settledPromises","Promise","allSettled","article","getArticleDetails","Link","fetchedArticlesRes","promise","navigateToArticles","ARTICLES","onTabChange","BasicChipsTabsForm","toString","index","full_slug","Main_Image","filename","title","description","capitalize","Main_Category","split","join","ARTICLE","HowItWorksSection","Articles","StyledNoumsForYouSection","backgroundColor","SpinnerContainer","recommendedNoumIds","gqlSpace","useGetSpaceByIdLazyQuery","recommendedNoums","setRecommendedNoums","setIndex","response","prv","getSpaceById","noum","_id","`SwiperFreeMode-SwiperSlide-${id}`","ChamberItem","ChamberBox","profileImage","uid","profile","profilePicture","OwnerDefaultImage","category","toLowerCase","ChamberBoxNameEnum","member","getFullName","firstName","middleName","lastName","SpaceStatusEnum","Archived","followersCount","location","NoumsForYouSection","storyBlockTitle","Money","getContent","noumIds","Money_Page_Layout","trim","idsArray","MoneyLayout","Money_Page_Header","Money$1"],"mappings":"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"}