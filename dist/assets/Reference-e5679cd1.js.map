{"version":3,"file":"Reference-e5679cd1.js","sources":["../../src/services/rest/reference.ts","../../src/screens/Reference/data.ts","../../src/screens/Reference/styles.ts","../../src/screens/Reference/ReferenceDetailModal.tsx","../../src/screens/Reference/index.tsx"],"sourcesContent":["import axios from 'axios';\nimport * as Sentry from '@sentry/react';\nimport getApiUrl from '@/apollo/getApiUrl';\nimport { type NoumReferenceMetadata } from '@/screens/Reference/types';\nimport parseAxiosError from './utils';\n\nconst API_URL = `${getApiUrl()}/chamber/v2`;\n\nexport const NoumReferenceServices = {\n  fillOutReferenceByExternalUser: async ({\n    capacity,\n    referenceText,\n    imageUrl,\n    referenceToken,\n  }: {\n    referenceToken: string;\n    referenceText: string;\n    capacity?: string;\n    imageUrl?: string;\n  }) => {\n    try {\n      const body = {\n        capacity: capacity ?? undefined,\n        referenceText,\n        imageUrl,\n      };\n      const url = `${API_URL}/noum-references/external`;\n      const headers = {\n        headers: {\n          'x-reference-token': referenceToken,\n        },\n      };\n      const response = await axios.post(url, body, headers);\n      return response.data;\n    } catch (error: unknown) {\n      Sentry.captureException(error, {\n        tags: {\n          section: 'NoumReference',\n        },\n      });\n      const { errorMessage } = parseAxiosError(error);\n      throw new Error(errorMessage);\n    }\n  },\n  getNoumReferenceMetadata: async (\n    token: string,\n  ): Promise<NoumReferenceMetadata> => {\n    try {\n      const url = `${API_URL}/noum-references/metadata`;\n      const headers = {\n        headers: {\n          'x-reference-token': token,\n          'Content-Type': 'application/json',\n        },\n      };\n      const response = await axios.get(url, headers);\n      return response.data;\n    } catch (error: unknown) {\n      Sentry.captureException(error, {\n        tags: {\n          section: 'NoumReference',\n        },\n      });\n      const { errorMessage } = parseAxiosError(error);\n      throw new Error(errorMessage);\n    }\n  },\n};\n\nexport default NoumReferenceServices;\n","import { t } from 'i18next';\nimport { type DropdownValueType } from '@/components/Dropdown/types';\n\nexport const capacityOptions: DropdownValueType<string>[] = [\n  {\n    value: 'Client',\n    key: 'CLIENT',\n    type: 'value',\n    label: t('noumena.capacity.dropdown.client'),\n  },\n  {\n    value: 'Co-Worker',\n    key: 'CO_WORKER',\n    type: 'value',\n    label: t('noumena.capacity.dropdown.co_worker'),\n  },\n  {\n    value: 'Employer',\n    key: 'EMPLOYER',\n    type: 'value',\n    label: t('noumena.capacity.dropdown.employer'),\n  },\n  {\n    value: 'Manager',\n    key: 'MANAGER',\n    type: 'value',\n    label: t('noumena.capacity.dropdown.manager'),\n  },\n  {\n    value: 'Guide',\n    key: 'GUIDE',\n    type: 'value',\n    label: t('noumena.capacity.dropdown.guide'),\n  },\n  {\n    value: 'Supervisor',\n    key: 'SUPERVISOR',\n    type: 'value',\n    label: t('noumena.capacity.dropdown.supervisor'),\n  },\n  {\n    value: 'Colleague',\n    key: 'COLLEAGUE',\n    type: 'value',\n    label: t('noumena.capacity.dropdown.colleague'),\n  },\n];\n","import styled from 'styled-components';\nimport { noScrollBar } from '@/common/globalStyles';\nimport { mediaSizes, sizes } from '@/constants/devices';\n\nexport const StyledRichEditor = styled.div`\n  width: 100%;\n  overflow-y: auto;\n  gap: 16px;\n  height: calc(600px - 156px);\n  @media (max-width: ${sizes.TABLET_L}) {\n    height: calc(100vh - 88px);\n  }\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    height: calc(100vh - 134px);\n  }\n  ${noScrollBar}\n`;\n\nexport const WrapperContainer = styled.div`\n  margin: 16px;\n  display: flex;\n  flex-direction: column;\n  margin-top: 24px;\n  @media (min-width: ${sizes.TABLET_L}) {\n    width: 668px;\n    margin: auto;\n  }\n`;\n\nexport const CompletedProvidingReferenceContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 180px;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nexport const ProjectContainer = styled.div`\n  padding: 12px;\n  border: 1px solid var(--border-card-neutral-highlighted);\n  border-radius: 8px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 8px;\n  margin-bottom: 16px;\n  @media (min-width: ${sizes.TABLET_L}) {\n    width: 50%;\n  }\n`;\n\nexport const Header = styled.div`\n  padding: 22px;\n  padding-left: 40px;\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    padding-left: 16px;\n  }\n`;\n\nexport const ModalHeader = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column-reverse;\n  @media (min-width: ${mediaSizes.TABLET_MIN}) {\n    flex-direction: row;\n  }\n  @media (min-width: ${mediaSizes.LAPTOP_MIN}) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledImage = styled.img`\n  width: 100%;\n  border-radius: 12px;\n  margin: 0 !important;\n`;\n","import { useMemo } from 'react';\nimport { Modal, ModalHeader } from '@/components/ExtendedModal';\nimport { useWindowDimensions } from '@/hooks/dimensions';\nimport { Spacer } from '@/layout';\nimport { breakpoints } from '@/constants/devices';\nimport { RichTextEditorView } from '@/features/richTextEditor';\nimport { StyledRichEditor, StyledImage } from './styles';\nimport { type ReferenceDetailModalProps } from './types';\n\nconst ReferenceDetailModal = ({\n  experienceTitle,\n  experienceDetail,\n  onClose,\n  isOpen,\n  imageUrl,\n}: ReferenceDetailModalProps) => {\n  const { width } = useWindowDimensions();\n  const isDesktop = useMemo(() => width >= breakpoints.LAPTOP, [width]);\n  const isTablet = useMemo(\n    () => width >= breakpoints.TABLET && width < breakpoints.LAPTOP,\n    [width],\n  );\n  const isMobile = useMemo(() => width < breakpoints.TABLET, [width]);\n\n  return (\n    <Modal\n      isFullScreen={isMobile || isTablet}\n      enableCloseButton\n      open={isOpen}\n      onClose={onClose}\n      testId=\"add_experience_modal\"\n      style={{\n        width: isDesktop || isTablet ? '752px' : '375px',\n      }}\n      disableBackdropClick\n    >\n      <ModalHeader isFullScreen={isMobile || isTablet}>\n        {experienceTitle}\n      </ModalHeader>\n      <Spacer height={16} />\n      <StyledRichEditor>\n        <RichTextEditorView\n          data-testid=\"RichTextEditorView\"\n          html={experienceDetail}\n        />\n        {imageUrl?.length ? <StyledImage src={imageUrl} /> : undefined}\n      </StyledRichEditor>\n    </Modal>\n  );\n};\n\nexport default ReferenceDetailModal;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { t } from 'i18next';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { TSpan } from '@/components/Typography';\nimport { TextField } from '@/components/TextField';\nimport { Dropdown } from '@/components/Dropdown';\nimport { Icon } from '@/components/Icon';\nimport { TextArea } from '@/components/TextArea';\nimport { Button } from '@/components/Button';\nimport { Spacer } from '@/layout';\nimport { useLaunchDarkly } from '@/hooks/launchDarkly';\nimport ROUTES from '@/constants/routes';\nimport { useToast } from '@/hooks';\nimport { NoumReferenceServices } from '@/services/rest/reference';\nimport Logo from '@/components/Logo';\nimport {\n  type ExternalReferencePayload,\n  type NoumReferenceMetadata,\n} from './types';\nimport { capacityOptions } from './data';\nimport ReferenceDetailModal from './ReferenceDetailModal';\nimport {\n  CompletedProvidingReferenceContainer,\n  Container,\n  Header,\n  ProjectContainer,\n  WrapperContainer,\n} from './styles';\n\nconst elementSchema = yup\n  .object({\n    providerName: yup.string().required(),\n    capacity: yup.string().required(),\n  })\n  .required();\n\nconst Reference = () => {\n  const {\n    flags: { references },\n  } = useLaunchDarkly();\n  const navigate = useNavigate();\n  const { addToast } = useToast();\n  const { search } = useLocation();\n  const referenceTokenRef = useRef('');\n  const [showModalDetail, setShowModalDetail] = useState(false);\n  const [experienceError, setExperienceError] = useState('');\n  const [noumReferenceLoading, setNoumReferenceLoading] = useState(false);\n  const [completedProvidingReference, setCompletedProvidingReference] =\n    useState(false);\n\n  const [noumReferenceMetadata, setNoumReferenceMetadata] =\n    useState<NoumReferenceMetadata>({\n      capacity: '',\n      experience: {\n        body: '',\n        id: '',\n        title: '',\n        _id: '',\n        url: '',\n      },\n      experienceId: '',\n      experienceOwnerName: '',\n      providerName: '',\n      _id: '',\n    });\n\n  const { control, handleSubmit, setValue } = useForm<\n    Omit<ExternalReferencePayload, 'capacity' | ''> & {\n      providerName: string;\n      capacity: string;\n      referenceText: string;\n    }\n  >({\n    resolver: yupResolver(elementSchema),\n    defaultValues: {\n      referenceText: '',\n      capacity: 'Client',\n    },\n    reValidateMode: 'onBlur',\n    mode: 'onBlur',\n  });\n\n  useEffect(() => {\n    if (references === false) {\n      navigate(ROUTES.LOGIN, { replace: true });\n    }\n  }, [navigate, references]);\n\n  const handleGetNoumReferenceMetadata = useCallback(\n    async (referenceToken: string) => {\n      setNoumReferenceLoading(true);\n      try {\n        const response = await NoumReferenceServices.getNoumReferenceMetadata(\n          referenceToken,\n        );\n        setNoumReferenceMetadata({ ...response });\n      } catch (err) {\n        addToast(\n          'error',\n          'none',\n          t('noumena.give_reference.get_reference_fail'),\n        );\n      } finally {\n        setNoumReferenceLoading(false);\n      }\n    },\n    [addToast],\n  );\n\n  useEffect(() => {\n    const query = new URLSearchParams(search);\n    const referenceToken = query.get('reference_token');\n    if (referenceToken && !noumReferenceMetadata._id) {\n      referenceTokenRef.current = referenceToken;\n      handleGetNoumReferenceMetadata(referenceTokenRef.current);\n    }\n  }, [search, handleGetNoumReferenceMetadata, noumReferenceMetadata._id]);\n\n  useEffect(() => {\n    if (noumReferenceMetadata.capacity && noumReferenceMetadata.providerName) {\n      const { capacity, providerName } = noumReferenceMetadata;\n      setValue('providerName', providerName);\n      const foundCapacity = capacityOptions.find(\n        (item) => item.key.toLowerCase() === capacity.toLowerCase(),\n      );\n      setValue('capacity', foundCapacity ? foundCapacity.value : capacity);\n    }\n  }, [noumReferenceMetadata, setValue]);\n\n  const onSubmit = useCallback(\n    async (\n      externalNoumReference: Omit<ExternalReferencePayload, 'capacity'> & {\n        capacity: string;\n      },\n    ) => {\n      const { capacity, imageUrl, referenceText } = externalNoumReference;\n      if (\n        !referenceText ||\n        referenceText.trim().split(' ').length < 3 ||\n        referenceText.length > 2000\n      ) {\n        setExperienceError(t('noumena.give_reference.experience_error'));\n        return;\n      }\n      setNoumReferenceLoading(true);\n      const foundCapacity = capacityOptions.find(\n        (item) => item.value === capacity,\n      );\n      try {\n        await NoumReferenceServices.fillOutReferenceByExternalUser({\n          referenceToken: referenceTokenRef.current,\n          referenceText,\n          ...(imageUrl?.length && { imageUrl }),\n          ...(capacity?.length && { capacity: foundCapacity?.key ?? capacity }),\n        });\n        setCompletedProvidingReference(true);\n      } catch (err) {\n        addToast('error', 'none', t('noumena.give_reference.request_fail'));\n      }\n      setNoumReferenceLoading(false);\n    },\n    [addToast],\n  );\n\n  return (\n    <Container>\n      <Header>\n        <Logo />\n      </Header>\n      {completedProvidingReference ? (\n        <CompletedProvidingReferenceContainer>\n          <TSpan\n            font=\"heading-xl-bold\"\n            colorToken=\"--text-body-header-neutral-default\"\n          >\n            {t('noumena.give_reference.completed')}\n          </TSpan>\n          <TSpan font=\"body-l\" colorToken=\"--text-body-neutral-highlighted\">\n            {t('noumena.give_reference.completed_description', {\n              referenceRequest: noumReferenceMetadata.experienceOwnerName,\n            })}\n          </TSpan>\n        </CompletedProvidingReferenceContainer>\n      ) : (\n        <WrapperContainer>\n          <TSpan\n            font=\"heading-xs-bold\"\n            colorToken=\"--text-body-header-neutral-default\"\n          >\n            {t('noumena.chamber_edit.give_reference.title', {\n              referenceRequest: noumReferenceMetadata.experienceOwnerName,\n            })}\n          </TSpan>\n          <Spacer height={24} />\n          <TSpan font=\"body-m\" colorToken=\"--text-body-neutral-highlighted\">\n            {t('noumena.chamber_edit.give_reference.description')}\n          </TSpan>\n          <ProjectContainer\n            onClick={\n              noumReferenceMetadata._id\n                ? () => setShowModalDetail(true)\n                : undefined\n            }\n          >\n            <TSpan\n              font=\"body-m-bold\"\n              colorToken=\"--text-card-header-neutral-highlighted\"\n            >\n              {noumReferenceMetadata.experience.title}\n            </TSpan>\n            <Icon\n              name=\"chevron_small_right_m\"\n              size={20}\n              color=\"--icon-card-neutral-default\"\n            />\n          </ProjectContainer>\n          <div>\n            <Controller\n              control={control}\n              name=\"providerName\"\n              render={({ field: { value, onChange } }) => (\n                <TextField\n                  label={t(\n                    'noumena.chamber_edit.give_reference.input.name_placeholder',\n                  )}\n                  value={value}\n                  onChange={onChange}\n                />\n              )}\n            />\n            <Spacer height={16} />\n            <Controller\n              control={control}\n              name=\"capacity\"\n              render={({\n                field: { value, onChange },\n                fieldState: { error },\n              }) => (\n                <Dropdown\n                  containerStyle={{\n                    padding: '0',\n                  }}\n                  observerMinHeight=\"0px\"\n                  hideIcons\n                  placement=\"bottom-start\"\n                  options={capacityOptions}\n                  inputValue={value ?? ''}\n                  onSelectOption={(e) => {\n                    onChange(e.value);\n                  }}\n                  usePortal={false}\n                >\n                  {({ inputProps, inputRef, toggle }) => (\n                    <TextField\n                      readOnly\n                      {...inputProps}\n                      ref={inputRef}\n                      value={value ?? ''}\n                      label={t(\n                        'noumena.chamber_edit.give_reference.input.capacity_placeholder',\n                        {\n                          experienceOwner:\n                            noumReferenceMetadata.experienceOwnerName,\n                        },\n                      )}\n                      spellCheck=\"false\"\n                      onChange={(e) => {\n                        onChange(e.currentTarget.value);\n                      }}\n                      error={!!error?.message}\n                      rightIcon={\n                        <Icon\n                          name=\"chevron_down_m\"\n                          size={16}\n                          onClick={toggle}\n                          color=\"--icon-input-neutral-default\"\n                        />\n                      }\n                    />\n                  )}\n                </Dropdown>\n              )}\n            />\n            <Spacer height={16} />\n            <Controller\n              control={control}\n              name=\"referenceText\"\n              render={({ field: { value, onChange } }) => (\n                <TextArea\n                  label={t(\n                    'noumena.chamber_edit.give_reference.input.reference_text_placeholder',\n                    {\n                      experienceOwner:\n                        noumReferenceMetadata.experienceOwnerName,\n                    },\n                  )}\n                  value={value}\n                  onChange={(e) => {\n                    onChange(e);\n                    setExperienceError('');\n                  }}\n                  error={!!experienceError}\n                  helperText={experienceError}\n                />\n              )}\n            />\n            <Spacer height={16} />\n            <Button\n              primary\n              size=\"full\"\n              disabled={noumReferenceLoading}\n              onClick={handleSubmit(onSubmit)}\n            >\n              {t('noumena.submit')}\n            </Button>\n          </div>\n          <Spacer height={16} />\n          <TSpan font=\"body-m\" colorToken=\"--text-body-neutral-default\">\n            {t('noumena.chamber_edit.give_reference.footer_2')}\n          </TSpan>\n        </WrapperContainer>\n      )}\n      <ReferenceDetailModal\n        imageUrl={noumReferenceMetadata.experience.url}\n        experienceDetail={noumReferenceMetadata.experience.body}\n        experienceTitle={noumReferenceMetadata.experience.title}\n        isOpen={showModalDetail}\n        onClose={() => setShowModalDetail(false)}\n      />\n    </Container>\n  );\n};\n\nexport default Reference;\n"],"names":["API_URL","getApiUrl","NoumReferenceServices","fillOutReferenceByExternalUser","capacity","referenceText","imageUrl","referenceToken","body","undefined","url","headers","axios","post","data","error","Sentry","tags","section","errorMessage","parseAxiosError","Error","getNoumReferenceMetadata","token","get","capacityOptions","value","key","type","label","t","StyledRichEditor","styled","div","sizes","TABLET_L","MOBILE_MAX","noScrollBar","WrapperContainer","CompletedProvidingReferenceContainer","Container","ProjectContainer","Header","mediaSizes","TABLET_MIN","LAPTOP_MIN","StyledImage","img","ReferenceDetailModal","experienceTitle","experienceDetail","onClose","isOpen","width","useWindowDimensions","isDesktop","useMemo","breakpoints","LAPTOP","isTablet","TABLET","isMobile","jsxs","Modal","jsx","ModalHeader","Spacer","RichTextEditorView","length","elementSchema","yup","providerName","required","Reference","flags","references","useLaunchDarkly","navigate","useNavigate","addToast","useToast","search","useLocation","referenceTokenRef","useRef","showModalDetail","setShowModalDetail","useState","experienceError","setExperienceError","noumReferenceLoading","setNoumReferenceLoading","completedProvidingReference","setCompletedProvidingReference","noumReferenceMetadata","setNoumReferenceMetadata","experience","id","title","_id","experienceId","experienceOwnerName","control","handleSubmit","setValue","useForm","resolver","yupResolver","defaultValues","reValidateMode","mode","useEffect","ROUTES","LOGIN","replace","handleGetNoumReferenceMetadata","useCallback","response","URLSearchParams","current","foundCapacity","find","item","toLowerCase","onSubmit","externalNoumReference","trim","split","Logo","TSpan","referenceRequest","Icon","Controller","field","onChange","TextField","fieldState","Dropdown","padding","e","inputProps","inputRef","toggle","experienceOwner","currentTarget","message","TextArea","Button","Reference$1"],"mappings":"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"}