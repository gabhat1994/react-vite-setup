{"version":3,"file":"index-a497727f.js","sources":["../../src/components/Header/SubHeader.tsx","../../src/layout/MoneyLayout/styles.ts","../../src/layout/MoneyLayout/index.tsx"],"sourcesContent":["import { forwardRef, type Ref, type HTMLAttributes } from 'react';\nimport { SubHeaderWrapper } from './styles';\n\ninterface IHeader extends HTMLAttributes<HTMLDivElement> {}\n\nexport const SubHeader = forwardRef(\n  ({ children, ...rest }: IHeader, ref: Ref<HTMLDivElement>) => (\n    <SubHeaderWrapper ref={ref} data-testid=\"SubHeader\" {...rest}>\n      {children}\n    </SubHeaderWrapper>\n  ),\n);\n","import styled from 'styled-components';\nimport { breakpoints, devices } from '@/constants/devices';\nimport { type LayoutType } from './types';\n\nexport const Container = styled.div.attrs(\n  (props: { backgroundColor: string }) => props,\n)`\n  font-family: var(--font-family);\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: var(\n    ${(props) => props.backgroundColor || '--bg-body-neutral-alt-highlighted'}\n  );\n`;\n\nexport const Main = styled.div<{ type?: LayoutType }>`\n  flex-grow: 1;\n  display: flex;\n  justify-content: center;\n  gap: 0;\n\n  ${({ type }) => type === 'Chambers' && `padding: 1px 0 0;`}\n  ${({ type }) => type === 'Discovery' && `padding: 16px 0 80px;`}\n  ${({ type }) => type === 'Money' && `padding: 0px 0 80px;`}\n\n  @media ${devices.TABLET} {\n    ${({ type }) => type === 'Chambers' && `padding: 16px 16px 0;`}\n    ${({ type }) => type === 'Discovery' && `padding: 16px 16px 80px;`}\n    ${({ type }) => type === 'Money' && `padding: 0px 0px 80px;`}\n  }\n  @media ${devices.LAPTOP} {\n    ${({ type }) => type === 'Chambers' && `padding: 24px 40px 0;`}\n    ${({ type }) => type === 'Money' && `padding: 24px 40px 0;`}\n    ${({ type }) =>\n      type === 'Discovery' && `padding: 24px 40px 48px;      gap: 36px;    `}\n    ${({ type }) => type === 'Chambers' && `gap: 24px;`}\n    ${({ type }) => type === 'Money' && `gap: 24px;`}\n  }\n`;\n\nexport const Content = styled.div<{ type?: LayoutType }>`\n  ${({ type }) => type === 'Chambers' && `width: 100%;`}\n  ${({ type }) => type === 'Money' && `width: 100%;`}\n\n  @media ${devices.LAPTOP_L} {\n    ${({ type }) => type === 'Chambers' && `width: 1224px;`};\n    ${({ type }) => type === 'Money' && `width: 1224px;`};\n  }\n  @media ${devices.TABLET} {\n    ${({ type }) => type === 'Chambers' && `max-width: 920px;`};\n    ${({ type }) => type === 'Money' && `max-width: 100%;`};\n  }\n  @media (min-width: ${breakpoints.TABLET_L + 1}px) {\n    ${({ type }) => type === 'Money' && `max-width: 924px;`};\n  }\n`;\n\nexport const LeftContent = styled.div<{ type?: LayoutType }>`\n  @media ${devices.LAPTOP} {\n    ${({ type }) =>\n      type === 'Chambers' && `margin-right: 12px; min-width:100px`}\n    ${({ type }) =>\n      type === 'Money' && `margin-right: 12px; min-width: 100px; width:120px;`}\n  }\n`;\n\nexport const RightContent = styled.div<{ $isAppUiV2?: boolean }>`\n  ${(props) =>\n    props.$isAppUiV2 &&\n    `\n    display: none;\n    \n    @media ${devices.LAPTOP} {\n      display: block;\n    }\n  `}\n`;\n","import { Button } from '@/components/Button';\nimport { Header } from '@/components/Header';\nimport { GuestHeader } from '@/layout/GuestHeader';\nimport { MainHeader } from '@/layout/MainHeader';\nimport { SubHeader } from '@/components/Header/SubHeader';\nimport { SideNav } from '@/components/SideNav';\nimport { StickyContainer } from '@/components/StickyContainer';\nimport { TSpan } from '@/components/Typography';\nimport accessLocalStorage from '@/constants/accessLocalStorage';\nimport sideNavItems from '@/constants/sideNavItems';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useLaunchDarkly } from '@/hooks';\nimport * as Storyblok from '@/services/rest/storyblok';\nimport { getLocalStorage, setLocalStorage } from '@/utils/localStorage';\nimport { UserUtil } from '@/utils/user';\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { useLocation, useNavigate, type Location } from 'react-router-dom';\nimport { AppLayout } from '../AppLayout';\nimport { StyledBanner } from '../ListLayout/styles';\nimport { type BannerContent, type RootObject } from '../ListLayout/types';\nimport { Stack, StackItem } from '../Stack';\nimport { Container, Content, LeftContent, Main, RightContent } from './styles';\nimport { type LayoutProps } from './types';\n\nconst MoneyLayout: React.FC<LayoutProps> = memo(\n  ({\n    type,\n    rightContent,\n    children,\n    hideLeftMenu,\n    subHeader,\n    backgroundColor,\n    onGoBack,\n  }) => {\n    const navigate = useNavigate();\n    const location: Location = useLocation();\n    const { user, isUnregistered, isUnauthenticated } = useAuth();\n    const { flags } = useLaunchDarkly();\n\n    const [activePath, setActivePath] = useState<string>('');\n    const [showBanner, setShowBanner] = useState<boolean>(true);\n\n    const [bannerContent, setBannerContent] = useState<BannerContent>();\n    const componentMounted = useRef(true);\n\n    useEffect(() => {\n      const showBannerFromLocalStorage =\n        getLocalStorage(accessLocalStorage.SHOW_BANNER) === null;\n      setShowBanner(showBannerFromLocalStorage);\n    }, [showBanner]);\n\n    useEffect(() => {\n      async function getBannerContent() {\n        const { data }: { data: RootObject } =\n          await Storyblok.getBannerContent();\n        if (componentMounted.current) {\n          const description = data?.story?.content?.Description;\n          const buttonText = data?.story?.content?.ButtonText;\n          const buttonLink = data?.story?.content?.ButtonLink;\n          setBannerContent({ description, buttonText, buttonLink });\n        }\n      }\n\n      getBannerContent();\n    }, []);\n\n    useEffect(() => {\n      let path = '/';\n      sideNavItems.some((navItem) => {\n        if (\n          navItem.value.length > 1 &&\n          location.pathname.includes(navItem.value)\n        ) {\n          path = navItem.value;\n          return true;\n        }\n        return false;\n      });\n\n      setActivePath(path);\n    }, [location.pathname]);\n\n    const onNavigate = useCallback(\n      (nextPath: string) => {\n        setActivePath(nextPath);\n        navigate(nextPath, { replace: false });\n      },\n      [navigate],\n    );\n\n    if (flags.newAppNavigation) {\n      return (\n        <AppLayout.Layout\n          onGoBack={onGoBack}\n          topNavbar={\n            isUnauthenticated ? null : isUnregistered ? (\n              <Header isBorderRadius={false}>\n                <GuestHeader leftNavButton={true} />\n              </Header>\n            ) : (\n              <AppLayout.TopBar />\n            )\n          }\n          sideNav={<AppLayout.SideNavigation />}\n        >\n          <AppLayout.MainContent>\n            <Stack\n              vertical\n              align=\"stretch\"\n              fullWidth\n              style={{ fontFamily: 'var(--font-family)' }}\n            >\n              {subHeader && <SubHeader>{subHeader}</SubHeader>}\n              <Stack vertical align=\"stretch\" gap={24} fullWidth>\n                {showBanner && bannerContent?.buttonText && (\n                  <StyledBanner>\n                    <TSpan\n                      font=\"body-m\"\n                      colorToken=\"--text-campaign-banner-success-primary-default\"\n                    >\n                      {bannerContent?.description}\n                    </TSpan>\n                    <div className=\"action-buttons\">\n                      <Button\n                        primary\n                        intent=\"positive\"\n                        onClick={() =>\n                          onNavigate(\n                            `/article?slug=articles/${bannerContent?.buttonLink}`,\n                          )\n                        }\n                      >\n                        {bannerContent?.buttonText}\n                      </Button>\n                      <TSpan\n                        font=\"button-m\"\n                        colorToken=\"--text-button-success-secondary-default\"\n                        onClick={() => {\n                          setShowBanner(false);\n                          setLocalStorage(\n                            accessLocalStorage.SHOW_BANNER,\n                            false,\n                          );\n                        }}\n                      >\n                        Dismiss\n                      </TSpan>\n                    </div>\n                  </StyledBanner>\n                )}\n\n                <Stack gap={24} align=\"start\" justify=\"stretch\" fullWidth>\n                  <StackItem\n                    grow\n                    style={{\n                      overflow: flags.newAppNavigation ? 'hidden' : 'unset',\n                    }}\n                  >\n                    {children}\n                  </StackItem>\n\n                  {!!rightContent && (\n                    <RightContent\n                      data-testid=\"layout-right-content\"\n                      $isAppUiV2={flags.newAppNavigation}\n                    >\n                      <StickyContainer>{rightContent}</StickyContainer>\n                    </RightContent>\n                  )}\n                </Stack>\n              </Stack>\n            </Stack>\n          </AppLayout.MainContent>\n        </AppLayout.Layout>\n      );\n    }\n\n    return (\n      <Container\n        data-testid=\"layout-container\"\n        backgroundColor={backgroundColor}\n      >\n        <Header isBorderRadius={false}>\n          <MainHeader\n            avatar={UserUtil.getProfilePicture(user) || undefined}\n            userName={user?.firstName || undefined}\n          />\n        </Header>\n        {subHeader && <SubHeader>{subHeader}</SubHeader>}\n        {showBanner && bannerContent?.buttonText && (\n          <StyledBanner>\n            <TSpan\n              font=\"body-m\"\n              colorToken=\"--text-campaign-banner-success-primary-default\"\n            >\n              {bannerContent?.description}\n            </TSpan>\n            <div className=\"action-buttons\">\n              <Button\n                primary\n                intent=\"positive\"\n                onClick={() =>\n                  onNavigate(\n                    `/article?slug=articles/${bannerContent?.buttonLink}`,\n                  )\n                }\n              >\n                {bannerContent?.buttonText}\n              </Button>\n              <TSpan\n                font=\"button-m\"\n                colorToken=\"--text-button-success-secondary-default\"\n                onClick={() => {\n                  setShowBanner(false);\n                  setLocalStorage(accessLocalStorage.SHOW_BANNER, false);\n                }}\n              >\n                Dismiss\n              </TSpan>\n            </div>\n          </StyledBanner>\n        )}\n        <Main data-testid=\"layout-main\" type={type}>\n          {!hideLeftMenu && (\n            <LeftContent data-testid=\"layout-left-content\" type={type}>\n              <StickyContainer leftNav>\n                <SideNav\n                  onNavChange={onNavigate}\n                  navItems={sideNavItems}\n                  activeNavValue={activePath}\n                />\n              </StickyContainer>\n            </LeftContent>\n          )}\n          <Content data-testid=\"layout-main-content\" type={type}>\n            {children}\n          </Content>\n          {!!rightContent && (\n            <RightContent data-testid=\"layout-right-content\">\n              <StickyContainer>{rightContent}</StickyContainer>\n            </RightContent>\n          )}\n        </Main>\n      </Container>\n    );\n  },\n);\n\nexport default MoneyLayout;\n"],"names":["SubHeader","forwardRef","children","rest","ref","jsx","SubHeaderWrapper","Container","styled","div","attrs","props","backgroundColor","Main","type","devices","TABLET","LAPTOP","Content","LAPTOP_L","breakpoints","TABLET_L","LeftContent","RightContent","$isAppUiV2","MoneyLayout","memo","rightContent","hideLeftMenu","subHeader","onGoBack","navigate","useNavigate","location","useLocation","user","isUnregistered","isUnauthenticated","useAuth","flags","useLaunchDarkly","activePath","setActivePath","useState","showBanner","setShowBanner","bannerContent","setBannerContent","componentMounted","useRef","useEffect","showBannerFromLocalStorage","getLocalStorage","accessLocalStorage","SHOW_BANNER","getBannerContent","data","Storyblok","current","description","story","content","Description","buttonText","ButtonText","buttonLink","ButtonLink","path","sideNavItems","some","navItem","value","length","pathname","includes","onNavigate","useCallback","nextPath","replace","newAppNavigation","AppLayout","Header","GuestHeader","Stack","fontFamily","jsxs","StyledBanner","TSpan","Button","StackItem","overflow","StickyContainer","MainHeader","UserUtil","getProfilePicture","undefined","firstName","SideNav"],"mappings":"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"}