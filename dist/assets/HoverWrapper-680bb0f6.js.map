{"version":3,"file":"HoverWrapper-680bb0f6.js","sources":["../../src/features/noums/hooks/spaceQuery/useRemoveSectionHelper.ts","../../src/features/money/hooks/useSubWalletDeleteHelper.ts","../../src/features/noums/components/NoumEditor2.0/HoverWrapper/utils.ts","../../src/features/noums/components/NoumEditor2.0/HoverWrapper/ArrowDown.tsx","../../src/features/noums/components/NoumEditor2.0/HoverWrapper/ArrowUp.tsx","../../src/features/noums/components/NoumEditor2.0/HoverWrapper/NonRemovableDeleteModal.tsx","../../src/features/noums/components/NoumEditor2.0/HoverWrapper/Delete.tsx","../../src/features/noums/components/NoumEditor2.0/HoverWrapper/Duplicate.tsx","../../src/features/noums/components/NoumEditor2.0/HoverWrapper/Edit.tsx","../../src/features/noums/components/NoumEditor2.0/HoverWrapper/Move.tsx","../../src/features/noums/components/NoumEditor2.0/HoverWrapper/PlusBottom.tsx","../../src/features/noums/components/NoumEditor2.0/HoverWrapper/PlusTop.tsx","../../src/features/noums/components/NoumEditor2.0/HoverWrapper/Actions/Visibility.tsx","../../src/features/noums/components/NoumEditor2.0/HoverWrapper/HoverWrapper.tsx"],"sourcesContent":["import { useCallback } from 'react';\nimport * as Sentry from '@sentry/react';\nimport { t } from 'i18next';\nimport {\n  GetSpaceByIdDocument,\n  type GetSpaceByIdQuery,\n  useRemoveSectionFromNoumLayoutMutation,\n  type GetSpaceByIdQueryVariables,\n} from '@/apollo/graphql';\nimport { useToast } from '@/hooks/toast';\nimport { cloneDeep, remove as _remove } from 'lodash';\nimport {\n  NoumLayoutStatus,\n  NoumLayoutStatusFilter,\n} from '@/apollo/generated/types';\n\nexport function useRemoveSectionHelper() {\n  const { addToast } = useToast();\n\n  const [removeSection, { loading }] = useRemoveSectionFromNoumLayoutMutation();\n\n  const removeSectionHelper = useCallback(\n    async (sectionId: string, spaceId: string) => {\n      let isSuccess;\n      try {\n        await removeSection({\n          variables: { ID: sectionId },\n          update: (cache, { data }) => {\n            if (!data || !data.removeSectionFromNoumLayout) return;\n\n            const variables: GetSpaceByIdQueryVariables = {\n              id: spaceId,\n              editorV2Enabled: true,\n              status: NoumLayoutStatusFilter.Unpublished,\n            };\n\n            const cacheResult = cache.readQuery<GetSpaceByIdQuery>({\n              query: GetSpaceByIdDocument,\n              variables,\n            });\n\n            if (!cacheResult) return;\n\n            const { getSpaceById: spaceData } = cacheResult;\n\n            if (!spaceData) return;\n\n            const cloneSpaceData = cloneDeep(spaceData);\n            if (!cloneSpaceData?.layout) return;\n            const removedSectionPosition = cloneSpaceData.layout.sections.find(\n              (section) => section._id === sectionId,\n            )?.position;\n            cloneSpaceData.layout.status = NoumLayoutStatus.Unsaved;\n            cloneSpaceData.layout.sections = _remove(\n              cloneSpaceData?.layout.sections,\n              (el) => el?._id !== sectionId,\n            );\n            if (!removedSectionPosition) return;\n\n            cloneSpaceData.layout.sections = cloneSpaceData.layout.sections.map(\n              (section) =>\n                section.position > removedSectionPosition\n                  ? { ...section, position: section.position - 1 }\n                  : section,\n            );\n            cache.writeQuery({\n              query: GetSpaceByIdDocument,\n              variables,\n              data: {\n                getSpaceById: cloneSpaceData,\n              },\n            });\n          },\n        });\n\n        addToast(\n          'success',\n          'none',\n          t(`noumena.container.section_delete.success`),\n        );\n        isSuccess = true;\n      } catch (error) {\n        let message = 'Unknown';\n        if (error instanceof Error) {\n          message = error.message;\n        }\n        addToast('error', 'none', message);\n        Sentry.captureException(new Error(message), {\n          tags: {\n            section: 'removeSectionMutation',\n          },\n        });\n\n        isSuccess = false;\n      }\n\n      return isSuccess;\n    },\n    [addToast, removeSection],\n  );\n\n  return {\n    loading,\n    removeSectionHelper,\n  };\n}\n\nexport default useRemoveSectionHelper;\n","import { useCallback } from 'react';\nimport { t } from 'i18next';\nimport * as Sentry from '@sentry/react';\nimport { useGetSubWalletBalanceLazyQuery } from '@/apollo/graphql';\nimport { useToast } from '@/hooks/toast';\n\nexport function useSubWalletDeleteHelper() {\n  const { addToast } = useToast();\n\n  const handleError = useCallback(\n    (networkError: String | Error | null) => {\n      addToast(\n        'error',\n        'none',\n        `${t('noumena.toast_error.text')}: ${networkError}`,\n      );\n    },\n    [addToast],\n  );\n\n  const [gqlGetSubWalletBalance] = useGetSubWalletBalanceLazyQuery();\n\n  const subWalletDeleteHelper = useCallback(\n    async (\n      chamberId: string | null | undefined,\n      regularDeleteFlow: () => void,\n      handleCloseNonZeroWalletModal: () => void,\n    ) => {\n      if (chamberId) {\n        await gqlGetSubWalletBalance({\n          variables: {\n            chamberId,\n          },\n          onError: (err) => {\n            if (err instanceof Error) {\n              handleError(err?.message);\n              Sentry.captureException(new Error(err?.message), {\n                tags: {\n                  section: 'gqlGetSubWalletBalance',\n                },\n              });\n            }\n          },\n          onCompleted: (res) => {\n            if (\n              res?.getSubWalletBalance?.amount?.value &&\n              res?.getSubWalletBalance?.amount?.value > 0\n            ) {\n              handleCloseNonZeroWalletModal();\n            } else {\n              regularDeleteFlow();\n            }\n          },\n        });\n      }\n    },\n    [gqlGetSubWalletBalance, handleError],\n  );\n\n  return { subWalletDeleteHelper };\n}\n\nexport default useSubWalletDeleteHelper;\n","type ColorTokenProps = {\n  bgColor: string;\n  hoverColor: string;\n};\n\nexport const getActionButtonColorToken = (\n  isTool: boolean = false,\n  isDisabled?: boolean,\n): ColorTokenProps => {\n  const colorData: ColorTokenProps = isTool\n    ? {\n        bgColor: 'var(--bg-tool-toolbox-brand-primary-default)',\n        hoverColor: 'var( --bg-tool-toolbox-brand-primary-hover)',\n      }\n    : {\n        bgColor: 'var(--bg-section-toolbox-default)',\n        hoverColor: isDisabled\n          ? 'var(--bg-section-toolbox-default)'\n          : 'var(--bg-section-toolbox-hover)',\n      };\n  return colorData;\n};\n","import { useMemo } from 'react';\nimport { t } from 'i18next';\nimport { Icon } from '@/components/Icon';\nimport { ControlPanelIcon, WrapperIcon } from './Styles';\nimport { type ControlPanelProps } from './types';\nimport { getActionButtonColorToken } from './utils';\n\nconst ArrowDown = ({\n  onDownClick,\n  provided,\n  currentIndex,\n  totalIndex,\n  isTool,\n}: ControlPanelProps) => {\n  const isDisabled = useMemo(\n    () => currentIndex === totalIndex,\n    [currentIndex, totalIndex],\n  );\n\n  const clickedHandler = () => {\n    if (!isDisabled) onDownClick?.();\n  };\n\n  const { bgColor, hoverColor } = getActionButtonColorToken(isTool, isDisabled);\n\n  return (\n    <ControlPanelIcon\n      cursorAllowed\n      onClick={(e) => {\n        e.stopPropagation();\n        clickedHandler();\n      }}\n      data-title={t('noumena.noum_editor.hover_controls_arrow_down')}\n      bgColor={bgColor}\n      hoverColor={hoverColor}\n    >\n      <WrapperIcon\n        aria-label=\"arrow_down_button\"\n        ref={provided?.innerRef}\n        disabled={isDisabled}\n        {...provided?.dragHandleProps}\n      >\n        <Icon\n          size={16}\n          name=\"arrow_down_m\"\n          color=\"--icon-button-neutral-alt-default\"\n        />\n      </WrapperIcon>\n    </ControlPanelIcon>\n  );\n};\n\nexport default ArrowDown;\n","import { useMemo } from 'react';\nimport { t } from 'i18next';\nimport { Icon } from '@/components/Icon';\nimport { ControlPanelIcon, WrapperIcon } from './Styles';\nimport { type ControlPanelProps, ToolbuttonEdge } from './types';\nimport { getActionButtonColorToken } from './utils';\n\nconst ArrowUp = ({\n  onUpClick,\n  provided,\n  currentIndex,\n  isTool,\n}: ControlPanelProps) => {\n  const isDisabled = useMemo(() => currentIndex === 0, [currentIndex]);\n\n  const clickedHandler = () => {\n    if (!isDisabled) onUpClick?.();\n  };\n\n  const { bgColor, hoverColor } = getActionButtonColorToken(isTool, isDisabled);\n\n  return (\n    <ControlPanelIcon\n      cursorAllowed\n      onClick={(e) => {\n        e.stopPropagation();\n        clickedHandler();\n      }}\n      data-title={t('noumena.noum_editor.hover_controls_arrow_up')}\n      isEdge={ToolbuttonEdge.topLeft}\n      bgColor={bgColor}\n      hoverColor={hoverColor}\n    >\n      <WrapperIcon\n        aria-label=\"arrow_up_button\"\n        ref={provided?.innerRef}\n        disabled={isDisabled}\n        {...provided?.dragHandleProps}\n      >\n        <Icon\n          size={16}\n          name=\"arrow_up_m\"\n          color=\"--icon-button-neutral-alt-default\"\n        />\n      </WrapperIcon>\n    </ControlPanelIcon>\n  );\n};\n\nexport default ArrowUp;\n","import { t } from 'i18next';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { Button } from '@/components/Button';\nimport { Spacer, Stack } from '@/layout';\nimport { Trans } from 'react-i18next';\n\nimport {\n  DeleteDescription,\n  DeleteDescriptionContainer,\n} from '@/screens/Chamber/components/DeleteModal/styles';\nimport { TSpan } from '@/components/Typography';\nimport { type ElementOutput } from '@/apollo/generated/types';\nimport { SectionToolsList } from './Styles';\nimport { nonRemovableTool } from './types';\n\ninterface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  nonRemovableToolList: ElementOutput[];\n}\n\nexport const NonRemovableDeleteModal = ({\n  isOpen,\n  onClose,\n  nonRemovableToolList,\n}: Props) => (\n  <Modal\n    open={isOpen}\n    size={ModalSize.S}\n    onClose={onClose}\n    testId=\"nonremovable-tools-modal\"\n    disableBackdropClick\n  >\n    <ModalHeader>\n      {t('noumena.noum_editor.no_delete_Section_title')}\n    </ModalHeader>\n    <ModalBody style={{ alignItems: 'center' }}>\n      <Stack vertical gap={15}>\n        <DeleteDescriptionContainer>\n          <DeleteDescription>\n            <Trans>\n              <TSpan font=\"body-l\" colorToken=\"--text-modal-neutral-default\">\n                {t('noumena.noum_editor.no_delete_section_description')}\n                <SectionToolsList>\n                  {nonRemovableToolList.map((item) => (\n                    <li>\n                      {\n                        nonRemovableTool[\n                          item.elementType as keyof typeof nonRemovableTool\n                        ]\n                      }\n                    </li>\n                  ))}\n                </SectionToolsList>\n              </TSpan>\n            </Trans>\n          </DeleteDescription>\n        </DeleteDescriptionContainer>\n      </Stack>\n    </ModalBody>\n    <Spacer height={16} />\n    <ModalFooter isFullScreen={false} marginTop={12}>\n      <Button\n        tertiary\n        intent=\"negative\"\n        size=\"full\"\n        onClick={onClose}\n        data-testid=\"cancel-button\"\n      >\n        {t('noumena.cancel')}\n      </Button>\n    </ModalFooter>\n  </Modal>\n);\n\nexport default NonRemovableDeleteModal;\n","import { useCallback, useState } from 'react';\nimport { t } from 'i18next';\nimport { Icon } from '@/components/Icon';\nimport { useEditChamberState } from '@/screens/Chamber/EditChamber/provider';\nimport { SectionToolType } from '@/screens/Chamber/components/NoumSections/constants';\nimport { useRemoveSectionHelper } from '@/features/noums/hooks/spaceQuery';\nimport { ElementTypeEnum } from '@/apollo/generated/types';\nimport { useSubWalletDeleteHelper } from '@/features/money/hooks';\nimport { NonZeroWalletModal } from '@/screens/Chamber/components/modals/NonZeroWalletModal';\nimport { ElementUtils } from '@/utils/element';\nimport { type ControlPanelProps, ToolbuttonEdge } from './types';\nimport { ControlPanelIcon, WrapperIcon } from './Styles';\nimport NonRemovableDeleteModal from './NonRemovableDeleteModal';\n\nconst Delete = ({\n  isTool,\n  section,\n  id,\n  isDisabled,\n  tool,\n}: ControlPanelProps) => {\n  const { handleDeleteModal, space, setNoumSidePanelId, setActiveEditingTool } =\n    useEditChamberState();\n  const [showNonZeroWalletModal, setShowNonZeroWalletModal] = useState(false);\n  const [showNonRemovableModal, setShowNonRemovableModal] = useState(false);\n  const { removeSectionHelper } = useRemoveSectionHelper();\n\n  const { subWalletDeleteHelper } = useSubWalletDeleteHelper();\n\n  const regularDeleteFlow = useCallback(() => {\n    if (id) {\n      setActiveEditingTool?.(tool);\n      handleDeleteModal?.(\n        isTool ? SectionToolType.TOOL_TYPE : SectionToolType.SECTION_TYPE,\n        id,\n      );\n    }\n  }, [handleDeleteModal, id, isTool, setActiveEditingTool, tool]);\n\n  const handleCloseNonZeroWalletModal = useCallback(() => {\n    setShowNonZeroWalletModal(!showNonZeroWalletModal);\n  }, [showNonZeroWalletModal]);\n\n  const nonRemovableTools = useCallback(\n    () => ElementUtils.nonRemovableTools(section?.columns || []),\n    [section?.columns],\n  );\n\n  const deleteHandler = useCallback(\n    async (e) => {\n      e.stopPropagation();\n      if (isDisabled) return;\n      if (nonRemovableTools().length > 0 && !isTool) {\n        setShowNonRemovableModal(true);\n        return;\n      }\n      const isToolExist = section?.columns.find(\n        (item) => item.tools.length > 0,\n      );\n      if (isToolExist) {\n        if (tool?.elementType !== ElementTypeEnum.Wallet) {\n          regularDeleteFlow();\n        } else {\n          subWalletDeleteHelper(\n            space?._id,\n            regularDeleteFlow,\n            handleCloseNonZeroWalletModal,\n          );\n        }\n      } else {\n        if (!space?._id) return;\n        const isRemoved = await removeSectionHelper(id!, space._id);\n        if (isRemoved) {\n          setNoumSidePanelId?.(undefined);\n        }\n      }\n    },\n    [\n      handleCloseNonZeroWalletModal,\n      id,\n      isDisabled,\n      nonRemovableTools,\n      isTool,\n      regularDeleteFlow,\n      removeSectionHelper,\n      section?.columns,\n      setNoumSidePanelId,\n      space?._id,\n      subWalletDeleteHelper,\n      tool?.elementType,\n    ],\n  );\n\n  return (\n    <>\n      <ControlPanelIcon\n        cursorAllowed={!isDisabled}\n        onClick={(e) => deleteHandler(e)}\n        data-title={\n          isDisabled\n            ? t('noumena.noum_editor.hover_controls_not_delete')\n            : t('noumena.noum_editor.hover_controls_delete')\n        }\n        isEdge={ToolbuttonEdge.topRight}\n        bgColor={\n          isTool\n            ? 'var(--bg-tool-toolbox-brand-primary-default)'\n            : 'var(--bg-section-toolbox-default)'\n        }\n        hoverColor={\n          isTool\n            ? 'var( --bg-tool-toolbox-brand-primary-hover)'\n            : 'var(--bg-section-toolbox-hover)'\n        }\n      >\n        <WrapperIcon isEdge=\"right\" aria-label=\"delete_button\">\n          <Icon\n            size={16}\n            name=\"delete_m\"\n            color=\"--icon-button-neutral-alt-default\"\n          />\n        </WrapperIcon>\n      </ControlPanelIcon>\n      <NonZeroWalletModal\n        isOpen={showNonZeroWalletModal}\n        handleClose={handleCloseNonZeroWalletModal}\n      />\n      <NonRemovableDeleteModal\n        isOpen={showNonRemovableModal}\n        onClose={() => setShowNonRemovableModal(false)}\n        nonRemovableToolList={nonRemovableTools()}\n      />\n    </>\n  );\n};\nexport default Delete;\n","import { useCallback } from 'react';\nimport { t } from 'i18next';\nimport { Icon } from '@/components/Icon';\nimport { useEditChamberState } from '@/screens/Chamber/EditChamber/provider';\nimport { type ControlPanelProps } from './types';\nimport { ControlPanelIcon, WrapperIcon } from './Styles';\n\nconst Duplicate = ({\n  isTool,\n  id,\n  isDisabled,\n  isSectionBackground,\n}: ControlPanelProps) => {\n  const { duplicateHandler } = useEditChamberState();\n\n  const onClickduplicate = useCallback(\n    async (e) => {\n      e.stopPropagation();\n      if (isDisabled || !id) return;\n      await duplicateHandler?.(id, isTool);\n    },\n    [duplicateHandler, id, isDisabled, isTool],\n  );\n\n  return (\n    <ControlPanelIcon\n      isSectionBackground={isSectionBackground}\n      cursorAllowed={!isDisabled}\n      onClick={(e) => onClickduplicate(e)}\n      data-title={\n        isDisabled\n          ? t('noumena.noum_editor.hover_controls_not_duplicate')\n          : t('noumena.noum_editor.hover_controls_duplicate')\n      }\n      bgColor={\n        isTool\n          ? 'var(--bg-tool-toolbox-brand-primary-default)'\n          : 'var(--bg-section-toolbox-default)'\n      }\n      hoverColor={\n        isTool\n          ? 'var( --bg-tool-toolbox-brand-primary-hover)'\n          : 'var(--bg-section-toolbox-hover)'\n      }\n    >\n      <WrapperIcon aria-label=\"duplicate_button\">\n        <Icon\n          size={16}\n          name=\"copy_m\"\n          color=\"--icon-button-neutral-alt-default\"\n        />\n      </WrapperIcon>\n    </ControlPanelIcon>\n  );\n};\n\nexport default Duplicate;\n","import { t } from 'i18next';\nimport { Icon } from '@/components/Icon';\nimport { useEditChamberState } from '@/screens/Chamber/EditChamber/provider';\nimport { SectionToolType } from '@/screens/Chamber/components/NoumSections/constants';\nimport { ControlPanelIcon, WrapperIcon } from './Styles';\nimport { type ControlPanelProps } from './types';\n\nconst Edit = ({ isTool, id, tool, isDisabled }: ControlPanelProps) => {\n  const { handleEditModal, noumSidePanelId, setNoumSidePanelId } =\n    useEditChamberState();\n\n  const clickedHandler = () => {\n    if (noumSidePanelId && id === noumSidePanelId) {\n      setNoumSidePanelId?.(undefined);\n    } else {\n      handleEditModal?.(\n        isTool ? SectionToolType.TOOL_TYPE : SectionToolType.SECTION_TYPE,\n        id!,\n        tool,\n      );\n    }\n  };\n\n  return (\n    <ControlPanelIcon\n      cursorAllowed={!isDisabled}\n      onClick={(e) => {\n        e.stopPropagation();\n        if (isDisabled) return;\n        clickedHandler();\n      }}\n      data-title={t('noumena.noum_editor.hover_controls_edit')}\n      bgColor={\n        isTool\n          ? 'var(--bg-tool-toolbox-brand-primary-default)'\n          : 'var(--bg-section-toolbox-default)'\n      }\n      hoverColor={\n        isTool\n          ? 'var( --bg-tool-toolbox-brand-primary-hover)'\n          : 'var(--bg-section-toolbox-hover)'\n      }\n    >\n      <WrapperIcon aria-label=\"edit_button\">\n        <Icon\n          size={16}\n          name=\"edit_m\"\n          color=\"--icon-button-neutral-alt-default\"\n        />\n      </WrapperIcon>\n    </ControlPanelIcon>\n  );\n};\n\nexport default Edit;\n","import { t } from 'i18next';\nimport { Icon } from '@/components/Icon';\nimport { ControlPanelIcon, WrapperIcon } from './Styles';\nimport { type ControlPanelProps, ToolbuttonEdge } from './types';\n\nconst Move = ({\n  isTool,\n  provided,\n  setOnDragInitiateId,\n  id,\n  setCurrentElementHeight,\n  elementRef,\n}: ControlPanelProps) => (\n  <ControlPanelIcon\n    cursorAllowed\n    onClick={(e) => e.stopPropagation()}\n    onMouseDown={() => {\n      setOnDragInitiateId?.(id!);\n      setCurrentElementHeight?.(elementRef?.current?.offsetHeight!);\n    }}\n    data-title={t('noumena.noum_editor.hover_controls_move')}\n    isEdge={ToolbuttonEdge.topLeft}\n    bgColor={\n      isTool\n        ? 'var(--bg-tool-toolbox-brand-primary-default)'\n        : 'var(--bg-section-toolbox-default)'\n    }\n    hoverColor={\n      isTool\n        ? 'var( --bg-tool-toolbox-brand-primary-hover)'\n        : 'var(--bg-section-toolbox-hover)'\n    }\n    {...provided?.dragHandleProps}\n  >\n    <WrapperIcon aria-label=\"move_button\">\n      <Icon size={16} name=\"move_m\" color=\"--icon-button-neutral-alt-default\" />\n    </WrapperIcon>\n  </ControlPanelIcon>\n);\n\nexport default Move;\n","import { t } from 'i18next';\nimport { Icon } from '@/components/Icon';\nimport { ControlPanelIcon, WrapperIcon } from './Styles';\nimport { type PlusButtonProps, ToolbuttonEdge } from './types';\n\nconst PlusBottom = ({ onClick }: PlusButtonProps) => (\n  <ControlPanelIcon\n    cursorAllowed\n    onClick={(e) => {\n      e.stopPropagation();\n      onClick!();\n    }}\n    data-title={t('noumena.noum_editor.hover_controls_add_tool_below')}\n    isEdge={ToolbuttonEdge.bothBottom}\n    bgColor=\"var(--bg-tool-toolbox-brand-primary-default)\"\n    hoverColor=\"var( --bg-tool-toolbox-brand-primary-hover)\"\n  >\n    <WrapperIcon aria-label=\"plus_bottom_button\">\n      <Icon size={16} name=\"plus_m\" color=\"--icon-button-neutral-alt-default\" />\n    </WrapperIcon>\n  </ControlPanelIcon>\n);\n\nexport default PlusBottom;\n","import { t } from 'i18next';\nimport { Icon } from '@/components/Icon';\nimport { ControlPanelIcon, WrapperIcon } from './Styles';\nimport { type PlusButtonProps, ToolbuttonEdge } from './types';\n\nconst PlusTop = ({ onClick }: PlusButtonProps) => (\n  <ControlPanelIcon\n    cursorAllowed\n    onClick={(e) => {\n      e.stopPropagation();\n      onClick!();\n    }}\n    data-title={t('noumena.noum_editor.hover_controls_add_tool_above')}\n    isEdge={ToolbuttonEdge.bothTop}\n    bgColor=\"var(--bg-tool-toolbox-brand-primary-default)\"\n    hoverColor=\"var( --bg-tool-toolbox-brand-primary-hover)\"\n  >\n    <WrapperIcon aria-label=\"plus_top_button\">\n      <Icon size={16} name=\"plus_m\" color=\"--icon-button-neutral-alt-default\" />\n    </WrapperIcon>\n  </ControlPanelIcon>\n);\n\nexport default PlusTop;\n","import { Icon } from '@/components/Icon';\nimport { ElementUtils } from '@/utils/element';\nimport { ControlPanelIcon, WrapperIcon } from '../Styles';\nimport { type ControlPanelProps, ToolbuttonEdge } from '../types';\nimport { getActionButtonColorToken } from '../utils';\n\nconst Visibility = ({ isDisabled, tool }: ControlPanelProps) => {\n  const { bgColor, hoverColor } = getActionButtonColorToken(true);\n  const isCustomPreviewVisible =\n    !!tool && ElementUtils.isCustomPreviewVisible(tool);\n\n  return (\n    <ControlPanelIcon\n      cursorAllowed={!isDisabled}\n      isEdge={ToolbuttonEdge.topRight}\n      bgColor={bgColor}\n      hoverColor={hoverColor}\n    >\n      <WrapperIcon isEdge=\"right\" aria-label=\"visibility_button\">\n        <Icon\n          size={16}\n          name={isCustomPreviewVisible ? 'eye_on_solid_m' : 'eye_off_solid_m'}\n          color=\"--icon-button-neutral-alt-default\"\n        />\n      </WrapperIcon>\n    </ControlPanelIcon>\n  );\n};\nexport default Visibility;\n","import { t } from 'i18next';\nimport { useMemo } from 'react';\nimport { SectionToolType } from '@/screens/Chamber/components/NoumSections/constants';\nimport { useEditChamberState } from '@/screens/Chamber/EditChamber/provider';\nimport { elementTitle } from '@/screens/Chamber/components/NoumSidePanel/types';\nimport { type ElementTypeEnum } from '@/apollo/generated/types';\nimport ArrowDown from './ArrowDown';\nimport ArrowUp from './ArrowUp';\nimport Delete from './Delete';\nimport Duplicate from './Duplicate';\nimport Edit from './Edit';\nimport Move from './Move';\nimport PlusBottom from './PlusBottom';\nimport PlusTop from './PlusTop';\nimport {\n  ChildWrapper,\n  HoverWrapperContainer,\n  PlusWrapper,\n  StackElements,\n  ToolContainer,\n  ToolNameContainer,\n} from './Styles';\nimport { InsertDirection, type SectionProps } from './types';\nimport Visibility from './Actions/Visibility';\n\nexport const HoverWrapper = (props: SectionProps) => {\n  const {\n    children,\n    className,\n    type,\n    isActive,\n    id,\n    provided,\n    currentIndex,\n    totalIndex,\n    isDragging,\n    isElementDragging,\n    onDownClick,\n    onUpClick,\n    onInsert,\n    section,\n    disable,\n    isSectionBackground,\n    isColumnBackground,\n    setOnDragInitiateId,\n    isTool: isMoveTool,\n    setCurrentElementHeight,\n    elementType,\n    elementRef,\n    isCustomPreview = false,\n    isEditing = true,\n  } = props;\n  const { noumSidePanelId, hoverId, setHoverId } = useEditChamberState();\n  const isTool = type === SectionToolType.TOOL_TYPE;\n  const isSingleElementDragging = useMemo(\n    () => isDragging && isTool,\n    [isDragging, isTool],\n  );\n\n  return isEditing ? (\n    <HoverWrapperContainer\n      onMouseEnter={() => setHoverId?.(id)}\n      onMouseLeave={() => setHoverId?.(undefined)}\n      isHoverNotActive={!!hoverId && hoverId !== noumSidePanelId}\n      data-testid=\"hoverWrapper-container\"\n      isChild={className === 'child'}\n      isActive={isActive}\n      isDragging={isSingleElementDragging}\n      isElementDragging={isElementDragging}\n      isMoveTool={isMoveTool}\n    >\n      <ToolContainer className={className} isTool={isTool}>\n        <ToolNameContainer\n          aria-label={`${\n            isTool ? elementTitle[elementType as ElementTypeEnum] : 'section'\n          }`}\n          font=\"footnote-bold\"\n          colorToken=\"--text-button-neutral-alt-default\"\n        >\n          {isTool\n            ? elementTitle[elementType as ElementTypeEnum]\n            : `${t('noumena.noum_editor.hover_controls_section_title')}`}\n        </ToolNameContainer>\n      </ToolContainer>\n      {isTool && !isDragging && !isCustomPreview && (\n        <>\n          <PlusWrapper className={className}>\n            <PlusTop onClick={() => onInsert?.(InsertDirection.Above)} />\n          </PlusWrapper>\n          <PlusWrapper className={className} isBottom={true}>\n            <PlusBottom onClick={() => onInsert?.(InsertDirection.Below)} />\n          </PlusWrapper>\n        </>\n      )}\n      <StackElements className={className} isTool={isTool}>\n        {isTool && !isCustomPreview ? (\n          <Move\n            isTool={isTool}\n            provided={provided}\n            setOnDragInitiateId={setOnDragInitiateId}\n            id={id!}\n            setCurrentElementHeight={setCurrentElementHeight}\n            elementRef={elementRef}\n          />\n        ) : (\n          <>\n            <ArrowUp\n              isTool={isTool}\n              onUpClick={onUpClick}\n              provided={provided}\n              currentIndex={currentIndex}\n            />\n            <ArrowDown\n              isTool={isTool}\n              onDownClick={onDownClick}\n              provided={provided}\n              currentIndex={currentIndex}\n              totalIndex={totalIndex}\n            />\n          </>\n        )}\n        {isCustomPreview ? (\n          <Visibility tool={props.tool} />\n        ) : (\n          <>\n            <Edit\n              isDisabled={disable?.edit}\n              isTool={isTool}\n              id={id!}\n              tool={props?.tool}\n            />\n\n            <Duplicate\n              isTool={isTool}\n              id={id!}\n              isDisabled={disable?.duplicate}\n              isSectionBackground={isSectionBackground}\n            />\n            <Delete\n              isTool={isTool}\n              section={section}\n              id={id!}\n              isDisabled={disable?.delete}\n              isSectionBackground={isSectionBackground}\n              tool={props?.tool}\n            />\n          </>\n        )}\n      </StackElements>\n      <ChildWrapper\n        className={className === 'child' ? 'child-wrapper' : 'parent-wrapper'}\n        isDragging={isSingleElementDragging}\n        isSectionBackground={isSectionBackground}\n        isColumnBackground={isColumnBackground}\n      >\n        {children}\n      </ChildWrapper>\n    </HoverWrapperContainer>\n  ) : (\n    <ChildWrapper\n      className={className === 'child' ? 'child-wrapper' : 'parent-wrapper'}\n      isDragging={isSingleElementDragging}\n      isSectionBackground={isSectionBackground}\n      isColumnBackground={isColumnBackground}\n    >\n      {children}\n    </ChildWrapper>\n  );\n};\nexport default HoverWrapper;\n"],"names":["useRemoveSectionHelper","addToast","useToast","removeSection","loading","useRemoveSectionFromNoumLayoutMutation","removeSectionHelper","useCallback","sectionId","spaceId","isSuccess","variables","ID","update","cache","data","removeSectionFromNoumLayout","id","editorV2Enabled","status","NoumLayoutStatusFilter","Unpublished","cacheResult","readQuery","query","GetSpaceByIdDocument","getSpaceById","spaceData","cloneSpaceData","cloneDeep","layout","removedSectionPosition","sections","find","section","_id","position","NoumLayoutStatus","Unsaved","_remove","el","map","writeQuery","t","error","message","Error","Sentry","tags","useSubWalletDeleteHelper","handleError","networkError","gqlGetSubWalletBalance","useGetSubWalletBalanceLazyQuery","subWalletDeleteHelper","chamberId","regularDeleteFlow","handleCloseNonZeroWalletModal","onError","err","onCompleted","res","getSubWalletBalance","amount","value","getActionButtonColorToken","isTool","isDisabled","bgColor","hoverColor","ArrowDown","onDownClick","provided","currentIndex","totalIndex","useMemo","clickedHandler","jsx","ControlPanelIcon","e","stopPropagation","WrapperIcon","innerRef","dragHandleProps","Icon","ArrowUp","onUpClick","ToolbuttonEdge","topLeft","NonRemovableDeleteModal","isOpen","onClose","nonRemovableToolList","jsxs","Modal","ModalSize","S","ModalHeader","ModalBody","alignItems","Stack","DeleteDescriptionContainer","DeleteDescription","Trans","TSpan","SectionToolsList","item","nonRemovableTool","elementType","Spacer","ModalFooter","Button","Delete","tool","handleDeleteModal","space","setNoumSidePanelId","setActiveEditingTool","useEditChamberState","showNonZeroWalletModal","setShowNonZeroWalletModal","useState","showNonRemovableModal","setShowNonRemovableModal","SectionToolType","TOOL_TYPE","SECTION_TYPE","nonRemovableTools","ElementUtils","columns","deleteHandler","length","tools","ElementTypeEnum","Wallet","undefined","Fragment","topRight","NonZeroWalletModal","Duplicate","isSectionBackground","duplicateHandler","onClickduplicate","Edit","handleEditModal","noumSidePanelId","Move","setOnDragInitiateId","setCurrentElementHeight","elementRef","current","offsetHeight","PlusBottom","onClick","bothBottom","PlusTop","bothTop","Visibility","isCustomPreviewVisible","HoverWrapper","props","children","className","type","isActive","isDragging","isElementDragging","onInsert","disable","isColumnBackground","isMoveTool","isCustomPreview","isEditing","hoverId","setHoverId","isSingleElementDragging","HoverWrapperContainer","ToolContainer","ToolNameContainer","elementTitle","PlusWrapper","InsertDirection","Above","Below","StackElements","edit","duplicate","delete","ChildWrapper"],"mappings":"2gBAgBO,SAASA,IAAyB,CACjC,KAAA,CAAEC,SAAAA,GAAaC,EAAU,EAEzB,CAACC,EAAe,CAAEC,QAAAA,CAAAA,CAAS,EAAIC,EAAwC,EAEvEC,EAAsBC,EAAAA,YAC1B,MAAOC,EAAmBC,IAAoB,CACxCC,IAAAA,EACA,GAAA,CACF,MAAMP,EAAc,CAClBQ,UAAW,CAAEC,GAAIJ,CAAU,EAC3BK,OAAQA,CAACC,EAAO,CAAEC,KAAAA,CAAAA,IAAW,OACvB,GAAA,CAACA,GAAQ,CAACA,EAAKC,4BAA6B,OAEhD,MAAML,EAAwC,CAC5CM,GAAIR,EACJS,gBAAiB,GACjBC,OAAQC,EAAuBC,WAAAA,EAG3BC,EAAcR,EAAMS,UAA6B,CACrDC,MAAOC,EACPd,UAAAA,CAAAA,CACD,EAED,GAAI,CAACW,EAAa,OAEZ,KAAA,CAAEI,aAAcC,CAAcL,EAAAA,EAEpC,GAAI,CAACK,EAAW,OAEVC,MAAAA,EAAiBC,YAAUF,CAAS,EAC1C,GAAI,EAACC,GAAAA,MAAAA,EAAgBE,QAAQ,OACvBC,MAAAA,GAAyBH,EAAAA,EAAeE,OAAOE,SAASC,KAC/CC,GAAAA,EAAQC,MAAQ3B,CAAS,IADToB,YAAAA,EAE5BQ,SACYN,EAAAA,OAAOX,OAASkB,EAAiBC,QACjCR,EAAAA,OAAOE,SAAWO,EAAAA,OAC/BX,GAAAA,YAAAA,EAAgBE,OAAOE,SACtBQ,IAAOA,GAAAA,YAAAA,EAAIL,OAAQ3B,CAAS,EAE1BuB,IAEUD,EAAAA,OAAOE,SAAWJ,EAAeE,OAAOE,SAASS,IAC7DP,GACCA,EAAQE,SAAWL,EACf,CAAE,GAAGG,EAASE,SAAUF,EAAQE,SAAW,GAC3CF,CAAO,EAEfpB,EAAM4B,WAAW,CACflB,MAAOC,EACPd,UAAAA,EACAI,KAAM,CACJW,aAAcE,CAChB,CAAA,CACD,EACH,CAAA,CACD,EAED3B,EACE,UACA,OACA0C,EAAG,0CAAyC,CAAC,EAEnCjC,EAAA,SACLkC,GACP,IAAIC,EAAU,UACVD,aAAiBE,QACnBD,EAAUD,EAAMC,SAET5C,EAAA,QAAS,OAAQ4C,CAAO,EACjCE,EAAwB,IAAID,MAAMD,CAAO,EAAG,CAC1CG,KAAM,CACJd,QAAS,uBACX,CAAA,CACD,EAEWxB,EAAA,EACd,CAEOA,OAAAA,CAAAA,EAET,CAACT,EAAUE,CAAa,CAAC,EAGpB,MAAA,CACLC,QAAAA,EACAE,oBAAAA,CAAAA,CAEJ,CCnGO,SAAS2C,IAA2B,CACnC,KAAA,CAAEhD,SAAAA,GAAaC,EAAU,EAEzBgD,EAAc3C,cACjB4C,GAAwC,CACvClD,EACE,QACA,OACC,GAAE0C,EAAE,0BAA0B,MAAMQ,GAAc,CAAA,EAGvD,CAAClD,CAAQ,CAAC,EAGN,CAACmD,CAAsB,EAAIC,KAuC1B,MAAA,CAAEC,sBArCqB/C,EAAAA,YAC5B,MACEgD,EACAC,EACAC,IACG,CACCF,GACF,MAAMH,EAAuB,CAC3BzC,UAAW,CACT4C,UAAAA,CACF,EACAG,QAAkBC,GAAA,CACZA,aAAeb,QACjBI,EAAYS,GAAAA,YAAAA,EAAKd,OAAO,EACxBE,EAAwB,IAAID,MAAMa,GAAAA,YAAAA,EAAKd,OAAO,EAAG,CAC/CG,KAAM,CACJd,QAAS,wBACX,CAAA,CACD,EAEL,EACA0B,YAAsBC,GAAA,cAElBA,GAAAA,EAAAA,GAAAA,YAAAA,EAAKC,sBAALD,YAAAA,EAA0BE,SAA1BF,MAAAA,EAAkCG,SAClCH,GAAAA,EAAAA,GAAAA,YAAAA,EAAKC,sBAALD,YAAAA,EAA0BE,SAA1BF,YAAAA,EAAkCG,OAAQ,EAEXP,IAEZD,GAEvB,CAAA,CACD,CACH,EAEF,CAACJ,EAAwBF,CAAW,CAAC,CAG9BI,CACX,CCvDO,MAAMW,EAA4BA,CACvCC,EAAkB,GAClBC,IAEmCD,EAC/B,CACEE,QAAS,+CACTC,WAAY,6CAAA,EAEd,CACED,QAAS,oCACTC,WAAYF,EACR,oCACA,iCAAA,ECXNG,GAAYA,CAAC,CACjBC,YAAAA,EACAC,SAAAA,EACAC,aAAAA,EACAC,WAAAA,EACAR,OAAAA,CACiB,IAAM,CACjBC,MAAAA,EAAaQ,UACjB,IAAMF,IAAiBC,EACvB,CAACD,EAAcC,CAAU,CAAC,EAGtBE,EAAiBA,IAAM,CACtBT,GAA2BI,GAAA,MAAAA,GAAA,EAG5B,CAAEH,QAAAA,EAASC,WAAAA,CAAAA,EAAeJ,EAA0BC,EAAQC,CAAU,EAE5E,OACGU,EAAAC,EAAA,CACC,cAAa,GACb,QAAgBC,GAAA,CACdA,EAAEC,gBAAiB,EACHJ,GAAA,EAElB,aAAYjC,EAAE,+CAA+C,EAC7D,QAAAyB,EACA,WAAAC,EAAuB,YAAA,6BAEvB,WAACY,EACC,CAAA,aAAW,oBACX,IAAKT,GAAAA,YAAAA,EAAUU,SACf,SAAUf,EACNK,GAAAA,GAAAA,YAAAA,EAAUW,gBAAgB,YAAA,wBAE9B,WAACC,EACC,CAAA,KAAM,GACN,KAAK,eACL,MAAM,oCAAmC,YAAA,iBAAA,EAE7C,CACF,CAAA,CAEJ,EC3CMC,GAAUA,CAAC,CACfC,UAAAA,EACAd,SAAAA,EACAC,aAAAA,EACAP,OAAAA,CACiB,IAAM,CACvB,MAAMC,EAAaQ,EAAAA,QAAQ,IAAMF,IAAiB,EAAG,CAACA,CAAY,CAAC,EAE7DG,EAAiBA,IAAM,CACtBT,GAAyBmB,GAAA,MAAAA,GAAA,EAG1B,CAAElB,QAAAA,EAASC,WAAAA,CAAAA,EAAeJ,EAA0BC,EAAQC,CAAU,EAE5E,OACGU,EAAAC,EAAA,CACC,cAAa,GACb,QAAgBC,GAAA,CACdA,EAAEC,gBAAiB,EACHJ,GAAA,EAElB,aAAYjC,EAAE,6CAA6C,EAC3D,OAAQ4C,EAAeC,QACvB,QAAApB,EACA,WAAAC,EAAuB,YAAA,2BAEvB,SAAAQ,EAACI,EACC,CAAA,aAAW,kBACX,IAAKT,GAAAA,YAAAA,EAAUU,SACf,SAAUf,EACNK,GAAAA,GAAAA,YAAAA,EAAUW,gBAAgB,YAAA,sBAE9B,SAACN,EAAAO,EAAA,CACC,KAAM,GACN,KAAK,aACL,MAAM,oCAAmC,YAAA,cAAA,CAAA,EAE7C,CACF,CAAA,CAEJ,ECpBaK,GAA0BA,CAAC,CACtCC,OAAAA,EACAC,QAAAA,EACAC,qBAAAA,CACK,IACJC,EAAAC,GAAA,CACC,KAAMJ,EACN,KAAMK,GAAUC,EAChB,QAAAL,EACA,OAAO,2BACP,qBAAoB,GAAA,YAAA,gCAEpB,SAAA,CAAAd,EAACoB,GAAW,CAAA,YAAA,sCACTtD,SAAAA,EAAE,6CAA6C,EAClD,EACAkC,EAACqB,IAAU,MAAO,CAAEC,WAAY,QAAA,EAAW,YAAA,oCACzC,SAAAtB,EAACuB,GAAM,CAAA,SAAQ,GAAC,IAAK,GAAG,YAAA,gCACtB,SAAAvB,EAACwB,IAA0B,YAAA,qDACzB,SAACxB,EAAAyB,GAAA,CAAiB,YAAA,4CAChB,SAACzB,EAAA0B,GAAA,CAAK,YAAA,gCACJ,SAACV,EAAAW,GAAA,CAAM,KAAK,SAAS,WAAW,+BAA8B,YAAA,gCAC3D7D,SAAAA,CAAAA,EAAE,mDAAmD,EACrDkC,EAAA4B,GAAA,CAAgB,YAAA,2CACdb,WAAqBnD,IAAKiE,GACxB7B,EAAA,KAAA,CAEG8B,SACED,GAAAA,EAAKE,WACN,CAAA,CAEL,CACD,EACH,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CACF,CAAA,EACC/B,EAAAgC,GAAA,CAAO,OAAQ,GAAG,YAAA,iCAAA,EACnBhC,EAACiC,GAAY,CAAA,aAAc,GAAO,UAAW,GAAG,YAAA,sCAC9C,SAACjC,EAAAkC,GAAA,CACC,SAAQ,GACR,OAAO,WACP,KAAK,OACL,QAASpB,EACT,cAAY,gBAAe,YAAA,iCAE1BhD,SAAAA,EAAE,gBAAgB,CAAA,CACrB,CACF,CAAA,CAAA,CACF,CAAA,EChEIqE,GAASA,CAAC,CACd9C,OAAAA,EACAhC,QAAAA,EACAjB,GAAAA,EACAkD,WAAAA,EACA8C,KAAAA,CACiB,IAAM,CACjB,KAAA,CAAEC,kBAAAA,EAAmBC,MAAAA,EAAOC,mBAAAA,EAAoBC,qBAAAA,GACpDC,EAAqB,EACjB,CAACC,EAAwBC,CAAyB,EAAIC,WAAS,EAAK,EACpE,CAACC,EAAuBC,CAAwB,EAAIF,WAAS,EAAK,EAClE,CAAEnH,oBAAAA,GAAwBN,GAAwB,EAElD,CAAEsD,sBAAAA,GAA0BL,GAA0B,EAEtDO,EAAoBjD,EAAAA,YAAY,IAAM,CACtCU,IACFoG,GAAAA,MAAAA,EAAuBJ,GACvBC,GAAAA,MAAAA,EACEhD,EAAS0D,EAAgBC,UAAYD,EAAgBE,aACrD7G,GAEJ,EACC,CAACiG,EAAmBjG,EAAIiD,EAAQmD,EAAsBJ,CAAI,CAAC,EAExDxD,EAAgClD,EAAAA,YAAY,IAAM,CACtDiH,EAA0B,CAACD,CAAsB,CAAA,EAChD,CAACA,CAAsB,CAAC,EAErBQ,EAAoBxH,EAAAA,YACxB,IAAMyH,EAAaD,mBAAkB7F,GAAAA,YAAAA,EAAS+F,UAAW,CAAE,CAAA,EAC3D,CAAC/F,GAAAA,YAAAA,EAAS+F,OAAO,CAAC,EAGdC,EAAgB3H,cACpB,MAAOwE,GAAM,CAEPZ,GADJY,EAAEC,gBAAiB,EACfb,EAAY,OAChB,GAAI4D,IAAoBI,OAAS,GAAK,CAACjE,EAAQ,CAC7CyD,EAAyB,EAAI,EAC7B,OAKF,GAHoBzF,GAAAA,YAAAA,EAAS+F,QAAQhG,QACzByE,EAAK0B,MAAMD,OAAS,IAG1BlB,GAAAA,YAAAA,EAAML,eAAgByB,GAAgBC,OACrB9E,IAGjB2D,EAAAA,GAAAA,YAAAA,EAAOhF,IACPqB,EACAC,CAA6B,MAG5B,CACL,GAAI,EAAC0D,GAAAA,MAAAA,EAAOhF,KAAK,OACC,MAAM7B,EAAoBW,EAAKkG,EAAMhF,GAAG,IAExDiF,GAAAA,MAAAA,EAAqBmB,SAEzB,EAEF,CACE9E,EACAxC,EACAkD,EACA4D,EACA7D,EACAV,EACAlD,EACA4B,GAAAA,YAAAA,EAAS+F,QACTb,EACAD,GAAAA,YAAAA,EAAOhF,IACPmB,EACA2D,GAAAA,YAAAA,EAAML,WAAW,CAClB,EAGH,OAEIf,EAAA2C,EAAA,CAAA,SAAA,CAAC3D,EAAAC,EAAA,CACC,cAAe,CAACX,EAChB,QAAgB+D,GAAAA,EAAcnD,CAAC,EAC/B,aACEZ,EACIxB,EAAE,+CAA+C,EACjDA,EAAE,2CAA2C,EAEnD,OAAQ4C,EAAekD,SACvB,QACEvE,EACI,+CACA,oCAEN,WACEA,EACI,8CACA,kCACL,YAAA,0BAED,WAACe,EAAY,CAAA,OAAO,QAAQ,aAAW,gBAAe,YAAA,qBACpD,SAACJ,EAAAO,EAAA,CACC,KAAM,GACN,KAAK,WACL,MAAM,oCAAmC,YAAA,cAAA,CAAA,CAE7C,CACF,CAAA,IACCsD,GACC,CAAA,OAAQnB,EACR,YAAa9D,EAA8B,YAAA,4BAAA,EAE5CoB,EAAAY,GAAA,CACC,OAAQiC,EACR,QAAS,IAAMC,EAAyB,EAAK,EAC7C,qBAAsBI,EAAiB,EAAG,YAAA,gCAAA,CAAA,CAE9C,CAAA,CAAA,CAEJ,EC/HMY,GAAYA,CAAC,CACjBzE,OAAAA,EACAjD,GAAAA,EACAkD,WAAAA,EACAyE,oBAAAA,CACiB,IAAM,CACjB,KAAA,CAAEC,iBAAAA,GAAqBvB,EAAqB,EAE5CwB,EAAmBvI,cACvB,MAAOwE,GAAM,CACXA,EAAEC,gBAAiB,EACfb,EAAAA,GAAc,CAAClD,IACb4H,MAAAA,GAAAA,YAAAA,EAAmB5H,EAAIiD,KAE/B,CAAC2E,EAAkB5H,EAAIkD,EAAYD,CAAM,CAAC,EAI1C,OAAAW,EAACC,GACC,oBAAA8D,EACA,cAAe,CAACzE,EAChB,WAAgB2E,EAAiB/D,CAAC,EAClC,aACEZ,EACIxB,EAAE,kDAAkD,EACpDA,EAAE,8CAA8C,EAEtD,QACEuB,EACI,+CACA,oCAEN,WACEA,EACI,8CACA,kCACL,YAAA,6BAED,WAACe,EAAY,CAAA,aAAW,mBAAkB,YAAA,wBACxC,WAACG,EACC,CAAA,KAAM,GACN,KAAK,SACL,MAAM,oCAAmC,YAAA,gBAAA,CAAA,CAE7C,CAAA,CACF,CAAA,CAEJ,EC/CM2D,GAAOA,CAAC,CAAE7E,OAAAA,EAAQjD,GAAAA,EAAIgG,KAAAA,EAAM9C,WAAAA,CAA8B,IAAM,CAC9D,KAAA,CAAE6E,gBAAAA,EAAiBC,gBAAAA,EAAiB7B,mBAAAA,GACxCE,EAAqB,EAEjB1C,EAAiBA,IAAM,CACvBqE,GAAmBhI,IAAOgI,EAC5B7B,GAAAA,MAAAA,EAAqBmB,QAErBS,GAAAA,MAAAA,EACE9E,EAAS0D,EAAgBC,UAAYD,EAAgBE,aACrD7G,EACAgG,EAEJ,EAGF,SACGnC,EACC,CAAA,cAAe,CAACX,EAChB,QAAgBY,GAAA,CACdA,EAAEC,gBAAiB,EACfb,CAAAA,GACYS,GAAA,EAElB,aAAYjC,EAAE,yCAAyC,EACvD,QACEuB,EACI,+CACA,oCAEN,WACEA,EACI,8CACA,kCACL,YAAA,wBAED,SAAAW,EAACI,EAAY,CAAA,aAAW,cAAa,YAAA,mBACnC,SAAAJ,EAACO,GACC,KAAM,GACN,KAAK,SACL,MAAM,oCAAmC,YAAA,YAAA,EAE7C,CACF,CAAA,CAEJ,EC/CM8D,GAAOA,CAAC,CACZhF,OAAAA,EACAM,SAAAA,EACA2E,oBAAAA,EACAlI,GAAAA,EACAmI,wBAAAA,EACAC,WAAAA,CACiB,IACjBxE,EAACC,EACC,CAAA,cAAa,GACb,WAAgBC,EAAEC,gBAClB,EAAA,YAAa,IAAM,OACjBmE,GAAAA,MAAAA,EAAsBlI,GACIoI,GAAAA,MAAAA,GAAAA,EAAAA,GAAAA,YAAAA,EAAYC,UAAZD,YAAAA,EAAqBE,aACjD,EACA,aAAY5G,EAAE,yCAAyC,EACvD,OAAQ4C,EAAeC,QACvB,QACEtB,EACI,+CACA,oCAEN,WACEA,EACI,8CACA,qCAEFM,GAAAA,YAAAA,EAAUW,gBAAgB,YAAA,wBAE9B,WAACF,EAAY,CAAA,aAAW,cAAa,YAAA,mBACnC,SAACJ,EAAAO,EAAA,CAAK,KAAM,GAAI,KAAK,SAAS,MAAM,oCAAmC,YAAA,WAAA,CAAA,CACzE,CAAA,EACF,EChCIoE,GAAaA,CAAC,CAAEC,QAAAA,CAAyB,IAC5C5E,EAAAC,EAAA,CACC,cAAa,GACb,QAAgBC,GAAA,CACdA,EAAEC,gBAAiB,EACTyE,GACZ,EACA,aAAY9G,EAAE,mDAAmD,EACjE,OAAQ4C,EAAemE,WACvB,QAAQ,+CACR,WAAW,8CAA6C,YAAA,8BAExD,SAAC7E,EAAAI,EAAA,CAAY,aAAW,qBAAoB,YAAA,yBAC1C,SAACJ,EAAAO,EAAA,CAAK,KAAM,GAAI,KAAK,SAAS,MAAM,oCAAmC,YAAA,iBAAA,CAAA,CACzE,CAAA,EACF,ECfIuE,GAAUA,CAAC,CAAEF,QAAAA,CAAyB,IACzC5E,EAAAC,EAAA,CACC,cAAa,GACb,QAAgBC,GAAA,CACdA,EAAEC,gBAAiB,EACTyE,GACZ,EACA,aAAY9G,EAAE,mDAAmD,EACjE,OAAQ4C,EAAeqE,QACvB,QAAQ,+CACR,WAAW,8CAA6C,YAAA,2BAExD,SAAC/E,EAAAI,EAAA,CAAY,aAAW,kBAAiB,YAAA,sBACvC,SAACJ,EAAAO,EAAA,CAAK,KAAM,GAAI,KAAK,SAAS,MAAM,oCAAmC,YAAA,cAAA,CAAA,CACzE,CAAA,EACF,ECdIyE,GAAaA,CAAC,CAAE1F,WAAAA,EAAY8C,KAAAA,CAAwB,IAAM,CACxD,KAAA,CAAE7C,QAAAA,EAASC,WAAAA,CAAAA,EAAeJ,EAA0B,EAAI,EACxD6F,EACJ,CAAC,CAAC7C,GAAQe,EAAa8B,uBAAuB7C,CAAI,EAEpD,OACGpC,EAAAC,EAAA,CACC,cAAe,CAACX,EAChB,OAAQoB,EAAekD,SACvB,QAAArE,EACA,WAAAC,EAAuB,YAAA,8BAEvB,SAAAQ,EAACI,GAAY,OAAO,QAAQ,aAAW,oBAAmB,YAAA,yBACxD,SAACJ,EAAAO,EAAA,CACC,KAAM,GACN,KAAM0E,EAAyB,iBAAmB,kBAClD,MAAM,oCAAmC,YAAA,kBAAA,EAE7C,CACF,CAAA,CAEJ,ECFaC,GAAgBC,GAAwB,CAC7C,KAAA,CACJC,SAAAA,EACAC,UAAAA,EACAC,KAAAA,EACAC,SAAAA,EACAnJ,GAAAA,EACAuD,SAAAA,EACAC,aAAAA,EACAC,WAAAA,EACA2F,WAAAA,EACAC,kBAAAA,EACA/F,YAAAA,EACAe,UAAAA,EACAiF,SAAAA,EACArI,QAAAA,EACAsI,QAAAA,EACA5B,oBAAAA,EACA6B,mBAAAA,EACAtB,oBAAAA,EACAjF,OAAQwG,EACRtB,wBAAAA,EACAxC,YAAAA,EACAyC,WAAAA,EACAsB,gBAAAA,EAAkB,GAClBC,UAAAA,EAAY,EACVZ,EAAAA,EACE,CAAEf,gBAAAA,EAAiB4B,QAAAA,EAASC,WAAAA,GAAexD,EAAqB,EAChEpD,EAASiG,IAASvC,EAAgBC,UAClCkD,EAA0BpG,UAC9B,IAAM0F,GAAcnG,EACpB,CAACmG,EAAYnG,CAAM,CAAC,EAGtB,OAAO0G,EACL/E,EAACmF,GACC,CAAA,aAAc,IAAMF,GAAAA,YAAAA,EAAa7J,GACjC,aAAc,IAAM6J,GAAAA,YAAAA,EAAavC,QACjC,iBAAkB,CAAC,CAACsC,GAAWA,IAAY5B,EAC3C,cAAY,yBACZ,QAASiB,IAAc,QACvB,SAAAE,EACA,WAAYW,EACZ,kBAAAT,EACA,WAAAI,EAAuB,YAAA,qCAEvB,SAAA,CAAA7F,EAACoG,GAAc,CAAA,UAAAf,EAAsB,OAAAhG,EAAe,YAAA,6BAClD,SAAAW,EAACqG,GACC,CAAA,aAAa,GACXhH,EAASiH,EAAavE,CAA+B,EAAG,YAE1D,KAAK,gBACL,WAAW,oCAAmC,YAAA,iCAE7C1C,SACGiH,EAAAA,EAAavE,CAA8B,EAC1C,GAAEjE,EAAE,kDAAkD,GAC7D,CAAA,EACF,EACCuB,GAAU,CAACmG,GAAc,CAACM,GAEvB9E,EAAA2C,EAAA,CAAA,SAAA,CAAA3D,EAACuG,EAAY,CAAA,UAAAlB,EAAqB,YAAA,2BAChC,WAACP,GAAQ,CAAA,QAAS,IAAMY,GAAAA,YAAAA,EAAWc,EAAgBC,OAAO,YAAA,sBAAA,CAAA,EAC5D,IACCF,EAAY,CAAA,UAAAlB,EAAsB,SAAU,GAAK,YAAA,2BAChD,SAAArF,EAAC2E,GAAW,CAAA,QAAS,IAAMe,GAAAA,YAAAA,EAAWc,EAAgBE,OAAO,YAAA,yBAAA,CAAA,EAC/D,CAAA,EACF,EAED1F,EAAA2F,GAAA,CAAc,UAAAtB,EAAsB,OAAAhG,EAAe,YAAA,6BACjDA,SAAAA,CAAAA,GAAU,CAACyG,EACT9F,EAAAqE,GAAA,CACC,OAAAhF,EACA,SAAAM,EACA,oBAAA2E,EACA,GAAAlI,EACA,wBAAAmI,EACA,WAAAC,EAAuB,YAAA,mBAAA,CAAA,EAIvBxD,EAAA2C,EAAA,CAAA,SAAA,CAAA3D,EAACQ,IACC,OAAAnB,EACA,UAAAoB,EACA,SAAAd,EACA,aAAAC,EAA2B,YAAA,uBAAA,EAE7BI,EAACP,IACC,OAAAJ,EACA,YAAAK,EACA,SAAAC,EACA,aAAAC,EACA,WAAAC,EAAuB,YAAA,yBAAA,CAAA,EAE3B,EAEDiG,IACEd,GAAW,CAAA,KAAMG,EAAM/C,6CAGtBpB,EAAA2C,EAAA,CAAA,SAAA,CAAC3D,EAAAkE,GAAA,CACC,WAAYyB,GAAAA,YAAAA,EAASiB,KACrB,OAAAvH,EACA,GAAAjD,EACA,KAAM+I,GAAAA,YAAAA,EAAO/C,KAAK,YAAA,mBAAA,CAAA,EAGpBpC,EAAC8D,IACC,OAAAzE,EACA,GAAAjD,EACA,WAAYuJ,GAAAA,YAAAA,EAASkB,UACrB,oBAAA9C,EAAyC,YAAA,wBAAA,CAAA,EAE1C/D,EAAAmC,GAAA,CACC,OAAA9C,EACA,QAAAhC,EACA,GAAAjB,EACA,WAAYuJ,GAAAA,YAAAA,EAASmB,OACrB,oBAAA/C,EACA,KAAMoB,GAAAA,YAAAA,EAAO/C,KAAK,YAAA,sBAAA,CAAA,EAEtB,CAAA,EAEJ,EACCpC,EAAA+G,EAAA,CACC,UAAW1B,IAAc,QAAU,gBAAkB,iBACrD,WAAYa,EACZ,oBAAAnC,EACA,mBAAA6B,EAAuC,YAAA,4BAEtCR,SAAAA,EACH,CAAA,CACF,CAAA,EAEApF,EAAC+G,EACC,CAAA,UAAW1B,IAAc,QAAU,gBAAkB,iBACrD,WAAYa,EACZ,oBAAAnC,EACA,mBAAA6B,EAAuC,YAAA,4BAEtCR,SAAAA,CACH,CAAA,CAEJ"}