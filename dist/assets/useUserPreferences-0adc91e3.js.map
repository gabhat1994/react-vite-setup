{"version":3,"file":"useUserPreferences-0adc91e3.js","sources":["../../src/screens/CoreSettings/NotificationsSettings/utils.ts","../../src/screens/CoreSettings/NotificationsSettings/useUserPreferences.ts"],"sourcesContent":["import { type EmailSubscriptionType } from './types';\n\nexport const subscriptionsOptionsList: {\n  id: EmailSubscriptionType;\n  label: string;\n  disabled?: boolean;\n}[] = [\n  {\n    id: 'messagesAndConnections',\n    label: 'Messages & Connections',\n  },\n  {\n    id: 'postAndCommentMentions',\n    label: 'Post / Comment mentions',\n  },\n  // {\n  //   id: 'marketing',\n  //   label: 'Marketing communication',\n  // },\n  {\n    id: 'paymentsAndOTPs',\n    label: 'Payments & OTP',\n    disabled: true,\n  },\n  {\n    id: 'events',\n    label: 'Events',\n    disabled: true,\n  },\n];\n","import {\n  GetUserPreferencesDocument,\n  type GetUserPreferencesQuery,\n  type UpdateUserPreferencesMutationVariables,\n  useGetUserPreferencesQuery,\n  useUpdateUserPreferencesMutation,\n} from '@/apollo/graphql';\nimport { useCallback, useMemo } from 'react';\nimport { type EmailSubscriptionType } from './types';\nimport { subscriptionsOptionsList } from './utils';\n\ntype UseUserPreferencesOptions = {\n  disableQuery?: boolean;\n};\n\nexport const useUserPreferences = ({\n  disableQuery,\n}: UseUserPreferencesOptions = {}) => {\n  const { data, loading, error } = useGetUserPreferencesQuery({\n    fetchPolicy: 'cache-and-network',\n    skip: !!disableQuery,\n  });\n\n  const options = useMemo(\n    () =>\n      subscriptionsOptionsList.map((option) => ({\n        ...option,\n        isSubscribed: !!data?.getUserPreferences?.emailSubscriptions[option.id],\n      })),\n    [data?.getUserPreferences?.emailSubscriptions],\n  );\n\n  const [updateUserPreferencesMutation, { loading: loadingUpdate }] =\n    useUpdateUserPreferencesMutation();\n\n  const updatePreference = useCallback(\n    async (id: EmailSubscriptionType, value: boolean) => {\n      await updateUserPreferencesMutation({\n        variables: {\n          input: {\n            emailSubscriptions: {\n              [id]: value,\n            },\n          },\n        },\n        update: (cache, { data: currentData }) => {\n          if (!currentData?.updateUserPreferences) {\n            return;\n          }\n          cache.writeQuery<\n            GetUserPreferencesQuery,\n            UpdateUserPreferencesMutationVariables\n          >({\n            query: GetUserPreferencesDocument,\n            variables: {\n              input: {\n                emailSubscriptions: {\n                  [id]: currentData?.updateUserPreferences?.emailSubscriptions[\n                    id\n                  ],\n                },\n              },\n            },\n            data: {\n              getUserPreferences: {\n                ...currentData?.updateUserPreferences,\n              },\n            },\n          });\n        },\n      });\n    },\n    [updateUserPreferencesMutation],\n  );\n\n  return {\n    options,\n    subscriptions: data?.getUserPreferences?.emailSubscriptions,\n    loading,\n    error,\n    loadingUpdate,\n    updatePreference,\n  };\n};\n"],"names":["subscriptionsOptionsList","id","label","disabled","useUserPreferences","disableQuery","data","loading","error","useGetUserPreferencesQuery","fetchPolicy","skip","options","useMemo","map","option","isSubscribed","getUserPreferences","emailSubscriptions","updateUserPreferencesMutation","loadingUpdate","useUpdateUserPreferencesMutation","updatePreference","useCallback","value","variables","input","update","cache","currentData","updateUserPreferences","writeQuery","query","GetUserPreferencesDocument","subscriptions"],"mappings":"kGAEO,MAAMA,EAIP,CACJ,CACEC,GAAI,yBACJC,MAAO,wBACT,EACA,CACED,GAAI,yBACJC,MAAO,yBACT,EAKA,CACED,GAAI,kBACJC,MAAO,iBACPC,SAAU,EACZ,EACA,CACEF,GAAI,SACJC,MAAO,SACPC,SAAU,EACZ,CAAC,ECbUC,EAAqBA,CAAC,CACjCC,aAAAA,CACyB,EAAI,KAAO,SAC9B,KAAA,CAAEC,KAAAA,EAAMC,QAAAA,EAASC,MAAAA,GAAUC,EAA2B,CAC1DC,YAAa,oBACbC,KAAM,CAAC,CAACN,CAAAA,CACT,EAEKO,EAAUC,EAAAA,QACd,IACEb,EAAyBc,IAAiBC,GAAA,OAAA,OACxC,GAAGA,EACHC,aAAc,CAAC,GAACV,EAAAA,GAAAA,YAAAA,EAAMW,qBAANX,MAAAA,EAA0BY,mBAAmBH,EAAOd,MACpE,EACJ,EAACK,EAAAA,GAAAA,YAAAA,EAAMW,qBAANX,YAAAA,EAA0BY,kBAAkB,CAAC,EAG1C,CAACC,EAA+B,CAAEZ,QAASa,CAAAA,CAAe,EAC9DC,EAAkC,EAE9BC,EAAmBC,EAAAA,YACvB,MAAOtB,EAA2BuB,IAAmB,CACnD,MAAML,EAA8B,CAClCM,UAAW,CACTC,MAAO,CACLR,mBAAoB,CAClB,CAACjB,CAAE,EAAGuB,CACR,CACF,CACF,EACAG,OAAQA,CAACC,EAAO,CAAEtB,KAAMuB,CAAAA,IAAkB,OACnCA,GAAAA,MAAAA,EAAaC,uBAGlBF,EAAMG,WAGJ,CACAC,MAAOC,EACPR,UAAW,CACTC,MAAO,CACLR,mBAAoB,CAClB,CAACjB,CAAE,GAAG4B,EAAAA,GAAAA,YAAAA,EAAaC,wBAAbD,YAAAA,EAAoCX,mBACxCjB,EAEJ,CACF,CACF,EACAK,KAAM,CACJW,mBAAoB,CAClB,GAAGY,GAAAA,YAAAA,EAAaC,qBAClB,CACF,CAAA,CACD,CACH,CAAA,CACD,CAAA,EAEH,CAACX,CAA6B,CAAC,EAG1B,MAAA,CACLP,QAAAA,EACAsB,eAAe5B,EAAAA,GAAAA,YAAAA,EAAMW,qBAANX,YAAAA,EAA0BY,mBACzCX,QAAAA,EACAC,MAAAA,EACAY,cAAAA,EACAE,iBAAAA,CAAAA,CAEJ"}