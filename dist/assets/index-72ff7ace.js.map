{"version":3,"file":"index-72ff7ace.js","sources":["../../src/screens/Register/Steps/ShowOTP/RenderResendOTPMessage.tsx","../../src/screens/Register/Steps/ShowOTP/ResendOTPInfo.tsx","../../src/screens/Register/Steps/ShowOTP/styles.ts","../../src/screens/Register/Steps/ShowOTP/ShowOtp.tsx"],"sourcesContent":["import { type FC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Timer from '@/components/Timer/Timer';\nimport * as Styles from '@/screens/Login/OTPResend/styles';\nimport { TSpan } from '@/components/Typography';\nimport { type ResendOTPMessageProps } from './types';\n\nconst minimumTimeToShowCountDown = 90;\n\nconst RenderResendOTPMessage: FC<ResendOTPMessageProps> = ({\n  duration,\n  handleTimedOut,\n}) => {\n  const { t } = useTranslation();\n\n  if (duration !== 0 && duration <= minimumTimeToShowCountDown) {\n    return (\n      <>\n        <Styles.StyledResendSpan>\n          <TSpan font=\"body-m\" $fill colorToken=\"--text-body-neutral-default\">\n            {t('noumena.resend_otp_code_sent.text')}{' '}\n          </TSpan>\n        </Styles.StyledResendSpan>\n        <Styles.StyledResendWaitSpan duration={duration}>\n          <TSpan font=\"body-m\" $fill colorToken=\"--text-body-neutral-default\">\n            {t('noumena.resend_otp_please_wait.text')}{' '}\n            {<Timer initialSeconds={duration} timedOut={handleTimedOut} />}{' '}\n            {t('noumena.resend_otp_before_request.text')}\n          </TSpan>\n        </Styles.StyledResendWaitSpan>\n      </>\n    );\n  }\n  return (\n    <TSpan font=\"body-m\" $fill colorToken=\"--text-body-neutral-default\">\n      {t('noumena.resend_otp_please_wait_24h.text')}\n    </TSpan>\n  );\n};\n\nexport default RenderResendOTPMessage;\n","import { useTranslation } from 'react-i18next';\nimport { Button } from '@/components/Button';\nimport { TSpan } from '@/components/Typography';\nimport { useInitialSignUp } from '@/features/onboarding/hooks';\nimport RenderResendOTPMessage from './RenderResendOTPMessage';\nimport { type ResendOTPInfoProps } from './types';\n\nconst ResendOTPInfo = ({ handleResendOtp }: ResendOTPInfoProps) => {\n  const { t } = useTranslation();\n  const { nextRequestAfter, isResendOTPDisabled, timedOut } =\n    useInitialSignUp();\n  return isResendOTPDisabled ? (\n    <TSpan font=\"body-m\" colorToken=\"--text-body-neutral-default\">\n      <RenderResendOTPMessage\n        handleTimedOut={timedOut}\n        duration={nextRequestAfter}\n      />\n    </TSpan>\n  ) : (\n    <Button\n      primary\n      textOnly\n      size=\"small\"\n      onClick={handleResendOtp}\n      data-testid=\"handleResendOtpID\"\n      style={{ borderRadius: 0 }}\n    >\n      <TSpan colorToken=\"--text-button-brand-secondary-default\">\n        {t('noumena.register.otp.resend_code')}\n      </TSpan>\n    </Button>\n  );\n};\n\nexport default ResendOTPInfo;\n","import styled from 'styled-components';\nimport { Stack } from '@/layout';\n\nexport const OtpStyled = styled.div`\n  min-height: 80vh;\n  width: 343px;\n`;\n\nexport const FullWidthStack = styled(Stack)`\n  width: 100%;\n`;\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useWindowDimensions } from '@/hooks';\nimport { TSpan } from '@/components/Typography';\nimport { OtpInput } from '@/components/Otp/OtpInput';\nimport { Spacer } from '@/layout';\nimport { Button } from '@/components/Button';\nimport { Icon } from '@/components/Icon';\n\nimport EVENTS from '@/constants/trackingEvents';\nimport ROUTES from '@/constants/routes';\nimport { sizes } from '@/constants/devices';\nimport { Chips } from '@/components/Chips/Chips';\nimport { trackEvent } from '@/utils/tracking';\nimport { useCountDownTimer } from '@/hooks/countDownTimer';\nimport { defaultResendRequests } from '@/providers/OnboardingProvider';\nimport { QuickSignUpScreenLayout } from '@/screens/QuickSignUp/QuickSignUpScreenLayout';\nimport { useInitialSignUp } from '@/features/onboarding/hooks';\nimport { OnboardingScreenLayout } from '../../OnboardingScreenLayout';\nimport { AppStyled, StyledStep } from '../../styles';\nimport ResendOTPInfo from './ResendOTPInfo';\nimport { Screen } from '../StepOne/styles';\nimport { FullWidthStack, OtpStyled } from './styles';\n\nconst tabletWidth = parseInt(sizes.TABLET, 10) || 768;\n\nexport const ShowOtp = () => {\n  const { width } = useWindowDimensions();\n  const { t } = useTranslation();\n  const { loading: loadingUser } = useAuth();\n  const {\n    loading,\n    userInfo,\n    submitOtp,\n    signUpEmail,\n    signUpUser,\n    remainingRequests,\n    nextRequestAfter,\n    isSigningUpFromNextApp,\n    backUrl,\n    quickSignUpNoumId,\n  } = useInitialSignUp();\n  const [seconds] = useCountDownTimer(nextRequestAfter);\n  const navigate = useNavigate();\n  const abortController = useRef<AbortController>(new AbortController());\n\n  const [otp, setOtp] = useState<string>();\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const isMobile = useMemo(() => width < tabletWidth, [width]);\n\n  const handleSubmitOtp = useCallback(async () => {\n    abortController.current = new AbortController();\n    if (!otp || otp.length !== 4 || isLoading || loadingUser) return;\n    setIsLoading(true);\n    const isOtpVerified = await submitOtp(otp, abortController.current.signal);\n    if (isOtpVerified) {\n      await signUpUser();\n    } else {\n      setOtp('');\n    }\n    setIsLoading(false);\n  }, [otp, isLoading, loadingUser, submitOtp, signUpUser]);\n\n  const handleBack = useCallback(() => {\n    trackEvent(EVENTS.ONBOARDING.OTP.BACK);\n    navigate(\n      isSigningUpFromNextApp\n        ? `${ROUTES.QUICK_SIGN_UP}?quickNoumID=${quickSignUpNoumId}&backurl=${backUrl}`\n        : ROUTES.SIGN_UP,\n      {\n        replace: true,\n      },\n    );\n  }, [backUrl, isSigningUpFromNextApp, navigate, quickSignUpNoumId]);\n\n  useEffect(() => {\n    window.onpopstate = (e) => {\n      e.preventDefault();\n      if (window.location.pathname.includes(ROUTES.SIGN_UP_OTP)) handleBack();\n    };\n  }, [handleBack]);\n\n  const handleResendOtp = () => {\n    abortController.current.abort();\n    setOtp('');\n    trackEvent(EVENTS.ONBOARDING.OTP.RESEND);\n    signUpEmail(userInfo?.email || '');\n  };\n\n  useEffect(() => {\n    if (!userInfo && !isSigningUpFromNextApp) navigate(ROUTES.SIGN_UP);\n  }, [userInfo, navigate, isSigningUpFromNextApp]);\n\n  useEffect(() => {\n    if (!userInfo && isSigningUpFromNextApp)\n      navigate(\n        `${ROUTES.QUICK_SIGN_UP}?quickNoumID=${quickSignUpNoumId}&backurl=${backUrl}`,\n      );\n  }, [userInfo, navigate, isSigningUpFromNextApp, quickSignUpNoumId, backUrl]);\n\n  const disableBackBtn =\n    isLoading ||\n    loadingUser ||\n    (remainingRequests === defaultResendRequests && seconds !== 0);\n\n  if (isSigningUpFromNextApp) {\n    return (\n      <QuickSignUpScreenLayout onBackClick={handleBack}>\n        <AppStyled data-testid=\"SIGN_UP_OTP\" className=\"App\">\n          <Screen vertical data-testid=\"otpContainer\">\n            <Spacer height={16} />\n            <OtpStyled>\n              <TSpan\n                colorToken=\"--text-body-header-neutral-default\"\n                font=\"heading-m-bold\"\n                $fill\n                style={{ whiteSpace: isMobile ? undefined : 'nowrap' }}\n              >\n                {t('noumena.register.otp.verify_email')}\n              </TSpan>\n              <Spacer height={16} />\n              <div>\n                <TSpan\n                  font=\"body-l\"\n                  $fill\n                  colorToken=\"--text-body-neutral-default\"\n                >\n                  <Trans\n                    i18nKey=\"noumena.register.otp.check_your_email\"\n                    components={{\n                      Text: (\n                        <TSpan\n                          font=\"body-l\"\n                          $fill\n                          colorToken=\"--text-body-neutral-highlighted\"\n                        />\n                      ),\n                    }}\n                    values={{ email: userInfo?.email || '' }}\n                  />\n                </TSpan>\n              </div>\n              <Spacer height={32} />\n              <OtpInput\n                value={otp}\n                onChange={(val) => setOtp(val)}\n                onEnter={handleSubmitOtp}\n              />\n              <Spacer height={32} />\n              <FullWidthStack>\n                <Button\n                  id=\"verify-email-signup-next-btn\"\n                  primary\n                  size=\"full\"\n                  onClick={handleSubmitOtp}\n                  disabled={\n                    isLoading || loadingUser || !otp || otp?.trim().length < 4\n                  }\n                  data-testid=\"submitOtp\"\n                  loading={isLoading || loading || loadingUser}\n                >\n                  {t('noumena.next.text')}\n                </Button>\n              </FullWidthStack>\n              <Spacer height={35} />\n              <FullWidthStack align=\"center\" justify=\"center\">\n                <ResendOTPInfo handleResendOtp={handleResendOtp} />\n              </FullWidthStack>\n              <Spacer height={isMobile ? 24 : 32} />\n              <FullWidthStack align=\"center\" justify=\"center\">\n                <TSpan\n                  font=\"body-s\"\n                  $fill\n                  colorToken=\"--text-body-neutral-disabled\"\n                  textAlign=\"center\"\n                >\n                  {t('noumena.register.otp.thanks')}\n                </TSpan>\n              </FullWidthStack>\n            </OtpStyled>\n          </Screen>\n        </AppStyled>\n      </QuickSignUpScreenLayout>\n    );\n  }\n\n  return (\n    <OnboardingScreenLayout>\n      <AppStyled data-testid=\"SIGN_UP_OTP\" className=\"App\">\n        <StyledStep>\n          <Chips primary size=\"medium\">\n            {t('noumena.sign_up.stepper', { currentStep: 1, allSteps: 2 })}\n          </Chips>\n        </StyledStep>\n        <Screen vertical data-testid=\"otpContainer\">\n          <Spacer height={16} />\n          <OtpStyled>\n            <TSpan\n              colorToken=\"--text-body-header-neutral-default\"\n              font=\"heading-m-bold\"\n              $fill\n            >\n              {t('noumena.register.otp.verify_email')}\n            </TSpan>\n            <Spacer height={16} />\n            <div>\n              <TSpan\n                font=\"body-l\"\n                $fill\n                colorToken=\"--text-body-neutral-default\"\n              >\n                <Trans\n                  i18nKey=\"noumena.register.otp.check_your_email\"\n                  components={{\n                    Text: (\n                      <TSpan\n                        font=\"body-l\"\n                        $fill\n                        colorToken=\"--text-body-neutral-highlighted\"\n                      />\n                    ),\n                  }}\n                  values={{ email: userInfo?.email || '' }}\n                />\n              </TSpan>\n            </div>\n            <Spacer height={32} />\n            <OtpInput\n              value={otp}\n              onChange={(val) => setOtp(val)}\n              onEnter={handleSubmitOtp}\n            />\n            <Spacer height={32} />\n            <FullWidthStack>\n              <Button\n                leftIcon={\n                  <Icon\n                    color={\n                      disableBackBtn\n                        ? '--icon-button-neutral-disabled'\n                        : '--icon-button-neutral-default'\n                    }\n                    name=\"arrow_left_m\"\n                    size={16}\n                  />\n                }\n                style={{ minWidth: '100px' }}\n                onClick={handleBack}\n                disabled={disableBackBtn}\n              >\n                {t('noumena.back.text')}\n              </Button>\n              <Spacer width={16} />\n              <Button\n                id=\"verify-email-signup-next-btn\"\n                primary\n                size=\"full\"\n                onClick={handleSubmitOtp}\n                disabled={\n                  isLoading || loadingUser || !otp || otp?.trim().length < 4\n                }\n                data-testid=\"submitOtp\"\n                loading={isLoading || loading || loadingUser}\n              >\n                {t('noumena.next.text')}\n              </Button>\n            </FullWidthStack>\n            <Spacer height={35} />\n            <FullWidthStack align=\"center\" justify=\"center\">\n              <ResendOTPInfo handleResendOtp={handleResendOtp} />\n            </FullWidthStack>\n            <Spacer height={isMobile ? 24 : 32} />\n            <FullWidthStack align=\"center\" justify=\"center\">\n              <TSpan\n                font=\"body-s\"\n                $fill\n                colorToken=\"--text-body-neutral-disabled\"\n                textAlign=\"center\"\n              >\n                {t('noumena.register.otp.thanks')}\n              </TSpan>\n            </FullWidthStack>\n          </OtpStyled>\n        </Screen>\n      </AppStyled>\n    </OnboardingScreenLayout>\n  );\n};\n"],"names":["minimumTimeToShowCountDown","RenderResendOTPMessage","duration","handleTimedOut","t","useTranslation","jsxs","Fragment","jsx","Styles.StyledResendSpan","TSpan","Styles.StyledResendWaitSpan","Timer","ResendOTPInfo","handleResendOtp","nextRequestAfter","isResendOTPDisabled","timedOut","useInitialSignUp","Button","borderRadius","OtpStyled","styled","div","FullWidthStack","Stack","tabletWidth","parseInt","sizes","TABLET","ShowOtp","width","useWindowDimensions","loading","loadingUser","useAuth","userInfo","submitOtp","signUpEmail","signUpUser","remainingRequests","isSigningUpFromNextApp","backUrl","quickSignUpNoumId","seconds","useCountDownTimer","navigate","useNavigate","abortController","useRef","AbortController","otp","setOtp","useState","isLoading","setIsLoading","isMobile","useMemo","handleSubmitOtp","useCallback","current","length","signal","handleBack","EVENTS","ONBOARDING","OTP","BACK","ROUTES","QUICK_SIGN_UP","SIGN_UP","replace","useEffect","window","onpopstate","e","preventDefault","location","pathname","includes","SIGN_UP_OTP","abort","RESEND","email","disableBackBtn","defaultResendRequests","QuickSignUpScreenLayout","AppStyled","Screen","Spacer","whiteSpace","undefined","Trans","Text","OtpInput","val","trim","OnboardingScreenLayout","StyledStep","Chips","currentStep","allSteps","Icon","minWidth"],"mappings":"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"}