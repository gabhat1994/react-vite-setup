{"version":3,"file":"StickyFormHeader-043ef98d.js","sources":["../../src/components/FormHeader/styles.ts","../../src/components/FormHeader/FormHeader.tsx","../../src/components/FormHeader/StickyFormHeader/styles.ts","../../src/components/FormHeader/StickyFormHeader/StickyFormHeader.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Stack } from '@/layout';\nimport { devices } from '@/constants/devices';\n\nexport const Container = styled(Stack).attrs(() => ({\n  justify: 'space-between',\n  align: 'center',\n  fullWidth: true,\n}))<{ $isAppUiV2: boolean }>`\n  width: 100%;\n  ${(props) =>\n    props.$isAppUiV2\n      ? `\n      padding: 12px 24px;\n\n    @media (${devices.TABLET}) {\n      padding: 12px 40px;\n    }\n    `\n      : `\n  height: 88px;\n  `}\n`;\n\nexport default {\n  Container,\n};\n","import { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router';\nimport { Button } from '@/components/Button';\nimport { Icon } from '@/components/Icon';\nimport { TSpan } from '@/components/Typography';\nimport { Stack } from '@/layout';\nimport { formatRelativeVariant } from '@/utils/date';\nimport { useBreakpoints } from '@/hooks/useBreakpoints';\nimport { ResponsiveContainer } from '@/layout/ResponsiveContainer';\nimport { useLaunchDarkly } from '@/hooks';\nimport S from './styles';\nimport { Tag } from '../Tag';\n\nexport type FormHeaderProps = {\n  title: string;\n  hasUnsavedChanges?: boolean;\n  updatedAt?: string;\n  buttons?: React.ReactNode;\n  onGoBack?(): void;\n  showBackButton?: boolean;\n  badgeText?: string | null;\n  isFullScreenMode?: boolean;\n};\n\nconst FormHeader = ({\n  title,\n  updatedAt,\n  hasUnsavedChanges,\n  buttons,\n  onGoBack,\n  showBackButton = true,\n  isFullScreenMode,\n  badgeText,\n}: FormHeaderProps) => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { isTablet } = useBreakpoints();\n\n  const goBack = () => (onGoBack ? onGoBack() : navigate(-1));\n\n  const { flags } = useLaunchDarkly();\n\n  const content = (\n    <S.Container $isAppUiV2={flags.newAppNavigation}>\n      <Stack align=\"center\" gap={16}>\n        {showBackButton && (!flags.newAppNavigation || isFullScreenMode) && (\n          <Button\n            onClick={goBack}\n            neutral\n            size=\"small\"\n            leftIcon={<Icon name=\"arrow_left_m\" size={24} />}\n          />\n        )}\n        <TSpan font=\"body-l-bold\">{title}</TSpan>\n        {badgeText ? (\n          <Tag size=\"medium\" tertiary>\n            {badgeText}\n          </Tag>\n        ) : null}\n      </Stack>\n\n      <Stack align=\"center\" gap={12}>\n        {!isTablet && (\n          <TSpan\n            font=\"footnote\"\n            colorToken=\"--text-top-nav-neutral-highlighted\"\n          >\n            {updatedAt &&\n              t('noumena.form_header.changed_at', {\n                timestamp: formatRelativeVariant(updatedAt, 'datetime', 'long'),\n              })}\n\n            {hasUnsavedChanges && (\n              <>\n                {' '}\n                <TSpan colorToken=\"--text-top-nav-danger-primary-default\">\n                  {t('noumena.form_header.has_unsaved_changes')}\n                </TSpan>\n              </>\n            )}\n          </TSpan>\n        )}\n\n        {buttons}\n      </Stack>\n    </S.Container>\n  );\n\n  if (flags.newAppNavigation) {\n    return content;\n  }\n\n  return <ResponsiveContainer>{content}</ResponsiveContainer>;\n};\n\nexport default FormHeader;\n","import styled from 'styled-components';\nimport { Card } from '@/components/Card';\n\nconst StickyNavbarCard = styled(Card)`\n  padding: 0;\n  border-radius: 0;\n  position: sticky;\n  top: 0px;\n  z-index: 100;\n  overflow: visible;\n`;\n\nexport default {\n  StickyNavbarCard,\n};\n","import FormHeader, {\n  type FormHeaderProps,\n} from '@/components/FormHeader/FormHeader';\nimport S from './styles';\n\ntype StickyFormHeaderProps = FormHeaderProps;\n\nexport function StickyFormHeader(props: StickyFormHeaderProps) {\n  return (\n    <S.StickyNavbarCard>\n      <FormHeader {...props} />\n    </S.StickyNavbarCard>\n  );\n}\n"],"names":["Container","styled","Stack","attrs","justify","align","fullWidth","props","$isAppUiV2","devices","TABLET","S$1","FormHeader","title","updatedAt","hasUnsavedChanges","buttons","onGoBack","showBackButton","isFullScreenMode","badgeText","t","useTranslation","navigate","useNavigate","isTablet","useBreakpoints","goBack","flags","useLaunchDarkly","content","jsxs","S","newAppNavigation","Button","jsx","Icon","TSpan","Tag","timestamp","formatRelativeVariant","Fragment","ResponsiveContainer","StickyNavbarCard","Card","StickyFormHeader"],"mappings":"gOAIO,MAAMA,EAAYC,EAAOC,CAAK,EAAEC,MAAM,KAAO,CAClDC,QAAS,gBACTC,MAAO,SACPC,UAAW,EACb,EAAE;AAAA;AAAA,IAEGC,GACDA,EAAMC,WACD;AAAA;AAAA;AAAA,cAGKC,EAAQC;AAAAA;AAAAA;AAAAA,MAIb;AAAA;AAAA;AAAA,EAKMC,EAAA,CACbX,UAAAA,CACF,ECFMY,EAAaA,CAAC,CAClBC,MAAAA,EACAC,UAAAA,EACAC,kBAAAA,EACAC,QAAAA,EACAC,SAAAA,EACAC,eAAAA,EAAiB,GACjBC,iBAAAA,EACAC,UAAAA,CACe,IAAM,CACf,KAAA,CAAEC,EAAAA,GAAMC,EAAgB,EACxBC,EAAWC,IACX,CAAEC,SAAAA,GAAaC,EAAgB,EAE/BC,EAASA,IAAOV,EAAWA,EAAQ,EAAKM,EAAS,EAAE,EAEnD,CAAEK,MAAAA,GAAUC,EAAiB,EAE7BC,EACHC,EAAAC,EAAE,UAAF,CAAY,WAAYJ,EAAMK,iBAC7B,SAAA,CAAAF,EAAC7B,GAAM,MAAM,SAAS,IAAK,GAAG,YAAA,2BAC3BgB,SAAAA,CAAmBA,IAAA,CAACU,EAAMK,kBAAoBd,MAC5Ce,EACC,CAAA,QAASP,EACT,QAAO,GACP,KAAK,QACL,SAAUQ,EAACC,EAAK,CAAA,KAAK,eAAe,KAAM,GAAG,YAAA,yBAAA,CAAA,EAEhD,YAAA,2BAAA,CAAA,IACAC,EAAM,CAAA,KAAK,cAAa,YAAA,2BAAExB,SAAMA,EAAA,EAChCO,EACEe,EAAAG,EAAA,CAAI,KAAK,SAAS,SAAQ,GAAA,YAAA,yBACxBlB,SAAAA,CAAAA,CACH,EACE,IAAA,EACN,IAEClB,EAAM,CAAA,MAAM,SAAS,IAAK,GAAG,YAAA,2BAC3B,SAAA,CAACuB,CAAAA,KACCY,EACC,CAAA,KAAK,WACL,WAAW,qCAAoC,YAAA,2BAE9CvB,SAAAA,CAAAA,GACCO,EAAE,iCAAkC,CAClCkB,UAAWC,EAAsB1B,EAAW,WAAY,MAAM,CAAA,CAC/D,EAEFC,GAEIgB,EAAAU,EAAA,CAAA,SAAA,CAAA,IACDN,EAACE,GAAM,WAAW,wCAAuC,YAAA,2BACtDhB,SAAAA,EAAE,yCAAyC,EAC9C,CAAA,EACF,CAAA,EAEJ,EAGDL,CAAAA,EACH,CACF,CAAA,CAAA,EAGF,OAAIY,EAAMK,iBACDH,EAGDK,EAAAO,EAAA,CAAoB,YAAA,iCAACZ,SAAQA,CAAA,CAAA,CACvC,EC1FMa,EAAmB1C,EAAO2C,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASrBZ,EAAA,CACbW,iBAAAA,CACF,ECPO,SAASE,EAAiBtC,EAA8B,CAE3D,OAAA4B,EAACH,EAAE,iBAAF,CACC,SAAAG,EAACvB,GAAW,GAAIL,EAAM,YAAA,YAAA,CAAA,CACxB,CAAA,CAEJ"}