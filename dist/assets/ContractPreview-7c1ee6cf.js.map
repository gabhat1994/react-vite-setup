{"version":3,"file":"ContractPreview-7c1ee6cf.js","sources":["../../src/features/contracts/components/ContractPreview/ContractPreviewHeader.tsx","../../src/features/contracts/components/ContractPreview/ContractSigningHeader.tsx","../../src/features/contracts/components/ContractSecretNoumAlertModal/styles.ts","../../src/features/contracts/components/ContractSecretNoumAlertModal/ContractSecretNoumAlertModal.tsx","../../src/screens/Contracts/ContractPreview/styles.ts","../../src/screens/Contracts/ContractPreview/index.tsx"],"sourcesContent":["import { useTranslation } from 'react-i18next';\nimport { generatePath, useNavigate } from 'react-router';\nimport { StickyFormHeader } from '@/components/FormHeader/StickyFormHeader/StickyFormHeader';\nimport routes from '@/constants/routes';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useError } from '@/hooks';\nimport { useModalManager } from '@/hooks/modal/useModalManager';\nimport { UserUtil } from '@/utils/user';\nimport { useContractPermissions } from '../../hooks/contractPermissions';\nimport { useContractPreviewFormContext } from '../../hooks/contractPreviewForm';\nimport { type Contract, DocumentType } from '../../types';\nimport { ContractUtils } from '../../utils/contract';\nimport { DeclineDocumentConfirmationModal } from '../DeclineDocumentConfirmationModal/DeclineDocumentConfirmationModal';\nimport { DeleteDocumentConfirmationModal } from '../DeleteDocumentConfirmationModal/DeleteDocumentConfirmationModal';\nimport * as DocumentHeader from '../DocumentHeader/DocumentHeader';\nimport { useDownloadContractPdfLazy } from '../../hooks/contractPdf';\nimport { ResendDocumentConfirmationModal } from '../ResendDocumentConfirmationModal/ResendDocumentConfirmationModal';\n\ntype ModalType = 'delete' | 'decline' | 'resend';\n\ntype ContractPreviewHeaderProps = {\n  contract: Contract | null;\n  onConfirmDelete(): Promise<void>;\n  onConfirmDecline(): Promise<void>;\n  onConfirmResend(): Promise<void>;\n  onDuplicate(): Promise<void>;\n  onGoBackToList(): void;\n};\n\nexport const ContractPreviewHeader = ({\n  contract,\n  onConfirmDelete,\n  onConfirmDecline,\n  onConfirmResend,\n  onDuplicate,\n  onGoBackToList,\n}: ContractPreviewHeaderProps) => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const { logError } = useError();\n  const { modalType, openModal, closeModal } = useModalManager<ModalType>();\n\n  const downloadPdf = useDownloadContractPdfLazy();\n\n  const ContractPermissions = useContractPermissions();\n\n  const {\n    formState: { isValid, isDirty },\n  } = useContractPreviewFormContext();\n\n  const handleKeepAsDraft = () => {\n    onGoBackToList();\n  };\n\n  const handleDeleteDraft = () => {\n    openModal('delete');\n  };\n\n  const handleDuplicate = async () => {\n    await onDuplicate();\n  };\n\n  const handleEdit = () => {\n    if (!contract?._id) {\n      return;\n    }\n\n    navigate(generatePath(routes.CONTRACT_EDIT, { id: contract._id }), {\n      replace: true,\n    });\n  };\n\n  const handleDecline = () => {\n    openModal('decline');\n  };\n\n  const handleResend = () => {\n    openModal('resend');\n  };\n\n  const confirmDelete = async () => {\n    try {\n      await onConfirmDelete();\n      closeModal();\n      onGoBackToList();\n    } catch (err) {\n      closeModal();\n      logError(err, 'contract-draft');\n    }\n  };\n\n  const confirmDecline = async () => {\n    try {\n      await onConfirmDecline();\n    } catch (err) {\n      logError(err, 'contract-decline');\n    } finally {\n      closeModal();\n    }\n  };\n\n  const confirmResend = async () => {\n    try {\n      await onConfirmResend();\n    } catch (err) {\n      logError(err, 'contract-resend');\n    } finally {\n      closeModal();\n    }\n  };\n\n  const handleDownloadPdf = () => {\n    if (!contract?._id) {\n      return;\n    }\n\n    downloadPdf(contract._id, ContractUtils.formatPdfFileName(contract));\n  };\n\n  return (\n    <>\n      <StickyFormHeader\n        showBackButton={!UserUtil.isUnauthenticated(user)}\n        title={t('noumena.contract_preview.title')}\n        buttons={\n          ContractPermissions.isOwner(contract) ? (\n            <>\n              {ContractPermissions.canResend(contract) && (\n                <DocumentHeader.ResendButton onClick={handleResend} />\n              )}\n              {ContractPermissions.canEdit(contract) && (\n                <DocumentHeader.EditButton onClick={handleEdit} />\n              )}\n              {ContractPermissions.canDuplicate(contract) && (\n                <DocumentHeader.DuplicateButton onClick={handleDuplicate} />\n              )}\n              {ContractPermissions.canDelete(contract) && (\n                <DocumentHeader.DeleteButton\n                  onClick={handleDeleteDraft}\n                  isDraft={ContractUtils.isDraft(contract)}\n                />\n              )}\n              {ContractPermissions.canDownloadPdf(contract) &&\n                !ContractUtils.isDraft(contract) && (\n                  <DocumentHeader.DownloadPdfButton\n                    onClick={handleDownloadPdf}\n                  />\n                )}\n              {ContractPermissions.canSaveDraft(contract) && (\n                <DocumentHeader.KeepAsDraftButton onClick={handleKeepAsDraft} />\n              )}\n              {ContractPermissions.canSign(contract) && (\n                <DocumentHeader.SendButton\n                  softDisabled={!(isValid && isDirty)}\n                />\n              )}\n            </>\n          ) : (\n            <>\n              {ContractPermissions.canDownloadPdf(contract) &&\n                !ContractUtils.isDraft(contract) && (\n                  <DocumentHeader.DownloadPdfButton\n                    onClick={handleDownloadPdf}\n                  />\n                )}\n              {ContractPermissions.canDecline(contract) && (\n                <DocumentHeader.DeclineButton onClick={handleDecline} />\n              )}\n              {ContractPermissions.canSign(contract) && (\n                <DocumentHeader.SendButton\n                  softDisabled={!(isValid && isDirty)}\n                />\n              )}\n            </>\n          )\n        }\n      />\n      <DeleteDocumentConfirmationModal\n        isOpen={modalType === 'delete'}\n        isDraft={ContractUtils.isDraft(contract)}\n        documentName={contract?.title ?? ''}\n        documentType={DocumentType.Contract}\n        onCancel={closeModal}\n        onDelete={confirmDelete}\n      />\n      <DeclineDocumentConfirmationModal\n        isOpen={modalType === 'decline'}\n        documentName={contract?.title ?? ''}\n        onCancel={closeModal}\n        onDelete={confirmDecline}\n      />\n      <ResendDocumentConfirmationModal\n        isOpen={modalType === 'resend'}\n        onCancel={closeModal}\n        onConfirm={confirmResend}\n      />\n    </>\n  );\n};\n","import { StickyFormHeader } from '@/components/FormHeader/StickyFormHeader/StickyFormHeader';\nimport { useContractPermissions } from '../../hooks/contractPermissions';\nimport { type Contract } from '../../types';\nimport * as DocumentHeader from '../DocumentHeader/DocumentHeader';\n\ntype ContractSigningHeaderProps = {\n  contract: Contract | null;\n  title: string;\n  onGoBack(): void;\n  onDownloadPdf(): void;\n};\n\nexport const ContractSigningHeader = ({\n  contract,\n  title,\n  onGoBack,\n  onDownloadPdf,\n}: ContractSigningHeaderProps) => {\n  const ContractPermissions = useContractPermissions();\n\n  return (\n    <>\n      <StickyFormHeader\n        onGoBack={onGoBack}\n        title={title}\n        buttons={\n          contract &&\n          ContractPermissions.canDownloadPdf(contract) && (\n            <DocumentHeader.DownloadPdfButton onClick={onDownloadPdf} />\n          )\n        }\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { TSpan } from '@/components/Typography';\n\nconst DescriptionText = styled(TSpan)`\n  white-space: pre-wrap;\n\n  ul {\n    margin-top: 4px;\n    margin-top: 4px;\n  }\n`;\n\nexport default {\n  DescriptionText,\n};\n","import SecretNoumAlertModal from '@/components/SecretNoumAlertModal/SecretNoumAlertModal';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport S from './styles';\n\ntype ContractSecretNoumAlertModalProps = {\n  isOpenModal: boolean;\n  isUnauthenticated?: boolean;\n  onClose: () => void;\n};\n\nexport const ContractSecretNoumAlertModal: React.FC<\n  ContractSecretNoumAlertModalProps\n> = ({ isUnauthenticated, ...props }) => {\n  const { t } = useTranslation();\n\n  const descriptionElement = isUnauthenticated ? (\n    <S.DescriptionText font=\"body-l\" colorToken=\"--text-modal-neutral-default\">\n      {t('noumena.contracts.secret_noum_modal.unauthenticated.description_1')}\n      <ul>\n        <li>\n          {t(\n            'noumena.contracts.secret_noum_modal.unauthenticated.description_2',\n          )}\n        </li>\n        <li>\n          {t(\n            'noumena.contracts.secret_noum_modal.unauthenticated.description_3',\n          )}\n        </li>\n      </ul>\n    </S.DescriptionText>\n  ) : (\n    <S.DescriptionText font=\"body-l\" colorToken=\"--text-modal-neutral-default\">\n      {t('noumena.contracts.secret_noum_modal.member.description')}\n    </S.DescriptionText>\n  );\n\n  return (\n    <SecretNoumAlertModal\n      warningText={\n        isUnauthenticated\n          ? t(\n              'noumena.contracts.secret_noum_modal.unauthenticated.warning_text',\n            )\n          : t('noumena.contracts.secret_noum_modal.member.warning_text')\n      }\n      description={descriptionElement}\n      title={t('noumena.contracts.secret_noum_modal.title')}\n      {...props}\n    />\n  );\n};\n","import styled from 'styled-components';\n\nconst SignatureModalForm = styled.form`\n  display: flex;\n  justify-content: stretch;\n  align-items: stretch;\n  flex-grow: 1;\n`;\n\nexport default {\n  SignatureModalForm,\n};\n","import { FormProvider } from 'react-hook-form';\nimport { Navigate, useParams } from 'react-router-dom';\nimport { Spinner } from '@/components/Spinner';\nimport routes from '@/constants/routes';\nimport {\n  ContractPreview,\n  ContractPreviewHeader,\n} from '@/features/contracts/components/ContractPreview';\nimport { DocumentSignaturePreview } from '@/features/contracts/components/DocumentSignaturePreview/DocumentSignaturePreview';\nimport { useToast } from '@/hooks';\nimport useScrollIntoElement from '@/hooks/useScrollIntoElement';\nimport SinglePageLayout, {\n  FullHeightMain,\n  ResponsiveMain,\n} from '@/layout/SinglePageLayout';\nimport { ContractToolRoutes } from '@/features/contracts/utils/routes';\nimport { useNavigateWithOrigin } from '@/hooks/navigation';\nimport { ContractSigningHeader } from '@/features/contracts/components/ContractPreview/ContractSigningHeader';\nimport { downloadFileFromUrl } from '@/utils/file';\nimport { ContractUtils } from '@/features/contracts/utils/contract';\nimport { useContractPermissions } from '@/features/contracts/hooks/contractPermissions';\nimport { ContractSecretNoumAlertModal } from '@/features/contracts/components/ContractSecretNoumAlertModal/ContractSecretNoumAlertModal';\nimport S from './styles';\nimport { useContractPreviewScreen } from './useContractPreviewScreen';\n\nexport default function ContractPreviewScreen() {\n  const { id } = useParams();\n  const { addErrorToast } = useToast();\n  const { scrollIntoElement } = useScrollIntoElement();\n\n  const { goBackToOrigin } = useNavigateWithOrigin();\n  const ContractPermissions = useContractPermissions();\n\n  const {\n    summary,\n    signature,\n    contract,\n    previewStep,\n    linkedSows,\n    closeModal,\n    modalType,\n    contextData,\n    changeStep,\n    deleteContract,\n    declineContract,\n    duplicateContract,\n    resendContract,\n  } = useContractPreviewScreen({ id });\n\n  const goBackToList = () => {\n    goBackToOrigin({ fallbackUrl: ContractToolRoutes.contractManager() });\n  };\n\n  const handleGoBackToSummary = () => {\n    changeStep('Summary');\n  };\n\n  const handleSubmitError = () => {\n    addErrorToast(\n      'Please check all the agreements in the last section to continue.',\n    );\n    scrollIntoElement('agreements');\n  };\n\n  if (\n    !id ||\n    (!contract && !summary.isLoading) ||\n    (contract && !ContractPermissions.canSeeSummary(contract))\n  ) {\n    return <Navigate to={routes.NOT_FOUND} replace />;\n  }\n\n  if (previewStep === 'Summary') {\n    return (\n      <SinglePageLayout>\n        <FormProvider {...summary.form}>\n          <form\n            onSubmit={summary.form.handleSubmit(\n              summary.onSubmit,\n              handleSubmitError,\n            )}\n          >\n            <ContractPreviewHeader\n              contract={contract}\n              onConfirmDelete={deleteContract}\n              onConfirmDecline={declineContract}\n              onDuplicate={duplicateContract}\n              onGoBackToList={goBackToList}\n              onConfirmResend={resendContract}\n            />\n            <ResponsiveMain>\n              {summary.isLoading ? (\n                <Spinner />\n              ) : contract ? (\n                <ContractPreview\n                  contract={contract}\n                  linkedSows={linkedSows.data}\n                  isLoadingLinkedSows={linkedSows.loading}\n                />\n              ) : null}\n            </ResponsiveMain>\n          </form>\n\n          <ContractSecretNoumAlertModal\n            isOpenModal={modalType === 'secretNoumAlert'}\n            onClose={closeModal}\n            isUnauthenticated={!!contextData?.isUnauthenticated}\n          />\n        </FormProvider>\n      </SinglePageLayout>\n    );\n  }\n\n  if (previewStep === 'ConfirmSignature') {\n    return (\n      <SinglePageLayout>\n        <FullHeightMain>\n          <ContractSigningHeader\n            title=\"Check your Contract before signing\"\n            onGoBack={handleGoBackToSummary}\n            contract={contract}\n            onDownloadPdf={() => {\n              if (!contract || !signature.pdfWithSignature) {\n                return;\n              }\n              downloadFileFromUrl(\n                signature.pdfWithSignature,\n                'application/json',\n                ContractUtils.formatPdfFileName(contract),\n              );\n            }}\n          />\n          <S.SignatureModalForm\n            onSubmit={signature.form.handleSubmit(\n              signature.onSubmit,\n              handleSubmitError,\n            )}\n          >\n            <FormProvider {...signature.form}>\n              <DocumentSignaturePreview\n                pdfData={signature.pdfWithSignature}\n                isLoading={signature.isLoading}\n                onGoBack={handleGoBackToSummary}\n              />\n            </FormProvider>\n          </S.SignatureModalForm>\n        </FullHeightMain>\n      </SinglePageLayout>\n    );\n  }\n\n  return <Navigate to={routes.NOT_FOUND} replace />;\n}\n"],"names":["ContractPreviewHeader","contract","onConfirmDelete","onConfirmDecline","onConfirmResend","onDuplicate","onGoBackToList","t","useTranslation","navigate","useNavigate","user","useAuth","logError","useError","modalType","openModal","closeModal","useModalManager","downloadPdf","useDownloadContractPdfLazy","ContractPermissions","useContractPermissions","formState","isValid","isDirty","useContractPreviewFormContext","handleKeepAsDraft","handleDeleteDraft","handleDuplicate","handleEdit","_id","generatePath","routes","CONTRACT_EDIT","id","replace","handleDecline","handleResend","confirmDelete","err","confirmDecline","confirmResend","handleDownloadPdf","ContractUtils","formatPdfFileName","jsxs","Fragment","jsx","StickyFormHeader","UserUtil","isUnauthenticated","isOwner","canResend","DocumentHeader.ResendButton","canEdit","DocumentHeader.EditButton","canDuplicate","DocumentHeader.DuplicateButton","canDelete","DocumentHeader.DeleteButton","isDraft","canDownloadPdf","DocumentHeader.DownloadPdfButton","canSaveDraft","DocumentHeader.KeepAsDraftButton","canSign","DocumentHeader.SendButton","canDecline","DocumentHeader.DeclineButton","DeleteDocumentConfirmationModal","title","DocumentType","Contract","DeclineDocumentConfirmationModal","ResendDocumentConfirmationModal","ContractSigningHeader","onGoBack","onDownloadPdf","DescriptionText","styled","TSpan","S$1","ContractSecretNoumAlertModal","props","descriptionElement","S","SecretNoumAlertModal","SignatureModalForm","form","ContractPreviewScreen","useParams","addErrorToast","useToast","scrollIntoElement","useScrollIntoElement","goBackToOrigin","useNavigateWithOrigin","summary","signature","previewStep","linkedSows","contextData","changeStep","deleteContract","declineContract","duplicateContract","resendContract","useContractPreviewScreen","goBackToList","fallbackUrl","ContractToolRoutes","contractManager","handleGoBackToSummary","handleSubmitError","isLoading","canSeeSummary","Navigate","NOT_FOUND","SinglePageLayout","FormProvider","handleSubmit","onSubmit","ResponsiveMain","Spinner","ContractPreview","data","loading","FullHeightMain","pdfWithSignature","downloadFileFromUrl","DocumentSignaturePreview"],"mappings":"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"}