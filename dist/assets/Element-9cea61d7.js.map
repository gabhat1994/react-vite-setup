{"version":3,"file":"Element-9cea61d7.js","sources":["../../src/features/events/hooks/useUserLiveEventDetails.ts","../../src/features/noums/hooks/spaceQuery/useAddSectionsHelper.ts","../../src/features/noums/contexts/NoumElementContext/NoumElementProvider.tsx","../../src/features/events/components/EventFilter/EventFilterDropDown.tsx","../../src/features/noums/hooks/references/useReference.ts","../../src/features/homeNoums/components/HomeChambers/modals/DiscardExperience.tsx","../../src/features/homeNoums/components/HomeChambers/modals/AddManualReference/AddManualReference.tsx","../../src/features/homeNoums/components/HomeChambers/modals/AskForReference/AskForReference.tsx","../../src/features/homeNoums/components/HomeChambers/HomeChambers.tsx","../../src/components/Link/ButtonLink/ButtonLink.tsx","../../src/features/money/hooks/useSubWalletAccounts.ts","../../src/screens/Chamber/components/RightPanel/elements/NoumActions/NoumEditorUserActions.tsx","../../src/screens/Chamber/components/RightPanel/elements/NoumActions/NoumEditorOwnerActions.tsx","../../src/screens/Chamber/components/RightPanel/elements/NoumActions/NoumEditorViewModeActions.tsx","../../src/screens/Chamber/components/elements/SkeletonLoader/styled.ts","../../src/screens/Chamber/components/ProfileSummary/styles.ts","../../src/features/noums/contexts/NoumAuthorizationContext/NoumAuthorizationContext.tsx","../../src/features/noums/contexts/NoumAuthorizationContext/types.ts","../../src/screens/Chamber/components/elements/SkeletonLoader/StyledSkeletons.tsx","../../src/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderParagraph.tsx","../../src/screens/Chamber/components/ProfileSummary/RiseApplicationV2/types.ts","../../src/screens/Chamber/components/ProfileSummary/RiseApplicationV2/RiseApplicationProvider/RiseApplicationProvider.tsx","../../src/screens/CoreSettings/PersonalDetails/consts.ts","../../src/screens/CoreSettings/PersonalDetails/data.ts","../../src/screens/CoreSettings/PersonalDetails/index.tsx","../../src/screens/Chamber/components/modals/PersonalDetailsModal/Modal.tsx","../../src/screens/Chamber/components/ProfileSummary/HomeNoumCQToken.tsx","../../src/screens/Chamber/components/ProfileSummary/Favourite.tsx","../../src/screens/Chamber/components/ProfileSummary/ProfileSummaryOld.tsx","../../src/screens/Chamber/components/ProfileSummary/ProfileBanner/constants.tsx","../../src/screens/Chamber/components/ProfileSummary/ProfileBanner/styles.ts","../../src/screens/Chamber/components/ProfileSummary/ProfileBanner/types.ts","../../src/screens/Chamber/components/ProfileSummary/ProfileBanner/BannerEditButton.tsx","../../src/screens/Chamber/components/ProfileSummary/ProfileBanner/ProfileBanner.tsx","../../src/screens/Chamber/components/ProfileSummary/ProfileBanner/ProfileBannerEditable/index.tsx","../../src/screens/Chamber/components/ProfileSummary/NoumManagerInvitation/styles.ts","../../src/screens/Chamber/components/ProfileSummary/types.ts","../../src/screens/Chamber/components/ProfileSummary/NoumBio.tsx","../../src/screens/Chamber/components/ProfileSummary/NoumMembersInformation.tsx","../../src/screens/Chamber/components/ProfileSummary/NoumDescription.tsx","../../src/screens/Chamber/components/ProfileSummary/CQToken.tsx","../../src/screens/Chamber/components/ProfileSummary/NoumTagsDetail.tsx","../../src/screens/Chamber/components/ProfileSummary/RiseApplicationV2/helper.ts","../../src/screens/Chamber/components/ProfileSummary/RiseApplicationV2/RiseApplicationStep.tsx","../../src/screens/Chamber/components/ProfileSummary/RiseApplicationV2/RiseApplicationSteps.tsx","../../src/screens/Chamber/components/ProfileSummary/ProfileSummaryNew.tsx","../../src/screens/Chamber/components/ProfileSummary/index.tsx","../../src/screens/Chamber/components/NoumSections/Styles.tsx","../../src/screens/Chamber/components/SectionLayoutPicker/SectionLayoutItem/styles.ts","../../src/screens/Chamber/components/SectionLayoutPicker/SectionLayoutItem/index.tsx","../../src/screens/Chamber/components/SectionLayoutPicker/constants.tsx","../../src/screens/Chamber/components/SectionLayoutPicker/Tabs/EmptySections.tsx","../../src/screens/Chamber/components/SectionLayoutPicker/Tabs/SectionTemplates.tsx","../../src/screens/Chamber/components/SectionLayoutPicker/styles.ts","../../src/screens/Chamber/components/SectionLayoutPicker/SectionLayoutPicker.tsx","../../src/features/noums/components/NoumEditor2.0/EmptyNoumState/EmptyNoumState.tsx","../../src/screens/Chamber/components/NoumSidePanel/types.ts","../../src/features/noums/components/NoumEditor2.0/HoverWrapper/types.ts","../../src/features/noums/components/NoumEditor2.0/HoverWrapper/Styles.tsx","../../src/screens/Chamber/components/DeleteModal/styles.ts","../../src/features/noums/components/NoumEditor2.0/PopoverWrapper/styles.ts","../../src/features/noums/components/NoumEditor2.0/PopoverWrapper/CloseButton.tsx","../../src/features/noums/components/NoumEditor2.0/PopoverWrapper/index.tsx","../../src/screens/Chamber/components/AddSection/styles.ts","../../src/features/noums/hooks/Toolbox/constants.ts","../../src/screens/Chamber/components/modals/NoumWalletCreateModal/Modal.tsx","../../src/features/noums/components/NoumEditor2.0/Toolbox/styles.tsx","../../src/screens/Chamber/components/SectionElementRearrange/styles.ts","../../src/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderElementHeader.tsx","../../src/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderImageElement.tsx","../../src/constants/uploadFile.ts","../../src/utils/uploadFile.ts","../../src/screens/Chamber/components/elements/ImageElement/styles.tsx","../../src/screens/Chamber/components/elements/ImageElement/EditPreUpload.tsx","../../src/screens/Chamber/components/elements/ImageElement/EditUploading.tsx","../../src/screens/Chamber/components/elements/ImageElement/ImageEditor.tsx","../../src/screens/Chamber/components/elements/ImageElement/index.tsx","../../src/screens/Chamber/components/elements/VideoElement/styles.tsx","../../src/screens/Chamber/components/elements/VideoElement/EditPreUpload.tsx","../../src/screens/Chamber/components/elements/VideoElement/EditUploading.tsx","../../src/screens/Chamber/components/elements/VideoElement/VideoEditor.tsx","../../src/screens/Chamber/components/elements/VideoElement/index.tsx","../../src/screens/Chamber/components/elements/CalendarEvent/CalendarElement/styles.ts","../../src/screens/Chamber/components/elements/CalendarEvent/CalendarElement/CalendarElementEditMode.tsx","../../src/features/events/hooks/usePaginatedEvents.ts","../../src/hooks/useScrollToLocation.tsx","../../src/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderHeaderSubElement.tsx","../../src/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderCalendarElement.tsx","../../src/screens/Chamber/components/modals/StartNowEventWarningModal/StartNowEventWarningModal.tsx","../../src/screens/Chamber/components/elements/CalendarEvent/CalendarElement/data.ts","../../src/screens/Chamber/components/elements/CalendarEvent/CalendarElement/CalendarElementViewModeSubHeader.tsx","../../src/screens/Chamber/components/elements/CalendarEvent/components/CalendarPlaceholder.tsx","../../src/screens/Chamber/components/elements/CalendarEvent/CalendarElement/AllCalendarModal.tsx","../../src/screens/Chamber/components/elements/CalendarEvent/components/styles.ts","../../src/screens/Chamber/components/elements/CalendarEvent/components/CalendarGuestEventsListCollapsed.tsx","../../src/screens/Chamber/components/elements/CalendarEvent/components/CalendarEventsListExpanded.tsx","../../src/screens/Chamber/components/elements/CalendarEvent/CalendarElement/CalendarElementGuestView.tsx","../../src/screens/Chamber/components/elements/CalendarEvent/components/CalendarNoEvents.tsx","../../src/screens/Chamber/components/elements/CalendarEvent/components/CalendarOwnerEventsListCollapsed.tsx","../../src/screens/Chamber/components/elements/CalendarEvent/CalendarElement/CalendarElementOwnerView.tsx","../../src/screens/Chamber/components/elements/CalendarEvent/CalendarElement/AddEventButton.tsx","../../src/screens/Chamber/components/elements/CalendarEvent/CalendarElement/CalendarElementViewModeHeader.tsx","../../src/screens/Chamber/components/elements/CalendarEvent/CalendarElement/useCalendar.ts","../../src/screens/Chamber/components/elements/CalendarEvent/CalendarElement/CalendarElementViewMode.tsx","../../src/screens/Chamber/components/elements/CalendarEvent/CalendarElement/CalendarElement.tsx","../../src/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderBusinessBriefElement.tsx","../../src/screens/Chamber/components/elements/BusinessBrief/styles.tsx","../../src/screens/Chamber/components/elements/BusinessBrief/BusinessBrief.tsx","../../src/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderTextElement.tsx","../../src/screens/Chamber/components/elements/TextElement/TextElement.tsx","../../src/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderMessageElement.tsx","../../src/screens/Chamber/components/elements/MessageElementV2/ChatHeader/FilterDropDown.tsx","../../src/screens/Chamber/components/elements/MessageElementV2/ChatList/styles.tsx","../../src/screens/Chamber/components/elements/MessageElementV2/ChatList/SeeAllButton.tsx","../../src/screens/Chamber/components/elements/MessageElementV2/hooks/useConversationType.tsx","../../src/screens/Chamber/components/elements/MessageElementV2/ChatList/useChatList.ts","../../src/screens/Chamber/components/elements/MessageElementV2/ChatListModal/ChatListModal.tsx","../../src/screens/Chamber/components/elements/MessageElementV2/ChatFooter/ChatFooter.tsx","../../src/features/noums/contexts/NoumAuthorizationContext/useNoumAuthorization.ts","../../src/screens/Chamber/components/elements/MessageElementV2/ChatHeader/styles.ts","../../src/screens/Chamber/components/elements/MessageElementV2/ChatHeader/ChatHeader.tsx","../../src/features/conversation/components/ChatItem/ChatItemExample.tsx","../../src/features/conversation/components/ChatItem/CollapsedChatItem.tsx","../../src/features/conversation/components/ChatItem/HomeOwnerChatItem.tsx","../../src/screens/Chamber/components/elements/MessageElementV2/ConversationEmptyState.tsx","../../src/screens/Chamber/components/elements/MessageElementV2/ChatList/ChatList.tsx","../../src/screens/Chamber/components/elements/MessageElementV2/ConversationBody/styles.ts","../../src/screens/Chamber/components/elements/MessageElementV2/ConversationBody/ConversationExampleBody.tsx","../../src/screens/Chamber/components/elements/MessageElementV2/ConversationBody/ConversationBody.tsx","../../src/features/conversation/components/NewConversationUserSelector/NewConversationUserSelector.tsx","../../src/screens/Chamber/components/elements/MessageElementV2/ConversationHeader/styles.ts","../../src/screens/Chamber/components/elements/MessageElementV2/ConversationHeader/HomeOwnerConversationProfile.tsx","../../src/screens/Chamber/components/elements/MessageElementV2/ConversationHeader/ConversationHeader.tsx","../../src/screens/Chamber/components/elements/MessageElementV2/ConversationModal/styles.ts","../../src/screens/Chamber/components/elements/MessageElementV2/ConversationModal/ConversationModal.tsx","../../src/screens/Chamber/components/elements/MessageElementV2/styles.ts","../../src/screens/Chamber/components/elements/MessageElementV2/ViewModeLayout.tsx","../../src/screens/Chamber/components/elements/MessageElementV2/MessageElementViewMode.tsx","../../src/screens/Chamber/components/elements/MessageElementV2/MessageElementEditMode.tsx","../../src/screens/Chamber/components/elements/MessageElementV2/MessageElement.tsx","../../src/screens/Chamber/components/elements/MessageElementV2/index.tsx","../../src/screens/Chamber/components/elements/WalletElement/providers/WalletElementProvider.tsx","../../src/screens/Chamber/components/elements/WalletElement/styles.ts","../../src/screens/Chamber/components/elements/WalletElement/WalletElementEditMode.tsx","../../src/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderWalletElement.tsx","../../src/screens/Chamber/components/elements/WalletElement/transactionstyles.ts","../../src/screens/Chamber/components/elements/WalletElement/TransactionWindow.tsx","../../src/screens/Chamber/components/elements/WalletElement/WalletHeader/styles.ts","../../src/screens/Chamber/components/elements/WalletElement/WalletHeader/WalletHeader.tsx","../../src/screens/Chamber/components/elements/WalletElement/Transaction/styles.ts","../../src/screens/Chamber/components/elements/WalletElement/Transaction/index.tsx","../../src/screens/Chamber/components/elements/WalletElement/WalletElementViewMode.tsx","../../src/screens/Chamber/components/elements/WalletElement/WalletElement.tsx","../../src/screens/Chamber/components/elements/QuickQuestionsElement/providers/QuickQuestionsElementProvider.tsx","../../src/screens/Chamber/components/elements/QuickQuestionsElement/components/QuickQuestionsElementHeader/styles.ts","../../src/screens/Chamber/components/elements/QuickQuestionsElement/testIds.ts","../../src/screens/Chamber/components/elements/QuickQuestionsElement/components/QuickQuestionsElementHeader/QuickQuestionsElementHeader.tsx","../../src/screens/Chamber/components/elements/QuickQuestionsElement/modals/AddQuestion/styles.tsx","../../src/screens/Chamber/components/elements/QuickQuestionsElement/modals/AddQuestion/EditElement.tsx","../../src/screens/Chamber/components/elements/QuickQuestionsElement/modals/AddQuestion/useAddQuestionHelper.ts","../../src/screens/Chamber/components/elements/QuickQuestionsElement/modals/AddQuestion/AddQuestion.tsx","../../src/screens/Chamber/components/elements/QuickQuestionsElement/components/Answer/styles.ts","../../src/screens/Chamber/components/elements/QuickQuestionsElement/components/Answer/types.ts","../../src/screens/Chamber/components/elements/QuickQuestionsElement/components/Answer/Answer.tsx","../../src/screens/Chamber/components/elements/QuickQuestionsElement/modals/AllAnswerModal/AllAnswerModal.tsx","../../src/screens/Chamber/components/elements/QuickQuestionsElement/hooks/useAddAnswerHelper.ts","../../src/screens/Chamber/components/elements/QuickQuestionsElement/modals/QuestionModal/styles.ts","../../src/screens/Chamber/components/elements/QuickQuestionsElement/modals/QuestionModal/QuestionModal.tsx","../../src/screens/Chamber/components/elements/QuickQuestionsElement/hooks/useEllipsisMenuHelper.ts","../../src/screens/Chamber/components/elements/QuickQuestionsElement/components/QuestionAnswer/EllipsisMenu.tsx","../../src/screens/Chamber/components/elements/QuickQuestionsElement/components/QuestionAnswer/styles.ts","../../src/screens/Chamber/components/elements/QuickQuestionsElement/constants.ts","../../src/screens/Chamber/components/elements/QuickQuestionsElement/components/QuestionAnswer/QuestionAnswer.tsx","../../src/screens/Chamber/components/elements/QuickQuestionsElement/hooks/useGetQuickQuestionHelper.ts","../../src/screens/Chamber/components/elements/QuickQuestionsElement/styles.ts","../../src/screens/Chamber/components/elements/QuickQuestionsElement/data.ts","../../src/screens/Chamber/components/elements/QuickQuestionsElement/QuickQuestionsElementViewMode.tsx","../../src/screens/Chamber/components/elements/QuickQuestionsElement/QuickQuestionsElementEditMode.tsx","../../src/screens/Chamber/components/elements/QuickQuestionsElement/QuickQuestionsElement.tsx","../../src/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderPostElement.tsx","../../src/screens/Chamber/components/elements/PostElement/components/PostViewMode/styles.ts","../../src/screens/Chamber/components/elements/PostElement/components/PostHeader/styles.ts","../../src/screens/Chamber/components/elements/PostElement/modals/FilterPost/styles.ts","../../src/screens/Chamber/components/elements/PostElement/modals/FilterPost/Modal.tsx","../../src/screens/Chamber/components/elements/PostElement/components/PostHeader/PostHeader.tsx","../../src/screens/Chamber/components/elements/PostElement/components/AuthorsList/styles.ts","../../src/screens/Chamber/components/elements/PostElement/components/AuthorsList/AuthorsList.tsx","../../src/screens/Chamber/components/elements/PostElement/components/PostBody/mockData.ts","../../src/screens/Chamber/components/elements/PostElement/components/PostBody/PostBody.tsx","../../src/screens/Chamber/components/elements/PostElement/components/PostViewMode/index.tsx","../../src/screens/Chamber/components/elements/PostElement/PostElement.tsx","../../src/screens/Chamber/components/elements/NetworkElement/NetworkElementProvider.tsx","../../src/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderNetworkElement.tsx","../../src/screens/Chamber/components/elements/NetworkElement/components/NetworkHeader/styles.ts","../../src/screens/Chamber/components/elements/NetworkElement/components/NetworkHeader/index.tsx","../../src/screens/Chamber/components/elements/NetworkElement/components/NetworkItem/styles.ts","../../src/screens/Chamber/components/elements/NetworkElement/components/NetworkItem/index.tsx","../../src/screens/Chamber/components/elements/NetworkElement/NetworkViewMode/styles.ts","../../src/screens/Chamber/components/elements/NetworkElement/NetworkViewMode/NetworkViewMode.tsx","../../src/screens/Chamber/components/elements/NetworkElement/components/NetworkEditItem/styles.ts","../../src/screens/Chamber/components/elements/NetworkElement/components/NetworkEditItem/index.tsx","../../src/screens/Chamber/components/elements/NetworkElement/NetworkEditMode/styles.ts","../../src/screens/Chamber/components/elements/NetworkElement/NetworkEditMode/NetworkEditMode.tsx","../../src/screens/Chamber/components/elements/NetworkElement/NetworkElement.tsx","../../src/features/skills/components/SkillSelection/components/SearchSkill/SearchSkill.tsx","../../src/screens/Chamber/components/elements/SkillElement/styles.ts","../../src/screens/Chamber/components/elements/SkillElement/SkillsEditElement.tsx","../../src/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderSkillElement.tsx","../../src/screens/Chamber/components/elements/SkillElement/SkillsViewElement.tsx","../../src/screens/Chamber/components/elements/SkillElement/SkillElement.tsx","../../src/screens/Chamber/components/elements/FileManagerElement/utils.ts","../../src/screens/Chamber/components/modals/FilePreviewModal/FilePreview/styles.ts","../../src/screens/Chamber/components/modals/FilePreviewModal/FilePreview/FilePreview.tsx","../../src/screens/Chamber/components/elements/FileManagerElement/providers/FileManagerElementProvider.tsx","../../src/screens/Chamber/components/elements/FileManagerElement/components/FileManagerEllipsisMenu/FileManagerEllipsisMenu.tsx","../../src/screens/Chamber/components/modals/FilePreviewModal/styles.ts","../../src/screens/Chamber/components/modals/FilePreviewModal/FilePreviewModal.tsx","../../src/screens/Chamber/components/modals/DiscardChangesModal/DiscardChangesModal.tsx","../../src/screens/Chamber/components/modals/FileUploadModal/styles.ts","../../src/screens/Chamber/components/modals/FileUploadModal/FileUploadModal.tsx","../../src/screens/Chamber/components/modals/FileManagerDeleteModal/styles.ts","../../src/screens/Chamber/components/modals/FileManagerDeleteModal/FileManagerDeleteModal.tsx","../../src/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderFileManagerBody.tsx","../../src/screens/Chamber/components/elements/FileManagerElement/components/FileListItem/styles.ts","../../src/screens/Chamber/components/elements/FileManagerElement/components/FileListItem/FileListItem.tsx","../../src/screens/Chamber/components/elements/FileManagerElement/components/FileList/styles.ts","../../src/screens/Chamber/components/elements/FileManagerElement/components/FileList/EmptyState.tsx","../../src/screens/Chamber/components/elements/FileManagerElement/components/FileList/FileList.tsx","../../src/hooks/useDebouncedCallback.ts","../../src/screens/Chamber/components/elements/FileManagerElement/components/FileManagerSearch/styles.ts","../../src/screens/Chamber/components/elements/FileManagerElement/components/FileManagerSearch/FileManagerSearch.tsx","../../src/screens/Chamber/components/elements/FileManagerElement/components/FileManagerTabs.tsx","../../src/screens/Chamber/components/modals/FileManagerShowAllModal/FileManagerShowAllModal.tsx","../../src/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderFileManagerElement.tsx","../../src/screens/Chamber/components/elements/FileManagerElement/components/FileManagerHeader/styles.ts","../../src/screens/Chamber/components/elements/FileManagerElement/components/FileManagerHeader/FileManagerHeader.tsx","../../src/screens/Chamber/components/elements/FileManagerElement/components/FileManagerViewMode/styles.ts","../../src/screens/Chamber/components/elements/FileManagerElement/components/FileManagerBody/FileManagerBody.tsx","../../src/screens/Chamber/components/elements/FileManagerElement/components/FileManagerViewMode/FileManagerViewMode.tsx","../../src/screens/Chamber/components/elements/FileManagerElement/FileManagerElement.tsx","../../src/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderContractManagerElement.tsx","../../src/screens/Chamber/components/elements/ContractManagerElement/components/Shared/ContractManagerHeader/styles.ts","../../src/screens/Chamber/components/elements/ContractManagerElement/components/Shared/ContractManagerHeader/ContractManagerHeader.tsx","../../src/screens/Chamber/components/elements/ContractManagerElement/components/Shared/EmptyElement/styles.ts","../../src/screens/Chamber/components/elements/ContractManagerElement/components/Shared/EmptyElement/EmptyElement.tsx","../../src/screens/Chamber/components/elements/ContractManagerElement/components/Shared/ViewModeWrapper/ViewModeWrapper.tsx","../../src/screens/Chamber/components/elements/ContractManagerElement/types.ts","../../src/screens/Chamber/components/elements/ContractManagerElement/components/Shared/InputFilters/styles.ts","../../src/screens/Chamber/components/elements/ContractManagerElement/components/Shared/InputFilters/index.tsx","../../src/screens/Chamber/components/elements/ContractManagerElement/components/Shared/ContractManagerViewMode/Filters.tsx","../../src/screens/Chamber/components/elements/ContractManagerElement/utils/contractElementMapper.ts","../../src/screens/Chamber/components/elements/ContractManagerElement/useContractManager.tsx","../../src/screens/Chamber/components/elements/ContractManagerElement/components/Shared/ContractManagerViewMode/styles.ts","../../src/screens/Chamber/components/elements/ContractManagerElement/components/Shared/ContractsTable/ContractsTable.tsx","../../src/screens/Chamber/components/elements/ContractManagerElement/components/Shared/StatementsOfWorkTable/StatementsOfWorkTable.tsx","../../src/screens/Chamber/components/elements/ContractManagerElement/components/Shared/ContractsTable/styles.ts","../../src/screens/Chamber/components/elements/ContractManagerElement/components/Shared/ContractsTable/ContractsCollapsibleList.tsx","../../src/screens/Chamber/components/elements/ContractManagerElement/components/Shared/StatementsOfWorkTable/styles.ts","../../src/screens/Chamber/components/elements/ContractManagerElement/components/Shared/StatementsOfWorkTable/StatementsOfWorkCollapsibleList.tsx","../../src/screens/Chamber/components/elements/ContractManagerElement/components/Shared/ContractManagerViewMode/Body.tsx","../../src/screens/Chamber/components/elements/ContractManagerElement/components/Shared/ContractManagerViewMode/Modal.tsx","../../src/screens/Chamber/components/elements/ContractManagerElement/components/Shared/ContractManagerViewMode/index.tsx","../../src/screens/Chamber/components/elements/ContractManagerElement/ContractManagerElement.tsx","../../src/screens/Chamber/components/Element/Element.tsx"],"sourcesContent":["import { useState, useCallback } from 'react';\nimport { type Event, SortOrder } from '@/apollo/generated/types';\nimport {\n  type EventFragment,\n  useEventsParticipatedLazyQuery,\n  useGetEventsQuery,\n} from '@/apollo/graphql';\nimport { EventUtils } from '@/utils/event';\n\nexport const useUserLiveEventDetails = (\n  chamberId: string,\n): {\n  isAnotherEventLive: boolean;\n  eventScheduledIn60Mins: Event;\n} => {\n  const [isAnotherEventLive, setIsAnotherEventLive] = useState(false);\n  const [eventScheduledIn60Mins, setEventScheduledIn60Mins] =\n    useState<EventFragment>();\n\n  const setLiveEventDetails = useCallback((allEvents: Event[]): void => {\n    setIsAnotherEventLive(\n      () => !!EventUtils.getParticipatedLiveEvents(allEvents),\n    );\n    setEventScheduledIn60Mins(() =>\n      EventUtils.getEventInNext60Minutes(allEvents),\n    );\n  }, []);\n\n  const [eventsParticipated] = useEventsParticipatedLazyQuery({\n    refetchWritePolicy: 'overwrite',\n    fetchPolicy: 'cache-and-network',\n    variables: {\n      chamberId,\n    },\n    onCompleted: ({ attending, hosted }) => {\n      setLiveEventDetails([\n        ...(attending?.data || []),\n        ...(hosted?.data || []),\n      ] as Event[]);\n    },\n  });\n\n  useGetEventsQuery({\n    fetchPolicy: 'cache-only',\n    skip: !chamberId,\n    variables: {\n      chamberId,\n      limit: 3,\n      offset: 0,\n      sortOrder: SortOrder.Asc,\n    },\n    onCompleted({ getEvents }) {\n      if (getEvents?.data?.length) {\n        setLiveEventDetails(getEvents?.data as Event[]);\n      } else {\n        eventsParticipated();\n      }\n    },\n  });\n\n  return {\n    isAnotherEventLive,\n    eventScheduledIn60Mins: eventScheduledIn60Mins as Event,\n  };\n};\n\nexport default useUserLiveEventDetails;\n","import { useCallback } from 'react';\nimport * as Sentry from '@sentry/react';\nimport {\n  GetSpaceByIdDocument,\n  type GetSpaceByIdQuery,\n  type GetSpaceByIdQueryVariables,\n  useCreateNoumLayoutSectionMutation,\n} from '@/apollo/graphql';\nimport { cloneDeep } from 'lodash';\nimport {\n  type NoumLayoutSection,\n  NoumLayoutStatusFilter,\n  type CreateNoumLayoutSectionInput,\n  NoumLayoutStatus,\n} from '@/apollo/generated/types';\nimport { useToast } from '@/hooks/toast';\n\nexport function useAddSectionsHelper() {\n  const { addToast } = useToast();\n\n  const [addSections, { loading }] = useCreateNoumLayoutSectionMutation();\n\n  const addSectionsHelper = useCallback(\n    async (input: CreateNoumLayoutSectionInput, spaceId: string) => {\n      let isSuccess;\n      try {\n        await addSections({\n          variables: { input },\n          update: (cache, { data }) => {\n            if (!data || !data.createNoumLayoutSection) return;\n\n            const variables: GetSpaceByIdQueryVariables = {\n              id: spaceId,\n              editorV2Enabled: true,\n              status: NoumLayoutStatusFilter.Unpublished,\n            };\n\n            const cacheResult = cache.readQuery<GetSpaceByIdQuery>({\n              query: GetSpaceByIdDocument,\n              variables,\n            });\n\n            if (!cacheResult) return;\n\n            const { getSpaceById: spaceData } = cacheResult;\n\n            if (!spaceData) return;\n\n            const cloneSpaceData = cloneDeep(spaceData);\n            if (!cloneSpaceData?.layout) return;\n            cloneSpaceData.layout.status = NoumLayoutStatus.Unsaved;\n            cloneSpaceData.layout.sections.reduce(\n              (acc: NoumLayoutSection[], obj) => {\n                if (obj.position >= data.createNoumLayoutSection.position) {\n                  const cloneObj = obj;\n                  cloneObj.position += 1;\n                }\n                acc.push(obj);\n                return acc;\n              },\n              [],\n            );\n            cloneSpaceData.layout.sections.splice(\n              data.createNoumLayoutSection.position - 1,\n              0,\n              data.createNoumLayoutSection,\n            );\n            cache.writeQuery({\n              query: GetSpaceByIdDocument,\n              variables,\n              data: {\n                getSpaceById: cloneSpaceData,\n              },\n            });\n          },\n        });\n\n        isSuccess = true;\n      } catch (error) {\n        let message = 'Unknown';\n        if (error instanceof Error) {\n          message = error.message;\n        }\n        addToast('error', 'none', message);\n        Sentry.captureException(new Error(message), {\n          tags: {\n            section: 'addElementMutation',\n          },\n        });\n\n        isSuccess = false;\n      }\n\n      return isSuccess;\n    },\n    [addSections, addToast],\n  );\n\n  return {\n    loading,\n    addSectionsHelper,\n  };\n}\n","import { type ReactNode, useMemo } from 'react';\nimport { NoumElementContext } from './NoumElementContext';\n\ninterface NoumElementProviderProps {\n  children: ReactNode;\n  columnWidth?: number;\n  isNoumEditor2: boolean;\n  isEditing: boolean;\n}\n\n// Keep this provider clean, pass only generic values that can be used by any Noum Element.\nexport function NoumElementProvider({\n  children,\n  columnWidth,\n  isNoumEditor2,\n  isEditing,\n}: NoumElementProviderProps) {\n  const value = useMemo(\n    () => ({\n      columnWidth,\n      isNoumEditor2,\n      isEditing,\n    }),\n    [columnWidth, isEditing, isNoumEditor2],\n  );\n\n  return (\n    <NoumElementContext.Provider value={value}>\n      {children}\n    </NoumElementContext.Provider>\n  );\n}\n","import { Icon } from '@/components/Icon';\nimport { Dropdown, type DropdownTargetProps } from '@/components/Dropdown';\nimport { TSpan } from '@/components/Typography';\nimport { Stack } from '@/layout';\nimport { eventFiltersDropDown } from './constants';\nimport { type EventFilterProps } from './types';\nimport { EventFilterDropdownButton } from './styles';\n\nexport const EventFilterDropDown = ({\n  activeFilter,\n  onChange,\n}: EventFilterProps) => (\n  <Stack padding=\"0 16px\" fullWidth vertical>\n    <Dropdown\n      closeOnSelect\n      hideIcons\n      placement=\"bottom\"\n      options={eventFiltersDropDown}\n      isAnimation={false}\n      onSelectOption={({ value }) => {\n        onChange(value);\n      }}\n      observerMinHeight=\"0\"\n      usePortal={false}\n      containerWidth=\"100%\"\n    >\n      {({\n        targetProps,\n        targetRef,\n        toggle,\n      }: DropdownTargetProps<HTMLDivElement>) => (\n        <EventFilterDropdownButton\n          {...targetProps}\n          ref={targetRef}\n          onClick={toggle}\n          justify=\"space-between\"\n          fullWidth\n          align=\"center\"\n          padding=\"8px\"\n        >\n          <TSpan font=\"input-m\">\n            {\n              eventFiltersDropDown.filter(\n                (item) => item.key === activeFilter,\n              )[0].label\n            }\n          </TSpan>\n          <Icon\n            size={15}\n            name=\"chevron_down_m\"\n            color=\"--icon-button-neutral-default\"\n          />\n        </EventFilterDropdownButton>\n      )}\n    </Dropdown>\n  </Stack>\n);\n","import { t } from 'i18next';\nimport { useCallback, useMemo, useState } from 'react';\nimport { capitalize } from 'lodash';\nimport {\n  type AskForReferencePayload,\n  type ManualNoumReferencePayload,\n  type UpdateNoumReferencePayload,\n  NoumReferenceStatus,\n} from '@/apollo/generated/types';\nimport {\n  useGetNoumReferenceCapacityQuery,\n  useAskForNoumReferenceMutation,\n  useAddManualReferenceForNoumMutation,\n  useUpdateNoumReferenceStatusMutation,\n  useDiscardNoumReferenceMutation,\n  useUpdateNoumReferenceMutation,\n} from '@/apollo/graphql';\nimport { type DropdownValueType } from '@/components/Dropdown';\nimport { useToast } from '@/hooks/toast';\nimport { useGetNoumReferences } from './useGetNoumReferences';\n\nexport const useReference = () => {\n  const { addToast } = useToast();\n  const [experienceId, setExperienceId] = useState('');\n  const [referenceId, setReferenceId] = useState('');\n  const { data: referenceCapacity, loading: referenceCapacityLoading } =\n    useGetNoumReferenceCapacityQuery();\n  const [askForNoumReferenceMutation, { loading: submitLoading }] =\n    useAskForNoumReferenceMutation({});\n  const [addManualReferenceForNoumMutation, { loading: addManualLoading }] =\n    useAddManualReferenceForNoumMutation({});\n  const [updateNoumReferenceStatusMutation, { loading: updateStatusLoading }] =\n    useUpdateNoumReferenceStatusMutation({});\n  const [discardNoumReferenceMutation, { loading: discardLoading }] =\n    useDiscardNoumReferenceMutation({});\n  const [updateNoumReferenceMutation, { loading: updateLoading }] =\n    useUpdateNoumReferenceMutation({});\n\n  const {\n    fetchMoreReferences,\n    infiniteState,\n    refetchReferences,\n    references: referenceData,\n    loading: fetching,\n  } = useGetNoumReferences(\n    experienceId,\n    [NoumReferenceStatus.Accepted, NoumReferenceStatus.Pending],\n    true,\n    10,\n  );\n\n  const loading =\n    referenceCapacityLoading ||\n    submitLoading ||\n    addManualLoading ||\n    updateStatusLoading ||\n    discardLoading ||\n    updateLoading;\n\n  const capacityOptions: DropdownValueType<string>[] = useMemo(\n    () =>\n      referenceCapacity?.getNoumReferenceCapacity.length\n        ? referenceCapacity?.getNoumReferenceCapacity.map((item) => ({\n            key: item,\n            value: item,\n            type: 'value',\n            label: capitalize(item.replaceAll('_', '-')),\n          }))\n        : [],\n    [referenceCapacity],\n  );\n\n  const handleAddReferenceManually = useCallback(\n    async (payload: ManualNoumReferencePayload) => {\n      const response = await addManualReferenceForNoumMutation({\n        variables: {\n          experienceId,\n          reference: payload,\n        },\n      });\n      if (response?.data?.addManualReferenceForNoum) {\n        addToast(\n          'success',\n          'none',\n          t(\n            'noumena.chamber_edit.add_reference.add_a_reference.success_message',\n          ),\n        );\n      } else {\n        addToast('error', 'none', 'Something went wrong');\n      }\n    },\n    [addManualReferenceForNoumMutation, addToast, experienceId],\n  );\n\n  const handleAskForNoumReference = useCallback(\n    async (payload: AskForReferencePayload) => {\n      const response = await askForNoumReferenceMutation({\n        variables: {\n          experienceId,\n          reference: payload,\n        },\n      });\n      if (response?.data?.askForNoumReference) {\n        addToast(\n          'success',\n          'none',\n          t(\n            'noumena.chamber_edit.add_reference.ask_for_a_reference.success_message',\n          ),\n        );\n      } else {\n        addToast('error', 'none', 'Something went wrong');\n      }\n    },\n    [addToast, askForNoumReferenceMutation, experienceId],\n  );\n\n  const onSubmitManualReference = useCallback(\n    async (payload: ManualNoumReferencePayload) => {\n      try {\n        await handleAddReferenceManually(payload);\n        refetchReferences();\n      } catch (err) {\n        addToast('error', 'none', 'Something went wrong');\n      }\n    },\n    [addToast, refetchReferences, handleAddReferenceManually],\n  );\n\n  const onSubmitAskForReference = useCallback(\n    async (payload: AskForReferencePayload) => {\n      try {\n        await handleAskForNoumReference(payload);\n        refetchReferences();\n      } catch (err) {\n        addToast('error', 'none', 'Something went wrong');\n      }\n    },\n    [handleAskForNoumReference, refetchReferences, addToast],\n  );\n\n  const updateNoumReferenceStatus = useCallback(\n    (status: NoumReferenceStatus) => async (id: string) => {\n      try {\n        const response = await updateNoumReferenceStatusMutation({\n          variables: {\n            referenceId: id,\n            status,\n          },\n        });\n        if (response.data?.updateNoumReferenceStatus.status === status) {\n          refetchReferences().then(() => {\n            addToast(\n              'success',\n              'none',\n              `successfully ${\n                status === NoumReferenceStatus.Accepted\n                  ? 'approved'\n                  : 'rejected'\n              } reference`,\n            );\n          });\n        }\n      } catch (err) {\n        addToast(\n          'error',\n          'none',\n          t('noumena.chamber_edit.add_reference.empty_title'),\n        );\n      }\n    },\n    [updateNoumReferenceStatusMutation, refetchReferences, addToast],\n  );\n\n  const approveReference = updateNoumReferenceStatus(\n    NoumReferenceStatus.Accepted,\n  );\n  const rejectReference = updateNoumReferenceStatus(\n    NoumReferenceStatus.Rejected,\n  );\n\n  const discardReference = useCallback(\n    async (id: string) => {\n      try {\n        const response = await discardNoumReferenceMutation({\n          variables: {\n            referenceId: id,\n          },\n        });\n        if (response.data?.discardNoumReference) {\n          refetchReferences().then(() => {\n            addToast(\n              'success',\n              'none',\n              t('noumena.chamber_edit.delete_reference.success'),\n            );\n          });\n        }\n      } catch (err) {\n        addToast(\n          'error',\n          'none',\n          t('noumena.chamber_edit.add_reference.empty_title'),\n        );\n      }\n    },\n    [discardNoumReferenceMutation, refetchReferences, addToast],\n  );\n\n  const updateReference = useCallback(\n    async (id: string, payload: UpdateNoumReferencePayload) => {\n      try {\n        const response = await updateNoumReferenceMutation({\n          variables: {\n            referenceId: id,\n            payload,\n          },\n        });\n        if (response.data?.updateNoumReference) {\n          refetchReferences().then(() => {\n            addToast(\n              'success',\n              'none',\n              t('noumena.chamber_edit.edit_reference.success_message'),\n            );\n          });\n        }\n      } catch (err) {\n        addToast(\n          'error',\n          'none',\n          t('noumena.chamber_edit.add_reference.empty_title'),\n        );\n      }\n    },\n    [addToast, refetchReferences, updateNoumReferenceMutation],\n  );\n\n  return {\n    loading,\n    fetching,\n    onSubmitManualReference,\n    onSubmitAskForReference,\n    capacityOptions,\n    experienceId,\n    setExperienceId,\n    referenceId,\n    setReferenceId,\n    approveReference,\n    rejectReference,\n    discardReference,\n    updateReference,\n    referenceData,\n    fetchMoreReferences,\n    infiniteState,\n  };\n};\n\nexport default useReference;\n","import { useTranslation } from 'react-i18next';\nimport {\n  Modal,\n  ModalFooter,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { Button } from '@/components/Button';\nimport * as S from './styles';\nimport { type DiscardExperienceModalProps } from './types';\n\nexport const DiscardExperienceModal = ({\n  isOpen,\n  experienceId,\n  onClose,\n  handleCloseExperienceModal,\n  handleDeleteOption,\n}: DiscardExperienceModalProps) => {\n  const { t } = useTranslation();\n\n  const handleUpdateOptions = () => {\n    handleDeleteOption(experienceId);\n    handleCloseExperienceModal();\n    onClose();\n  };\n\n  return (\n    <Modal\n      testId=\"reference-delete-modal\"\n      open={isOpen}\n      onClose={onClose}\n      size={ModalSize.S}\n      disableBackdropClick\n    >\n      <ModalHeader>\n        {t(`noumena.chamber_edit.discard_experience.heading`)}\n      </ModalHeader>\n      <S.ModalDescription\n        style={{\n          textAlign: 'center',\n        }}\n        font=\"body-l\"\n        colorToken=\"--text-modal-neutral-default\"\n      >\n        {t(`noumena.chamber_edit.discard_experience.subheading`)}\n      </S.ModalDescription>\n      <ModalFooter flexDirection=\"column\" gap={16}>\n        <Button\n          size=\"full\"\n          intent=\"negative\"\n          testId=\"delete-reference-btn\"\n          onClick={handleUpdateOptions}\n        >\n          {t(`noumena.chamber_edit.discard_experience.discard`)}\n        </Button>\n        <Button\n          size=\"full\"\n          tertiary\n          testId=\"delete-reference-no-btn\"\n          onClick={onClose}\n        >\n          {t(`noumena.chamber_edit.discard_experience.discard_cancel`)}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default DiscardExperienceModal;\n","import { useMemo, useState, useEffect, useCallback } from 'react';\nimport { t } from 'i18next';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Controller, useForm } from 'react-hook-form';\nimport { type ManualNoumReferencePayload } from '@/apollo/generated/types';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from '@/components/ExtendedModal';\nimport { Icon } from '@/components/Icon';\nimport { TextField } from '@/components/TextField';\nimport { Dropdown } from '@/components/Dropdown';\nimport { TextArea } from '@/components/TextArea';\nimport { UploadMedia } from '@/features/upload/components';\nimport { Button } from '@/components/Button';\nimport { useWindowDimensions } from '@/hooks/dimensions';\nimport { Spacer } from '@/layout';\nimport { breakpoints } from '@/constants/devices';\nimport { mediaTypes } from '@/constants/fileTypes';\nimport ReferenceMedia from '../ReferenceMedia';\nimport { getCapacityLabelFromValue, getFileType } from '../helpers';\nimport { addManualReferenceSchema } from '../data';\nimport { type AddManualReferenceProps } from '../types';\n\nconst AddManualReference = ({\n  isOpen,\n  onClose,\n  capacityOptions,\n  referenceLoading,\n  onSubmitManualReference,\n}: AddManualReferenceProps) => {\n  const { width } = useWindowDimensions();\n  const isDesktop = useMemo(() => width > breakpoints.TABLET_L, [width]);\n  const isMobile = useMemo(() => width <= breakpoints.MOBILE_MAX, [width]);\n\n  const [, setMediaUploading] = useState(false);\n  const [media, setMedia] = useState('');\n  const [mediaDetail, setMediaDetail] = useState({\n    name: '',\n    type: '',\n    size: 0,\n  });\n\n  const {\n    reset,\n    control,\n    setValue,\n    handleSubmit: handleFormSubmit,\n    formState: { isValid },\n  } = useForm<ManualNoumReferencePayload>({\n    defaultValues: {\n      providerName: '',\n      referenceText: '',\n    },\n    resolver: yupResolver(addManualReferenceSchema),\n    mode: 'onTouched',\n    reValidateMode: 'onSubmit',\n  });\n\n  const handleClose = () => {\n    reset();\n    setMedia('');\n    onClose();\n  };\n\n  const handleSubmit = async () => {\n    await handleFormSubmit(onSubmitManualReference)();\n    handleClose();\n  };\n\n  useEffect(() => {\n    setValue('imageUrl', media);\n  }, [media, setValue]);\n\n  const handleSetMediaDetails = useCallback((e: File) => {\n    setMediaDetail({\n      name: e.name,\n      type: getFileType(e.type),\n      size: Number((Math.round(e.size) / 1000000).toPrecision(2)),\n    });\n  }, []);\n\n  const handleSetMediaUploading = useCallback((uploading: boolean) => {\n    setMediaUploading(uploading);\n  }, []);\n\n  return (\n    <Modal\n      open={!!isOpen}\n      onClose={handleClose}\n      testId=\"add-manual-reference-modal\"\n      isFullScreen={!isDesktop}\n      style={{\n        width: isDesktop ? 752 : undefined,\n      }}\n      hasBackButton\n      enableCloseButton\n      closeButtonStyles={{\n        enforceLeft: true,\n        transparentModalCloseButton: true,\n        defaultBtnForMobile: false,\n      }}\n      disableBackdropClick\n    >\n      <ModalHeader isFullScreen={!isDesktop}>\n        {t(`noumena.chamber_edit.add_reference.title`)}\n      </ModalHeader>\n      <ModalBody\n        style={{\n          textAlign: 'left',\n        }}\n        minHeight=\"55vh\"\n        isFullScreen={!isDesktop}\n        noFooter\n      >\n        <Spacer height={24} />\n        <Controller\n          control={control}\n          name=\"providerName\"\n          render={({\n            field: { value, onChange, onBlur },\n            fieldState: { error },\n          }) => (\n            <TextField\n              label={t(\n                'noumena.chamber_edit.add_reference.ask_for_a_reference.provider.full_name',\n              )}\n              onBlur={onBlur}\n              value={value}\n              onChange={onChange}\n              error={!!error?.message}\n              helperText={error?.message}\n            />\n          )}\n        />\n        <Spacer height=\"16px\" />\n        <Controller\n          control={control}\n          name=\"capacity\"\n          render={({ field: { value, onChange }, fieldState: { error } }) => (\n            <Dropdown\n              containerStyle={{\n                padding: '0',\n              }}\n              observerMinHeight=\"0px\"\n              hideIcons\n              placement=\"bottom-start\"\n              options={capacityOptions}\n              inputValue={value}\n              onSelectOption={(e) => {\n                onChange(e.value);\n              }}\n              usePopStyle={!isMobile}\n              renderContainerFromBottom={isMobile}\n            >\n              {({ inputProps, inputRef, toggle }) => (\n                <TextField\n                  readOnly\n                  {...inputProps}\n                  ref={inputRef}\n                  value={getCapacityLabelFromValue(value, capacityOptions)}\n                  label={t(\n                    'noumena.chamber_edit.add_reference.ask_for_a_reference.capacity',\n                  )}\n                  spellCheck=\"false\"\n                  error={!!error?.message}\n                  helperText={error?.message}\n                  rightIcon={\n                    <Icon\n                      name=\"chevron_down_m\"\n                      size={16}\n                      color=\"--icon-input-neutral-default\"\n                      onClick={toggle}\n                    />\n                  }\n                />\n              )}\n            </Dropdown>\n          )}\n        />\n        <Spacer height=\"16px\" />\n        <Controller\n          control={control}\n          name=\"referenceText\"\n          render={({\n            field: { value, onChange, onBlur },\n            fieldState: { error },\n          }) => (\n            <TextArea\n              label={t(\n                `noumena.chamber_edit.add_reference.ask_for_a_reference.reference_text`,\n              )}\n              autoResize\n              value={value}\n              onBlur={onBlur}\n              onChange={onChange}\n              error={!!error?.message}\n              helperText={error?.message}\n            />\n          )}\n        />\n        <Spacer height=\"16px\" />\n        {media ? (\n          <ReferenceMedia\n            mediaSrc={media}\n            clearMedia={() => setMedia('')}\n            mediaName={mediaDetail.name}\n            mediaSize={mediaDetail.size}\n            mediaType={mediaDetail.type}\n          />\n        ) : (\n          <UploadMedia\n            acceptedFileTypes={mediaTypes}\n            onUploading={handleSetMediaUploading}\n            maxSize={500}\n            setMediaDetail={handleSetMediaDetails}\n            onContentChange={setMedia}\n          />\n        )}\n        <Spacer height=\"16px\" />\n      </ModalBody>\n      <ModalFooter isFullScreen={!isDesktop} justifyContent=\"space-between\">\n        <Button\n          tertiary\n          testId=\"add-reference-cancel-action\"\n          size=\"full\"\n          softDisabled={referenceLoading}\n          disabled={!isValid}\n          onClick={handleClose}\n        >\n          {t(`noumena.cancel`)}\n        </Button>\n        <Spacer width={16} />\n        <Button\n          testId=\"add-reference-save-action\"\n          primary\n          size=\"full\"\n          softDisabled={referenceLoading}\n          disabled={!isValid}\n          onClick={handleSubmit}\n        >\n          {t('noumena.button.save')}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default AddManualReference;\n","import { useMemo } from 'react';\nimport { t } from 'i18next';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Controller, useForm } from 'react-hook-form';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from '@/components/ExtendedModal';\nimport { Icon } from '@/components/Icon';\nimport { TextField } from '@/components/TextField';\nimport { Dropdown } from '@/components/Dropdown';\nimport { Button } from '@/components/Button';\nimport { TSpan } from '@/components/Typography';\nimport { useWindowDimensions } from '@/hooks/dimensions';\nimport { Spacer } from '@/layout';\nimport { breakpoints } from '@/constants/devices';\nimport { type AskForReferencePayload } from '@/apollo/generated/types';\nimport { askForReferenceSchema } from '../data';\nimport { type AskForReferenceProps } from '../types';\nimport { getCapacityLabelFromValue } from '../helpers';\n\nconst AskForReference = ({\n  isOpen,\n  onClose,\n  capacityOptions,\n  referenceLoading,\n  onSubmitAskForReference,\n}: AskForReferenceProps) => {\n  const { width } = useWindowDimensions();\n  const isDesktop = useMemo(() => width > breakpoints.TABLET_L, [width]);\n  const isMobile = useMemo(() => width <= breakpoints.MOBILE_MAX, [width]);\n\n  const {\n    reset,\n    control,\n    handleSubmit: handleFormSubmit,\n    formState: { isValid },\n  } = useForm<AskForReferencePayload>({\n    defaultValues: {\n      providerName: '',\n      providerEmail: '',\n    },\n    resolver: yupResolver(askForReferenceSchema),\n    mode: 'onTouched',\n    reValidateMode: 'onSubmit',\n  });\n\n  const handleClose = () => {\n    reset();\n    onClose();\n  };\n\n  const handleSubmit = async () => {\n    await handleFormSubmit(onSubmitAskForReference)();\n    handleClose();\n  };\n\n  return (\n    <Modal\n      open={!!isOpen}\n      onClose={handleClose}\n      testId=\"ask-for-reference-modal\"\n      isFullScreen={!isDesktop}\n      style={{\n        width: isDesktop ? 752 : undefined,\n      }}\n      hasBackButton\n      enableCloseButton\n      closeButtonStyles={{\n        enforceLeft: true,\n        transparentModalCloseButton: true,\n        defaultBtnForMobile: false,\n      }}\n      disableBackdropClick\n    >\n      <ModalHeader isFullScreen={!isDesktop}>\n        {t('noumena.chamber_edit.add_reference.ask_for_a_reference')}\n      </ModalHeader>\n      <ModalBody\n        style={{\n          textAlign: 'left',\n        }}\n        minHeight=\"55vh\"\n        isFullScreen={!isDesktop}\n        noFooter\n      >\n        <TSpan font=\"body-l\" colorToken=\"--text-modal-neutral-default\">\n          {t(\n            'noumena.chamber_edit.add_reference.ask_for_a_reference.description',\n          )}\n        </TSpan>\n        <Spacer height={24} />\n        <Controller\n          control={control}\n          name=\"providerName\"\n          render={({\n            field: { value, onChange, onBlur },\n            fieldState: { error },\n          }) => (\n            <TextField\n              label={t(\n                'noumena.chamber_edit.add_reference.ask_for_a_reference.provider.full_name',\n              )}\n              onBlur={onBlur}\n              value={value}\n              onChange={onChange}\n              error={!!error?.message}\n              helperText={error?.message}\n            />\n          )}\n        />\n        <Spacer height=\"16px\" />\n        <Controller\n          control={control}\n          name=\"capacity\"\n          render={({ field: { value, onChange }, fieldState: { error } }) => (\n            <Dropdown\n              containerStyle={{\n                padding: '0',\n              }}\n              observerMinHeight=\"0px\"\n              hideIcons\n              placement=\"bottom-start\"\n              options={capacityOptions}\n              inputValue={value}\n              onSelectOption={(e) => {\n                onChange(e.value);\n              }}\n              usePopStyle={!isMobile}\n              renderContainerFromBottom={isMobile}\n            >\n              {({ inputProps, inputRef, toggle }) => (\n                <TextField\n                  readOnly\n                  {...inputProps}\n                  ref={inputRef}\n                  value={getCapacityLabelFromValue(value, capacityOptions)}\n                  label={t(\n                    'noumena.chamber_edit.add_reference.ask_for_a_reference.capacity',\n                  )}\n                  spellCheck=\"false\"\n                  error={!!error?.message}\n                  helperText={error?.message}\n                  rightIcon={\n                    <Icon\n                      name=\"chevron_down_m\"\n                      size={16}\n                      color=\"--icon-input-neutral-default\"\n                      onClick={toggle}\n                    />\n                  }\n                />\n              )}\n            </Dropdown>\n          )}\n        />\n        <Spacer height=\"16px\" />\n        <Controller\n          control={control}\n          name=\"providerEmail\"\n          render={({\n            field: { value, onChange, onBlur },\n            fieldState: { error },\n          }) => (\n            <TextField\n              label={t(\n                'noumena.chamber_edit.add_reference.ask_for_a_reference.provider.email',\n              )}\n              value={value}\n              onBlur={onBlur}\n              onChange={onChange}\n              error={!!error?.message}\n              helperText={error?.message}\n            />\n          )}\n        />\n        <Spacer height=\"16px\" />\n        <Spacer height=\"16px\" />\n      </ModalBody>\n      <ModalFooter isFullScreen={!isDesktop} justifyContent=\"space-between\">\n        <Button\n          tertiary\n          testId=\"add-reference-cancel-action\"\n          size=\"full\"\n          softDisabled={referenceLoading}\n          disabled={!isValid}\n          onClick={handleClose}\n        >\n          {t(`noumena.cancel`)}\n        </Button>\n        <Spacer width={16} />\n        <Button\n          testId=\"add-reference-save-action\"\n          primary\n          size=\"full\"\n          softDisabled={referenceLoading}\n          disabled={!isValid}\n          onClick={handleSubmit}\n        >\n          {t('noumena.button.save')}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default AskForReference;\n","import { useCallback, useState, useEffect } from 'react';\nimport { useReference } from '@/features/noums/hooks/references';\nimport { Icon } from '@/components/Icon';\n\nimport { Button } from '@/components/Button';\nimport { ElementWrapper } from '@/screens/Chamber/components/ElementWrapper/ElementWrapper';\nimport { useLaunchDarkly } from '@/hooks';\nimport { TSpan } from '@/components/Typography';\nimport {\n  type SingleArrayOptionProps,\n  HomeChamberOptions,\n} from '../HomeChamberOptions';\nimport { useHomeChambers } from './useHomeChambers';\nimport AddExperience from './modals/AddExperience';\nimport { ViewExperience } from './modals/ViewExperience';\nimport DiscardExperience from './modals/DiscardExperience';\nimport AddManualReference from './modals/AddManualReference';\nimport AskForReference from './modals/AskForReference';\nimport {\n  HomeChambersWrapper,\n  ImageWrapper,\n  StyledText,\n  ButtonWrapper,\n  StackWrapper,\n  IconWrapper,\n  HomeNoumAddContianer,\n} from './styles';\nimport { type HomeChamberProps } from './types';\n\nconst HomeChambers = ({\n  image,\n  text,\n  buttonText,\n  elementType,\n  isEditing,\n  isBorder,\n  wrapperProps,\n  spaceId,\n  position,\n  bodyContentJson,\n  elementId,\n  hideContent,\n  isHighlight,\n  columnWidth,\n}: HomeChamberProps) => {\n  const {\n    showExperienceModal,\n    handleOpenExperienceModal,\n    handleCloseExperienceModal,\n    isAddedOption,\n    arrayOfOption,\n    handleAddOption,\n    handleMoveTopOption,\n    handleMoveDownOption,\n    title,\n    handleDeleteOption,\n    defaultData,\n    setDefaultData,\n    showReferenceModal,\n    handleCloseAddReferenceModal,\n    handleOpenAddReferenceModal,\n    updateElementLoader,\n  } = useHomeChambers({\n    elementType,\n    spaceId,\n    elementPosition: position,\n    bodyContentJson,\n    elementId,\n  });\n  const {\n    loading: referenceLoading,\n    fetching: referenceFetching,\n    setExperienceId,\n    approveReference,\n    rejectReference,\n    discardReference,\n    updateReference,\n    referenceData,\n    fetchMoreReferences,\n    infiniteState,\n    capacityOptions,\n    onSubmitAskForReference,\n    onSubmitManualReference,\n    experienceId,\n  } = useReference();\n\n  const {\n    flags: { noumEditor2 },\n  } = useLaunchDarkly();\n\n  useEffect(() => {\n    if (defaultData.id) {\n      setExperienceId(defaultData.id);\n    }\n  }, [defaultData.id, setExperienceId]);\n\n  const [showDiscardExperienceModal, setShowDiscardExperienceModal] =\n    useState(false);\n  const [selectedOption, setSelectedOption] = useState<\n    SingleArrayOptionProps | undefined\n  >(undefined);\n\n  const [showAll, setShowAll] = useState(!hideContent);\n\n  const handleSelectOption = useCallback(\n    (option: SingleArrayOptionProps) => {\n      setSelectedOption(option);\n      handleOpenExperienceModal();\n    },\n    [setSelectedOption, handleOpenExperienceModal],\n  );\n\n  const toggleShowDiscardExperienceModal = () => {\n    setShowDiscardExperienceModal(!showDiscardExperienceModal);\n  };\n\n  const createExperienceAndOpenModal = async () => {\n    await handleAddOption('', '', '', undefined);\n    handleOpenExperienceModal();\n  };\n\n  return (\n    <>\n      {!isAddedOption ? (\n        <ElementWrapper\n          isHighlight={isHighlight}\n          isBorder={isBorder}\n          {...wrapperProps}\n          currentTitle={title}\n          handleOpenExperienceModal={handleOpenExperienceModal}\n          hideContent={hideContent}\n        >\n          {noumEditor2 && isEditing ? (\n            <HomeNoumAddContianer>\n              <StackWrapper\n                padding=\"12px\"\n                fullWidth\n                align=\"center\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  handleOpenExperienceModal();\n                }}\n              >\n                <TSpan font=\"body-m-bold\"> {buttonText}</TSpan>\n                <IconWrapper>\n                  <Icon\n                    name=\"plus_m\"\n                    size={20}\n                    color=\"--icon-card-neutral-highlighted\"\n                  />\n                </IconWrapper>\n              </StackWrapper>\n            </HomeNoumAddContianer>\n          ) : (\n            <HomeChambersWrapper data-testid=\"homechambers-testid\">\n              <>\n                <ImageWrapper>\n                  <Icon\n                    name={image}\n                    size={96}\n                    color=\"--icon-placeholder-neutral-default\"\n                  />\n                </ImageWrapper>\n                <StyledText>{text}</StyledText>\n                {isEditing && (\n                  <ButtonWrapper>\n                    <Button\n                      secondary\n                      size=\"small\"\n                      type=\"button\"\n                      onClick={handleOpenExperienceModal}\n                    >\n                      {buttonText}\n                    </Button>\n                  </ButtonWrapper>\n                )}\n              </>\n            </HomeChambersWrapper>\n          )}\n        </ElementWrapper>\n      ) : (\n        <ElementWrapper\n          isHighlight={isHighlight}\n          isBorder={isBorder}\n          {...wrapperProps}\n          currentTitle={title}\n          setShowAll={setShowAll}\n          handleOpenExperienceModal={createExperienceAndOpenModal}\n          updateElementLoader={referenceLoading || updateElementLoader}\n        >\n          <HomeChamberOptions\n            isEditMode={isEditing}\n            arrayOfOptions={arrayOfOption}\n            handleMoveTopOption={handleMoveTopOption}\n            handleMoveDownOption={handleMoveDownOption}\n            handleOpenAddExperienceModal={handleOpenExperienceModal}\n            handleDeleteOption={handleDeleteOption}\n            handleSelectOption={handleSelectOption}\n            setDefaultData={setDefaultData}\n            isOpen={!showAll}\n            columnWidth={columnWidth}\n          />\n        </ElementWrapper>\n      )}\n      <AddManualReference\n        isOpen={showReferenceModal === 'manually'}\n        onClose={handleCloseAddReferenceModal}\n        capacityOptions={capacityOptions}\n        referenceLoading={referenceLoading}\n        onSubmitManualReference={onSubmitManualReference}\n      />\n      <AskForReference\n        isOpen={showReferenceModal === 'ask'}\n        onClose={handleCloseAddReferenceModal}\n        capacityOptions={capacityOptions}\n        referenceLoading={referenceLoading}\n        onSubmitAskForReference={onSubmitAskForReference}\n      />\n      <DiscardExperience\n        experienceId={experienceId}\n        isOpen={showDiscardExperienceModal}\n        onClose={toggleShowDiscardExperienceModal}\n        handleCloseExperienceModal={handleCloseExperienceModal}\n        handleDeleteOption={handleDeleteOption}\n      />\n      {showExperienceModal &&\n        (isEditing ? (\n          <AddExperience\n            elementType={elementType}\n            loading={referenceLoading || updateElementLoader}\n            onClose={handleCloseExperienceModal}\n            isOpen={showExperienceModal}\n            setShowDiscardExperienceModal={toggleShowDiscardExperienceModal}\n            {...{\n              handleOpenAddReferenceModal,\n              fetchMoreReferences,\n              approveReference,\n              rejectReference,\n              discardReference,\n              updateReference,\n              handleAddOption,\n              handleDeleteOption,\n              referenceFetching,\n              referenceData,\n              infiniteState,\n              defaultData,\n              isEditing,\n              title,\n              capacityOptions,\n            }}\n          />\n        ) : (\n          <ViewExperience\n            id={selectedOption?.id || ''}\n            title={selectedOption?.title || ''}\n            body={selectedOption?.body || ''}\n            onClose={handleCloseExperienceModal}\n            isOpen={showExperienceModal}\n          />\n        ))}\n    </>\n  );\n};\n\nexport default HomeChambers;\n","import { type ReactNode } from 'react';\nimport { type FontType, TSpan } from '@/components/Typography/Typography';\nimport * as S from './styles';\n\ninterface ButtonLinkProps {\n  children: ReactNode;\n  onClick: () => void;\n  font?: FontType;\n  colorToken?: string;\n}\n\nexport function ButtonLink({\n  children,\n  font,\n  colorToken,\n  ...buttonProps\n}: ButtonLinkProps) {\n  return (\n    <S.ButtonLink {...buttonProps}>\n      <TSpan font={font} colorToken={colorToken}>\n        {children}\n      </TSpan>\n    </S.ButtonLink>\n  );\n}\n","import { useGetSubWalletBalanceQuery } from '@/apollo/graphql/queries/paymentAccounts.generated';\nimport { ElementStatusEnum } from '@/apollo/generated/types';\nimport { useAuth } from '@/features/auth/contexts';\n\nexport const useSubWalletAccounts = (spaceId: string, walletStatus: string) => {\n  const { isUnregistered } = useAuth();\n\n  const { data, loading, refetch } = useGetSubWalletBalanceQuery({\n    variables: {\n      chamberId: spaceId,\n    },\n    skip: isUnregistered || walletStatus !== ElementStatusEnum.Published,\n  });\n\n  return {\n    subWalletData: {\n      subWalletBalance: data?.getSubWalletBalance?.amount,\n      id: data?.getSubWalletBalance?.id,\n      loading,\n    },\n    refetch,\n  };\n};\n","import React, { useEffect, useMemo, useState } from 'react';\n\nimport {\n  ConnectionRequestTypeEnum,\n  ProjectChamberType,\n  SpaceTypeEnum,\n} from '@/apollo/generated/types';\nimport { useNoumContext } from '@/screens/Chamber/ViewChamber/ChamberProvider';\nimport { useWindowDimensions } from '@/hooks';\nimport { type MessagePayload } from '@/services/rest/firebase';\nimport { Stack } from '@/layout';\nimport { breakpoints } from '@/constants/devices';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useRequestConnectionHelper } from '@/features/noums/hooks/spaceQuery';\nimport { usePushNotification } from '@/features/push-notifications/contexts/PushNotification';\nimport { NoumUserConnection } from './NoumUserConnection';\nimport { NoumRequestConnection } from './NoumRequestConnection';\nimport { NoumUserFollow } from './NoumUserFollow';\nimport { UserActionMode } from './types';\nimport { NoumSendMessage } from './NoumSendMessage';\nimport { RiseNoumUserApplyButton } from './RiseNoumUserApplyButton';\nimport RiseApplicationActions from '../../../ProfileSummary/RiseApplicationV2/RiseApplicationActions';\n\nexport const NoumEditorUserActions: React.FC = () => {\n  const {\n    spaceId,\n    connectionStatus,\n    projectType,\n    mainSpaceId,\n    noumType,\n    isOwner,\n    setConnectionStatus,\n    space,\n    onHandleConnection,\n    loadingConnectionStatus,\n    userActionMode,\n    loadingSpace,\n    loading,\n    onRefetchSpaceById,\n    isConnected,\n  } = useNoumContext();\n\n  const { isUnregistered } = useAuth();\n\n  // clinet state. It will be true instantly when user connected to space\n  const [isUnregisteredUserConnected, setIsUnregisterUserConneccted] =\n    useState(false);\n\n  const { requestConnectionHelper, loading: connectionLoading } =\n    useRequestConnectionHelper();\n\n  const windowSize = useWindowDimensions();\n\n  const isMobile = useMemo(\n    () => windowSize.width <= breakpoints.MOBILE_L,\n    [windowSize.width],\n  );\n\n  const { onForegroundMessage } = usePushNotification();\n\n  const inLoadingState = connectionLoading || loading || loadingSpace;\n\n  const spaceCanBeConnected =\n    !space?.isConnected &&\n    !!space?.enableAds &&\n    !!spaceId &&\n    !isUnregisteredUserConnected; // client state for is connected\n\n  const allowUserToAutoConnect = isUnregistered && !!mainSpaceId;\n\n  // Functionality for SEO enabled noums. Auto connect unregistered user to noum when user lands first time on page\n  useEffect(() => {\n    const connct = async () => {\n      if (allowUserToAutoConnect && spaceCanBeConnected && !inLoadingState) {\n        requestConnectionHelper(mainSpaceId, spaceId);\n        setIsUnregisterUserConneccted(true);\n        onRefetchSpaceById();\n      }\n    };\n    connct();\n  }, [\n    allowUserToAutoConnect,\n    inLoadingState,\n    mainSpaceId,\n    onRefetchSpaceById,\n    requestConnectionHelper,\n    spaceCanBeConnected,\n    spaceId,\n  ]);\n\n  useEffect(\n    () =>\n      onForegroundMessage((message: MessagePayload) => {\n        const chamberIdFromNotification = message.data?.chamberId;\n        if (chamberIdFromNotification === spaceId) {\n          switch (message.data?.pnId) {\n            case 'connectionInviteAccepted':\n              setConnectionStatus(ConnectionRequestTypeEnum.Approved);\n              break;\n            case 'connectionInviteDeclined':\n              setConnectionStatus(ConnectionRequestTypeEnum.Declined);\n              break;\n          }\n        }\n      }),\n    [onForegroundMessage, setConnectionStatus, spaceId],\n  );\n\n  return (\n    <Stack gap={12} fullWidth={isMobile}>\n      {/*  space.category rise apply now button */}\n      {space?.category?.name === 'Rise' && isConnected && (\n        <RiseNoumUserApplyButton isNoumEditor />\n      )}\n      {spaceId !== mainSpaceId &&\n        !isOwner &&\n        noumType !== SpaceTypeEnum.Home &&\n        projectType !== ProjectChamberType.Secret &&\n        space?.category?.name !== 'Rise' && <NoumUserFollow isNoumEditor />}\n      {noumType === SpaceTypeEnum.Home && space?.uid?._id ? (\n        <NoumSendMessage ownerId={space.uid._id} isNoumEditor />\n      ) : null}\n      {userActionMode === UserActionMode.handleConnection && (\n        <NoumUserConnection\n          onHandle={onHandleConnection!}\n          loading={loadingConnectionStatus}\n          isNoumEditor\n        />\n      )}\n      {userActionMode === UserActionMode.handleRequest && (\n        <NoumRequestConnection\n          connectionStatus={connectionStatus}\n          onHandle={onHandleConnection!}\n          loading={loadingConnectionStatus}\n          isNoumEditor\n        />\n      )}\n      {isConnected && space?.type === SpaceTypeEnum.RiseApplication && (\n        <RiseApplicationActions />\n      )}\n    </Stack>\n  );\n};\n","import { t } from 'i18next';\nimport React, { useCallback, useEffect, useMemo, useRef } from 'react';\nimport { useNavigate } from 'react-router';\n\nimport { compact } from 'lodash';\nimport {\n  type NoumLink,\n  SpaceStatusEnum,\n  SpaceTypeEnum,\n} from '@/apollo/generated/types';\nimport {\n  Dropdown,\n  type DropdownTargetProps,\n  type DropdownValueType,\n} from '@/components/Dropdown';\nimport { Icon } from '@/components/Icon';\nimport ROUTES from '@/constants/routes';\nimport { ContractToolRoutes } from '@/features/contracts/utils/routes';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useWindowDimensions } from '@/hooks';\nimport { useCheckChamberCanBeUnArchived } from '@/features/money/hooks';\nimport { useLaunchDarkly } from '@/hooks/launchDarkly';\nimport { ChamberUnarchiveModal } from '@/screens/Chamber/components/modals/ChamberArchive/ChamberUnarchiveModal';\nimport HandleUnlinkNoum from '@/screens/Chamber/components/modals/LinkNoum/HandleUnlinkNoum';\nimport LinkNoum from '@/screens/Chamber/components/modals/LinkNoum/LinkNoumModal';\nimport { type HandleUnlinkNoumRef } from '@/screens/Chamber/components/modals/LinkNoum/types';\nimport { useGetNoumByLinkContext } from '@/screens/Chamber/components/RightPanel/NoumByLinkProvider';\nimport { useNoumContext } from '@/screens/Chamber/ViewChamber/ChamberProvider';\nimport EllipsisMenu from '@/screens/Chambers/EllipsisMenu';\nimport SetupNoumModal from '@/screens/Plan/SetupNoumModal';\nimport { Button } from '@/components/Button';\nimport { Stack } from '@/layout';\nimport { breakpoints } from '@/constants/devices';\nimport { useChangeProjectChamberStatusHelper } from '@/features/noums/hooks/noums';\nimport { useModalManager } from '@/hooks/modal/useModalManager';\nimport { EllipsisWrapper, NoumActionButton, RowContainer } from './styles';\nimport { type NoumEditorOwnerActionsProps } from './types';\nimport { ManageMembersModal } from '../../../modals/ManageMembersModal';\nimport RiseApplicationActions from '../../../ProfileSummary/RiseApplicationV2/RiseApplicationActions';\n\ntype ModalType =\n  | 'link-noum'\n  | 'unarchive'\n  | 'setup-slot-for-noum'\n  | 'manage-members';\n\nexport const NoumEditorOwnerActions: React.FC<NoumEditorOwnerActionsProps> = ({\n  onEdit,\n}) => {\n  const navigate = useNavigate();\n  const handleUnlinkNoumRef = useRef<HandleUnlinkNoumRef>(null);\n  const { isActive: isUserActive } = useAuth();\n  const { spaceId, isArchived, space, editDisabled, onRefetchSpaceById } =\n    useNoumContext();\n\n  const { modalType, openModal, closeModal } = useModalManager<ModalType>();\n\n  const {\n    flags: {\n      paymentSubscriptions,\n      invoiceTool,\n      contractTool,\n      elementPermission,\n    },\n  } = useLaunchDarkly();\n\n  const windowSize = useWindowDimensions();\n\n  const { noumLinkData, refetch, getLinkData, loadingLinked } =\n    useGetNoumByLinkContext();\n\n  const isMobile = useMemo(\n    () => windowSize.width <= breakpoints.MOBILE_L,\n    [windowSize.width],\n  );\n\n  useEffect(() => {\n    getLinkData(spaceId || '');\n  }, [getLinkData, spaceId]);\n\n  const getNoumLink = useMemo(\n    () => noumLinkData?.getNoumLinkByNoumId,\n    [noumLinkData],\n  );\n\n  const isNoumLinked = !!getNoumLink?.link?._id;\n\n  const { changeProjectChamberStatusHelper } =\n    useChangeProjectChamberStatusHelper();\n\n  const { checkChamberCanBeUnArchived } = useCheckChamberCanBeUnArchived();\n\n  const handleUnarchive = useCallback(async () => {\n    if (spaceId) {\n      await changeProjectChamberStatusHelper(\n        spaceId,\n        SpaceStatusEnum.Published,\n        onRefetchSpaceById,\n      );\n    }\n  }, [spaceId, changeProjectChamberStatusHelper, onRefetchSpaceById]);\n\n  const handleSelectDropdown = (selectedDropdown?: string) => {\n    switch (selectedDropdown) {\n      case 'unlinked_noum':\n        if (getNoumLink?.link && getNoumLink.link.linkedNoumsCount > 2) {\n          handleUnlinkNoumRef.current?.toggleUnlinkMultipleNoum();\n        } else {\n          handleUnlinkNoumRef.current?.toggleUnlinkConfirmationOpen();\n        }\n        break;\n      case 'linked_noum':\n        openModal('link-noum');\n        break;\n      case 'new_invoice':\n        navigate({\n          pathname: '/invoice/create',\n          search: `?noumId=${spaceId}`,\n        });\n        break;\n      case 'new_contract':\n        navigate(ContractToolRoutes.createContract({ noumId: spaceId! }));\n        break;\n      case 'new_sow':\n        navigate(\n          ContractToolRoutes.createStatementOfWork({\n            noumId: spaceId!,\n          }),\n        );\n        break;\n      case 'manage_members':\n        openModal('manage-members');\n        break;\n    }\n  };\n\n  const handleGoToLinkNoum = useCallback(() => {\n    if (isNoumLinked) {\n      navigate(\n        `${ROUTES.LINK_NOUM}?linkID=${noumLinkData?.getNoumLinkByNoumId?.link?._id}`,\n      );\n    } else {\n      navigate(`${ROUTES.LINK_NOUM}?preselect=${spaceId}`);\n    }\n  }, [\n    isNoumLinked,\n    navigate,\n    noumLinkData?.getNoumLinkByNoumId?.link?._id,\n    spaceId,\n  ]);\n\n  const ellipsisMenuOptions = useMemo<DropdownValueType<string, string>[]>(\n    () =>\n      compact([\n        elementPermission && {\n          value: 'manage_members',\n          key: 'Manage Members',\n          type: 'value',\n          label: 'Manage Members',\n          icon: (\n            <Icon\n              name=\"groups_m\"\n              size={24}\n              color=\"--text-tablecell-header-neutral-highlighted\"\n            />\n          ),\n        },\n        {\n          value: 'linked_noum',\n          key: 'Linked Noum',\n          type: 'value',\n          label: t('noumena.link_noums.link_noums', {\n            linkNo: '',\n          }),\n          icon: (\n            <Icon\n              name=\"link_m\"\n              size={24}\n              color=\"--text-tablecell-header-neutral-highlighted\"\n            />\n          ),\n        },\n        isNoumLinked && {\n          value: 'unlinked_noum',\n          key: 'Unlink',\n          type: 'value',\n          label: t('noumena.link_noums.unlink'),\n          intent: 'danger',\n          icon: (\n            <Icon\n              name=\"unlink_m\"\n              size={24}\n              color=\"--text-tablecell-header-danger-primary-highlighted\"\n            />\n          ),\n        },\n      ]),\n    [elementPermission, isNoumLinked],\n  );\n  const PlusMenuOptions = useMemo<DropdownValueType<string, string>[]>(\n    () =>\n      compact([\n        !!invoiceTool && {\n          value: 'new_invoice',\n          key: 'new_invoice',\n          type: 'value',\n          label: 'Invoice',\n        },\n        !!contractTool && {\n          value: 'new_contract',\n          key: 'new_contract',\n          type: 'value',\n          label: 'Contract',\n        },\n        !!contractTool && {\n          value: 'new_sow',\n          key: 'new_sow',\n          type: 'value',\n          label: 'SOW',\n        },\n      ]),\n    [contractTool, invoiceTool],\n  );\n\n  if (isArchived) {\n    return (\n      <>\n        <RowContainer data-testid=\"archived-noum-actions\">\n          <NoumActionButton\n            disabled={editDisabled}\n            size=\"full\"\n            secondary\n            onClick={() =>\n              checkChamberCanBeUnArchived(\n                spaceId,\n                () => openModal('unarchive'),\n                () => openModal('setup-slot-for-noum'),\n                space?.type,\n              )\n            }\n          >\n            {t('noumena.chamber.unarchive_button')}\n          </NoumActionButton>\n        </RowContainer>\n        {paymentSubscriptions && modalType === 'setup-slot-for-noum' && (\n          <SetupNoumModal\n            open={modalType === 'setup-slot-for-noum'}\n            onClose={closeModal}\n            chamberIdAfterCreatingNoum={spaceId!}\n          />\n        )}\n        <ChamberUnarchiveModal\n          isOpen={modalType === 'unarchive'}\n          handleClose={closeModal}\n          onUnarchive={handleUnarchive}\n        />\n      </>\n    );\n  }\n\n  if (space?.type === SpaceTypeEnum.RiseApplication) {\n    return (\n      <Stack\n        gap={16}\n        data-testid=\"rise-application-actions\"\n        fullWidth={isMobile}\n      >\n        <RiseApplicationActions />\n      </Stack>\n    );\n  }\n\n  return (\n    <>\n      <Stack gap={16} data-testid=\"edit-noum-actions\" fullWidth={isMobile}>\n        {ellipsisMenuOptions.length > 0 && (\n          <EllipsisWrapper className=\"ellipsis-menu\">\n            <EllipsisMenu\n              menuOptions={ellipsisMenuOptions}\n              size=\"full\"\n              onClick={handleSelectDropdown}\n              containerWidth=\"147\"\n              loadingLinked={loadingLinked}\n            />\n          </EllipsisWrapper>\n        )}\n        <Dropdown\n          containerWidth=\"max-content\"\n          hideIcons\n          closeOnSelect\n          onSelectOption={(v) => handleSelectDropdown(v.value)}\n          options={PlusMenuOptions}\n          isAnimation={false}\n          observerMinHeight=\"0\"\n          renderContainerFromBottom\n        >\n          {({\n            targetRef,\n            targetProps,\n            toggle,\n          }: DropdownTargetProps<HTMLButtonElement>) => (\n            <Button\n              ref={targetRef}\n              onClick={toggle}\n              {...targetProps}\n              secondary\n              size=\"large\"\n              leftIcon={<Icon name=\"plus_m\" size={24} />}\n            />\n          )}\n        </Dropdown>\n        <Button\n          disabled={!isUserActive}\n          size={isMobile ? 'full' : 'large'}\n          primary\n          leftIcon={\n            <Icon\n              name=\"edit_m\"\n              size={24}\n              color=\"--icon-button-neutral-alt-default\"\n            />\n          }\n          onClick={onEdit}\n        >\n          {t('noumena.chamber.edit_button')}\n        </Button>\n      </Stack>\n      <LinkNoum\n        goToNoumLink={handleGoToLinkNoum}\n        isOpen={modalType === 'link-noum'}\n        handleClose={closeModal}\n      />\n      <HandleUnlinkNoum\n        noumLink={getNoumLink?.link as NoumLink}\n        ref={handleUnlinkNoumRef}\n        space={space}\n        refetch={refetch}\n      />\n\n      <ManageMembersModal\n        isOpen={modalType === 'manage-members'}\n        handleClose={closeModal}\n      />\n    </>\n  );\n};\n","import { type FC, useCallback, useState } from 'react';\nimport { t } from 'i18next';\nimport Skeleton from 'react-loading-skeleton';\nimport { useNavigate } from 'react-router';\nimport { useNoumContext } from '@/screens/Chamber/ViewChamber/ChamberProvider';\nimport { Button } from '@/components/Button';\nimport { Icon } from '@/components/Icon';\nimport ROUTES from '@/constants/routes';\nimport { useBreakpoints, useLaunchDarkly, useWindowDimensions } from '@/hooks';\nimport { breakpoints } from '@/constants/devices';\nimport { NoumEditRestrictionModal } from '@/screens/Chamber/components/modals/NoumEditRestrictionModal';\nimport { Stack } from '@/layout';\nimport { NoumEditorUserActions } from './NoumEditorUserActions';\nimport { NoumEditorOwnerActions } from './NoumEditorOwnerActions';\nimport { ActionsWrapper } from './styles';\n\nexport const NoumEditorViewModeActions: FC = () => {\n  const {\n    flags: { noumEditor2 },\n  } = useLaunchDarkly();\n  const navigate = useNavigate();\n  const { isOwner, isMasterNoum, loadingSpace, space, editDisabled } =\n    useNoumContext();\n  const windowSize = useWindowDimensions();\n\n  const { isMobile } = useBreakpoints();\n\n  const [isRestrictionModalOpen, setRestrictionModalOpen] = useState(false);\n  const onEdit = useCallback(() => {\n    if (noumEditor2 && windowSize.width < breakpoints.LAPTOP) {\n      setRestrictionModalOpen(true);\n      return;\n    }\n    const uri = isMasterNoum\n      ? ROUTES.EDIT_HOME_NOUM\n      : `/noum/${space?._id}/edit`;\n    navigate(uri);\n  }, [isMasterNoum, navigate, noumEditor2, space?._id, windowSize.width]);\n\n  if (loadingSpace) {\n    return (\n      <ActionsWrapper data-testid=\"view-mode-actions-skeleton\">\n        <Skeleton height={56} borderRadius={8} />\n      </ActionsWrapper>\n    );\n  }\n\n  return (\n    <>\n      {isOwner ? (\n        <>\n          {isMasterNoum ? (\n            <Stack fullWidth={isMobile}>\n              <Button\n                disabled={editDisabled}\n                size={isMobile ? 'full' : 'large'}\n                primary\n                leftIcon={\n                  <Icon\n                    name=\"edit_m\"\n                    size={24}\n                    color=\"--icon-button-neutral-alt-default\"\n                  />\n                }\n                onClick={onEdit}\n              >\n                {t('noumena.chamber.edit_button')}\n              </Button>\n            </Stack>\n          ) : (\n            <NoumEditorOwnerActions onEdit={onEdit} />\n          )}\n          {noumEditor2 && (\n            <NoumEditRestrictionModal\n              isOpen={isRestrictionModalOpen}\n              onClose={() => setRestrictionModalOpen(false)}\n            />\n          )}\n        </>\n      ) : (\n        <NoumEditorUserActions />\n      )}\n    </>\n  );\n};\n\nexport default NoumEditorViewModeActions;\n","import styled, { css } from 'styled-components';\n\nconst bordered = css`\n  border-radius: 16px;\n  border: solid 1px var(--border-card-neutral-highlighted);\n  padding: 8px;\n`;\nexport const StyledFlexRow = styled.div<{\n  gap?: number;\n  justify?: string;\n  align?: string;\n  fullWidth?: boolean;\n}>`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  gap: ${({ gap }) => `${gap || 0}px`};\n  justify-content: ${({ justify }) => `${justify || 'center'}`};\n  align-items: ${({ align }) => `${align || 'center'}`};\n  ${({ fullWidth }) => fullWidth && 'width: 100%;'};\n  & span > span.react-loading-skeleton {\n    line-height: unset;\n  }\n`;\n\nexport const StyledFlexRowBordered = styled(StyledFlexRow)`\n  width: 100%;\n  ${bordered};\n`;\n\nexport const StyledFlexColumn = styled(StyledFlexRow)`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledFlexColumnBordered = styled(StyledFlexColumn)`\n  display: flex;\n  flex-direction: column;\n  ${bordered};\n`;\n","import styled, { css } from 'styled-components';\nimport { Card } from '@/components/Card';\nimport {\n  bodyTypography,\n  headingTypography,\n  badgeCountTypography,\n  systemInfoSmallTypography,\n  TSpan,\n} from '@/components/Typography';\nimport { mediaSizesForNoumLayout, sizes } from '@/constants/devices';\nimport { Icon } from '@/components/Icon';\nimport { Button } from '@/components/Button';\nimport { Stack } from '@/layout';\nimport { StyledFlexRow } from '../elements/SkeletonLoader/styled';\n\nexport const ProfileSummaryDescription = styled.span<{ isMobile: boolean }>`\n  padding-top: ${({ isMobile }) => (isMobile ? 0 : 24)}px;\n  color: var(--text-card-header-neutral-highlighted);\n  word-break: break-word;\n  font-family: var(--font-body-medium-regular-font);\n`;\n\nexport const ProfileSummaryContainer = styled.div`\n  width: 100%;\n  @media (min-width: ${sizes.TABLET}) and (max-width: ${sizes.LAPTOP}) {\n    max-width: calc(100vw - 32px);\n  }\n`;\n\nexport const ProfileSummaryLocation = styled.span`\n  display: block;\n  ${bodyTypography.bodyMediumBold}\n  color: var(--text-card-neutral-default);\n`;\n\nexport const ProfileSummaryHead = styled.span`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 24px;\n  color: var(--text-card-header-neutral-default);\n  ${bodyTypography.bodyMedium}\n  @media (max-width: ${sizes.MOBILE_L}) {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 16px;\n    padding-bottom: 16px;\n  }\n`;\n\nexport const StyledCard = styled(Card)`\n  padding: 24px;\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    padding: 16px;\n    border-radius: 0px;\n  }\n`;\n\nexport const ProfileSummaryDataContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  flex: 1 60%;\n  position: relative;\n`;\n\nexport const FavouriteIcon = styled(Icon)<{ isMobile?: boolean }>`\n  ${({ isMobile }) => isMobile && `margin-top: 10px;`}\n  ${({ isMobile }) => !isMobile && `position: absolute;`}\n  ${({ isMobile }) => !isMobile && `top: 0px;`}\n  ${({ isMobile }) => !isMobile && `right: 0px;`}\n`;\n\nexport const TagSection = styled.span`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n`;\n\nexport const ProfileSummaryNameAndFavouritesContainer = styled.span<{\n  disabled?: boolean;\n}>`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const ProfileSummaryName = styled.span<{ disabled?: boolean }>`\n  display: flex;\n  flex-direction: column;\n  margin-top: 8px;\n  color: var(--text-card-header-neutral-highlighted);\n  ${headingTypography.headingMediumBold};\n  ${({ disabled }) =>\n    disabled &&\n    `color: var(--text-card-header-neutral-default);\n    `}\n  word-break: break-word;\n`;\n\nexport const CompletenessWrapper = styled.div`\n  margin-top: 16px;\n\n  display: none;\n\n  @media (max-width: ${sizes.TABLET_L}) {\n    display: block;\n  }\n`;\nexport const NoumHeaderAdditionalDetails = styled.div<{ isEdit?: boolean }>`\n  display: flex;\n  gap: 8px;\n  @media (max-width: ${mediaSizesForNoumLayout.LAPTOP_S_MIN}) {\n    ${({ isEdit }) =>\n      isEdit &&\n      `gap: 3px\n    `};\n  }\n`;\n\nexport const OwnerSection = styled.div`\n  display: none;\n  padding-top: 17px;\n  & > div {\n    display: inline-flex;\n    align-items: center;\n    gap: 8px;\n    color: var(--text-card-header-neutral-highlighted);\n    padding-top: 2px;\n  }\n  hr {\n    background-color: var(--bg-separator-neutral-default);\n    width: 100%;\n  }\n`;\n\nexport const AvatarContainer = styled.div``;\n\nexport const StyledProfileAvatar = styled.img`\n  @media (max-width: ${sizes.MOBILE_L}) {\n    width: 100%;\n    border-radius: 16px;\n  }\n`;\n\nexport const ProfileSummaryEdit = styled.div`\n  flex-grow: 1;\n  align-self: stretch;\n  vertical-align: top;\n  display: flex;\n  justify-content: end;\n`;\n\nexport const CQTokenContainer = styled.div<{\n  isMobile: boolean;\n  width?: string;\n}>`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: ${(props) => (props.isMobile ? 'column' : 'row')};\n  gap: 16px;\n  width: ${({ width }) => width || 'auto'};\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    gap: 0;\n  }\n`;\n\nexport const GrayBox = styled.div<{ order?: number; isVisitor?: true }>`\n  display: flex;\n  padding: ${({ isVisitor }) => (isVisitor ? '12px 16px 12px 16px' : '16px')};\n  height: ${({ isVisitor }) => (isVisitor ? '54px' : 'auto')};\n  max-width: 359px;\n  border: 1px solid var(--border-card-neutral-highlighted);\n  border-radius: 8px;\n  gap: 16px;\n  order: ${({ order }) => order || 0};\n  flex-grow: 1;\n  box-sizing: border-box;\n  justify-content: space-between;\n\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    width: calc(100vw - 32px);\n    height: auto;\n    border: unset;\n    border-top: 1px solid var(--border-card-neutral-highlighted);\n    border-radius: unset;\n    padding: 16px 0;\n  }\n  @media (min-width: ${sizes.TABLET}) and (max-width: ${sizes.LAPTOP}) {\n    width: 330px;\n    box-sizing: border-box;\n  }\n`;\n\nexport const TokenBoxTitle = styled(TSpan)`\n  height: 22px;\n  padding-top: 9.5px;\n`;\n\nexport const CQBoxTitle = styled(TSpan)`\n  height: 22px;\n`;\n\nexport const GrayBoxValue = styled(TSpan)`\n  width: 71px;\n  height: 39px;\n  flex: none;\n  flex-grow: 0;\n`;\n\nexport const CQFooterBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0px;\n  gap: 4px;\n  height: 19px;\n  flex: none;\n  flex-grow: 0;\n`;\n\nexport const HelperTextWrapper = styled(TSpan)`\n  width: 72px;\n  flex: none;\n  flex-grow: 0;\n`;\nexport const WarningTextWrapper = styled(TSpan)`\n  text-align: center;\n  width: 72px;\n  flex: none;\n  flex-grow: 0;\n  margin-right: 4px;\n  white-space: nowrap;\n`;\n\nexport const PrivacyDropdownSelectedValue = styled.input`\n  border: 0;\n  color: var(--text-card-neutral-default);\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  outline: none;\n  display: inline-flex;\n  align-items: center;\n  font-family: var(--font-family);\n  width: 24%;\n`;\n\nexport const RightIcon = styled(Icon)<{ isOpen?: boolean }>`\n  transition: transform 0.3s;\n  ${({ isOpen }) => isOpen && 'transform: rotate(180deg)'};\n`;\n\nexport const CQBoxVisitor = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    flex-direction: column;\n  }\n`;\n\nexport const NoumStatusIcon = styled(Icon)`\n  margin-bottom: 5px;\n`;\n\nexport const NoumEditorProfileBanner = styled.img`\n  width: 100%;\n  height: 273px;\n  background-size: cover;\n  border-radius: 12px;\n`;\n\nexport const NoumEditorHead = styled.span<{ isCoverPhoto?: boolean }>`\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  align-items: end;\n  ${({ isCoverPhoto }) => isCoverPhoto && 'margin-top: -15px;'};\n  gap: 24px;\n  color: var(--text-card-header-neutral-default);\n  ${bodyTypography.bodyMedium}\n  @media (max-width: ${sizes.TABLET_L}) {\n    ${({ isCoverPhoto }) => !isCoverPhoto && 'padding: 16px;'};\n  }\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    align-items: center;\n    gap: 16px;\n    margin-top: 16px;\n  }\n`;\n\nexport const NoumEditorEdit = styled.div`\n  flex-grow: 1;\n  align-self: end;\n  vertical-align: top;\n  display: flex;\n  justify-content: end;\n`;\n\nexport const ProfilePictureHeader = styled.div<{ isCoverPhoto?: boolean }>`\n  width: 128px;\n  ${({ isCoverPhoto }) => isCoverPhoto && 'margin-left: 16px;'};\n  @media (max-width: ${sizes.MOBILE_L}) {\n    width: 80px;\n  }\n`;\n\nexport const NoumsMemberButton = styled(Button)<{ enableClick?: boolean }>`\n  ${({ enableClick }) =>\n    enableClick &&\n    css`\n      &:hover * {\n        color: var(--text-button-neutral-pressed);\n      }\n    `}\n`;\n\nexport const FavWrapper = styled.div`\n  .favrouites {\n    position: relative;\n  }\n  @media (max-width: ${sizes.MOBILE_L}) {\n    position: absolute;\n    top: -17px;\n    right: 10px;\n  }\n`;\n\nexport const NoumEditorStyledCard = styled(Card)`\n  padding: 24px;\n  @media (max-width: ${sizes.TABLET}) {\n    padding: 0px 0px 16px 0px;\n    border-radius: 0px;\n  }\n`;\n\nexport const TagWrapper = styled(Stack)`\n  color: var(--text-badge-neutral-default);\n  background: var(--bg-badge-neutral-default);\n  border-radius: 8px;\n  border-color: var(--border-badge-neutral-default);\n  cursor: pointer;\n`;\n\nexport const TagInComplete = styled.div`\n  color: var(--text-card-neutral-alt-default);\n  background: var(--color-base-solid-orange);\n  border-color: var(--border-badge-neutral-default);\n  border-radius: 8px;\n  width: max-content;\n  padding: 2px 6px;\n  ${badgeCountTypography.badgeCount}\n`;\n\nexport const InCompleteIconContainer = styled.div`\n  background: var(--bg-badge-danger-warning-primary);\n  border-color: var(--border-badge-neutral-default);\n  border-radius: 50%;\n  width: max-content;\n  padding: 2px;\n`;\n\nexport const TooltipWrapper = styled.div<{ isLeft?: boolean }>`\n  &[data-title]:hover::after {\n    content: attr(data-title);\n    position: absolute;\n    background-color: var(--bg-tooltip-neutral-default);\n    color: var(--text-tooltip-neutral-alt-default);\n    padding: 6px 8px;\n    border-radius: 4px;\n    white-space: nowrap;\n    top: -28px;\n    left: ${({ isLeft }) => (isLeft ? '90px' : '-10px')};\n    ${systemInfoSmallTypography.systemInfoSmall}\n  }\n`;\n\nexport const InfoStackWrapper = styled.div<{ isSummaryDescription?: boolean }>`\n  display: flex;\n  gap: 24px;\n  flex-wrap: wrap;\n  @media (max-width: ${sizes.TABLET}) {\n    ${({ isSummaryDescription }) => isSummaryDescription && 'padding: 0 16px'};\n  }\n  ${StyledFlexRow}\n`;\n\nexport const OwnedWrapper = styled.div`\n  display: flex;\n  gap: 4px;\n  color: var(--text-card-neutral-default);\n`;\n","import { createContext, useContext } from 'react';\n\nimport { type NoumAuthorizationContextValues } from './types';\n\nexport const NoumAuthorizationContext =\n  createContext<NoumAuthorizationContextValues>({\n    role: null,\n    permissions: [],\n  });\n\nexport function useNoumAuthorizationContext() {\n  const context = useContext(NoumAuthorizationContext);\n\n  if (!context) {\n    throw new Error(\n      'useNoumAuthorizationContext must be called within NoumAuthorizationContext.',\n    );\n  }\n\n  return context;\n}\n","import {\n  type NoumRolePermissionLevel,\n  PermissibleElementType,\n} from '@/apollo/generated/types';\nimport { type NoumRolePermissionGroupForAuthorizationFragment } from '@/apollo/graphql';\n\nexport const defaultNoumRoleNames = [\n  'Noum Owner',\n  'Manager',\n  'Guest',\n  'Non-Member',\n  // TODO: Add more default role names\n] as const;\nexport type DefaultNoumRoleName = typeof defaultNoumRoleNames[number];\nexport type NoumRole =\n  | {\n      name: DefaultNoumRoleName;\n      isDefault: true;\n    }\n  | {\n      name: string;\n      isDefault: false;\n    };\n\nexport const noumPermissions = [\n  'edit-noum',\n  'invite-users',\n  'assign-user-roles',\n  'custom-noum-preview',\n  'broadcast-noum',\n  'add-noum-element',\n  'remove-noum-element',\n  'set-noum-theme',\n  'publish-noum',\n  'set-noum-element-permissions',\n  'link-noums',\n  'connect-in-unpublished-mode',\n  'subscribe',\n] as const;\nexport type NoumPermissionName = typeof noumPermissions[number];\n\nexport type NoumPermission = {\n  level: NoumRolePermissionLevel.Noum;\n  elementType: null;\n  permissionIDs: NoumPermissionName[];\n};\n\nexport const elementPermissionsMap = {\n  [PermissibleElementType.Calendar]: [\n    'create-event',\n    'invite-to-event',\n    'attend-event',\n    'host-event',\n    'cancel-event',\n  ],\n  [PermissibleElementType.FileManager]: [\n    'upload-file',\n    'download-any-file',\n    'download-files-only-uploaded-by-self',\n  ],\n  [PermissibleElementType.Image]: ['view-image-element'],\n  [PermissibleElementType.InvoiceTool]: [\n    'add-invoice-as-tool',\n    'delete-invoice-as-tool',\n    'add-invoice-within-tool',\n    'view-invoice',\n    'edit-invoice',\n    'download-invoice',\n    'delete-invoice',\n    'change-status-of-invoice',\n    'pay-invoice',\n    'confirm-invoice',\n    'share-invoice',\n  ],\n  [PermissibleElementType.Messages]: [\n    'create-new-message-conversation',\n    'create-new-group-message-conversation',\n  ],\n  [PermissibleElementType.Payment]: [\n    'create-wallet',\n    'connect-bank-account',\n    'add-card',\n    'send-payment',\n  ],\n  [PermissibleElementType.Posts]: [\n    'create-posts',\n    'view-posts',\n    'like-posts',\n    'comment-posts',\n  ],\n  [PermissibleElementType.QuickQuestions]: [\n    'view-quick-questions',\n    'add-quick-question',\n    'answer-quick-question',\n  ],\n  [PermissibleElementType.Text]: ['view-text-element'],\n  [PermissibleElementType.Video]: ['view-video-element'],\n  [PermissibleElementType.ContractTool]: [\n    'view-contract-element',\n    'add-contract-sow',\n    'edit-contract-sow',\n    'delete-contract-sow',\n    'view-owned-contracts-sows',\n  ],\n} as const;\n\nexport type ElementPermission<ElementType extends PermissibleElementType> =\n  typeof elementPermissionsMap[ElementType][number];\n\nexport type NoumElementPermission<ElementType extends PermissibleElementType> =\n  {\n    level: NoumRolePermissionLevel.Element;\n    elementType: ElementType;\n    permissionIDs: ElementPermission<ElementType>[];\n  };\n\nexport interface NoumAuthorizationContextValues {\n  role: NoumRole | null;\n  permissions: NoumRolePermissionGroupForAuthorizationFragment[];\n}\n","import { type CSSProperties } from 'react';\nimport { StyledSkeleton } from '@/components/ChamberBox/SkeletonChamberBox';\n\ninterface SizedSkeletonType extends CSSProperties {\n  w?: number | string;\n  h?: number | string;\n  r?: number;\n}\n\nexport const SizedSkeleton = ({\n  w = 128,\n  h = 128,\n  r = 8,\n  maxWidth,\n}: SizedSkeletonType) => (\n  <div\n    style={{\n      width: w,\n      height: h,\n      borderRadius: r,\n      maxWidth,\n      lineHeight: 'unset',\n    }}\n  >\n    <StyledSkeleton w={w} h={h} r={r} />\n  </div>\n);\n\nexport const SkeletonLoaderAvatar = () => (\n  <SizedSkeleton w={128} h={128} r={8} />\n);\n\nexport const SkeletonLoaderPost = () => <SizedSkeleton w={40} h={40} r={8} />;\nexport const SkeletonLoaderPostII = () => <SizedSkeleton w={56} h={56} r={8} />;\nexport const SkeletonLoaderImageInline = () => (\n  <SizedSkeleton w={117} h={64} r={8} />\n);\n","import { SizedSkeleton } from '@/screens/Chamber/components/elements/SkeletonLoader/StyledSkeletons';\nimport { StyledFlexColumn } from '@/screens/Chamber/components/elements/SkeletonLoader/styled';\n\nconst SkeletonLoaderParagraph = () => (\n  <StyledFlexColumn gap={8} style={{ width: '100%' }} align=\"baseline\">\n    <SizedSkeleton w=\"100%\" h={16} r={8} />\n    <SizedSkeleton w=\"100%\" h={16} r={8} />\n    <SizedSkeleton w=\"100%\" h={16} r={8} />\n    <SizedSkeleton w=\"50%\" h={16} r={8} />\n  </StyledFlexColumn>\n);\n\nexport default SkeletonLoaderParagraph;\n","import { type Maybe } from '@/apollo/generated/types';\nimport { type Dispatch, type SetStateAction } from 'react';\nimport { type RISE_FORM_KEYS } from '../../RightPanel/elements/RiseApplication/types';\n\nexport interface IRiseApplicationStatus {\n  status?: string | null;\n  isOwner: boolean;\n}\n\nexport enum RiseApplicationStepTranslationKey {\n  IDENTITY = 'noumena.rise.identity.step',\n  NATIVE = 'noumena.rise.native.step',\n  FINANCIAL = 'noumena.rise.finance.step',\n  BUSINESS = 'noumena.rise.business.step',\n  PRINCIPLES_YOU = 'noumena.rise.priciplesyou.step',\n  ESSAYS = 'noumena.rise.essay.step',\n}\n\nexport type CQStep = {\n  step: RiseApplicationStepTranslationKey;\n  url: string | null;\n  showCheckbox: boolean;\n};\n\nexport interface IRiseApplicationStep {\n  step: RiseApplicationStepTranslationKey;\n  noumId: Maybe<string> | undefined;\n  refreshApplication: () => void;\n  identityStepCompleted: boolean;\n  noOfEssays: number;\n  canEdit: boolean;\n  isClassDeleted: boolean;\n  essayQuestionAnswered: boolean;\n  url: string | null;\n  stepCompleted: boolean;\n  showCheckbox: boolean;\n  applicationId?: string;\n  checked: boolean;\n  onCheckBoxClicked: Dispatch<\n    SetStateAction<{\n      principlesYou: boolean;\n      essays: boolean;\n    }>\n  >;\n}\n\ntype ResultJsonValue = string | null | undefined;\n\nexport type TResultJson = {\n  [RISE_FORM_KEYS.IDENTITY_STATUS]: ResultJsonValue;\n  [RISE_FORM_KEYS.NATIVE_STATUS]: ResultJsonValue;\n  [RISE_FORM_KEYS.BUSINESS_PLAN_STATUS]: ResultJsonValue;\n  [RISE_FORM_KEYS.BUSINESS_FINANCIAL_PROJECTIONS_STATUS]: ResultJsonValue;\n  [RISE_FORM_KEYS.FINANCIAL_CREDIT_STATUS]: ResultJsonValue;\n  [RISE_FORM_KEYS.FINANCIAL_CASHFLOW_STATUS]: ResultJsonValue;\n  [RISE_FORM_KEYS.PRINCIPLES_YOU_STATUS]: ResultJsonValue;\n};\n","import { SpaceTypeEnum } from '@/apollo/generated/types';\nimport { useGetNoumClassByNoumIdQuery } from '@/apollo/graphql';\nimport { useRiseQuestions } from '@/features/noums/hooks/spaceQuery';\nimport { type FC, type ReactNode, useMemo, useCallback, useState } from 'react';\nimport { RiseApplicationStepTranslationKey, type TResultJson } from '../types';\nimport { useNoumContext } from '../../../../ViewChamber/ChamberProvider';\nimport { RiseApplicationContext } from './context';\n\nexport const RiseApplicationProvider: FC<{\n  children: ReactNode;\n}> = ({ children }) => {\n  const { spaceId, noumType } = useNoumContext();\n  const [canSubmit, setCanSubmit] = useState(false);\n  const [checked, setChecked] = useState<{\n    principlesYou: boolean;\n    essays: boolean;\n  }>({\n    principlesYou: false,\n    essays: false,\n  });\n\n  const {\n    applicationId,\n    resultJson,\n    refetch,\n    status,\n    questions,\n    parentNoumId,\n  } = useRiseQuestions(spaceId);\n\n  const { data } = useGetNoumClassByNoumIdQuery({\n    skip: !parentNoumId || noumType !== SpaceTypeEnum.RiseApplication,\n    variables: {\n      noumId: parentNoumId!,\n    },\n  });\n\n  const {\n    businessFinancialProjectionStatus,\n    BusinessPlanStatus,\n    identityStatus,\n    nativeStatus,\n    financialCreditStatus,\n    financialCashflowStatus,\n    principleYouStatus,\n  } = (resultJson || {}) as TResultJson;\n\n  const identityCompletion = identityStatus === 'SUBMITTED';\n  const nativeCompletion = nativeStatus === 'SUBMITTED';\n  const financialCompletion =\n    financialCashflowStatus === 'SUBMITTED' &&\n    financialCreditStatus === 'SUBMITTED';\n  const businessCompletion =\n    businessFinancialProjectionStatus === 'SUBMITTED' &&\n    BusinessPlanStatus === 'SUBMITTED';\n  const principlesYouCompletion = principleYouStatus === 'SUBMITTED';\n\n  const riseFormCompletion =\n    identityCompletion &&\n    nativeCompletion &&\n    financialCompletion &&\n    businessCompletion;\n\n  const enableApplicationSubmission =\n    riseFormCompletion && principlesYouCompletion && checked.essays;\n\n  const noOfEssays = questions?.length ?? 0;\n\n  const isClassDeleted = data?.getNoumClassByNoumId?.isDeleted ?? false;\n\n  const essayQuestionAnswered = useMemo(\n    () =>\n      (questions || []).some((essayKey) => {\n        const answer = String(resultJson?.[essayKey?.id as keyof JSON] || '');\n        const cleanAnswer =\n          (answer && answer?.replace(/(<([^>]+)>)/gi, '')) || '';\n        return cleanAnswer.length < 200;\n      }),\n    [questions, resultJson],\n  );\n\n  const isStepCompleted = useCallback(\n    (step: RiseApplicationStepTranslationKey): boolean => {\n      switch (step) {\n        case RiseApplicationStepTranslationKey.IDENTITY:\n          return identityCompletion;\n        case RiseApplicationStepTranslationKey.NATIVE:\n          return nativeCompletion;\n        case RiseApplicationStepTranslationKey.FINANCIAL:\n          return financialCompletion;\n        case RiseApplicationStepTranslationKey.BUSINESS:\n          return businessCompletion;\n        case RiseApplicationStepTranslationKey.PRINCIPLES_YOU:\n          return principlesYouCompletion;\n        default:\n          return false;\n      }\n    },\n    [\n      businessCompletion,\n      financialCompletion,\n      identityCompletion,\n      nativeCompletion,\n      principlesYouCompletion,\n    ],\n  );\n\n  const value = useMemo(\n    () => ({\n      applicationId,\n      status,\n      noOfEssays,\n      isClassDeleted,\n      essayQuestionAnswered,\n      refresh: refetch,\n      isStepCompleted,\n      checked,\n      setChecked,\n      enableApplicationSubmission,\n      canSubmit,\n      setCanSubmit,\n      resultJson,\n      identityCompletion,\n    }),\n    [\n      applicationId,\n      essayQuestionAnswered,\n      isClassDeleted,\n      noOfEssays,\n      refetch,\n      status,\n      isStepCompleted,\n      checked,\n      setChecked,\n      enableApplicationSubmission,\n      canSubmit,\n      setCanSubmit,\n      resultJson,\n      identityCompletion,\n    ],\n  );\n\n  return (\n    <RiseApplicationContext.Provider value={value}>\n      {children}\n    </RiseApplicationContext.Provider>\n  );\n};\n\nexport default RiseApplicationProvider;\n","export const MAX_BIO_LENGTH = 750;\n","import * as yup from 'yup';\nimport { t } from 'i18next';\nimport { type User, type UserOutput } from '@/apollo/generated/types';\nimport { type DropdownValueType } from '@/components/Dropdown';\nimport {\n  NAME_REGEX,\n  USER_NAME_REGEX,\n  TWO_LETTERED_NAME_REGEX,\n} from '@/constants/regex';\nimport { MAX_BIO_LENGTH } from '@/screens/CoreSettings/PersonalDetails/consts';\nimport { type Maybe } from './types';\n\nexport const myNetworkFileds = [\n  {\n    label: 'twitter.com/',\n    name: 'twitter.com',\n    icon: 'twitter_m',\n  },\n  {\n    label: 'linkedin.com/in',\n    name: 'linkedin.com',\n    icon: 'linkedin_m',\n  },\n  {\n    label: 'github.com/',\n    name: 'github.com',\n    icon: 'github_m',\n  },\n  {\n    label: 'behance.net/',\n    name: 'behance.net',\n    icon: 'behance_m',\n  },\n  {\n    label: 'instagram.com/',\n    name: 'instagram.com',\n    icon: 'instagram_m',\n  },\n  {\n    label: 'medium.com/',\n    name: 'medium.com',\n    icon: 'medium_m',\n  },\n  {\n    label: 'dribbble.com/',\n    name: 'dribbble.com',\n    icon: 'dribbble_m',\n  },\n];\n\n// we need below commented lines for the MyNetworks component. Maybe, we will use the MyNetworks component in the near future.\n\n// const defaultSocialLinks = (socialLinks?: Maybe<Maybe<SocialLink>[]>) => {\n//   const links: SocialLinks[] = [];\n//   let customLink: {\n//     hostname?: string;\n//     pathname?: string;\n//   } = {};\n//   myNetworkFileds.forEach((field) => {\n//     let socialLink: {\n//       hostname?: string;\n//       pathname?: string;\n//     } = {};\n//     if (socialLinks) {\n//       socialLinks.forEach(value => {\n//         let url = value?.link ?? '';\n//         const urlArray = value?.link?.toLowerCase().split(\"/\") ?? [];\n//         if (!(urlArray.includes('https:') || urlArray.includes('http:'))) {\n//           url = `https://${urlArray.join('/')}`\n//         }\n\n//         const { hostname, pathname } = new URL(url);\n//         const isNotCustomLink = myNetworkFileds.filter((linkdata) => linkdata.name === hostname);\n//         if (isNotCustomLink.length < 1 || pathname === '/') {\n//           customLink = ({ hostname, pathname: url })\n//         } else if (field.name === hostname) {\n//           socialLink = { hostname, pathname };\n//         }\n//       });\n//     }\n//     links.push({\n//       name: field.name,\n//       link:\n//         field.name === socialLink?.hostname\n//           ? socialLink?.pathname?.substring(1) ?? ''\n//           : '',\n//     });\n//   });\n//   if (customLink?.hostname) {\n//     links.push({\n//       name: customLink.hostname ?? '',\n//       link: customLink.pathname ?? '',\n//     })\n//   }\n//   return links;\n// };\n\nexport const ageGroups: DropdownValueType<string>[] = [\n  {\n    key: '-',\n    type: 'value',\n    value: '-',\n    label: '-',\n  },\n  {\n    key: '18-20',\n    type: 'value',\n    value: '18-20',\n    label: '18-20',\n  },\n  {\n    key: '21-30',\n    type: 'value',\n    value: '21-30',\n    label: '21-30',\n  },\n  {\n    key: '31-40',\n    type: 'value',\n    value: '31-40',\n    label: '31-40',\n  },\n  {\n    key: '41-50',\n    type: 'value',\n    value: '41-50',\n    label: '41-50',\n  },\n  {\n    key: '51-60',\n    type: 'value',\n    value: '51-60',\n    label: '51-60',\n  },\n  {\n    key: '61+',\n    type: 'value',\n    value: '61+',\n    label: '61+',\n  },\n];\n\nexport const freelancingExperience: DropdownValueType<string>[] = [\n  {\n    key: '-',\n    type: 'value',\n    value: '-',\n    label: '-',\n  },\n  {\n    key: '1-3',\n    type: 'value',\n    value: '1-3',\n    label: '1-3',\n  },\n  {\n    key: '4-5',\n    type: 'value',\n    value: '4-5',\n    label: '4-5',\n  },\n  {\n    key: '6-8',\n    type: 'value',\n    value: '6-8',\n    label: '6-8',\n  },\n  {\n    key: '9-11',\n    type: 'value',\n    value: '9-11',\n    label: '9-11',\n  },\n  {\n    key: '12-14',\n    type: 'value',\n    value: '12-14',\n    label: '12-14',\n  },\n  {\n    key: '15+',\n    type: 'value',\n    value: '15+',\n    label: '15+',\n  },\n];\n\nexport const formValues = (user: Maybe<UserOutput | User>) => ({\n  firstName: user?.firstName ?? '',\n  lastName: user?.lastName ?? '',\n  username: user?.username ?? '',\n  title: user?.title ?? '',\n  bio: user?.bio ?? '',\n  ageGroup: {\n    min: user?.ageGroup?.min,\n    max: user?.ageGroup?.max,\n  },\n  freelancingExperience: {\n    min: user?.freelancingExperience?.min,\n    max: user?.freelancingExperience?.max,\n  },\n  profile: {\n    // we need below commented line for the MyNetworks component. Maybe, we will use the MyNetworks component in the near future.\n    // socialLinks: defaultSocialLinks(user?.profile?.socialLinks),\n    profilePicture: user?.profile?.profilePicture ?? '',\n  },\n  location: user?.location ?? '',\n});\n\nexport const userProfileInputSchema = yup\n  .object({\n    firstName: yup\n      .string()\n      .required(t('noumena.home_noum.about_me.error.name_required'))\n      .min(2, t('noumena.signup.first_name.too_short'))\n      .max(20, t('noumena.signup.first_name.too_long'))\n      .test(\n        'Two letter name validation',\n        t('noumena.signup.two_digit_first_name.incorrect'),\n        (value) => {\n          if (value && value.length <= 2) {\n            return TWO_LETTERED_NAME_REGEX.test(value);\n          }\n          return true;\n        },\n      )\n      .matches(\n        NAME_REGEX,\n        t('noumena.home_noum.about_me.error.first_name_alpha_only'),\n      ),\n    lastName: yup\n      .string()\n      .required(t('noumena.home_noum.about_me.error.name_required'))\n      .min(2, t('noumena.signup.last_name.too_short'))\n      .max(20, t('noumena.signup.last_name.too_long'))\n      .test(\n        'Two letter name validation',\n        t('noumena.signup.two_digit_last_name.incorrect'),\n        (value) => {\n          if (value && value.length <= 2) {\n            return TWO_LETTERED_NAME_REGEX.test(value);\n          }\n          return true;\n        },\n      )\n      .matches(\n        NAME_REGEX,\n        t('noumena.home_noum.about_me.error.last_name_alpha_only'),\n      ),\n    username: yup\n      .string()\n      .required(t('noumena.home_noum.about_me.error.name_required'))\n      .matches(USER_NAME_REGEX, t('noumena.home_noum.about_me.error.username')),\n    title: yup\n      .string()\n      .max(64, t('noumena.home_noum.about_me.error.title_maximum_length')),\n    bio: yup\n      .string()\n      .max(\n        MAX_BIO_LENGTH,\n        `${t(`noumena.input.not_exceed-100-1`)} ${MAX_BIO_LENGTH} ${t(\n          `noumena.input.not_exceed-100-2`,\n        )}`,\n      ),\n    location: yup\n      .string()\n      .test(\n        'Value not same as one of the suggested values',\n        `${t('noumena.home_noum.about_me.error.location_suggested')}`,\n        (value, locationContext) => {\n          const suggestions = locationContext.options.context\n            ?.locationSuggestions as DropdownValueType<string, string>[];\n\n          return (\n            value === '' || suggestions.some((option) => option.value === value)\n          );\n        },\n      ),\n  })\n  .required();\n","import { useCallback, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { type SubmitHandler, useForm } from 'react-hook-form';\nimport { cloneDeep, isEqual } from 'lodash';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { type UserProfileInput } from '@/apollo/generated/types';\nimport { TextField } from '@/components/TextField';\nimport { ProfileImage } from '@/screens/Chamber/components/modals/ProjectCreate/styles';\nimport { EditableAvatar } from '@/features/upload/components';\nimport { Button } from '@/components/Button';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useWindowDimensions } from '@/hooks';\nimport { ModalFooter } from '@/components/ExtendedModal';\nimport { Icon } from '@/components/Icon';\nimport { Spacer } from '@/layout';\nimport { TSpan } from '@/components/Typography';\nimport { type DropdownValueType, Dropdown } from '@/components/Dropdown';\n\nimport { SearchSelectAPI } from '@/features/location/components';\nimport { TextArea } from '@/components/TextArea';\nimport { Spinner } from '@/components/Spinner';\nimport { breakpoints } from '@/constants/devices';\nimport {\n  useGetCqDataLazyQuery,\n  useSubmitCqFormMutation,\n} from '@/apollo/graphql';\nimport { useHomeNoumAboutMeHelper } from '@/features/noums/hooks/noums';\nimport { MAX_BIO_LENGTH } from '@/screens/CoreSettings/PersonalDetails/consts';\n\nimport { useEditChamberState } from '@/screens/Chamber/EditChamber/provider';\nimport {\n  AboutTextWrapper,\n  Content,\n  LeftContent,\n  PersonalDetailsWrapper,\n  ProfileWrapper,\n  SaveButtonWrap,\n  TextWrapper,\n  UploadPhoto,\n} from './styles';\nimport { useUpdateProfileHelper } from './useUpdateProfileHelper';\nimport {\n  ageGroups,\n  formValues,\n  freelancingExperience,\n  userProfileInputSchema,\n} from './data';\n\nfunction PersonalDetails({\n  spaceId,\n  handleSuccess,\n}: {\n  spaceId?: string;\n  handleSuccess?: () => void;\n}) {\n  const { width } = useWindowDimensions();\n  const [gqlCQData, { data: cqData }] = useGetCqDataLazyQuery();\n  const [submitCqFormMutation] = useSubmitCqFormMutation();\n  const { handleSave } = useUpdateProfileHelper();\n  const { user, loading, masterId, refetchUserData } = useAuth();\n  const [isIdentityFormSubmitted, setIsIdentityFormSubmitted] = useState(false);\n  const [identityForm, setIdentityForm] = useState<{\n    __typename?: 'CQForm' | undefined;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    details?: any;\n    formId?: string | null | undefined;\n    status?: string | null | undefined;\n  }>();\n  const { refetchSpaceById } = useEditChamberState();\n  const { t } = useTranslation();\n  const [updateLoader, setUpdateLoader] = useState(false);\n  const [initialValues, setInitialValues] = useState<UserProfileInput>();\n  const [ageGroup, setAgeGroup] = useState<string | '-'>(' ');\n  const [freelancingExp, setFreelancingExp] = useState<string | undefined>(\n    undefined,\n  );\n  const [searchOptions, setOptions] = useState<DropdownValueType<string>[]>([]);\n  const isLaptop = width > breakpoints.TABLET_L;\n\n  useEffect(() => {\n    gqlCQData();\n  }, [gqlCQData]);\n\n  useEffect(() => {\n    const existingIdentityForm =\n      cqData?.capitalquotient?.getCQDetails?.forms?.find(\n        (form) => form?.formId === '1',\n      );\n    if (existingIdentityForm) {\n      setIsIdentityFormSubmitted(Boolean(existingIdentityForm.status));\n      setIdentityForm(existingIdentityForm);\n    }\n  }, [cqData]);\n\n  useEffect(() => {\n    const apiAgeGroup =\n      user?.ageGroup?.min && user?.ageGroup?.max\n        ? user?.ageGroup?.max >= 90\n          ? '61+'\n          : `${user.ageGroup.min}-${user?.ageGroup?.max}`\n        : '-';\n    const apiFreelancingExperience =\n      user?.freelancingExperience?.min && user?.freelancingExperience?.max\n        ? user?.freelancingExperience?.max >= 30\n          ? '15+'\n          : `${user.freelancingExperience.min}-${user.freelancingExperience.max}`\n        : '-';\n    setAgeGroup(apiAgeGroup);\n    setFreelancingExp(apiFreelancingExperience);\n  }, [setFreelancingExp, setAgeGroup, user]);\n\n  const { homeNoumAboutMeProfilePicHelper } = useHomeNoumAboutMeHelper();\n\n  const {\n    reset,\n    register,\n    trigger,\n    setValue,\n    getValues,\n    handleSubmit,\n    formState: { errors, isValid },\n  } = useForm<UserProfileInput>({\n    resolver: yupResolver(userProfileInputSchema),\n    context: { locationSuggestions: searchOptions },\n    mode: 'all',\n    reValidateMode: 'onBlur',\n  });\n\n  const handleChangeProfileImage = useCallback(\n    (imageURL: string) => {\n      setValue('profile.profilePicture', imageURL);\n      trigger('profile.profilePicture');\n    },\n    [setValue, trigger],\n  );\n\n  const handleChange = useCallback(() => {\n    trigger();\n  }, [trigger]);\n\n  const handleOptionChange = (ageGroupOptions: string) => {\n    let ageGroupData = {};\n    setAgeGroup(ageGroupOptions);\n\n    if (ageGroupOptions !== '-') {\n      if (ageGroupOptions === '61+') {\n        ageGroupData = {\n          min: 61,\n          max: 90,\n        };\n      } else {\n        const array = ageGroupOptions.split('-', 2);\n        ageGroupData = {\n          min: parseInt(array[0], 10),\n          max: parseInt(array[1], 10),\n        };\n      }\n    }\n\n    reset({ ...getValues(), ageGroup: ageGroupData });\n  };\n\n  const handleOptionChangeForFreelancing = (\n    freelancingExperienceOptions: string,\n  ) => {\n    setFreelancingExp(freelancingExperienceOptions);\n    let freelancingExperienceData = {};\n\n    if (freelancingExperienceOptions !== '-') {\n      if (freelancingExperienceOptions === '15+') {\n        freelancingExperienceData = {\n          min: 15,\n          max: 30,\n        };\n      } else {\n        const array = freelancingExperienceOptions.split('-', 2);\n        freelancingExperienceData = {\n          min: parseInt(array[0], 10),\n          max: parseInt(array[1], 10),\n        };\n      }\n    }\n\n    reset({ ...getValues(), freelancingExperience: freelancingExperienceData });\n  };\n\n  const handleDeleteImage = useCallback(() => {\n    setValue('profile.profilePicture', '');\n    trigger('profile.profilePicture');\n  }, [setValue, trigger]);\n\n  const onSubmit: SubmitHandler<UserProfileInput> = async (data) => {\n    // we need below commented lines for the MyNetworks component. Maybe, we will use the MyNetworks component in the near future.\n    // const socialurls = data.profile?.socialLinks?.filter(\n    //   (value) => value?.link !== '',\n    // );\n    // if (!(socialurls && socialurls.length > 0)) {\n    //   handleError(\n    //     `${t(\n    //       'noumena.myaccount.personal_details_my_networks.atleast_one_url',\n    //     )}`,\n    //   );\n    //   return;\n    // }\n    // const socialLinks: InputMaybe<InputMaybe<SocialLinkInput>[]> = [];\n    // data.profile?.socialLinks?.forEach((value) => {\n    //   let link: string = '';\n    //   let isNotCustomLink = false;\n    //   const urlArray = value?.link?.toLowerCase().split('/') ?? [];\n    //   myNetworkFileds.forEach((linkdata) => {\n    //     if (value?.name === linkdata.name && !isNotCustomLink) {\n    //       isNotCustomLink = true;\n    //     }\n    //   });\n    //   const dataLink = value?.link ?? '';\n    //   if (dataLink !== '') {\n    //     if (urlArray.length > 0) {\n    //       if (!isNotCustomLink) {\n    //         link = dataLink;\n    //       } else {\n    //         let isAdded = false;\n    //         myNetworkFileds.forEach((field) => {\n    //           if (urlArray.includes(field.name) && !isAdded) {\n    //             link = dataLink;\n    //             isAdded = true;\n    //           } else if (!link) {\n    //             link = `https://${value?.name}/${dataLink}`;\n    //           }\n    //         });\n    //       }\n    //       socialLinks.push({\n    //         name: value?.name ?? 'customLink',\n    //         link,\n    //       });\n    //     }\n    //   }\n    // });\n    // const dataToSubmit = {\n    //   ...data,\n    //   profile: { ...data.profile, socialLinks },\n    // };\n    setUpdateLoader(true);\n\n    const dataToSubmit = cloneDeep(data);\n\n    delete dataToSubmit.profile?.profilePicture;\n\n    if (ageGroup === '-') dataToSubmit.ageGroup = {};\n\n    if (freelancingExp === '-') dataToSubmit.freelancingExperience = {};\n\n    if (getValues('profile.profilePicture') !== user?.profile?.profilePicture) {\n      const { profilePicSuccess } = await homeNoumAboutMeProfilePicHelper(\n        getValues('profile.profilePicture'),\n      );\n      if (\n        profilePicSuccess &&\n        isIdentityFormSubmitted &&\n        identityForm &&\n        masterId &&\n        Boolean(getValues('profile.profilePicture'))\n      ) {\n        const indentifyDetails = Array.isArray(identityForm?.details)\n          ? identityForm?.details\n          : identityForm?.details.submitted;\n        const formCopy = [...(indentifyDetails || [])];\n        const indexOfProfilePicture = formCopy.findIndex(\n          (ans) => ans.qid === '4',\n        );\n        if (indexOfProfilePicture !== -1) {\n          formCopy[indexOfProfilePicture] = {\n            ...formCopy[indexOfProfilePicture],\n            value: getValues('profile.profilePicture'),\n          };\n        }\n        submitCqFormMutation({\n          variables: {\n            input: {\n              noumId: masterId,\n              status: cqData?.capitalquotient?.getCQDetails?.status,\n              form: {\n                formId: identityForm?.formId,\n                description: 'identity',\n                status: identityForm?.status,\n                details: formCopy,\n              },\n            },\n          },\n        });\n      }\n    }\n\n    const isSuccess = await handleSave(dataToSubmit);\n\n    setUpdateLoader(false);\n\n    if (isSuccess) {\n      // we need below commented line for the MyNetworks component. Maybe, we will use the MyNetworks component in the near future.\n      // const newData = { ...data, _id: user?._id ?? '', profile: { ...data.profile socialLinks } };\n      const newData = { ...data, _id: user?._id ?? '' };\n      const values = formValues(newData);\n      reset(values);\n      setInitialValues(values);\n      if (spaceId) {\n        refetchSpaceById?.();\n        refetchUserData();\n        if (handleSuccess) handleSuccess();\n      }\n    }\n  };\n\n  const setTextFieldValue = useCallback(\n    (value: string) => {\n      setValue('location', value);\n      trigger('location');\n    },\n    [setValue, trigger],\n  );\n\n  const handleLocationSelect = useCallback(\n    (option: DropdownValueType<string>) => {\n      if (option.value || option.value !== '') setTextFieldValue(option.value);\n    },\n    [setTextFieldValue],\n  );\n\n  const isFormChanged = useCallback(\n    () => isEqual(initialValues, getValues()),\n    [getValues, initialValues],\n  );\n\n  // we need useFieldArray for the MyNetworks component. Maybe, we will use the MyNetworks component in the near future.\n  // const { fields, append, remove } = useFieldArray({\n  //   control,\n  //   name: 'profile.socialLinks',\n  // });\n\n  useEffect(() => {\n    if (user && !initialValues) {\n      const values = formValues(user);\n      reset(values);\n      setInitialValues(values);\n    }\n  }, [initialValues, reset, user]);\n\n  return (\n    <>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <>\n          <PersonalDetailsWrapper>\n            <ProfileWrapper>\n              <UploadPhoto>\n                <TSpan\n                  font=\"heading-xs-bold\"\n                  colorToken=\"--text-card-header-neutral-highlighted\"\n                >\n                  {t(`noumena.myaccount.personal_details_profile`)}\n                </TSpan>\n                <section className=\"uploadbar\" />\n                <Spacer height={isLaptop ? 32 : 16} />\n                <ProfileImage>\n                  <EditableAvatar\n                    size=\"XXXL\"\n                    url={getValues('profile.profilePicture') ?? ''}\n                    onContentChange={handleChangeProfileImage}\n                    maximumFileSize={5}\n                    onlyEditable={true}\n                  />\n                </ProfileImage>\n                {getValues('profile.profilePicture') ? (\n                  <Button\n                    size=\"small\"\n                    secondary\n                    intent=\"negative\"\n                    onClick={handleDeleteImage}\n                  >\n                    {t(`noumena.myaccount.personal_details_removebtn`)}\n                  </Button>\n                ) : null}\n              </UploadPhoto>\n            </ProfileWrapper>\n            <LeftContent>\n              <TextWrapper>\n                <TextField\n                  {...register('firstName', {\n                    required: {\n                      value: true,\n                      message: t(\n                        `noumena.home_noum.about_me.error.name_required`,\n                      ),\n                    },\n                    onChange: handleChange,\n                  })}\n                  value={getValues('firstName') ?? ''}\n                  label={t('noumena.home_noum.about_me.first_name_label')}\n                  error={!!errors.firstName}\n                  helperText={errors.firstName?.message}\n                />\n                <TextField\n                  {...register('lastName', {\n                    required: {\n                      value: true,\n                      message: t(\n                        `noumena.home_noum.about_me.error.name_required`,\n                      ),\n                    },\n                    onChange: handleChange,\n                  })}\n                  value={getValues('lastName') ?? ''}\n                  label={t('noumena.home_noum.about_me.last_name_label')}\n                  name=\"lastName\"\n                  error={!!errors.lastName}\n                  helperText={errors.lastName?.message}\n                />\n                <TextField\n                  {...register('username', {\n                    required: {\n                      value: true,\n                      message: t(\n                        `noumena.home_noum.about_me.error.name_required`,\n                      ),\n                    },\n                    onChange: handleChange,\n                  })}\n                  value={getValues('username') ?? ''}\n                  label={t('noumena.myaccount.personal_details_username')}\n                  name=\"username\"\n                  error={!!errors.username}\n                  helperText={errors.username?.message}\n                />\n                <TextField\n                  {...register('title', {\n                    required: {\n                      value: true,\n                      message: t(\n                        `noumena.home_noum.about_me.error.name_required`,\n                      ),\n                    },\n                    onChange: handleChange,\n                  })}\n                  value={getValues('title') ?? ''}\n                  label={t(\n                    'noumena.myaccount.personal_details.professional_title',\n                  )}\n                  name=\"title\"\n                  error={!!errors.title}\n                  helperText={errors.title?.message}\n                  maxLength={64}\n                />\n                <AboutTextWrapper>\n                  <TextArea\n                    {...register('bio', {\n                      required: {\n                        value: true,\n                        message: t(\n                          `noumena.home_noum.about_me.error.name_required`,\n                        ),\n                      },\n                      onChange: handleChange,\n                    })}\n                    error={!!errors.bio}\n                    value={getValues('bio') ?? ''}\n                    helperText={errors.bio?.message}\n                    label={t('noumena.myaccount.personal_details_about')}\n                    maxLength={MAX_BIO_LENGTH}\n                    resize={false}\n                  />\n                </AboutTextWrapper>\n              </TextWrapper>\n              <Content vertical={!isLaptop}>\n                <Dropdown\n                  hideIcons\n                  containerHeight=\"200px\"\n                  containerWidth=\"193px\"\n                  options={ageGroups}\n                  usePopStyle\n                  onSelectOption={(option) => {\n                    handleOptionChange(option.value);\n                  }}\n                >\n                  {({ inputProps, inputRef, toggle }) => (\n                    <TextField\n                      ref={inputRef}\n                      {...inputProps}\n                      label={t(`noumena.myaccount.personal_details.age_group`)}\n                      value={ageGroup}\n                      rightIcon={\n                        <Icon\n                          name=\"chevron_down_m\"\n                          size={16}\n                          onClick={toggle}\n                          color=\"--icon-input-neutral-default\"\n                        />\n                      }\n                    />\n                  )}\n                </Dropdown>\n                <Dropdown\n                  hideIcons\n                  options={freelancingExperience}\n                  containerHeight=\"300px\"\n                  containerWidth=\"193px\"\n                  usePopStyle\n                  onSelectOption={(option) => {\n                    handleOptionChangeForFreelancing(option.value);\n                  }}\n                >\n                  {({ inputProps, inputRef, toggle }) => (\n                    <TextField\n                      ref={inputRef}\n                      {...inputProps}\n                      label={t(\n                        `noumena.myaccount.personal_details.years_of_freelancing`,\n                      )}\n                      value={freelancingExp}\n                      rightIcon={\n                        <Icon\n                          name=\"chevron_down_m\"\n                          size={16}\n                          onClick={toggle}\n                          color=\"--icon-input-neutral-default\"\n                        />\n                      }\n                    />\n                  )}\n                </Dropdown>\n              </Content>\n              <Spacer height={16} />\n              <SearchSelectAPI\n                {...register('location')}\n                showValue={getValues('location') ?? ''}\n                onSelect={handleLocationSelect}\n                onClear={() => setTextFieldValue('')}\n                label={t(`noumena.home_noum.about_me.location.label`)}\n                error={!!errors.location}\n                helperText={errors.location?.message}\n                setTextFieldValue={setTextFieldValue}\n                setSuggestedOptions={setOptions}\n              />\n\n              {/* Maybe, we will use the MyNetworks component in the near future. */}\n              {/* <Spacer height={54} />\n            <Content>\n              <MyNetworks\n                register={register}\n                fields={fields}\n                append={append}\n                remove={remove}\n                getValues={getValues}\n                handleChange={handleChange}\n              />\n            </Content> */}\n\n              {!isLaptop && (\n                <>\n                  <Spacer height={32} />\n                  <TSpan\n                    font=\"body-m\"\n                    colorToken=\"--text-card-header-neutral-highlighted\"\n                  >\n                    {t(\n                      `noumena.homenoum.edit_personal_details.change_will_applied.text`,\n                    )}\n                  </TSpan>\n                  <Spacer height={16} />\n                </>\n              )}\n            </LeftContent>\n          </PersonalDetailsWrapper>\n          <ModalFooter justifyContent=\"space-between\">\n            {isLaptop && (\n              <TSpan\n                font=\"body-m\"\n                colorToken=\"--text-card-header-neutral-highlighted\"\n              >\n                {t(\n                  `noumena.homenoum.edit_personal_details.change_will_applied.text`,\n                )}\n              </TSpan>\n            )}\n            <SaveButtonWrap>\n              <Button\n                onClick={handleSubmit(onSubmit)}\n                size=\"full\"\n                type=\"submit\"\n                primary={!isFormChanged()}\n                disabled={isFormChanged() || updateLoader || !isValid}\n                loading={updateLoader}\n              >\n                {t(`noumena.button.save`)}\n              </Button>\n            </SaveButtonWrap>\n          </ModalFooter>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default PersonalDetails;\n","import { memo, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport PersonalDetails from '@/screens/CoreSettings/PersonalDetails';\nimport { Modal, ModalHeader, ModalSize } from '@/components/ExtendedModal';\nimport { type PersonalDetailsModalProps } from './types';\n\nexport const PersonalDetailsModal = memo((props: PersonalDetailsModalProps) => {\n  const { t } = useTranslation();\n\n  const handleClose = useCallback(() => {\n    props.handleClose(true);\n  }, [props]);\n\n  const handleSuccess = () => {\n    props.handleSuccess(props.spaceId);\n  };\n\n  return (\n    <Modal\n      open={props.isOpen}\n      testId=\"testPersonalDetailsModal\"\n      onClose={handleClose}\n      enableCloseButton\n      size={ModalSize.XL}\n      disableBackdropClick\n    >\n      <ModalHeader>{t(`noumena.homenoum.edit_personal_details`)}</ModalHeader>\n      <PersonalDetails spaceId={props?.spaceId} handleSuccess={handleSuccess} />\n    </Modal>\n  );\n});\n","import { type FC, useCallback, useEffect, useMemo, useState } from 'react';\nimport { t } from 'i18next';\nimport * as Sentry from '@sentry/react';\nimport { useAuth } from '@/features/auth/contexts';\nimport { DeviceTypeEnum, useDeviceType } from '@/hooks';\nimport {\n  useGenerateOneTimeTokenMutation,\n  useGetTokenQuery,\n  useUpdatePrivacyMutation,\n} from '@/apollo/graphql';\nimport TokenModal from '@/screens/Money/Payments/Tokens/TokenModal';\nimport { Icon } from '@/components/Icon';\nimport { Spinner } from '@/components/Spinner';\nimport { useCQ } from '@/features/money/hooks';\nimport { Dropdown, type DropdownValueType } from '@/components/Dropdown';\nimport { TSpan } from '@/components/Typography';\nimport { Button } from '@/components/Button';\nimport { useLaunchDarkly } from '@/hooks/launchDarkly';\nimport { trackEvent } from '@/utils/tracking';\nimport { useNoumContext } from '../../ViewChamber/ChamberProvider';\nimport {\n  CQTokenContainer,\n  GrayBox,\n  TokenBoxTitle,\n  GrayBoxValue,\n  CQBoxTitle,\n  CQFooterBox,\n  HelperTextWrapper,\n  WarningTextWrapper,\n  RightIcon,\n  PrivacyDropdownSelectedValue,\n  CQBoxVisitor,\n} from './styles';\n\nexport const HomeNoumCQToken: FC = () => {\n  const { user } = useAuth();\n  const deviceType = useDeviceType();\n  const { flags } = useLaunchDarkly();\n  const [openTokenModal, setOpenTokenModal] = useState(false);\n  const cqURl = process.env.VITE_CQ_URL;\n  const [generateOneTimeTokenMutation] = useGenerateOneTimeTokenMutation();\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const [updatePrivacyMutation] = useUpdatePrivacyMutation();\n  const { isOwner, space } = useNoumContext();\n  const { cqData } = useCQ(space?._id || '', !isOwner);\n  const { data, loading } = useGetTokenQuery();\n  const isMobile = DeviceTypeEnum.MOBILE === deviceType;\n  const showSingleItemOnly = !flags.cqInHomeNoumsProfile;\n  const [privacy, setPrivacy] = useState<DropdownValueType<string>>({\n    label: '',\n    key: '',\n    type: 'value',\n    value: '',\n  });\n\n  useEffect(() => {\n    const newData: DropdownValueType<string> = {\n      ...privacy,\n      key:\n        (cqData?.visibility as string).charAt(0).toUpperCase() +\n        (cqData?.visibility as string).slice(1),\n      type: 'value',\n      value:\n        (cqData?.visibility as string).charAt(0).toUpperCase() +\n        (cqData?.visibility as string).slice(1),\n    };\n    setPrivacy(newData);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cqData]);\n\n  const options: DropdownValueType<string>[] = [\n    {\n      key: 'private',\n      label: (\n        <TSpan\n          font=\"body-m-bold\"\n          colorToken=\"--text-tablecell-header-neutral-highlighted\"\n        >\n          {t(`noumena.money.cq.private`)}\n        </TSpan>\n      ),\n      type: 'value',\n      value: 'private',\n    },\n    {\n      key: 'public',\n      label: (\n        <TSpan\n          font=\"body-m-bold\"\n          colorToken=\"--text-tablecell-header-neutral-highlighted\"\n        >\n          {t(`noumena.money.cq.public`)}\n        </TSpan>\n      ),\n      type: 'value',\n      value: 'public',\n    },\n  ];\n\n  const info = useMemo(() => {\n    if (data?.getSpaceByType && data?.getSpaceByType[0]) {\n      return data?.getSpaceByType[0];\n    }\n    return {\n      token: {\n        count: '--',\n      },\n    };\n  }, [data]);\n\n  const handleNavigation = useCallback(async () => {\n    const res = await generateOneTimeTokenMutation({\n      variables: {},\n      onError: ({ networkError = null, graphQLErrors = [] }) => {\n        const [err] = graphQLErrors;\n        Sentry.captureException(new Error(err?.message ?? networkError), {\n          tags: {\n            section: 'deleteQuestionMutation',\n          },\n        });\n      },\n      onCompleted: () => {\n        trackEvent('CQStart', {\n          UUID: user?._id,\n        });\n      },\n    });\n    const token = res.data?.generateOneTimeToken;\n    const formedUrl: string = `${cqURl}?access_token=${token}`;\n    window.open(formedUrl, '_blank');\n  }, [cqURl, generateOneTimeTokenMutation, user?._id]);\n\n  const updatePrivacy = useCallback(\n    async (option) => {\n      setPrivacy(option);\n      await updatePrivacyMutation({\n        variables: {\n          input: {\n            noumId: cqData.noumId || '',\n            visibility: option.value.toUpperCase(),\n          },\n        },\n        onError: ({ networkError = null, graphQLErrors = [] }) => {\n          const [err] = graphQLErrors;\n          Sentry.captureException(new Error(err?.message ?? networkError), {\n            tags: {\n              section: 'deleteQuestionMutation',\n            },\n          });\n        },\n      });\n    },\n    [cqData.noumId, updatePrivacyMutation],\n  );\n\n  return (\n    <CQTokenContainer\n      isMobile={isMobile}\n      width={!isMobile && showSingleItemOnly ? '350px' : 'auto'}\n    >\n      {isOwner && (\n        <GrayBox order={0}>\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n              width: '200px',\n              height: '61px',\n            }}\n          >\n            <TokenBoxTitle\n              font=\"body-m\"\n              colorToken=\"--text-body-neutral-default\"\n            >\n              {' '}\n              {t('noumena.money.tokens.subheading')}\n            </TokenBoxTitle>\n            <GrayBoxValue\n              font=\"heading-m\"\n              colorToken=\"--text-body-neutral-highlighted\"\n            >\n              {' '}\n              {loading ? '...' : info.token?.count}\n            </GrayBoxValue>\n          </div>\n          <Button\n            size=\"small\"\n            style={{ alignSelf: 'center' }}\n            data-testid=\"stepTwoBackButton\"\n            tertiary\n            textOnly\n            onClick={() => setOpenTokenModal(true)}\n          >\n            <Icon\n              name=\"tokensIcon\"\n              size={16}\n              color=\"--icon-button-neutral-default\"\n            />\n          </Button>\n          <TokenModal\n            open={openTokenModal}\n            onClose={() => setOpenTokenModal(false)}\n          />\n        </GrayBox>\n      )}\n      {flags.cqInHomeNoumsProfile && (\n        <>\n          {isOwner ? (\n            <GrayBox order={1}>\n              <div\n                style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  width: '172px',\n                }}\n              >\n                <CQBoxTitle\n                  font=\"body-m\"\n                  colorToken=\"--text-body-neutral-default\"\n                >\n                  {t('noumena.money.wallet.capitalquotient')}\n                </CQBoxTitle>\n                {cqData.fetching && <Spinner />}\n                {!cqData.fetching && (\n                  <GrayBoxValue\n                    font=\"heading-m\"\n                    colorToken=\"--text-body-neutral-highlighted\"\n                  >\n                    {' '}\n                    {cqData.score}\n                  </GrayBoxValue>\n                )}\n                <CQFooterBox>\n                  {cqData.status !== 'InComplete' && (\n                    <HelperTextWrapper\n                      font=\"body-m\"\n                      colorToken=\"--text-card-danger-primary-default\"\n                    >\n                      {cqData.status}\n                    </HelperTextWrapper>\n                  )}\n                  {cqData.status === 'InComplete' && (\n                    <WarningTextWrapper\n                      font=\"body-m\"\n                      colorToken=\"--text-card-neutral-highlighted\"\n                    >\n                      {t('noumena.money.cq.incomplete_displayText')}\n                    </WarningTextWrapper>\n                  )}\n                </CQFooterBox>\n                <CQFooterBox>\n                  <Dropdown\n                    hideIcons\n                    inputValue={\n                      (privacy?.value as string).charAt(0).toUpperCase() +\n                        (privacy?.value as string).slice(1) ?? ''\n                    }\n                    options={options}\n                    usePortal={false}\n                    onSelectOption={(option) => {\n                      updatePrivacy(option);\n                    }}\n                    onOpen={() => setIsOpen(true)}\n                    onClose={() => setIsOpen(false)}\n                  >\n                    {({ inputProps, inputRef, toggle }) => (\n                      <>\n                        <PrivacyDropdownSelectedValue\n                          {...inputProps}\n                          ref={inputRef}\n                        />\n                        <RightIcon\n                          name=\"chevron_down_m\"\n                          size={16}\n                          color=\"--icon-card-neutral-default\"\n                          isOpen={isOpen}\n                          onClick={toggle}\n                        />\n                      </>\n                    )}\n                  </Dropdown>\n                </CQFooterBox>\n              </div>\n              <Button\n                size=\"small\"\n                style={{ alignSelf: 'center' }}\n                data-testid=\"stepTwoBackButton\"\n                secondary\n                onClick={() => handleNavigation()}\n              >\n                {t('noumena.money.wallet.updateCQ')}\n              </Button>\n            </GrayBox>\n          ) : (\n            <>\n              {cqData?.visibility === 'Public' ? (\n                <GrayBox isVisitor={!isOwner}>\n                  <CQBoxVisitor>\n                    <TSpan\n                      font=\"body-m\"\n                      colorToken=\"--text-card-neutral-highlighted\"\n                    >\n                      {t('noumena.money.wallet.capitalquotientscore')}\n                    </TSpan>\n                    <TSpan\n                      font=\"heading-xs-bold\"\n                      colorToken=\"--text-card-neutral-highlighted\"\n                    >\n                      {cqData.score}\n                    </TSpan>\n                  </CQBoxVisitor>\n                </GrayBox>\n              ) : null}\n            </>\n          )}\n        </>\n      )}\n    </CQTokenContainer>\n  );\n};\n","import * as Sentry from '@sentry/react';\nimport { useCallback, useMemo } from 'react';\nimport { t } from 'i18next';\nimport { type ApolloError } from '@apollo/client/errors';\nimport { sizes } from '@/constants/devices';\nimport { useWindowDimensions } from '@/hooks/dimensions';\nimport {\n  GetSpaceForViewDocument,\n  type GetSpaceForViewQuery,\n  useFavouriteNoumMutation,\n  useUnfavouriteNoumMutation,\n  type GetSpaceForViewQueryVariables,\n} from '@/apollo/graphql';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useLaunchDarkly, useToast } from '@/hooks';\nimport { IconWrapper } from '@/features/homeNoums/components/HomeChamberOptions';\nimport { NoumLayoutStatusFilter } from '@/apollo/generated/types';\nimport { FavouriteIcon } from './styles';\nimport { useNoumContext } from '../../ViewChamber/ChamberProvider';\n\nconst mobileSize = parseInt(sizes.MOBILE_L, 10);\n\nconst Favourite = () => {\n  const { space, spaceId } = useNoumContext();\n  const { masterId } = useAuth();\n  const windowSize = useWindowDimensions();\n  const isMobile = windowSize.width <= mobileSize;\n  const isFavouriteNoum = space?.isFavourited;\n  const [markAsFavourite, { loading: favouriteLoading }] =\n    useFavouriteNoumMutation();\n  const [markAsUnFavourite, { loading: unFavouriteLoading }] =\n    useUnfavouriteNoumMutation();\n\n  const {\n    flags: { noumEditor2 },\n  } = useLaunchDarkly();\n\n  const variables: GetSpaceForViewQueryVariables = useMemo(\n    () => ({\n      id: spaceId || '',\n      noumId: masterId,\n      status: NoumLayoutStatusFilter.Published,\n      editorV2Enabled: noumEditor2,\n    }),\n    [masterId, noumEditor2, spaceId],\n  );\n\n  const { addToast } = useToast();\n\n  const handleError = useCallback(\n    (error: ApolloError) => {\n      const { networkError, graphQLErrors } = error;\n      addToast(\n        'error',\n        'none',\n        `${t('noumena.toast_error.text')}: ${\n          error ? error.message : networkError\n        }`,\n      );\n      const [err] = graphQLErrors;\n      Sentry.captureException(new Error(err?.message ?? networkError), {\n        tags: {\n          section: 'markNoumAsFavourite',\n        },\n      });\n    },\n    [addToast],\n  );\n\n  const handleSuccess = useCallback(\n    (markType: string) => {\n      addToast('success', 'none', t(`noumena.chamber.favourites_${markType}`));\n    },\n    [addToast],\n  );\n\n  const handleMarkAsFavourite = useCallback(async () => {\n    await markAsFavourite({\n      variables: { noumId: spaceId || '' },\n      onError: (error) => {\n        handleError(error);\n      },\n      onCompleted: () => {\n        handleSuccess('added');\n      },\n      update: (cache, result) => {\n        cache.updateQuery<GetSpaceForViewQuery>(\n          {\n            query: GetSpaceForViewDocument,\n            variables,\n          },\n          (data) => ({\n            ...data,\n            getSpaceById: {\n              ...data?.getSpaceById,\n              isFavourited: result.data?.favouriteNoum,\n            },\n          }),\n        );\n      },\n    });\n  }, [handleError, handleSuccess, markAsFavourite, spaceId, variables]);\n\n  const handleMarkAsUnFavourite = useCallback(async () => {\n    await markAsUnFavourite({\n      variables: { noumId: spaceId || '' },\n      onError: (error) => {\n        handleError(error);\n      },\n      onCompleted: () => {\n        handleSuccess('removed');\n      },\n      update: (cache, result) => {\n        cache.updateQuery<GetSpaceForViewQuery>(\n          {\n            query: GetSpaceForViewDocument,\n            variables,\n          },\n          (data) => ({\n            ...data,\n            getSpaceById: {\n              ...data?.getSpaceById,\n              isFavourited: !result.data?.unfavouriteNoum,\n            },\n          }),\n        );\n      },\n    });\n  }, [handleError, handleSuccess, markAsUnFavourite, spaceId, variables]);\n\n  return (\n    <IconWrapper\n      disabled={favouriteLoading || unFavouriteLoading}\n      isMobile={isMobile}\n    >\n      <FavouriteIcon\n        className=\"favrouites\"\n        isMobile={isMobile}\n        name={isFavouriteNoum ? 'star_filled_m' : 'add_to_favourites'}\n        color={isFavouriteNoum ? '--icon-button-neutral-pressed' : ''}\n        size={24}\n        onClick={\n          isFavouriteNoum ? handleMarkAsUnFavourite : handleMarkAsFavourite\n        }\n      />\n    </IconWrapper>\n  );\n};\n\nexport default Favourite;\n","import { forwardRef, type Ref, useCallback, useState } from 'react';\nimport { format } from 'date-fns';\nimport { useTranslation } from 'react-i18next';\nimport { Tag } from '@/components/Tag';\nimport { TSpan } from '@/components/Typography';\nimport { Avatar } from '@/components/Avatar/Avatar';\nimport { useWindowDimensions } from '@/hooks/dimensions';\nimport riseAvatar from '@/assets/images/riseavatar.png';\nimport { sizes } from '@/constants/devices';\nimport { Button } from '@/components/Button/Button';\nimport { Icon } from '@/components/Icon';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useToggle } from '@/hooks';\nimport { SpaceTypeEnum, UserStatus } from '@/apollo/generated/types';\nimport { PersonalDetailsModal } from '@/screens/Chamber/components/modals/PersonalDetailsModal/Modal';\nimport { Spacer } from '@/layout';\nimport { useLaunchDarkly } from '@/hooks/launchDarkly';\nimport RenewNoumModal from '@/screens/Plan/RenewNoumModal';\nimport getBgColorByNoumType from '@/utils/getBgColorByNoumType';\nimport getColorByNoumType from '@/utils/getColorByNoumType';\nimport { HomeNoumCQToken } from './HomeNoumCQToken';\nimport { useNoumContext } from '../../ViewChamber/ChamberProvider';\nimport { ProjectCreate } from '../modals/ProjectCreate/Modal';\nimport { ChamberCompleteness } from '../ChamberCompleteness';\nimport {\n  TagSection,\n  ProfileSummaryNameAndFavouritesContainer,\n  ProfileSummaryName,\n  ProfileSummaryHead,\n  ProfileSummaryLocation,\n  ProfileSummaryContainer,\n  ProfileSummaryDescription,\n  ProfileSummaryDataContainer,\n  StyledCard,\n  ProfileSummaryEdit,\n  CompletenessWrapper,\n  NoumStatusIcon,\n} from './styles';\nimport Favourite from './Favourite';\nimport { useEditChamberState } from '../../EditChamber/provider';\nimport { type IProfileSummary } from './types';\n\nconst mobileSize = parseInt(sizes.MOBILE_L, 10);\n\nconst ProfileSummaryOld = forwardRef(\n  (\n    {\n      disabled,\n      name,\n      title,\n      icon,\n      imageURL,\n      lastUpdated,\n      followers,\n      location,\n      bio,\n      ownerName,\n      ownerImageURL,\n      ownerTitle,\n      ownerBio,\n      loading = false,\n      isMasterNoum,\n      isSecretNoum = false,\n      spaceId,\n      isUpdateMode,\n      category,\n      noumValidity,\n      isPublished,\n    }: IProfileSummary,\n    ref: Ref<HTMLDivElement>,\n  ) => {\n    const [isRenewModalOpen, setIsRenewModalOpen] = useState(false);\n    const { t } = useTranslation();\n    const { isOwner, space, noumType } = useNoumContext();\n    const { space: editSpace } = useEditChamberState();\n    const [isEditOpen, toggleEditOpen] = useToggle(false);\n    const windowSize = useWindowDimensions();\n    const { flags } = useLaunchDarkly();\n    const isMobile = windowSize.width <= mobileSize;\n    const summaryDescription = isMasterNoum ? ownerBio : bio;\n    const chamberTitle = isMasterNoum ? ownerTitle : title;\n    const chamberType = chamberTitle?.toLocaleLowerCase();\n    const summaryData = {\n      spaceId,\n      name,\n      description: summaryDescription,\n      profileImage: imageURL,\n      categoryId: category?._id || undefined,\n    };\n\n    const { isUnregistered } = useAuth();\n\n    const {\n      aboutToExpireInfo = { showLabel: false, days: 0 },\n      expiredInfo = { showLabel: false, days: 0 },\n      validityDate,\n    } = noumValidity || {};\n\n    const toggleRenewModal = useCallback(() => {\n      setIsRenewModalOpen((previous) => !previous);\n    }, []);\n\n    const imageAvatar =\n      noumType === SpaceTypeEnum.RiseApplication ||\n      space?.category?.name === 'Rise'\n        ? riseAvatar\n        : imageURL;\n\n    const isRiseApplication = noumType === SpaceTypeEnum.RiseApplication;\n\n    return (\n      <ProfileSummaryContainer ref={ref}>\n        {!loading && (\n          <StyledCard>\n            <ProfileSummaryHead data-testid=\"theadSection\">\n              <Avatar\n                disabled={disabled}\n                url={isMasterNoum ? ownerImageURL : imageAvatar}\n                size=\"XXL\"\n                width={isMobile ? windowSize.width - 32 : undefined}\n                height={isMobile ? windowSize.width - 32 : undefined}\n                borderRadius={16}\n              />\n              <ProfileSummaryDataContainer>\n                {!isMobile &&\n                  !isUpdateMode &&\n                  isPublished &&\n                  !isUnregistered && <Favourite />}\n                <TagSection data-testid=\"ttagsSection\">\n                  {chamberTitle && chamberTitle.length > 0 && (\n                    <Tag\n                      icon={icon ?? undefined}\n                      title={chamberTitle}\n                      {...(!isMasterNoum && chamberType\n                        ? {\n                            color: `var(${getColorByNoumType(chamberType)})`,\n                            bgColor: `var(${getBgColorByNoumType(\n                              chamberType,\n                            )})`,\n                          }\n                        : { secondary: true })}\n                    >\n                      {isRiseApplication\n                        ? t('noumena.rise_application')\n                        : chamberTitle}\n                    </Tag>\n                  )}\n                  {!isMasterNoum && !isSecretNoum && !isRiseApplication && (\n                    <Tag tertiary>\n                      {t(`noumena.profile_summary.followers`, {\n                        postProcess: 'interval',\n                        count: followers || 0,\n                      })}\n                    </Tag>\n                  )}\n                  {disabled && <Tag tertiary>{t(`noumena.archived`)}</Tag>}\n                  {aboutToExpireInfo.showLabel && (\n                    <Tag\n                      secondary\n                      icon={<NoumStatusIcon name=\"time_m\" size={16} />}\n                    >\n                      {`${t('noumena.money.subscription.noum.expires.text', {\n                        day: aboutToExpireInfo.days,\n                      })} `}\n                      {isOwner && (\n                        <TSpan\n                          colorToken=\"--text-tag-brand-primary-default\"\n                          font=\"link-m\"\n                          onClick={toggleRenewModal}\n                        >\n                          {`${t('noumena.money.myplans.renew')}`}\n                        </TSpan>\n                      )}\n                    </Tag>\n                  )}\n                  {expiredInfo.showLabel && !!validityDate && (\n                    <Tag\n                      danger\n                      icon={<NoumStatusIcon name=\"time_m_red\" size={16} />}\n                    >\n                      {expiredInfo.showGracePeriodLabel\n                        ? `${t(\n                            `noumena.money.subscription.noum.grace.period.text`,\n                            {\n                              day: expiredInfo.days,\n                            },\n                          )} `\n                        : `${t('noumena.money.subscription.noum.expired.text', {\n                            date: format(new Date(validityDate), 'dd MMM yyyy'),\n                          })} `}\n                      {isOwner && (\n                        <TSpan\n                          colorToken=\"--text-tag-brand-primary-default\"\n                          font=\"link-m\"\n                          onClick={toggleRenewModal}\n                        >\n                          {`${t('noumena.money.myplans.renew')}`}\n                        </TSpan>\n                      )}\n                    </Tag>\n                  )}\n                </TagSection>\n                <ProfileSummaryNameAndFavouritesContainer>\n                  <ProfileSummaryName\n                    disabled={disabled}\n                    data-testid=\"tprofileSummaryName\"\n                  >\n                    {isMasterNoum ? ownerName : name}\n                  </ProfileSummaryName>\n                  {isMobile &&\n                    !isUpdateMode &&\n                    isPublished &&\n                    !isUnregistered && <Favourite />}\n                </ProfileSummaryNameAndFavouritesContainer>\n                {isMasterNoum && location ? (\n                  <ProfileSummaryLocation data-testid=\"tprofileSummaryLocation\">\n                    {location}\n                  </ProfileSummaryLocation>\n                ) : null}\n                <TSpan\n                  font=\"body-m\"\n                  $fill\n                  colorToken=\"--text-card-neutral-default\"\n                >\n                  {disabled\n                    ? t(`noumena.profile_summary.archived`, { lastUpdated })\n                    : lastUpdated\n                    ? t(`noumena.profile_summary.last_update`, {\n                        lastUpdated,\n                      })\n                    : null}\n                </TSpan>\n              </ProfileSummaryDataContainer>\n              {isUpdateMode && (\n                <ProfileSummaryEdit>\n                  <Button\n                    leftIcon={\n                      <Icon\n                        name=\"edit_m\"\n                        size={24}\n                        color=\"--icon-button-neutral-default\"\n                      />\n                    }\n                    size=\"small\"\n                    tertiary\n                    onClick={toggleEditOpen}\n                    disabled={\n                      editSpace?.category?.name.toLowerCase() ===\n                      'rise_application'\n                    }\n                  >\n                    {t(`noumena.chamber.edit_button`)}\n                  </Button>\n                </ProfileSummaryEdit>\n              )}\n            </ProfileSummaryHead>\n            <ProfileSummaryDescription\n              data-testid=\"tprofileSummaryDescription\"\n              isMobile={summaryDescription?.length ? isMobile : true}\n            >\n              {summaryDescription}\n            </ProfileSummaryDescription>\n            {isMasterNoum && flags.cqInHomeNoumsProfile && (\n              <>\n                <Spacer height={24} />\n                <HomeNoumCQToken />\n              </>\n            )}\n            {isMasterNoum &&\n            isOwner &&\n            space?.uid?.userStatus === UserStatus.Active &&\n            (!space?.percentCompleted || space?.percentCompleted < 100) ? (\n              <CompletenessWrapper>\n                <ChamberCompleteness />\n              </CompletenessWrapper>\n            ) : null}\n          </StyledCard>\n        )}\n        <>\n          {isMasterNoum ? (\n            <PersonalDetailsModal\n              isOpen={isEditOpen}\n              handleClose={toggleEditOpen}\n              handleSuccess={toggleEditOpen}\n              spaceId={spaceId}\n              isUpdateMode\n            />\n          ) : isEditOpen ? (\n            <ProjectCreate\n              isOpen={isEditOpen}\n              handleClose={toggleEditOpen}\n              handleSuccess={toggleEditOpen}\n              isUpdateMode\n              summaryData={summaryData}\n            />\n          ) : null}\n        </>\n        {isRenewModalOpen && flags.paymentSubscriptions && isOwner && (\n          <RenewNoumModal\n            onClose={toggleRenewModal}\n            open={isRenewModalOpen}\n            chamber_id={noumValidity?.chember}\n            noumExpiryDate={noumValidity?.validityDate}\n            noum_transaction_fee_id={noumValidity?.noumTransactionFeeId}\n          />\n        )}\n      </ProfileSummaryContainer>\n    );\n  },\n);\n\nexport default ProfileSummaryOld;\n","import { Icon } from '@/components/Icon';\nimport { t } from 'i18next';\nimport { type DropdownValueType } from '@/components/Dropdown';\nimport { type ProfileSizeType } from './types';\n\nexport const PROFLE_SIZE: Record<ProfileSizeType, number> = {\n  XXXXL: 343,\n  XXXL: 168,\n  XXL: 128,\n  XVL: 80,\n  XL: 56,\n  L: 40,\n  M: 24,\n  S: 16,\n};\n\nexport const PROFILE_RADIUS: Record<ProfileSizeType, number> = {\n  XXXXL: 10,\n  XXXL: 12,\n  XXL: 12,\n  XVL: 12,\n  XL: 12,\n  L: 12,\n  M: 6,\n  S: 4,\n};\n\nexport const PROFILE_EDIT_BUTTON: Record<ProfileSizeType, number> = {\n  XXXXL: 40,\n  XXXL: 40,\n  XXL: 40,\n  XVL: 40,\n  XL: 20,\n  L: 20,\n  M: 6,\n  S: 6,\n};\n\nexport const PROFILE_EDIT_ICON: Record<ProfileSizeType, number> = {\n  XXXXL: 24,\n  XXXL: 24,\n  XXL: 24,\n  XVL: 20,\n  XL: 12,\n  L: 12,\n  M: 3,\n  S: 3,\n};\n\nexport const PROFILE_EDIT_ICON_RADIUS: Record<ProfileSizeType, number> = {\n  XXXXL: 8,\n  XXXL: 8,\n  XXL: 8,\n  XVL: 8,\n  XL: 4,\n  L: 4,\n  M: 2,\n  S: 2,\n};\n\nexport const PROFILE_EDIT_ICON_POSITION: Record<ProfileSizeType, number> = {\n  XXXXL: 12,\n  XXXL: 12,\n  XXL: 12,\n  XVL: 12,\n  XL: 6,\n  L: 6,\n  M: 2,\n  S: 2,\n};\n\nexport const bannerEditOptions: DropdownValueType<string>[] = [\n  {\n    label: t(`noumena.editor.Cover_photo_add_new_photo`),\n    key: t(`noumena.editor.Cover_photo_add_new_photo`),\n    type: 'value',\n    value: t(`noumena.editor.Cover_photo_add_new_photo`),\n    icon: (\n      <Icon\n        color=\"--icon-tablecell-neutral-highlighted\"\n        size={24}\n        name=\"plus_m\"\n      />\n    ),\n  },\n  {\n    value: t('noumena.editor.Cover_photo_remove'),\n    key: t('noumena.editor.Cover_photo_remove'),\n    type: 'value',\n    label: t('noumena.editor.Cover_photo_remove'),\n    intent: 'danger',\n    labelColor: '--text-tablecell-header-danger-primary-highlighted',\n    icon: (\n      <Icon\n        name=\"delete_m\"\n        size={24}\n        color=\"--text-tablecell-danger-primary-default\"\n      />\n    ),\n  },\n];\n","import styled from 'styled-components';\nimport { Icon } from '@/components/Icon';\nimport { Button } from '@/components/Button';\nimport { Stack } from '@/layout';\nimport { type CommonProfileProps } from './types';\n\nexport const StyledAvatarContainer = styled.div<{\n  size: number | null;\n  radius: number;\n  disabled?: boolean;\n  opacity?: number;\n  isBanner: boolean;\n  isCoverUrl?: boolean;\n}>`\n  width: ${(props) =>\n    props.isBanner ? '100%' : props.size ? `${props.size}px` : '100%'};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: ${(props) => (props.size ? `${props.size}px` : 'fit-content')};\n  border-radius: ${(props) => props.radius}px;\n  overflow: hidden;\n  img {\n    object-fit: cover;\n    ${(props) =>\n      props.disabled &&\n      `\n    filter: grayscale(100%);\n    -webkit-filter: grayscale(100%);\n    `}\n  }\n  position: relative;\n  opacity: ${({ opacity }) => opacity ?? 1};\n  border: ${(props) =>\n    props.isCoverUrl && `2px dashed var(--border-card-neutral-default)`};\n`;\n\nexport const StyledButton = styled.div<{\n  size: number;\n  radius: number;\n  position: number;\n  isBanner?: boolean;\n}>`\n  width: ${({ isBanner }) => isBanner && '173px'};\n  height: ${({ isBanner }) => isBanner && '36px'};\n  border-radius: ${({ radius }) => radius && `${radius}px`};\n  position: absolute;\n  top: ${({ position, isBanner }) => isBanner && position && `${position}px`};\n  right: ${({ position }) => position && `${position}px`};\n  bottom: ${({ position, isBanner }) =>\n    !isBanner && position && `${position}px`};\n  cursor: pointer;\n  vertical-align: middle;\n  gap: 10px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-base-gray-transparency-40);\n  padding: ${({ isBanner }) => !isBanner && '4px'};\n  :hover {\n    background: var(--color-base-gray-transparency-50);\n  }\n`;\n\nexport const StyledIcon = styled(Icon)<{\n  overridedIcon: CommonProfileProps['overridedIcon'];\n  borderRadius: number;\n}>`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  background: ${({ overridedIcon }) =>\n    overridedIcon === 'arrow_down_m'\n      ? 'var(--bg-button-success-secondary-default)'\n      : 'var(--bg-button-neutral-default)'};\n  border-radius: ${({ borderRadius }) => `${borderRadius}px`};\n  border: ${({ overridedIcon }) =>\n    overridedIcon === 'arrow_down_m'\n      ? '2px solid var(--border-avatar-neutral-alt-default)'\n      : '2px solid var(--border-avatar-neutral-alt-default)'};\n  box-shadow: 0px 4px 32px rgba(32, 17, 62, 0.08);\n`;\n\nexport const ProfileBannerImage = styled.img<{\n  size?: number;\n  isBanner?: boolean;\n}>`\n  height: ${({ size }) => size && size}px;\n  width: inherit;\n  object-fit: ${({ isBanner }) => (isBanner ? 'cover' : 'contain')};\n`;\n\nexport const BannerDescription = styled.div`\n  position: absolute;\n  top: 16px;\n  left: 16px;\n`;\n\nexport const DropDownBannerbutton = styled(Button)<{ isFocused?: boolean }>`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  background-color: ${({ isFocused }) =>\n    isFocused\n      ? 'var(--color-base-gray-transparency-50)'\n      : 'var(--color-base-gray-transparency-40)'};\n  color: var(--bg-card-neutral-alt-default);\n  :hover {\n    background: var(--color-base-gray-transparency-50);\n  }\n`;\n\nexport const DropDownItems = styled(Stack)`\n  cursor: pointer;\n  :hover {\n    background: var(--bg-card-brand-secondary-highlighted);\n  }\n`;\n","import { type ImgHTMLAttributes, type MouseEventHandler } from 'react';\nimport { type Icons } from '@/components/Icon/Icon';\nimport { type Maybe } from '@/common/types';\n\nexport const ProfileSize = {\n  XXXXL: 'XXXXL',\n  XXXL: 'XXXL',\n  XXL: 'XXL',\n  XVL: 'XVL',\n  XL: 'XL',\n  L: 'L',\n  M: 'M',\n  S: 'S',\n} as const;\n\nexport type ProfileSizeType = keyof typeof ProfileSize;\n\nexport interface CommonProfileProps {\n  /** default undefined - will render a placeholder avatar in this case */\n  url?: string | null;\n  /** default \"L\" */\n  size?: ProfileSizeType;\n  /** default false */\n  editable?: boolean;\n  /** default undefined */\n  onClear?: () => void;\n  /** default undefined */\n  onClose?: () => void;\n  /** default undefined */\n  fileSize?: Maybe<number>;\n  /** default undefined */\n  isUploadStarted?: boolean;\n  /** default undefined */\n  isUploadComplete?: boolean;\n  /** default undefined */\n  onlyEditable?: boolean;\n  /** maximum file size in MB for uploading, default undefined */\n  maximumFileSize?: number;\n  /** default image place holder */\n  defaultImagePlaceHolder?: string;\n\n  disabled?: boolean;\n  /* Custom width */\n  width?: number;\n  /* Custom height */\n  height?: number;\n  /** Custom Border Radius */\n  borderRadius?: number;\n\n  opacity?: number;\n  overridedIcon?: 'arrow_up_m' | 'arrow_down_m';\n  isBanner?: boolean;\n  isLoadingBanner?: boolean;\n}\n\nexport interface ProfileBannerEditIconProps {\n  name: keyof typeof Icons;\n  size?: ProfileSizeType;\n  color?: string;\n  isUploading?: boolean;\n  onClick?: MouseEventHandler<HTMLInputElement>;\n  isBanner?: boolean;\n}\n\nexport type HTMLAvatarProps = ImgHTMLAttributes<HTMLInputElement>;\n\nexport type RawHTMLAvatarProps = Omit<HTMLAvatarProps, 'children'>;\n\nexport type AvatarProps = HTMLAvatarProps & CommonProfileProps;\n","import { Icon } from '@/components/Icon';\nimport { TSpan } from '@/components/Typography';\nimport { t } from 'i18next';\nimport {\n  PROFILE_EDIT_BUTTON,\n  PROFILE_EDIT_ICON_POSITION,\n  PROFILE_EDIT_ICON_RADIUS,\n  PROFILE_EDIT_ICON,\n} from './constants';\nimport { StyledButton } from './styles';\nimport { type ProfileBannerEditIconProps, ProfileSize } from './types';\n\nexport const BannerEditButton = ({\n  name,\n  size,\n  color,\n  onClick,\n  isBanner,\n}: ProfileBannerEditIconProps) => {\n  const buttonSize = PROFILE_EDIT_BUTTON[size || ProfileSize.L];\n  const position = isBanner\n    ? 16\n    : PROFILE_EDIT_ICON_POSITION[size || ProfileSize.L];\n  const radius = isBanner ? 8 : PROFILE_EDIT_ICON_RADIUS[size || ProfileSize.L];\n  const iconSize = isBanner ? 24 : PROFILE_EDIT_ICON[size || ProfileSize.L];\n\n  return (\n    <StyledButton\n      data-testid=\"avatarEditButton\"\n      size={buttonSize}\n      position={position}\n      radius={radius}\n      onClick={onClick}\n      isBanner={isBanner}\n    >\n      <Icon\n        name={name}\n        size={iconSize}\n        color={color}\n        data-testid=\"avatarEditButtonIcon\"\n      />\n      {isBanner && (\n        <TSpan font=\"button-s\" colorToken=\"--bg-card-neutral-alt-default\">\n          {t(`noumena.avatar.add_button_text`)}\n        </TSpan>\n      )}\n    </StyledButton>\n  );\n};\n","import {\n  type MouseEvent,\n  useEffect,\n  useMemo,\n  useState,\n  useRef,\n  Fragment,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Icon } from '@/components/Icon';\nimport { Spinner } from '@/components/Spinner';\nimport { isValidFileSize } from '@/utils/file';\nimport { useClickOutside, useToast } from '@/hooks';\nimport { TSpan } from '@/components/Typography';\nimport { Dropdown, type DropdownTargetProps } from '@/components/Dropdown';\nimport { Stack } from '@/layout';\nimport { bannerEditOptions, PROFILE_RADIUS, PROFLE_SIZE } from './constants';\nimport {\n  BannerDescription,\n  DropDownBannerbutton,\n  DropDownItems,\n  ProfileBannerImage,\n  StyledAvatarContainer,\n} from './styles';\nimport { type AvatarProps, ProfileSize } from './types';\nimport { BannerEditButton } from './BannerEditButton';\n\nexport const ProfileBanner = ({\n  disabled,\n  url,\n  size,\n  fileSize,\n  maximumFileSize,\n  editable,\n  isUploadComplete,\n  isUploadStarted,\n  onClick,\n  onClose,\n  width: customWidth,\n  height: customHeight,\n  borderRadius: customBorderRadius,\n  opacity,\n  isBanner = true,\n  onClear,\n  loading,\n}: AvatarProps) => {\n  const [isFocused, setisFocused] = useState(false);\n  const height = customWidth || PROFLE_SIZE[size || ProfileSize.L];\n  const containerRef = useRef(null);\n  useClickOutside(containerRef, true, () => setisFocused(false));\n  const borderRadius =\n    customBorderRadius ?? PROFILE_RADIUS[size || ProfileSize.L];\n\n  const { t } = useTranslation();\n  const { addToast } = useToast();\n  const isUploading = useMemo(\n    () => (isUploadStarted && !isUploadComplete) || false,\n    [isUploadComplete, isUploadStarted],\n  );\n\n  const isCoverUrl = useMemo(\n    () => (isBanner && editable && !url) || false,\n    [editable, isBanner, url],\n  );\n\n  const handleClick = (event: MouseEvent<HTMLInputElement>) => {\n    event.preventDefault();\n    if (editable) onClick?.(event);\n  };\n\n  useEffect(() => {\n    if (editable && !isValidFileSize(fileSize || 0, maximumFileSize)) {\n      onClose?.();\n    }\n  }, [editable, fileSize, maximumFileSize, addToast, t, onClose]);\n\n  const handleSelectDropdown = (\n    event: MouseEvent<HTMLInputElement>,\n    selectedDropdown?: string,\n  ) => {\n    setisFocused(false);\n    switch (selectedDropdown) {\n      case 'Add New Photo':\n        handleClick(event);\n        break;\n      case 'Remove':\n        onClear?.();\n        break;\n    }\n  };\n\n  return (\n    <>\n      <StyledAvatarContainer\n        aria-label=\"profile-banner\"\n        data-testid=\"avatarContainer\"\n        size={isBanner ? customHeight! : height}\n        radius={borderRadius}\n        disabled={disabled}\n        opacity={opacity}\n        isBanner={isBanner}\n        isCoverUrl={isCoverUrl}\n      >\n        {url ? (\n          <ProfileBannerImage\n            src={url}\n            size={isBanner ? customHeight : customWidth || height}\n            isBanner={isBanner}\n          />\n        ) : !isBanner ? (\n          <Icon\n            imageIconName=\"avatar_m\"\n            size={height}\n            data-testid=\"avatarIcon\"\n          />\n        ) : (\n          editable && (\n            <Icon\n              name=\"picture_m\"\n              size={150}\n              data-testid=\"avatarIcon\"\n              color=\"--color-base-gray-90\"\n            />\n          )\n        )}\n        {(isUploading || loading) && <Spinner />}\n        {!isUploading && editable && (\n          <div ref={containerRef}>\n            {isBanner && url ? (\n              <Dropdown\n                containerWidth=\"max-content\"\n                options={bannerEditOptions}\n                isAnimation={false}\n                usePortal={false}\n                observerMinHeight=\"0\"\n                renderContainerFromBottom\n                isOpen={isFocused}\n                optionsRenderer={() => (\n                  <Stack vertical>\n                    {bannerEditOptions.map((item) => (\n                      <DropDownItems\n                        fullWidth\n                        padding=\"13px\"\n                        gap={21}\n                        borderBottom\n                        align=\"center\"\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          handleSelectDropdown(\n                            e as MouseEvent<HTMLInputElement>,\n                            item.value,\n                          );\n                        }}\n                      >\n                        {item.icon}\n                        <TSpan\n                          font=\"body-m-bold\"\n                          colorToken={\n                            item.intent === 'danger'\n                              ? '--text-tablecell-header-danger-primary-highlighted'\n                              : undefined\n                          }\n                        >\n                          {item.label}\n                        </TSpan>\n                      </DropDownItems>\n                    ))}\n                  </Stack>\n                )}\n              >\n                {({\n                  targetRef,\n                  targetProps,\n                }: DropdownTargetProps<HTMLButtonElement>) => (\n                  <DropDownBannerbutton\n                    ref={targetRef}\n                    {...targetProps}\n                    size=\"small\"\n                    isFocused={isFocused}\n                    leftIcon={\n                      <Icon\n                        size={24}\n                        name=\"picture_m\"\n                        color=\"--icon-tag-neutral-alt-default\"\n                      />\n                    }\n                    color=\"--icon-tag-neutral-alt-default\"\n                    onClick={() => setisFocused(!isFocused)}\n                  >\n                    <TSpan\n                      font=\"button-s\"\n                      colorToken=\"--bg-card-neutral-alt-default\"\n                    >\n                      {t(`noumena.avatar.editable_button_text`)}\n                    </TSpan>\n                  </DropDownBannerbutton>\n                )}\n              </Dropdown>\n            ) : (\n              <BannerEditButton\n                size={size}\n                name=\"picture_m\"\n                color=\"--icon-tag-neutral-alt-default\"\n                onClick={handleClick}\n                isBanner={isBanner}\n              />\n            )}\n          </div>\n        )}\n        {isBanner && editable && !url && (\n          <BannerDescription>\n            <TSpan font=\"button-s\" colorToken=\"--text-button-neutral-disabled\">\n              {t(`noumena.editor.Cover_photo_description`)}\n            </TSpan>\n          </BannerDescription>\n        )}\n      </StyledAvatarContainer>\n    </>\n  );\n};\n","import { memo } from 'react';\nimport { imageTypes } from '@/constants/fileTypes';\nimport { Upload } from '@/features/upload/components';\nimport { type CommonProfileProps } from '../types';\nimport { ProfileBanner } from '../ProfileBanner';\n\nexport interface EditableAvatarProps extends CommonProfileProps {\n  onContentChange: (next: string) => void;\n  isBanner?: boolean;\n  loading?: boolean;\n}\n\nexport const ProfileBannerEditable = memo(\n  ({\n    url,\n    size,\n    maximumFileSize,\n    defaultImagePlaceHolder,\n    onContentChange,\n    onClear,\n    onlyEditable,\n    isBanner = true,\n    height,\n    borderRadius,\n    loading,\n  }: EditableAvatarProps) => (\n    <Upload<HTMLDivElement>\n      url={url || ''}\n      maxSize={maximumFileSize}\n      acceptedFileTypes={imageTypes}\n      onContentChange={onContentChange}\n    >\n      {({ triggerElRef, ...rest }) => (\n        <ProfileBanner\n          isUploadComplete={rest.isUploadComplete}\n          isUploadStarted={rest.isUploadStarted}\n          url={url || defaultImagePlaceHolder}\n          size={size}\n          editable={onlyEditable}\n          fileSize={rest.fileSize}\n          maximumFileSize={maximumFileSize}\n          onClick={rest.onClickHandler}\n          onClear={onClear}\n          onClose={rest.onCloseHandler}\n          isBanner={isBanner}\n          height={height}\n          borderRadius={borderRadius}\n          isLoadingBanner={loading}\n        />\n      )}\n    </Upload>\n  ),\n);\n","import { Stack } from '@/layout';\nimport styled from 'styled-components';\n\nconst Container = styled(Stack).attrs({\n  fullWidth: true,\n})`\n  background: var(--bg-card-neutral-default);\n  border-radius: 8px;\n  margin-top: 16px;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 16px;\n`;\n\nexport default {\n  Container,\n};\n","import { type ProjectChamberCategory } from '@/apollo/generated/types';\nimport { type INoumValidity } from '../../ViewChamber/types';\n\nexport interface IProfileSummary {\n  disabled?: boolean;\n  name?: string;\n  bio?: string;\n  title?: string;\n  location?: string;\n  imageURL?: string;\n  followers?: number;\n  lastUpdated?: string;\n  loading?: boolean;\n  icon?: JSX.Element;\n  ownerName?: string;\n  ownerImageURL?: string;\n  ownerTitle?: string;\n  ownerBio?: string;\n  isMasterNoum?: boolean;\n  isSecretNoum?: boolean;\n  spaceId?: string;\n  isUpdateMode?: boolean;\n  category?: ProjectChamberCategory;\n  isNoumExpired?: boolean;\n  noumValidity?: INoumValidity;\n  isPublished?: boolean;\n  coverURL?: string;\n  isCustomPreview?: boolean;\n}\n\nexport enum Privacy {\n  PUBLIC = 'Public',\n  PRIVATE = 'Private',\n}\n\nexport const RISE_CATEGORY_NAME = 'Rise';\n","import { TSpan } from '@/components/Typography';\nimport { Stack } from '@/layout';\nimport { Trans, useTranslation } from 'react-i18next';\nimport {\n  NoumHeaderAdditionalDetails,\n  OwnedWrapper,\n  ProfileSummaryLocation,\n} from './styles';\n\nexport interface NoumBioProps {\n  isMasterNoum: boolean | undefined;\n  disabled: boolean | undefined;\n  lastUpdated: string | undefined;\n  location: string | undefined;\n  ownedBy: string | undefined;\n  chamberTitle: string | undefined;\n}\n\nconst NoumBio = ({\n  chamberTitle,\n  isMasterNoum,\n  disabled,\n  lastUpdated,\n  location,\n  ownedBy,\n}: NoumBioProps) => {\n  const { t } = useTranslation();\n\n  return isMasterNoum ? (\n    <Stack gap={8}>\n      <TSpan font=\"body-m\" $fill colorToken=\"--text-card-neutral-default\">\n        {chamberTitle}\n      </TSpan>\n      <TSpan>&#xb7;</TSpan>\n      <ProfileSummaryLocation data-testid=\"tprofileSummaryLocation\">\n        {location}\n      </ProfileSummaryLocation>\n    </Stack>\n  ) : (\n    <NoumHeaderAdditionalDetails>\n      <OwnedWrapper>\n        <Trans\n          i18nKey=\"noumena.profile_summary.owned_by\"\n          values={{\n            name: ownedBy,\n          }}\n          components={{\n            strong: <TSpan font=\"body-m\">{ownedBy}</TSpan>,\n          }}\n        />\n      </OwnedWrapper>\n      <TSpan>&#xb7;</TSpan>\n      <TSpan font=\"body-m\" $fill colorToken=\"--text-card-neutral-default\">\n        {disabled\n          ? t(`noumena.profile_summary.archived`, {\n              lastUpdated,\n            })\n          : lastUpdated\n          ? t(`noumena.profile_summary.last_update`, {\n              lastUpdated,\n            })\n          : null}\n      </TSpan>\n    </NoumHeaderAdditionalDetails>\n  );\n};\n\nexport default NoumBio;\n","import { type FC, useCallback, useEffect, useMemo, useState } from 'react';\nimport { t } from 'i18next';\nimport {\n  SpaceTypeEnum,\n  ProjectChamberType,\n  ConnectionRequestStatus,\n  ConnectionRequestTypeEnum,\n} from '@/apollo/generated/types';\nimport { Stack } from '@/layout';\nimport { TSpan } from '@/components/Typography';\nimport { useNoumContext } from '@/screens/Chamber/ViewChamber/ChamberProvider';\nimport { ConnectionDetailsModal } from '@/screens/Chamber/components/modals/ConnectionDetailsModal/ConnectionDetailsModal';\nimport { ConnectionInviteModal } from '@/screens/Chamber/components/modals/ConnectionInviteModal/ConnectionInviteModal';\nimport { NetworkStatus } from '@apollo/client';\n\nimport { useGetNoumByLinkContext } from '@/screens/Chamber/components/RightPanel/NoumByLinkProvider';\nimport { useLaunchDarkly } from '@/hooks/launchDarkly';\nimport { useConnectionDetailsHelper } from '@/screens/Chamber/components/modals/ConnectionDetailsModal/useConnectionDetailsHelper';\nimport { ConnectionDetailModalTabEnum } from '@/screens/Chamber/components/modals/ConnectionDetailsModal/types';\nimport { useToggle } from '@/hooks';\nimport NoumDashboardMetricsModal from '@/screens/Chamber/components/modals/NoumDashboardMetricsModal';\nimport {\n  NoumDashboardMetricsModalTabEnum,\n  NoumDashboradTypeEnum,\n} from '@/screens/Chamber/components/modals/NoumDashboardMetricsModal/types';\nimport { ChamberVisibilityInviteModal } from '@/screens/Chamber/components/modals/ChamberVisibilityInvite';\nimport {\n  useRequestedConnections,\n  useReceivedConnections,\n} from '@/features/noums/hooks/spaceQuery';\nimport TokenModal from '@/screens/Money/Payments/Tokens/TokenModal';\nimport { useGetTokenQuery } from '@/apollo/graphql';\nimport { StyledSkeleton } from '@/components/ChamberBox/SkeletonChamberBox';\nimport { useEvents } from '@/features/events/hooks';\nimport { RequestsAndInvitesModal } from '../modals/RequestsAndInvites';\nimport { InfoStackWrapper, NoumsMemberButton } from './styles';\nimport { RISE_CATEGORY_NAME } from './types';\n\nexport const NoumMembersInformation: FC = () => {\n  const {\n    connectedMembersCount,\n    followersCount: spaceFollowersCount = 0,\n    isMasterNoum,\n    space,\n    isOwner,\n    isFollowing,\n    isConnected,\n    refetchConnectedMembers,\n    refetchFollowersCount,\n    noumType,\n    projectType,\n    connectionStatus,\n    lastUpdatedConnectionId,\n    loadingSpace,\n  } = useNoumContext();\n\n  const { eventMeta, networkStatus } = useEvents({\n    chamberId: space?._id || '',\n    preventGetEvents: false,\n  });\n  const {\n    data: tokenData,\n    refetch: tokenRefetch,\n    loading: loadingTokenData,\n  } = useGetTokenQuery();\n  const [defaultTab, setDefaultTab] = useState<string | undefined>();\n  const [dashboardType, setDashboardType] = useState<\n    NoumDashboradTypeEnum | undefined\n  >();\n  const [invitedNoumId, setInvitedNoumId] = useState<string | undefined>();\n  const [isOpenInviteModal, setOpenInviteModal] = useState<boolean>(false);\n  const [isQuickOpenInviteModal, setQuickOpenInviteModal] = useState(false);\n  const [openTokenModal, setOpenTokenModal] = useState(false);\n  const [isModalOpen, toggleModalOpen] = useToggle();\n  const {\n    flags: { noumDashboardMetrics },\n  } = useLaunchDarkly();\n\n  const isClickableConnections =\n    isOwner || isConnected || (isMasterNoum && connectedMembersCount > 0);\n\n  const isInviteBox = useMemo(\n    () =>\n      (projectType === ProjectChamberType.Public ||\n        projectType === ProjectChamberType.Secret) &&\n      !isMasterNoum,\n    [isMasterNoum, projectType],\n  );\n\n  const {\n    data: requestedConnection,\n    refetch: refetchRequestConnection,\n    loading: loadingRequestConnection,\n  } = useRequestedConnections({\n    limit: 3,\n    requestFrom: isMasterNoum ? null : space?._id,\n    status: ConnectionRequestStatus.Invited,\n  });\n\n  const {\n    data: receivedConnections,\n    refetch: refetchReceivedConnection,\n    loading: loadingReceivedConnection,\n  } = useReceivedConnections(\n    isMasterNoum ? { limit: 3 } : { spaceId: space?._id, limit: 3 },\n    isOwner,\n  );\n\n  const handleClickConnections = useCallback(() => {\n    if (isClickableConnections) {\n      if (isMasterNoum || !isOwner || !noumDashboardMetrics)\n        setDefaultTab(ConnectionDetailModalTabEnum.Connections);\n      else if (isOwner) {\n        setDashboardType(NoumDashboradTypeEnum.connections);\n        setDefaultTab(NoumDashboardMetricsModalTabEnum.Statistics);\n      } else setDefaultTab(ConnectionDetailModalTabEnum.Connections);\n    }\n  }, [isClickableConnections, isMasterNoum, isOwner, noumDashboardMetrics]);\n\n  const { noumLinkData, getLinkData, loadingLinked } =\n    useGetNoumByLinkContext();\n\n  const { totalCount, loading: connectionDetailsLoading } =\n    useConnectionDetailsHelper(\n      '',\n      ConnectionDetailModalTabEnum.ProjectSpaces,\n      undefined,\n      isMasterNoum ? space?.uid?._id : null,\n    );\n\n  const connectedProjectsCount = isMasterNoum ? totalCount : 0;\n\n  const { totalCount: userNoumsCount, loading: loadingUserNoums } =\n    useConnectionDetailsHelper(\n      '',\n      ConnectionDetailModalTabEnum.OwnedNoums,\n      undefined,\n      isMasterNoum ? space?.uid?._id : null,\n    );\n\n  useEffect(() => {\n    getLinkData(space?._id || '');\n    refetchConnectedMembers();\n    if (refetchFollowersCount && space?._id) refetchFollowersCount();\n  }, [getLinkData, refetchConnectedMembers, refetchFollowersCount, space?._id]);\n\n  const linkedNoums = useMemo(\n    () => noumLinkData?.getNoumLinkByNoumId?.link?.linkedNoums || [],\n    [noumLinkData?.getNoumLinkByNoumId?.link?.linkedNoums],\n  );\n\n  const linkedNoumsCount = useMemo(\n    () => noumLinkData?.getNoumLinkByNoumId?.link?.linkedNoumsCount || 0,\n    [noumLinkData?.getNoumLinkByNoumId?.link?.linkedNoumsCount],\n  );\n\n  const isLinked = useMemo(\n    () => noumLinkData?.getNoumLinkByNoumId?.link || false,\n    [noumLinkData],\n  );\n\n  const isSummaryDescrisption = useMemo(\n    () => space?.description || space?.uid?.bio || undefined,\n    [space?.description, space?.uid?.bio],\n  );\n\n  const followersCount = useMemo(\n    () => (isLinked ? isLinked?.followersCount : spaceFollowersCount),\n    [isLinked, spaceFollowersCount],\n  );\n\n  const showFollowers = useMemo(\n    () =>\n      space?.type !== SpaceTypeEnum.Home &&\n      space?.projectType !== ProjectChamberType.Secret &&\n      noumType !== SpaceTypeEnum.RiseApplication &&\n      space?.category?.name !== RISE_CATEGORY_NAME,\n    [noumType, space?.category?.name, space?.projectType, space?.type],\n  );\n\n  const showCompleteness = useMemo(\n    () => !space?.percentCompleted || space?.percentCompleted < 100,\n    [space?.percentCompleted],\n  );\n\n  const requestConnectionCount = useMemo(\n    () =>\n      requestedConnection?.requestedConnection?.count &&\n      requestedConnection?.requestedConnection?.count > 0,\n    [requestedConnection?.requestedConnection?.count],\n  );\n\n  const receivedConnectionCount = useMemo(\n    () =>\n      receivedConnections?.receivedConnectionRequest?.count &&\n      receivedConnections?.receivedConnectionRequest?.count > 0,\n    [receivedConnections?.receivedConnectionRequest?.count],\n  );\n\n  const info = useMemo(() => {\n    if (tokenData?.getSpaceByType && tokenData?.getSpaceByType[0]) {\n      return tokenData?.getSpaceByType[0];\n    }\n    return {\n      token: {\n        count: '--',\n      },\n    };\n  }, [tokenData]);\n\n  const refetchReceivedRequests = () =>\n    refetchReceivedConnection(isMasterNoum ? {} : { spaceId: space?._id });\n\n  useEffect(() => {\n    if (\n      lastUpdatedConnectionId &&\n      requestedConnection?.requestedConnection?.data &&\n      requestedConnection?.requestedConnection?.data?.findIndex(\n        (x) => x?.connectionId === lastUpdatedConnectionId,\n      ) > -1\n    )\n      refetchRequestConnection();\n  }, [\n    requestedConnection?.requestedConnection?.data,\n    lastUpdatedConnectionId,\n    refetchRequestConnection,\n  ]);\n\n  const rewardInfoCount = useMemo(\n    () => typeof info.token?.count === 'number' && info.token.count > 0,\n    [info.token?.count],\n  );\n\n  useEffect(() => {\n    if (!showCompleteness) {\n      tokenRefetch();\n    }\n  }, [showCompleteness, tokenRefetch]);\n\n  useEffect(() => {\n    getLinkData(space?._id || '');\n    /* this needs to be called only when spaceFollowersCount is changed */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [spaceFollowersCount]);\n\n  return (\n    <>\n      {(isOwner ||\n        isMasterNoum ||\n        connectionStatus === ConnectionRequestTypeEnum.Approved) && (\n        <InfoStackWrapper isSummaryDescription={!!isSummaryDescrisption}>\n          {!loadingSpace &&\n          connectedMembersCount > 0 &&\n          noumType !== SpaceTypeEnum.RiseApplication ? (\n            <NoumsMemberButton\n              textOnly\n              onClick={handleClickConnections}\n              enableClick={isClickableConnections}\n            >\n              <Stack gap={4} align=\"center\">\n                <TSpan\n                  font=\"body-m-bold\"\n                  colorToken=\"--text-tablecell-header-neutral-default\"\n                >\n                  {connectedMembersCount.toLocaleString()}\n                </TSpan>\n                <TSpan\n                  font=\"footnote-bold\"\n                  colorToken=\"--text-tablecell-header-neutral-default\"\n                >\n                  {t('noumena.chamber.connections', {\n                    postProcess: 'interval',\n                    count: connectedMembersCount,\n                  })}\n                </TSpan>\n              </Stack>\n            </NoumsMemberButton>\n          ) : (\n            loadingSpace && <StyledSkeleton w={100} h={15} r={8} />\n          )}\n          {!loadingSpace && showFollowers && followersCount > 0 ? (\n            <NoumsMemberButton\n              textOnly\n              onClick={() =>\n                isOwner && setDefaultTab(ConnectionDetailModalTabEnum.Followers)\n              }\n              enableClick={isClickableConnections}\n            >\n              <Stack gap={4} align=\"center\">\n                <TSpan\n                  font=\"body-m-bold\"\n                  colorToken=\"--text-tablecell-header-neutral-default\"\n                >\n                  {followersCount.toLocaleString()}\n                </TSpan>\n                <TSpan\n                  font=\"footnote-bold\"\n                  colorToken=\"--text-tablecell-header-neutral-default\"\n                >\n                  {t('noumena.chamber.followers', {\n                    postProcess: 'interval',\n                    count: followersCount,\n                  })}\n                </TSpan>\n              </Stack>\n            </NoumsMemberButton>\n          ) : (\n            loadingSpace && <StyledSkeleton w={100} h={15} r={8} />\n          )}\n\n          {!loadingLinked && linkedNoums.length > 0 ? (\n            <NoumsMemberButton\n              textOnly\n              onClick={() => setDefaultTab(ConnectionDetailModalTabEnum.Noums)}\n              enableClick={isClickableConnections}\n            >\n              <Stack gap={4} align=\"center\">\n                <TSpan\n                  font=\"body-m-bold\"\n                  colorToken=\"--text-tablecell-header-neutral-default\"\n                >\n                  {linkedNoumsCount.toLocaleString()}\n                </TSpan>\n                <TSpan\n                  font=\"footnote-bold\"\n                  colorToken=\"--text-tablecell-header-neutral-default\"\n                >\n                  {t('noumena.noum_editor.linked_noum')}\n                </TSpan>\n              </Stack>\n            </NoumsMemberButton>\n          ) : (\n            loadingLinked && <StyledSkeleton w={100} h={15} r={8} />\n          )}\n          {!loadingUserNoums && userNoumsCount > 0 ? (\n            <NoumsMemberButton\n              textOnly\n              onClick={() =>\n                setDefaultTab(ConnectionDetailModalTabEnum.OwnedNoums)\n              }\n              enableClick={isClickableConnections}\n            >\n              <Stack gap={4} align=\"center\">\n                <TSpan\n                  font=\"body-m-bold\"\n                  colorToken=\"--text-tablecell-header-neutral-default\"\n                >\n                  {userNoumsCount.toLocaleString()}\n                </TSpan>\n                <TSpan\n                  font=\"footnote-bold\"\n                  colorToken=\"--text-tablecell-header-neutral-default\"\n                >\n                  {t('noumena.noum_editor.owned_noum')}\n                </TSpan>\n              </Stack>\n            </NoumsMemberButton>\n          ) : (\n            loadingUserNoums && <StyledSkeleton w={100} h={15} r={8} />\n          )}\n\n          {isOwner && isInviteBox ? (\n            <>\n              {!loadingRequestConnection && !!requestConnectionCount ? (\n                <NoumsMemberButton\n                  textOnly\n                  onClick={toggleModalOpen}\n                  enableClick={isClickableConnections}\n                >\n                  <Stack gap={4} align=\"center\">\n                    <TSpan\n                      font=\"body-m-bold\"\n                      colorToken=\"--text-tablecell-header-neutral-default\"\n                    >\n                      {(\n                        requestedConnection?.requestedConnection?.count || 0\n                      ).toLocaleString()}\n                    </TSpan>\n                    <TSpan\n                      font=\"footnote-bold\"\n                      colorToken=\"--text-tablecell-header-neutral-default\"\n                    >\n                      {t('noumena.chamber.modal.invited_by_me')}\n                    </TSpan>\n                  </Stack>\n                </NoumsMemberButton>\n              ) : (\n                loadingRequestConnection && (\n                  <StyledSkeleton w={100} h={15} r={8} />\n                )\n              )}\n            </>\n          ) : (!loadingRequestConnection || !loadingReceivedConnection) &&\n            (!!receivedConnectionCount || !!requestConnectionCount) ? (\n            <NoumsMemberButton\n              textOnly\n              onClick={toggleModalOpen}\n              enableClick={isClickableConnections}\n            >\n              <Stack gap={4} align=\"center\">\n                <TSpan\n                  font=\"body-m-bold\"\n                  colorToken=\"--text-tablecell-header-neutral-default\"\n                >\n                  {(\n                    (receivedConnections?.receivedConnectionRequest?.count ||\n                      0) +\n                    (requestedConnection?.requestedConnection?.count || 0)\n                  ).toLocaleString()}\n                </TSpan>\n                <TSpan\n                  font=\"footnote-bold\"\n                  colorToken=\"--text-tablecell-header-neutral-default\"\n                >\n                  {t('noumena.chamber.modal.requests_invites')}\n                </TSpan>\n              </Stack>\n            </NoumsMemberButton>\n          ) : (\n            (loadingRequestConnection || loadingReceivedConnection) && (\n              <StyledSkeleton w={100} h={15} r={8} />\n            )\n          )}\n          {networkStatus === NetworkStatus.ready &&\n          (eventMeta?.hostedEventsCount ?? 0) > 0 ? (\n            <NoumsMemberButton textOnly enableClick>\n              <Stack gap={4} align=\"center\">\n                <TSpan\n                  font=\"body-m-bold\"\n                  colorToken=\"--text-tablecell-header-neutral-default\"\n                >\n                  {(eventMeta?.hostedEventsCount || 0).toLocaleString()}\n                </TSpan>\n                <TSpan\n                  font=\"footnote-bold\"\n                  colorToken=\"--text-tablecell-header-neutral-default\"\n                >\n                  {t('noumena.noum.events', {\n                    postProcess: 'interval',\n                    count: eventMeta?.hostedEventsCount || 0,\n                  })}\n                </TSpan>\n              </Stack>\n            </NoumsMemberButton>\n          ) : (\n            networkStatus !== NetworkStatus.ready && (\n              <StyledSkeleton w={100} h={15} r={8} />\n            )\n          )}\n          {!loadingTokenData && isOwner && isMasterNoum && !!rewardInfoCount ? (\n            <NoumsMemberButton\n              textOnly\n              enableClick\n              onClick={() => setOpenTokenModal(true)}\n            >\n              <Stack gap={4} align=\"center\">\n                <TSpan\n                  font=\"body-m-bold\"\n                  colorToken=\"--text-tablecell-header-neutral-default\"\n                >\n                  {info.token?.count.toLocaleString()}\n                </TSpan>\n                <TSpan\n                  font=\"footnote-bold\"\n                  colorToken=\"--text-tablecell-header-neutral-default\"\n                >\n                  {t('noumena.money.tokens.subheading')}\n                </TSpan>\n              </Stack>\n            </NoumsMemberButton>\n          ) : (\n            loadingTokenData && <StyledSkeleton w={100} h={15} r={8} />\n          )}\n        </InfoStackWrapper>\n      )}\n      {(isFollowing ||\n        isClickableConnections ||\n        linkedNoums.length > 0 ||\n        (isMasterNoum &&\n          defaultTab === ConnectionDetailModalTabEnum.OwnedNoums)) &&\n        !connectionDetailsLoading &&\n        !loadingUserNoums && (\n          <ConnectionDetailsModal\n            isOpen={\n              !!defaultTab &&\n              defaultTab !== NoumDashboardMetricsModalTabEnum.Statistics\n            }\n            defaultTab={defaultTab}\n            handleClose={() => setDefaultTab(undefined)}\n            followersCount={followersCount}\n            linkedNoumsCount={linkedNoumsCount}\n            connectedProjectsCount={connectedProjectsCount}\n            setInvitedNoumId={setInvitedNoumId}\n            showInviteModal={() => setOpenInviteModal(true)}\n            userNoumsCount={userNoumsCount}\n          />\n        )}\n      <NoumDashboardMetricsModal\n        isOpen={!!dashboardType}\n        dashboardType={dashboardType}\n        handleClose={() => setDashboardType(undefined)}\n      />\n      <ConnectionInviteModal\n        isOpen={isOpenInviteModal}\n        invitedNoumId={invitedNoumId}\n        ownNoumId={space?._id || ''}\n        closeInviteModal={() => setOpenInviteModal(false)}\n      />\n      <ChamberVisibilityInviteModal\n        spaceId={space?._id || ''}\n        isOpen={isQuickOpenInviteModal}\n        handleClose={() => setQuickOpenInviteModal(false)}\n        isOnlyInvite={true}\n      />\n      <RequestsAndInvitesModal\n        isOpen={isModalOpen}\n        isChambersScreen={isMasterNoum}\n        handleClose={toggleModalOpen}\n        noumId={space?._id || ''}\n        isInviteOnly={isInviteBox}\n        refetchReceivedRequests={refetchReceivedRequests}\n      />\n      <TokenModal\n        open={openTokenModal}\n        onClose={() => setOpenTokenModal(false)}\n      />\n    </>\n  );\n};\n","import { TSpan } from '@/components/Typography';\nimport { Spacer, Stack } from '@/layout';\nimport { useBreakpoints } from '@/hooks';\nimport { NoumMembersInformation } from './NoumMembersInformation';\nimport { NoumEditorViewModeActions } from '../RightPanel/elements/NoumActions';\n\ninterface NoumDescriptionProps {\n  summaryDescription: string | undefined;\n  isUpdateMode: boolean | undefined;\n}\n\nconst NoumDescription = ({\n  summaryDescription,\n  isUpdateMode,\n}: NoumDescriptionProps) => {\n  const { isTablet, isMobile } = useBreakpoints();\n  return (\n    <>\n      <Stack\n        justify=\"space-between\"\n        vertical={isTablet || isMobile}\n        padding={isMobile || isTablet ? '0 16px' : undefined}\n        fullWidth\n        align={isTablet || isMobile ? 'start' : 'center'}\n        gap={16}\n        reverse={!summaryDescription && isMobile}\n      >\n        {summaryDescription && (\n          <TSpan\n            data-testid=\"tprofileSummaryDescription\"\n            font=\"body-m\"\n            style={{ wordBreak: 'break-word' }}\n          >\n            {summaryDescription}\n          </TSpan>\n        )}\n        {!isUpdateMode && !summaryDescription && <NoumMembersInformation />}\n        {isMobile && <NoumEditorViewModeActions />}\n      </Stack>\n      {summaryDescription && <Spacer height={16} />}\n      {!isUpdateMode && summaryDescription && <NoumMembersInformation />}\n    </>\n  );\n};\n\nexport default NoumDescription;\n","import Skeleton from 'react-loading-skeleton';\nimport { Trans } from 'react-i18next';\nimport { type FC, useCallback, useEffect, useMemo, useState } from 'react';\nimport { t } from 'i18next';\nimport * as Sentry from '@sentry/react';\nimport { useAuth } from '@/features/auth/contexts';\nimport {\n  useGenerateOneTimeTokenMutation,\n  useUpdatePrivacyMutation,\n} from '@/apollo/graphql';\nimport { Icon } from '@/components/Icon';\nimport { useCQ } from '@/features/money/hooks';\nimport { Dropdown, type DropdownValueType } from '@/components/Dropdown';\nimport { TSpan } from '@/components/Typography';\nimport { useLaunchDarkly } from '@/hooks/launchDarkly';\nimport { trackEvent } from '@/utils/tracking';\nimport { Stack } from '@/layout';\nimport { Radiobox } from '@/components/Radiobox';\nimport { useNoumContext } from '../../ViewChamber/ChamberProvider';\nimport {\n  TagWrapper,\n  TagInComplete,\n  TooltipWrapper,\n  InCompleteIconContainer,\n} from './styles';\nimport { Privacy } from './types';\n\nexport const CQToken: FC = () => {\n  const { user } = useAuth();\n  const { flags } = useLaunchDarkly();\n  const cqURl = process.env.VITE_CQ_URL;\n  const [generateOneTimeTokenMutation] = useGenerateOneTimeTokenMutation();\n  const [updatePrivacyMutation] = useUpdatePrivacyMutation();\n  const { isOwner, space } = useNoumContext();\n  const { cqData } = useCQ(space?._id || '', !isOwner);\n  const [privacy, setPrivacy] = useState<string>();\n\n  const isCQComplete = useMemo(\n    () => cqData.status === 'InComplete',\n    [cqData.status],\n  );\n\n  useEffect(() => {\n    setPrivacy(cqData?.visibility);\n  }, [cqData]);\n\n  const options: DropdownValueType<string>[] = [\n    {\n      key: 'public',\n      label: t(`noumena.money.cq.public`),\n      type: 'value',\n      value: 'Public',\n      icon: <Icon name=\"eye_on_m\" size={24} />,\n      description: t(`noumena.money.public.description`),\n      rightIcon: (\n        <Radiobox\n          isChecked={privacy === Privacy.PUBLIC}\n          icon={\n            <Icon\n              name=\"flag_pl_m\"\n              size={privacy === Privacy.PUBLIC ? 12 : 0}\n              color={\n                privacy === Privacy.PUBLIC\n                  ? '--icon-radiobutton-brand-primary-default'\n                  : '--icon-radiobutton-inactive-default'\n              }\n            />\n          }\n        />\n      ),\n    },\n    {\n      key: 'private',\n      label: t(`noumena.money.cq.private`),\n      type: 'value',\n      value: 'Private',\n      icon: <Icon name=\"lock_m\" size={24} />,\n      description: t(`noumena.money.private.description`),\n      rightIcon: (\n        <Radiobox\n          isChecked={privacy === Privacy.PRIVATE}\n          icon={\n            <Icon\n              name=\"flag_pl_m\"\n              size={privacy === Privacy.PRIVATE ? 12 : 0}\n              color={\n                privacy === Privacy.PRIVATE\n                  ? '--icon-radiobutton-brand-primary-default'\n                  : '--icon-radiobutton-inactive-default'\n              }\n            />\n          }\n        />\n      ),\n    },\n    {\n      key: 'update CQ',\n      label: (\n        <Stack gap={8} align=\"center\">\n          {t(`noumena.money.update.cq`)}{' '}\n          {isCQComplete && <TagInComplete>{cqData.status}</TagInComplete>}\n        </Stack>\n      ),\n      type: 'value',\n      value: 'update CQ',\n      icon: <Icon name=\"edit_m\" size={24} />,\n      description: t(`noumena.money.cq.incomplete_displayText`),\n    },\n  ];\n\n  const handleNavigation = useCallback(async () => {\n    const res = await generateOneTimeTokenMutation({\n      variables: {},\n      onError: ({ networkError = null, graphQLErrors = [] }) => {\n        const [err] = graphQLErrors;\n        Sentry.captureException(new Error(err?.message ?? networkError), {\n          tags: {\n            section: 'deleteQuestionMutation',\n          },\n        });\n      },\n      onCompleted: () => {\n        trackEvent('CQStart', {\n          UUID: user?._id,\n        });\n      },\n    });\n    const token = res.data?.generateOneTimeToken;\n    const formedUrl: string = `${cqURl}?access_token=${token}`;\n    window.open(formedUrl, '_blank');\n  }, [cqURl, generateOneTimeTokenMutation, user?._id]);\n\n  const updatePrivacy = useCallback(\n    async (option) => {\n      switch (option) {\n        case 'update CQ':\n          handleNavigation();\n          break;\n        default:\n          setPrivacy(option);\n          await updatePrivacyMutation({\n            variables: {\n              input: {\n                noumId: cqData.noumId || '',\n                visibility: option.toUpperCase(),\n              },\n            },\n            onError: ({ networkError = null, graphQLErrors = [] }) => {\n              const [err] = graphQLErrors;\n              Sentry.captureException(new Error(err?.message ?? networkError), {\n                tags: {\n                  section: 'deleteQuestionMutation',\n                },\n              });\n            },\n          });\n          break;\n      }\n    },\n    [cqData.noumId, handleNavigation, updatePrivacyMutation],\n  );\n\n  if (cqData.fetching)\n    return (\n      <Skeleton\n        width={195}\n        height={23}\n        borderRadius={12}\n        enableAnimation\n        baseColor=\"var(--color-base-gray-100)\"\n      />\n    );\n\n  return (\n    <>\n      {flags.cqInHomeNoumsProfile && (\n        <>\n          {isOwner ? (\n            <Dropdown\n              options={options}\n              usePortal\n              renderContainerFromBottom\n              containerWidth=\"max-content\"\n              onSelectOption={(option) => {\n                updatePrivacy(option.value);\n              }}\n              observerMinHeight=\"0\"\n              isRenderFromBottomContentCentered\n            >\n              {({ inputProps, inputRef, toggle }) => (\n                <>\n                  <TagWrapper\n                    {...inputProps}\n                    ref={inputRef}\n                    onClick={toggle}\n                    gap={7}\n                    align=\"center\"\n                    padding=\"2px 6px\"\n                  >\n                    <TooltipWrapper\n                      data-title={\n                        privacy === Privacy.PUBLIC\n                          ? t('noumena.money.cq.public')\n                          : t('noumena.money.cq.private')\n                      }\n                    >\n                      <Icon\n                        name={\n                          privacy === Privacy.PUBLIC ? 'eye_on_m' : 'lock_m'\n                        }\n                        size={16}\n                        color=\"--icon-card-neutral-default\"\n                      />\n                    </TooltipWrapper>\n\n                    <Stack gap={4} align=\"center\">\n                      <TSpan\n                        font=\"footnote-bold\"\n                        colorToken=\"--text-badge-neutral-default\"\n                      >\n                        {t('noumena.money.cq')}\n                      </TSpan>\n                      {isCQComplete && (\n                        <TooltipWrapper\n                          data-title={t(\n                            'noumena.money.incompleteCQ.description',\n                          )}\n                          isLeft\n                        >\n                          <InCompleteIconContainer>\n                            <Icon\n                              name=\"alert_xs\"\n                              size={10}\n                              color=\"--icon-badge-neutral-alt-default\"\n                            />\n                          </InCompleteIconContainer>\n                        </TooltipWrapper>\n                      )}\n                      <Trans count={Number(cqData.score)}>\n                        <TSpan\n                          font=\"footnote-bold\"\n                          colorToken={\n                            isCQComplete\n                              ? '--bg-badge-danger-warning-primary'\n                              : '--text-badge-neutral-default'\n                          }\n                        >\n                          {{ count: cqData.score }}\n                        </TSpan>\n                      </Trans>\n                    </Stack>\n                    <Icon\n                      name=\"chevron_down_m\"\n                      size={14}\n                      color=\"--icon-card-neutral-default\"\n                    />\n                  </TagWrapper>\n                </>\n              )}\n            </Dropdown>\n          ) : (\n            <>\n              {privacy === Privacy.PUBLIC ? (\n                <TagWrapper gap={7} align=\"center\" padding=\"2px 6px\">\n                  {!cqData.fetching && (\n                    <Stack gap={4} align=\"center\">\n                      <TSpan\n                        font=\"footnote-bold\"\n                        colorToken=\"--text-badge-neutral-default\"\n                      >\n                        {t('noumena.money.cq')}\n                      </TSpan>\n                      <Trans count={Number(cqData.score)}>\n                        <TSpan\n                          font=\"footnote-bold\"\n                          colorToken=\"--text-badge-neutral-default\"\n                        >\n                          {{ count: cqData.score }}\n                        </TSpan>\n                      </Trans>\n                    </Stack>\n                  )}\n                </TagWrapper>\n              ) : null}\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n","import { format } from 'date-fns';\nimport { MemberRoleTag } from '@/features/noums/components/MemberRoleTag';\nimport { Tag } from '@/components/Tag';\nimport { TSpan } from '@/components/Typography';\nimport getColorByNoumType from '@/utils/getColorByNoumType';\nimport getBgColorByNoumType from '@/utils/getBgColorByNoumType';\nimport { SpaceTypeEnum } from '@/apollo/generated/types';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useTranslation } from 'react-i18next';\nimport { type NoumMemberQuery } from '@/apollo/graphql';\nimport { NoumStatusIcon } from './styles';\nimport { CQToken } from './CQToken';\nimport { useNoumContext } from '../../ViewChamber/ChamberProvider';\nimport { type INoumValidity } from '../../ViewChamber/types';\n\nexport interface NoumTagsDetailProps {\n  isMasterNoum: boolean | undefined;\n  noumValidity: INoumValidity | undefined;\n  disabled: boolean | undefined;\n  memberData: NoumMemberQuery | undefined;\n  ownerTitle: string | undefined;\n  title: string | undefined;\n  icon: JSX.Element | undefined;\n  toggleRenewModal: () => void;\n}\n\nconst NoumTagsDetail = ({\n  isMasterNoum,\n  noumValidity,\n  disabled,\n  memberData,\n  ownerTitle,\n  title,\n  icon,\n  toggleRenewModal,\n}: NoumTagsDetailProps) => {\n  const { noumType, space } = useNoumContext();\n  const isRiseApplication = noumType === SpaceTypeEnum.RiseApplication;\n  const { user } = useAuth();\n  const isOwner = user?._id === space?.uid?._id;\n  const chamberTitle = isMasterNoum ? ownerTitle : title;\n  const chamberType = chamberTitle?.toLocaleLowerCase();\n  const { t } = useTranslation();\n\n  const {\n    aboutToExpireInfo = { showLabel: false, days: 0 },\n    expiredInfo = { showLabel: false, days: 0 },\n    validityDate,\n  } = noumValidity || {};\n\n  return (\n    <>\n      {isMasterNoum && <CQToken />}\n      {memberData?.noumMember && (\n        <MemberRoleTag member={memberData.noumMember} />\n      )}\n      {!isMasterNoum && chamberTitle && chamberTitle.length > 0 && (\n        <Tag\n          icon={icon}\n          title={chamberTitle}\n          {...(!isMasterNoum && chamberType\n            ? {\n                color: `var(${getColorByNoumType(chamberType)})`,\n                bgColor: `var(${getBgColorByNoumType(chamberType)})`,\n              }\n            : { secondary: true })}\n          size=\"small\"\n        >\n          {isRiseApplication ? t('noumena.rise_application') : chamberTitle}\n        </Tag>\n      )}\n      {!isMasterNoum && !isRiseApplication && space?.projectType && (\n        <Tag tertiary size=\"small\">\n          {t(`noumena.noum.project_type.${space?.projectType}`)}\n        </Tag>\n      )}\n\n      {disabled && <Tag tertiary>{t(`noumena.archived`)}</Tag>}\n      {aboutToExpireInfo.showLabel && (\n        <Tag secondary icon={<NoumStatusIcon name=\"time_m\" size={16} />}>\n          {`${t('noumena.money.subscription.noum.expires.text', {\n            day: aboutToExpireInfo.days,\n          })} `}\n          {isOwner && (\n            <TSpan\n              colorToken=\"--text-tag-brand-primary-default\"\n              font=\"link-m\"\n              onClick={toggleRenewModal}\n            >\n              {`${t('noumena.money.myplans.renew')}`}\n            </TSpan>\n          )}\n        </Tag>\n      )}\n      {expiredInfo.showLabel && !!validityDate && (\n        <Tag danger icon={<NoumStatusIcon name=\"time_m_red\" size={16} />}>\n          {expiredInfo.showGracePeriodLabel\n            ? `${t(`noumena.money.subscription.noum.grace.period.text`, {\n                day: expiredInfo.days,\n              })} `\n            : `${t('noumena.money.subscription.noum.expired.text', {\n                date: format(new Date(validityDate), 'dd MMM yyyy'),\n              })} `}\n          {isOwner && (\n            <TSpan\n              colorToken=\"--text-tag-brand-primary-default\"\n              font=\"link-m\"\n              onClick={toggleRenewModal}\n            >\n              {`${t('noumena.money.myplans.renew')}`}\n            </TSpan>\n          )}\n        </Tag>\n      )}\n    </>\n  );\n};\n\nexport default NoumTagsDetail;\n","import { type CQStep } from './types';\nimport { RiseApplicationStepTranslationKey } from './types';\n\nconst cqURL =\n  // 'http://localhost:4200/';\n  process.env.VITE_CQ_URL ?? 'https://noudev-cq-portal.noumenati.com/';\n\nexport const cqPrinciplesYou = `${cqURL}build-cq-dialog/principles-you`;\n\nexport const RISE_CQ_STEPS: CQStep[] = [\n  {\n    step: RiseApplicationStepTranslationKey.IDENTITY,\n    url: `${cqURL}build-cq-dialog/identity-capital`,\n    showCheckbox: false,\n  },\n  {\n    step: RiseApplicationStepTranslationKey.NATIVE,\n    url: `${cqURL}build-cq-dialog/native-capital`,\n    showCheckbox: false,\n  },\n  {\n    step: RiseApplicationStepTranslationKey.FINANCIAL,\n    url: `${cqURL}build-cq-dialog/financial-capital`,\n    showCheckbox: false,\n  },\n  {\n    step: RiseApplicationStepTranslationKey.BUSINESS,\n    url: `${cqURL}build-cq-dialog/business-plan`,\n    showCheckbox: false,\n  },\n  {\n    step: RiseApplicationStepTranslationKey.PRINCIPLES_YOU,\n    url: cqPrinciplesYou,\n    showCheckbox: false,\n  },\n  {\n    step: RiseApplicationStepTranslationKey.ESSAYS,\n    url: null,\n    showCheckbox: true,\n  },\n];\n\nexport const RISE_CQ_STEPS_TAB_FIRST_ROW: CQStep[] = [\n  {\n    step: RiseApplicationStepTranslationKey.IDENTITY,\n    url: `${cqURL}build-cq-dialog/identity-capital`,\n    showCheckbox: false,\n  },\n  {\n    step: RiseApplicationStepTranslationKey.NATIVE,\n    url: `${cqURL}build-cq-dialog/native-capital`,\n    showCheckbox: false,\n  },\n  {\n    step: RiseApplicationStepTranslationKey.FINANCIAL,\n    url: `${cqURL}build-cq-dialog/financial-capital`,\n    showCheckbox: false,\n  },\n];\n\nexport const RISE_CQ_STEPS_TAB_SECOND_ROW: CQStep[] = [\n  {\n    step: RiseApplicationStepTranslationKey.BUSINESS,\n    url: `${cqURL}build-cq-dialog/business-plan`,\n    showCheckbox: false,\n  },\n  {\n    step: RiseApplicationStepTranslationKey.PRINCIPLES_YOU,\n    url: cqPrinciplesYou,\n    showCheckbox: false,\n  },\n  {\n    step: RiseApplicationStepTranslationKey.ESSAYS,\n    url: null,\n    showCheckbox: true,\n  },\n];\n","import { type FC, memo, useEffect } from 'react';\nimport { Icon, Tag, TSpan } from '@/components';\nimport { Checkbox } from '@/components/Checkbox';\nimport { Stack } from '@/layout';\nimport EVENTS from '@/constants/trackingEvents';\nimport { trackEvent } from '@/utils/tracking';\nimport { useAuth } from '@/features/auth/contexts';\nimport { Modal, ModalSize } from '@/components/ExtendedModal';\nimport { useToast, useBreakpoints } from '@/hooks';\nimport { useGenerateTokenForCQ } from '@/features/money/hooks';\nimport { useTranslation } from 'react-i18next';\nimport { useModalManager } from '@/hooks/modal/useModalManager';\nimport { RiseStep } from './styles';\nimport {\n  RiseApplicationStepTranslationKey,\n  type IRiseApplicationStep,\n} from './types';\nimport {\n  RiseIframe,\n  RiseIFrameContainer,\n} from '../../RightPanel/elements/RiseApplication/styles';\n\ntype ModalType = 'admin-modal';\n\nexport const RiseApplicationStep: FC<IRiseApplicationStep> = memo(\n  ({\n    step,\n    stepCompleted,\n    showCheckbox,\n    noOfEssays,\n    canEdit,\n    identityStepCompleted,\n    refreshApplication,\n    url,\n    applicationId,\n    noumId,\n    isClassDeleted,\n    checked,\n    onCheckBoxClicked,\n    essayQuestionAnswered,\n  }) => {\n    const { addToast } = useToast();\n    const { isMobile } = useBreakpoints();\n    const generateTokenForCQ = useGenerateTokenForCQ();\n    const { t } = useTranslation();\n    const { modalType, openModal, closeModal, contextData } = useModalManager<\n      ModalType,\n      string\n    >();\n\n    const onCloseClick = () => {\n      refreshApplication();\n      closeModal();\n    };\n    const { user } = useAuth();\n    const isStepEssay = step === RiseApplicationStepTranslationKey.ESSAYS;\n    const isStepPrinciplesYou =\n      step === RiseApplicationStepTranslationKey.PRINCIPLES_YOU;\n\n    useEffect(() => {\n      if (stepCompleted && !isStepEssay && !isStepPrinciplesYou) {\n        trackEvent(EVENTS.RISE.APPLICATION_STEP, {\n          UUID: user?._id,\n          title: t(step),\n        });\n      } else if (stepCompleted && !isStepEssay && isStepPrinciplesYou) {\n        trackEvent(EVENTS.RISE.PRINCIPLES_YOU_CLICKED, {\n          UUID: user?._id,\n          title: t(step),\n        });\n      }\n    }, [step, stepCompleted, user, isStepEssay, isStepPrinciplesYou, t]);\n\n    const onStepClick = async () => {\n      if (\n        step === RiseApplicationStepTranslationKey.FINANCIAL &&\n        !identityStepCompleted\n      ) {\n        addToast(\n          'error',\n          'icon',\n          t('noumena.rise_program.identity.capital.error'),\n        );\n        return;\n      }\n\n      const { token, error } = await generateTokenForCQ();\n      if (token) {\n        const source = `${url}?access_token=${token}&rise_application=true&applicationId=${applicationId}&noumId=${noumId}`;\n        openModal('admin-modal', source);\n        return;\n      }\n      if (error) {\n        addToast('error', 'none', error.message);\n      }\n    };\n\n    const handleEssay = (check: boolean) => {\n      if (!checked) {\n        if (essayQuestionAnswered) {\n          onCheckBoxClicked((previous) => ({ ...previous, essays: false }));\n          addToast(\n            'error',\n            'icon',\n            t('noumena.rise_program.esssay_not_answered'),\n          );\n        } else {\n          onCheckBoxClicked((previous) => ({ ...previous, essays: check }));\n          trackEvent(EVENTS.RISE.APPLICATION_STEP, {\n            UUID: user?._id,\n            title: 'Essays',\n          });\n        }\n      } else {\n        onCheckBoxClicked((previous) => ({ ...previous, essays: check }));\n      }\n    };\n\n    const handleCheck = (check: boolean) => {\n      if (isClassDeleted) {\n        addToast('error', 'icon', t(`noumena.rise_program.can_user_apply`));\n        return;\n      }\n      if (!canEdit) {\n        addToast('error', 'icon', t('noumena.rise_program.not.owner.error'));\n      }\n      handleEssay(check);\n    };\n\n    const onRiseStepClick = () => {\n      if (!url) return;\n      if (isClassDeleted) {\n        addToast('error', 'icon', t(`noumena.rise_program.can_user_apply`));\n        return;\n      }\n      if (!canEdit) {\n        addToast('error', 'icon', t('noumena.rise_program.not.owner.error'));\n        return;\n      }\n      onStepClick();\n    };\n\n    return (\n      <>\n        <RiseStep\n          showCheckbox={showCheckbox}\n          hasRightBorder={!isMobile}\n          hasBottomBorder={isMobile}\n          onClick={onRiseStepClick}\n        >\n          <TSpan\n            font=\"body-m\"\n            colorToken=\"--text-tablecell-header-neutral-highlighted\"\n            singleLine\n          >\n            {isStepEssay ? t(step, { noOfEssays }) : t(step)}\n          </TSpan>\n          {stepCompleted ? (\n            <Tag secondary success>\n              {t('noumena..rise_program.done')}\n            </Tag>\n          ) : (\n            isStepEssay || (\n              <Icon\n                name=\"chevron_right_m\"\n                size={12}\n                color={\n                  showCheckbox\n                    ? '--icon-tablecell-neutral-default'\n                    : '--icon-tablecell-neutral-highlighted'\n                }\n                style={{ marginRight: '8px' }}\n              />\n            )\n          )}\n          {showCheckbox && (\n            <>\n              <Stack gap={8} justify=\"flex-start\">\n                <Checkbox\n                  isChecked={checked}\n                  onChange={handleCheck}\n                  disableClick={!canEdit}\n                  icon={\n                    <Icon\n                      name=\"tick_m\"\n                      size={20}\n                      color=\"--icon-checkbox-neutral-alt-default\"\n                    />\n                  }\n                />\n                <TSpan\n                  font=\"body-m\"\n                  colorToken=\"--text-tablecell-header-neutral-default\"\n                  singleLine\n                >\n                  {t('noumena.rise_program.essay_confirmation')}\n                </TSpan>\n              </Stack>\n            </>\n          )}\n        </RiseStep>\n        <Modal\n          open={modalType === 'admin-modal'}\n          size={ModalSize.XXL}\n          enableCloseButton\n          onClose={onCloseClick}\n        >\n          <RiseIFrameContainer>\n            <RiseIframe src={contextData || ''} title=\"rise\" />\n          </RiseIFrameContainer>\n        </Modal>\n      </>\n    );\n  },\n);\n\nexport default RiseApplicationStep;\n","import { memo } from 'react';\nimport { useNoumContext } from '@/screens/Chamber/ViewChamber/ChamberProvider';\nimport {\n  ApplicationResultStatus,\n  ApplicationResultStatusAdmin,\n} from '@/apollo/generated/types';\nimport { useBreakpoints } from '@/hooks';\nimport { Stack } from '@/layout';\nimport { useRiseApplicationContext } from './RiseApplicationProvider/context';\nimport {\n  RISE_CQ_STEPS,\n  RISE_CQ_STEPS_TAB_FIRST_ROW,\n  RISE_CQ_STEPS_TAB_SECOND_ROW,\n} from './helper';\nimport {\n  RiseStepWrapper,\n  RiseStepWrapperTablet,\n  TabletWrapper,\n} from './styles';\nimport RiseApplicationStep from './RiseApplicationStep';\nimport { RiseApplicationStepTranslationKey } from './types';\nimport RiseApplicationInfoText from './RiseApplicationInfoText';\nimport RiseApplicationStatus from './RiseApplicationStatus';\n\nexport const RiseApplicationSteps = memo(() => {\n  const { spaceId, isConnected, isOwner } = useNoumContext();\n  const { isTablet, isDesktop, isMobile } = useBreakpoints();\n  const {\n    status,\n    noOfEssays,\n    refresh,\n    essayQuestionAnswered,\n    isStepCompleted,\n    isClassDeleted,\n    checked,\n    setChecked,\n    identityCompletion,\n    applicationId,\n  } = useRiseApplicationContext();\n\n  if (!status) {\n    return null;\n  }\n\n  const showSteps = (status === ApplicationResultStatus.Inprogress || isConnected)\n\n  return (\n    <Stack vertical gap={16} padding={isMobile ? '16px' : '0px'}>\n      {!isDesktop &&\n        isOwner &&\n        status === ApplicationResultStatusAdmin.Inprogress && (\n          <RiseApplicationInfoText />\n        )}\n      {showSteps &&\n        (isDesktop || isMobile) && (\n          <RiseStepWrapper isMobile={isMobile}>\n            {RISE_CQ_STEPS.map(({ step, url, showCheckbox }) => (\n              <RiseApplicationStep\n                key={step}\n                step={step}\n                noOfEssays={noOfEssays}\n                refreshApplication={refresh}\n                url={url}\n                stepCompleted={isStepCompleted(step)}\n                isClassDeleted={isClassDeleted}\n                canEdit={isOwner}\n                essayQuestionAnswered={essayQuestionAnswered}\n                noumId={spaceId || ''}\n                identityStepCompleted={identityCompletion}\n                showCheckbox={showCheckbox}\n                onCheckBoxClicked={setChecked}\n                applicationId={applicationId}\n                checked={\n                  step === RiseApplicationStepTranslationKey.PRINCIPLES_YOU\n                    ? checked.principlesYou\n                    : checked.essays\n                }\n              />\n            ))}\n          </RiseStepWrapper>\n        )}\n      {showSteps &&\n        isTablet && (\n          <RiseStepWrapperTablet vertical gap={-1} align=\"stretch\" fullWidth>\n            <TabletWrapper>\n              {RISE_CQ_STEPS_TAB_FIRST_ROW.map(\n                ({ step, url, showCheckbox }) => (\n                  <RiseApplicationStep\n                    key={step}\n                    step={step}\n                    noOfEssays={noOfEssays}\n                    refreshApplication={refresh}\n                    url={url}\n                    stepCompleted={isStepCompleted(step)}\n                    isClassDeleted={isClassDeleted}\n                    canEdit={isOwner}\n                    essayQuestionAnswered={essayQuestionAnswered}\n                    noumId={spaceId || ''}\n                    identityStepCompleted={identityCompletion}\n                    showCheckbox={showCheckbox}\n                    onCheckBoxClicked={setChecked}\n                    applicationId={applicationId}\n                    checked={\n                      step === RiseApplicationStepTranslationKey.PRINCIPLES_YOU\n                        ? checked.principlesYou\n                        : checked.essays\n                    }\n                  />\n                ),\n              )}\n            </TabletWrapper>\n            <TabletWrapper>\n              {RISE_CQ_STEPS_TAB_SECOND_ROW.map(\n                ({ step, url, showCheckbox }) => (\n                  <RiseApplicationStep\n                    key={step}\n                    step={step}\n                    noOfEssays={noOfEssays}\n                    refreshApplication={refresh}\n                    url={url}\n                    stepCompleted={isStepCompleted(step)}\n                    isClassDeleted={isClassDeleted}\n                    canEdit={isOwner}\n                    essayQuestionAnswered={essayQuestionAnswered}\n                    noumId={spaceId || ''}\n                    identityStepCompleted={identityCompletion}\n                    showCheckbox={showCheckbox}\n                    onCheckBoxClicked={setChecked}\n                    applicationId={applicationId}\n                    checked={\n                      step === RiseApplicationStepTranslationKey.PRINCIPLES_YOU\n                        ? checked.principlesYou\n                        : checked.essays\n                    }\n                  />\n                ),\n              )}\n            </TabletWrapper>\n          </RiseStepWrapperTablet>\n        )}\n      {(isConnected ||\n        (isOwner && status !== ApplicationResultStatusAdmin.Inprogress)) &&\n        !isDesktop && (\n          <RiseApplicationStatus status={status} isOwner={isOwner} />\n        )}\n    </Stack>\n  );\n});\n\nexport default RiseApplicationSteps;\n","import { forwardRef, useCallback, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { SpaceTypeEnum } from '@/apollo/generated/types';\nimport {\n  useGetCqDataQuery,\n  useNoumMemberQuery,\n  useSubmitCqFormMutation,\n} from '@/apollo/graphql';\nimport ChamberDefaultImag from '@/assets/images/chamber_default.png';\nimport riseAvatar from '@/assets/images/riseavatar.png';\nimport { Button } from '@/components/Button/Button';\nimport { Icon } from '@/components/Icon';\nimport { TSpan } from '@/components/Typography';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useCQ } from '@/features/money/hooks';\nimport { useHomeNoumAboutMeHelper } from '@/features/noums/hooks/noums';\nimport { useUpdateProjectChamberHelper } from '@/features/noums/hooks/spaceQuery';\nimport { useBreakpoints } from '@/hooks';\nimport { useLaunchDarkly } from '@/hooks/launchDarkly';\nimport { useToggle } from '@/hooks/toggle';\nimport { Spacer, Stack } from '@/layout';\nimport { PersonalDetailsModal } from '@/screens/Chamber/components/modals/PersonalDetailsModal/Modal';\nimport RenewNoumModal from '@/screens/Plan/RenewNoumModal';\nimport { ProfileBannerEditable } from './ProfileBanner';\nimport { useEditChamberState } from '../../EditChamber/provider';\nimport { useNoumContext } from '../../ViewChamber/ChamberProvider';\nimport { NoumEditorViewModeActions } from '../RightPanel/elements/NoumActions';\nimport { NoumInvitedConnection } from '../RightPanel/elements/NoumActions/NoumInvitedConnection';\nimport { NoumWaitInvitation } from '../RightPanel/elements/NoumActions/NoumWaitInvitation';\nimport { UserActionMode } from '../RightPanel/elements/NoumActions/types';\nimport { ProjectCreate } from '../modals/ProjectCreate/Modal';\nimport Favourite from './Favourite';\nimport { NoumManagerInvitation } from './NoumManagerInvitation/NoumManagerInvitation';\nimport {\n  FavWrapper,\n  NoumEditorEdit,\n  NoumEditorHead,\n  NoumEditorStyledCard,\n  ProfilePictureHeader,\n  ProfileSummaryDataContainer,\n  ProfileSummaryName,\n} from './styles';\nimport { Privacy, type IProfileSummary } from './types';\nimport NoumBio from './NoumBio';\nimport NoumDescription from './NoumDescription';\nimport NoumTagsDetail from './NoumTagsDetail';\nimport { RiseApplicationSteps } from './RiseApplicationV2/RiseApplicationSteps';\n\nconst ProfileSummaryNew = forwardRef(\n  ({\n    disabled,\n    name,\n    title,\n    icon,\n    imageURL,\n    lastUpdated,\n    location,\n    bio,\n    ownerName,\n    ownerImageURL,\n    ownerTitle,\n    ownerBio,\n    isMasterNoum,\n    spaceId,\n    isUpdateMode,\n    category,\n    noumValidity,\n    isPublished,\n    coverURL,\n    isCustomPreview,\n  }: IProfileSummary) => {\n    const [isRenewModalOpen, setIsRenewModalOpen] = useState(false);\n    const { t } = useTranslation();\n    const { user, masterId, refetchUserData } = useAuth();\n\n    // @TODO: get real memberId\n    const memberId = '';\n    const { data: memberData } = useNoumMemberQuery({\n      variables: { memberId },\n      skip: !memberId,\n    });\n\n    const {\n      space: noumSpace,\n      noumType,\n      connectionStatus,\n      onHandleConnection,\n      mainSpaceId,\n      userActionMode,\n      onRefetchSpaceById: refetchNoumView,\n    } = useNoumContext();\n\n    const { space: editSpace, refetchSpaceById: refetchEditNoum } =\n      useEditChamberState();\n\n    const handleRefetchSpace = useCallback(() => {\n      if (editSpace) {\n        refetchEditNoum?.();\n      } else {\n        refetchNoumView();\n      }\n    }, [editSpace, refetchEditNoum, refetchNoumView]);\n\n    const { data: cqData } = useGetCqDataQuery();\n    const [submitCqFormMutation] = useSubmitCqFormMutation();\n    const space = editSpace || noumSpace;\n    const isOwner = user?._id === space?.uid?._id;\n    const { cqData: cqDataDetail } = useCQ(space?._id || '', !isOwner);\n    const [isEditOpen, toggleEditOpen] = useToggle(false);\n    const { flags } = useLaunchDarkly();\n    const { isUnregistered } = useAuth();\n    const { isTablet, isMobile } = useBreakpoints();\n    const [isIdentityFormSubmitted, setIsIdentityFormSubmitted] =\n      useState(false);\n    const [identityForm, setIdentityForm] = useState<{\n      __typename?: 'CQForm' | undefined;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      details?: any;\n      formId?: string | null | undefined;\n      status?: string | null | undefined;\n    }>();\n    const summaryDescription = isMasterNoum ? ownerBio : bio;\n    const chamberTitle = isMasterNoum ? ownerTitle : title;\n    const ownedBy = isOwner ? t('noumena.you') : ownerName;\n    const profileURL = isMasterNoum ? ownerImageURL : imageURL;\n\n    const { updateProjectChamberHelper, loading: isCoverLoader } =\n      useUpdateProjectChamberHelper();\n    const { homeNoumAboutMeProfilePicHelper } = useHomeNoumAboutMeHelper();\n    const imageAvatar =\n      noumType === SpaceTypeEnum.RiseApplication ||\n      space?.category?.name === 'Rise'\n        ? riseAvatar\n        : imageURL;\n\n    const [profileImage, setProfileImage] = useState<string | undefined>(() =>\n      profileURL && profileURL !== ChamberDefaultImag\n        ? profileURL\n        : ChamberDefaultImag,\n    );\n\n    const [coverImage, setCoverImage] = useState(() =>\n      coverURL && coverURL !== ChamberDefaultImag ? coverURL : undefined,\n    );\n    // @TODO: implement noum manager invitation\n    const hasInvitation = false;\n\n    useEffect(() => {\n      const existingIdentityForm =\n        cqData?.capitalquotient?.getCQDetails?.forms?.find(\n          (form) => form?.formId === '1',\n        );\n      if (existingIdentityForm) {\n        setIsIdentityFormSubmitted(Boolean(existingIdentityForm.status));\n        setIdentityForm(existingIdentityForm);\n      }\n    }, [cqData]);\n\n    const summaryData = {\n      spaceId,\n      name,\n      description: summaryDescription,\n      profileImage: imageURL,\n      categoryId: category?._id || undefined,\n    };\n\n    const toggleRenewModal = () => {\n      setIsRenewModalOpen((previous) => !previous);\n    };\n\n    useEffect(() => {\n      setProfileImage(profileURL);\n    }, [ownerImageURL, imageURL, coverURL, profileURL]);\n    const handleChangeProfileImage = useCallback(\n      async (profileImageURL: string | undefined) => {\n        setProfileImage(profileImageURL);\n        if (spaceId && profileImageURL) {\n          if (isMasterNoum) {\n            const { profilePicSuccess } = await homeNoumAboutMeProfilePicHelper(\n              profileImageURL,\n            );\n\n            if (\n              profilePicSuccess &&\n              isIdentityFormSubmitted &&\n              identityForm &&\n              masterId\n            ) {\n              const indentifyDetails = Array.isArray(identityForm?.details)\n                ? identityForm?.details\n                : identityForm?.details.submitted;\n              const formCopy = [...(indentifyDetails || [])];\n              const indexOfProfilePicture = formCopy.findIndex(\n                (ans) => ans.qid === '4',\n              );\n              if (indexOfProfilePicture !== -1) {\n                formCopy[indexOfProfilePicture] = {\n                  ...formCopy[indexOfProfilePicture],\n                  value: profileImageURL,\n                };\n              }\n              submitCqFormMutation({\n                variables: {\n                  input: {\n                    noumId: masterId,\n                    status: cqData?.capitalquotient?.getCQDetails?.status,\n                    form: {\n                      formId: identityForm?.formId,\n                      description: 'identity',\n                      status: identityForm?.status,\n                      details: formCopy,\n                    },\n                  },\n                },\n              });\n            }\n          } else {\n            await updateProjectChamberHelper(\n              spaceId,\n              {\n                profileImage: profileImageURL,\n              },\n              true,\n            );\n          }\n        }\n        handleRefetchSpace();\n        refetchUserData();\n      },\n      [\n        cqData?.capitalquotient?.getCQDetails?.status,\n        handleRefetchSpace,\n        homeNoumAboutMeProfilePicHelper,\n        identityForm,\n        isIdentityFormSubmitted,\n        isMasterNoum,\n        masterId,\n        refetchUserData,\n        spaceId,\n        submitCqFormMutation,\n        updateProjectChamberHelper,\n      ],\n    );\n    const isPrivate =\n      cqDataDetail.visibility === Privacy.PRIVATE && !isOwner && isMasterNoum;\n\n    const handleChangeCoverImage = useCallback(\n      async (coverImageURL: string | undefined) => {\n        setCoverImage(coverImageURL);\n        if (spaceId) {\n          await updateProjectChamberHelper(\n            spaceId,\n            {\n              headerBackgroundUrl: coverImageURL,\n            },\n            true,\n          );\n        }\n        handleRefetchSpace();\n      },\n      [handleRefetchSpace, spaceId, updateProjectChamberHelper],\n    );\n\n    return (\n      <>\n        <NoumEditorStyledCard>\n          <ProfileBannerEditable\n            height={isUpdateMode || coverImage ? 273 : undefined}\n            url={coverImage}\n            onContentChange={(e) => handleChangeCoverImage(e)}\n            maximumFileSize={5}\n            onlyEditable={isUpdateMode}\n            borderRadius={isTablet ? 0 : undefined}\n            onClear={() => handleChangeCoverImage('')}\n            loading={isCoverLoader}\n          />\n          <NoumEditorHead\n            data-testid=\"theadSection\"\n            isCoverPhoto={!!coverImage || isUpdateMode}\n          >\n            <ProfilePictureHeader\n              aria-label=\"profile_picture\"\n              isCoverPhoto={!!coverImage || isUpdateMode}\n            >\n              <ProfileBannerEditable\n                url={isMasterNoum ? profileImage : imageAvatar}\n                onContentChange={handleChangeProfileImage}\n                maximumFileSize={5}\n                onlyEditable={isUpdateMode}\n                size={isMobile ? 'XVL' : 'XXL'}\n                borderRadius={16}\n                isBanner={false}\n              />\n            </ProfilePictureHeader>\n            <ProfileSummaryDataContainer>\n              <Stack\n                gap={8}\n                wrap=\"wrap\"\n                justify={isPrivate ? 'flex-end' : 'space-between'}\n                data-testid=\"ttagsSection\"\n                padding={isTablet ? '0 16px 0 0' : '0'}\n                align=\"center\"\n              >\n                <Stack aria-label=\"noum_tag_details\" gap={8}>\n                  <NoumTagsDetail\n                    disabled={disabled}\n                    icon={icon}\n                    isMasterNoum={isMasterNoum}\n                    memberData={memberData}\n                    noumValidity={noumValidity}\n                    ownerTitle={ownerTitle}\n                    title={title}\n                    toggleRenewModal={toggleRenewModal}\n                  />\n                </Stack>\n                {!isUpdateMode && isPublished && !isUnregistered && (\n                  <FavWrapper aria-label=\"favourite_icon\">\n                    <Favourite />\n                  </FavWrapper>\n                )}\n              </Stack>\n              <Stack\n                justify=\"space-between\"\n                align=\"center\"\n                padding={isTablet ? '0 16px 0 0' : '0'}\n              >\n                <Stack vertical>\n                  <ProfileSummaryName\n                    aria-label=\"noum_profile_name\"\n                    disabled={disabled}\n                    data-testid=\"tprofileSummaryName\"\n                  >\n                    <TSpan\n                      font={isMobile ? 'heading-xs-bold' : 'heading-m-bold'}\n                      colorToken=\"--text-card-header-neutral-hightlighted\"\n                    >\n                      {isMasterNoum ? ownerName : name}\n                    </TSpan>\n                  </ProfileSummaryName>\n                  {!isMobile && (\n                    <>\n                      <NoumBio\n                        isMasterNoum={isMasterNoum}\n                        lastUpdated={lastUpdated}\n                        ownedBy={ownedBy}\n                        disabled={disabled}\n                        chamberTitle={chamberTitle}\n                        location={location}\n                      />\n                    </>\n                  )}\n                </Stack>\n                {!isMobile && !isCustomPreview && <NoumEditorViewModeActions />}\n              </Stack>\n            </ProfileSummaryDataContainer>\n            {isUpdateMode && (\n              <NoumEditorEdit aria-label=\"noum_edit_information\">\n                <Button\n                  leftIcon={\n                    <Icon\n                      name=\"edit_m\"\n                      size={24}\n                      color=\"--icon-button-neutral-default\"\n                    />\n                  }\n                  size=\"large\"\n                  tertiary\n                  onClick={toggleEditOpen}\n                  disabled={\n                    editSpace?.category?.name.toLowerCase() ===\n                    'rise_application'\n                  }\n                >\n                  {t(`noumena.chamber.edit_information__button`)}\n                </Button>\n              </NoumEditorEdit>\n            )}\n          </NoumEditorHead>\n          {hasInvitation && <NoumManagerInvitation />}\n          {isMobile && (\n            <>\n              <Spacer height={16} />\n              <Stack padding=\"0 16px\">\n                <NoumBio\n                  isMasterNoum={isMasterNoum}\n                  lastUpdated={lastUpdated}\n                  ownedBy={ownedBy}\n                  disabled={disabled}\n                  chamberTitle={chamberTitle}\n                  location={location}\n                />\n              </Stack>\n            </>\n          )}\n          <Spacer height={16} />\n          <Stack vertical reverse={isMobile}>\n            {!isOwner && userActionMode === UserActionMode.handleInvitation && (\n              <NoumInvitedConnection\n                connectionStatus={connectionStatus}\n                onHandle={onHandleConnection!}\n                isNoumEditor\n              />\n            )}\n            {!isOwner &&\n              !isMasterNoum &&\n              spaceId !== mainSpaceId &&\n              userActionMode === UserActionMode.handleWaitInvitation && (\n                <NoumWaitInvitation />\n              )}\n            <NoumDescription\n              isUpdateMode={isUpdateMode}\n              summaryDescription={summaryDescription}\n            />\n          </Stack>\n          {SpaceTypeEnum.RiseApplication === noumType && (\n            <RiseApplicationSteps />\n          )}\n        </NoumEditorStyledCard>\n\n        <>\n          {isMasterNoum ? (\n            <PersonalDetailsModal\n              isOpen={isEditOpen}\n              handleClose={toggleEditOpen}\n              handleSuccess={toggleEditOpen}\n              spaceId={spaceId}\n              isUpdateMode\n            />\n          ) : isEditOpen ? (\n            <ProjectCreate\n              isOpen={isEditOpen}\n              handleClose={toggleEditOpen}\n              handleSuccess={toggleEditOpen}\n              isUpdateMode\n              summaryData={summaryData}\n            />\n          ) : null}\n        </>\n        {isRenewModalOpen && flags.paymentSubscriptions && isOwner && (\n          <RenewNoumModal\n            onClose={toggleRenewModal}\n            open={isRenewModalOpen}\n            chamber_id={noumValidity?.chember}\n            noumExpiryDate={noumValidity?.validityDate}\n            noum_transaction_fee_id={noumValidity?.noumTransactionFeeId}\n          />\n        )}\n      </>\n    );\n  },\n);\n\nexport default ProfileSummaryNew;\n","import { useLaunchDarkly } from '@/hooks';\nimport { RiseApplicationProvider } from './RiseApplicationV2/RiseApplicationProvider';\nimport { NoumByLinkProvider } from '../RightPanel/NoumByLinkProvider';\nimport ProfileData from './ProfileData';\nimport ProfileSummaryNew from './ProfileSummaryNew';\nimport ProfileSummaryOld from './ProfileSummaryOld';\nimport { type IProfileSummary } from './types';\n\nconst ProfileSummary = ({ isCustomPreview, ...props }: IProfileSummary) => {\n  const {\n    flags: { noumEditor2, noumCustomPreivewV2 },\n  } = useLaunchDarkly();\n\n  return noumEditor2 &&\n    (!isCustomPreview || (isCustomPreview && noumCustomPreivewV2)) ? (\n    <NoumByLinkProvider>\n      <RiseApplicationProvider>\n        <ProfileSummaryNew isCustomPreview={isCustomPreview} {...props} />\n      </RiseApplicationProvider>\n    </NoumByLinkProvider>\n  ) : (\n    <ProfileSummaryOld {...props} />\n  );\n};\n\nexport { ProfileSummary, ProfileData };\n","import styled from 'styled-components';\nimport { Card } from '@/components/Card';\nimport {\n  NoumLayoutSectionType,\n  NoumLayoutSectionVerticalAlignType,\n} from '@/apollo/generated/types';\nimport { mediaSizes } from '@/constants/devices';\n\nexport const NoumSectionContainer = styled(Card)<{\n  isBackground?: boolean;\n  height?: number;\n  isEmptySection?: boolean;\n  isEdit?: boolean;\n}>`\n  overflow: visible;\n  width: 100%;\n  transition: all 0.1s ease-in-out;\n  padding: ${({ isEdit, isEmptySection, isBackground }) =>\n    isEdit\n      ? isEmptySection && !isBackground\n        ? '0'\n        : '16px'\n      : !isBackground\n      ? '0px'\n      : '16px'};\n  ${({ isBackground }) => !isBackground && 'background: none'};\n  height: ${({ height }) => (height ? `${height}px` : 'unset')};\n  @media (max-width: ${mediaSizes.MOBILE_L_MAX}) {\n    padding: 16px 0;\n  }\n`;\n\nconst getTemplateColumns = (noumSectionType?: NoumLayoutSectionType) => {\n  switch (noumSectionType) {\n    case NoumLayoutSectionType.TwoColumnsRightWider:\n      return '64.5% max(34.5%)';\n    case NoumLayoutSectionType.TwoColumnsLeftWider:\n      return 'max(34.5%) 64.5%';\n    case NoumLayoutSectionType.TwoEqualColumns:\n      return 'minmax(0, 1fr) minmax(0, 1fr)';\n    case NoumLayoutSectionType.ThreeEqualColumns:\n      return 'minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr)';\n    case NoumLayoutSectionType.SingleColumn_700Px:\n      return '700px';\n    default:\n      return 'minmax(auto, 100%)';\n  }\n};\n\nexport const NoumSectionLayout = styled.div<{\n  noumSectionType?: NoumLayoutSectionType;\n  isSmallerThanLaptop: boolean;\n  sectionAlign?: NoumLayoutSectionVerticalAlignType;\n}>`\n  box-sizing: border-box;\n  display: grid;\n  transition: all 0.1s ease-in-out;\n  width: 100%;\n  align-items: ${({ sectionAlign }) =>\n    sectionAlign === NoumLayoutSectionVerticalAlignType.Top\n      ? 'flex-start'\n      : sectionAlign === NoumLayoutSectionVerticalAlignType.Bottom\n      ? 'flex-end'\n      : 'center'};\n  justify-content: center;\n  grid-gap: 16px;\n  grid-template-columns: ${({ noumSectionType, isSmallerThanLaptop }) =>\n    isSmallerThanLaptop ? '1fr' : getTemplateColumns(noumSectionType)};\n  grid-template-rows: auto;\n  grid-template-areas: 'body';\n\n  @media (max-width: ${mediaSizes.MOBILE_L_MAX}) {\n    display: block;\n  }\n`;\n","import styled from 'styled-components';\nimport { Card } from '@/components/Card';\n\nexport const Column = styled(Card)<{ width: number; inActive?: boolean }>`\n  width: ${({ width }) => width && `${width}%`};\n  height: 52px;\n  padding: 0px;\n  border-radius: 4px;\n  background: var(--bg-section-picker-brand-secondary-default);\n  border: 1px solid var(--border-section-picker-brand-secondary-default);\n  &.inActive {\n    background: var(--bg-section-picker-neutral-disabled);\n    border: none;\n  }\n  cursor: inherit;\n`;\n\nexport const Container = styled(Card)`\n  width: 112px;\n  height: 64px;\n  border: 1px solid var(--border-card-neutral-default);\n  border-radius: 8px;\n  padding: 6px;\n  gap: 3px;\n  display: flex;\n  flex-direction: row;\n  &:hover {\n    background: var(--bg-section-picker-brand-secondary-default);\n    cursor: pointer;\n    border: 1px solid var(--color-base-primary-60);\n    & > ${Column} {\n      background: var(--bg-section-picker-brand-primary-default);\n      &.inActive {\n        background: var(--bg-section-picker-brand-secondary-disabled);\n      }\n    }\n  }\n`;\n","import { type FC } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { type SectionLayoutItemProps } from '../types';\nimport { Column, Container } from './styles';\n\nexport const SectionLayoutItem: FC<SectionLayoutItemProps> = ({\n  layoutSectionType,\n  columnsArray,\n  handleSelectSectionType,\n}) => {\n  const sum = columnsArray?.reduce((a, b) => Math.abs(a) + Math.abs(b), 0);\n  return (\n    <Container\n      aria-label={`${layoutSectionType}`}\n      onClick={() => handleSelectSectionType(layoutSectionType)}\n    >\n      {columnsArray.map((weight: number) => (\n        <Column\n          key={uuidv4()}\n          width={(Math.abs(weight) / sum) * 100}\n          className={weight < 0 ? 'inActive' : ''}\n        />\n      ))}\n    </Container>\n  );\n};\n","import { t } from 'i18next';\nimport { NoumLayoutSectionType } from '@/apollo/generated/types';\nimport { type InputListTypes } from '@/components/Tabs/types';\n\nexport const columnsLayout = [\n  { layoutSectionType: NoumLayoutSectionType.SingleColumn, column: [1] },\n  {\n    layoutSectionType: NoumLayoutSectionType.SingleColumn_700Px,\n    column: [-1, 3, -1],\n  },\n  {\n    layoutSectionType: NoumLayoutSectionType.ThreeEqualColumns,\n    column: [1, 1, 1],\n  },\n  { layoutSectionType: NoumLayoutSectionType.TwoEqualColumns, column: [2, 2] },\n  {\n    layoutSectionType: NoumLayoutSectionType.TwoColumnsRightWider,\n    column: [2, 1],\n  },\n  {\n    layoutSectionType: NoumLayoutSectionType.TwoColumnsLeftWider,\n    column: [1, 2],\n  },\n];\n\nexport const listOfTabs: InputListTypes[] = [\n  {\n    name: 'empty_sections',\n    text: t('noumena.noum_editor.popup.pick_section_layout.tab.empty_sections'),\n    labelSize: 'auto',\n  },\n  {\n    name: 'section_templates',\n    text: t(\n      'noumena.noum_editor.popup.pick_section_layout.tab.section_templates',\n    ),\n    labelSize: 'auto',\n  },\n];\n","import { type FC } from 'react';\nimport { type NoumLayoutSectionType } from '@/apollo/generated/types';\nimport { SectionLayoutItem } from '../SectionLayoutItem';\nimport { columnsLayout } from '../constants';\nimport { type EmptySectionsProps } from '../types';\n\nexport const EmptySections: FC<EmptySectionsProps> = ({\n  handleSelectSectionType,\n}) => (\n  <>\n    {columnsLayout.map((layout) => (\n      <SectionLayoutItem\n        layoutSectionType={layout.layoutSectionType as NoumLayoutSectionType}\n        handleSelectSectionType={handleSelectSectionType}\n        key={`section-layout-item-${layout.layoutSectionType}`}\n        columnsArray={layout.column}\n      />\n    ))}\n  </>\n);\n","export const SectionTemplates = () => <>Section Templates</>;\n","import styled from 'styled-components';\nimport { Stack } from '@/layout';\n\nexport const SectionLayoutPickerWrapper = styled.div`\n  width: 100%;\n  gap: 12px;\n`;\n\nexport const TabContent = styled(Stack)`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  justify-content: center;\n  padding-top: 17px;\n`;\n","import { useCallback, useState, type FC } from 'react';\nimport { t } from 'i18next';\nimport BasicChipsTabsForm from '@/components/Tabs/TabsForm';\nimport { Stack } from '@/layout';\nimport { TSpan } from '@/components/Typography';\nimport { useAddSectionsHelper } from '@/features/noums/hooks/spaceQuery';\nimport {\n  type CreateNoumLayoutSectionInput,\n  type NoumLayoutSectionType,\n} from '@/apollo/generated/types';\nimport { EmptySections } from './Tabs/EmptySections';\nimport { SectionTemplates } from './Tabs/SectionTemplates';\nimport { SectionLayoutPickerWrapper, TabContent } from './styles';\nimport { listOfTabs } from './constants';\nimport { useEditChamberState } from '../../EditChamber/provider';\nimport { type SectionsLayoutPickerProps } from './types';\n\nexport const SectionLayoutPicker: FC<SectionsLayoutPickerProps> = ({\n  position,\n  setIsPopover,\n  setIsLoading,\n}) => {\n  const { id: noumId } = useEditChamberState();\n  const [selectedId, setSelectedId] = useState('0');\n  const { addSectionsHelper } = useAddSectionsHelper();\n\n  const handleSelectSectionType = useCallback(\n    async (sectionType: NoumLayoutSectionType) => {\n      setIsLoading?.(true);\n      const newSectionInput: CreateNoumLayoutSectionInput = {\n        noumId,\n        position,\n        type: sectionType,\n      };\n      await addSectionsHelper(newSectionInput, noumId);\n      setIsPopover(false);\n      setIsLoading?.(false);\n    },\n    [addSectionsHelper, noumId, position, setIsLoading, setIsPopover],\n  );\n\n  const handleChange = useCallback(\n    (id: string) => {\n      if (id && id !== selectedId) {\n        setSelectedId(id);\n      }\n    },\n    [selectedId],\n  );\n\n  const tabComponent = () =>\n    selectedId === '0' ? (\n      <>\n        <EmptySections handleSelectSectionType={handleSelectSectionType} />\n      </>\n    ) : (\n      <SectionTemplates />\n    );\n\n  const sectionTemplate = false;\n\n  return (\n    <SectionLayoutPickerWrapper>\n      <Stack fullWidth justify=\"center\" fixedHeight={29}>\n        <TSpan font=\"body-xl-bold\">\n          {t('noumena.noum_editor.popup.pick_section_layout.title')}\n        </TSpan>\n      </Stack>\n      {sectionTemplate && (\n        <Stack fullWidth>\n          <BasicChipsTabsForm\n            onChange={handleChange}\n            inputList={listOfTabs}\n            selectedId={selectedId}\n            mode=\"isUnderline\"\n            fullWidth\n            isWithoutImage\n            fontSize=\"--font-input-small-size\"\n          />\n        </Stack>\n      )}\n      <TabContent fullWidth>{tabComponent()}</TabContent>\n    </SectionLayoutPickerWrapper>\n  );\n};\n\nexport default SectionLayoutPicker;\n","import styled from 'styled-components';\nimport { useState } from 'react';\nimport { Stack } from '@/layout/Stack';\nimport { Icon } from '@/components/Icon';\nimport { TSpan } from '@/components/Typography';\nimport { SectionLayoutPicker } from '@/screens/Chamber/components/SectionLayoutPicker';\nimport { PopoverWrapper } from '@/features/noums/components/NoumEditor2.0';\n\ntype EmptyNoumStateProps = {\n  title: string;\n  description: string;\n};\n\nconst EmptyNoumContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 2px dashed var(--color-base-gray-80);\n  border-radius: 16px;\n  padding: 68px 0;\n  cursor: pointer;\n  :hover {\n    border-color: var(--border-add-section-neutral-hover);\n    background-color: var(--bg-add-section-neutral-hover);\n    path {\n      fill: var(--icon-add-content-brand-primary-default);\n    }\n    & .section-header {\n      color: var(--text-add-section-header-neutral-hover);\n    }\n  }\n`;\n\nexport const EmptyNoumState = (props: EmptyNoumStateProps) => {\n  const { title, description } = props;\n  const [isPopover, setIsPopover] = useState(false);\n\n  return (\n    <PopoverWrapper\n      isOpen={isPopover}\n      onClose={() => setIsPopover(false)}\n      offsetY={71}\n      renderPopoverContent={() => (\n        <SectionLayoutPicker position={1} setIsPopover={setIsPopover} />\n      )}\n      renderTargetContent={() => (\n        <EmptyNoumContainer onClick={() => setIsPopover(true)}>\n          <Stack\n            gap={9}\n            vertical\n            align=\"center\"\n            onClick={() => setIsPopover((prv) => !prv)}\n          >\n            <Icon name=\"plus_icon\" size={16} />\n            <TSpan font=\"body-l-bold\" className=\"section-header\">\n              {title}\n            </TSpan>\n            <TSpan\n              font=\"systemInfo-s\"\n              colorToken=\"--text-add-section-neutral-default\"\n            >\n              {description}\n            </TSpan>\n          </Stack>\n        </EmptyNoumContainer>\n      )}\n    />\n  );\n};\nexport default EmptyNoumState;\n","import { type ChangeEventHandler } from 'react';\nimport { t } from 'i18next';\nimport { type SideModalProps } from '@/components/SideModal/types';\nimport {\n  ElementTypeEnum,\n  type NoumLayoutSectionType,\n} from '@/apollo/generated/types';\nimport { type SectionToolProps } from '../SectionElementRearrange/types';\n\nexport interface SidePanelProps extends SideModalProps {\n  noumSidePanelType: SectionToolProps;\n  onClose: () => void;\n  noumSidePanelId: string;\n}\n\nexport interface IColumnOptions {\n  option: NoumLayoutSectionType;\n  isSelected?: boolean;\n  onChange?: (type: NoumLayoutSectionType) => void;\n}\n\nexport interface ISwitch {\n  id: string;\n  onChange?: ChangeEventHandler<HTMLInputElement> | undefined;\n  disabled?: boolean;\n}\n\nexport type NoumEditSectionProps = {\n  noumSidePanelId: string;\n};\n\nexport type NoumEditToolProps = {\n  noumSidePanelId: string;\n};\n\nexport const elementTitle: Record<string, string> = {\n  [ElementTypeEnum.Image]: t('noumena.chambers.toolbox.element.image'),\n  [ElementTypeEnum.Video]: t('noumena.chambers.toolbox.element.video'),\n  [ElementTypeEnum.Text]: t('noumena.chambers.toolbox.element.text'),\n  [ElementTypeEnum.QuickQuestions]: t(\n    'noumena.chambers.toolbox.element.quick_questions',\n  ),\n  [ElementTypeEnum.Message]: t('noumena.chambers.toolbox.element.message'),\n  [ElementTypeEnum.ProjectWorkExperience]: t(\n    'noumena.homeChambers.addExperience.currentTitle',\n  ),\n  [ElementTypeEnum.EducationTraining]: t(\n    'noumena.homeChambers.addEducation.currentTitle',\n  ),\n  [ElementTypeEnum.AchievementAward]: t(\n    'noumena.homeChambers.addAchievement.currentTitle',\n  ),\n  [ElementTypeEnum.PublicationDesignPatterns]: t(\n    'noumena.homeChambers.publicationAndDesign.currentTitle',\n  ),\n  [ElementTypeEnum.PersonalInterest]: t(\n    'noumena.homeChambers.personalInterest.currentTitle',\n  ),\n  [ElementTypeEnum.SocialInterest]: t(\n    'noumena.homeChambers.socialInterest.currentTitle',\n  ),\n  [ElementTypeEnum.Calendar]: t('noumena.homeChambers.calendar.currentTitle'),\n  [ElementTypeEnum.BusinessBrief]: t(\n    'noumena.chambers.toolbox.element.businessBrief',\n  ),\n  [ElementTypeEnum.Connection]: '',\n  [ElementTypeEnum.ContractManager]: t(\n    'noumena.chambers.toolbox.element.contracts',\n  ),\n  [ElementTypeEnum.FilesManager]: t('noumena.chambers.toolbox.element.file'),\n  [ElementTypeEnum.Skills]: t('noumena.homenoum.skills.title'),\n  [ElementTypeEnum.Usernetwork]: t(\n    'noumena.chambers.toolbox.element.usernetwork',\n  ),\n  [ElementTypeEnum.Userposts]: t('noumena.chambers.toolbox.element.posts'),\n  [ElementTypeEnum.Wallet]: t(`noumena.noum_editor.tool.title.wallet`),\n  [ElementTypeEnum.Home]: '',\n  [ElementTypeEnum.Instagram]: '',\n  [ElementTypeEnum.Invitation]: '',\n  [ElementTypeEnum.Profile]: '',\n  [ElementTypeEnum.Events]: '',\n};\n\nexport const elementDescription: Record<string, string> = {\n  [ElementTypeEnum.AchievementAward]: t(\n    'noumena.noum_editor.tool.project_work_experience.description',\n  ),\n  [ElementTypeEnum.BusinessBrief]: t(\n    'noumena.noum_editor.tool.business_brief.description',\n  ),\n  [ElementTypeEnum.Calendar]: t('noumena.noum_editor.tool.event.description'),\n  [ElementTypeEnum.Connection]: '',\n  [ElementTypeEnum.ContractManager]: '',\n  [ElementTypeEnum.EducationTraining]: t(\n    'noumena.noum_editor.tool.project_work_experience.description',\n  ),\n  [ElementTypeEnum.FilesManager]: t(\n    'noumena.noum_editor.tool.file_Manager.description',\n  ),\n  [ElementTypeEnum.Home]: '',\n  [ElementTypeEnum.Image]: t('noumena.drag_drop_image_file_type_size.text'),\n  [ElementTypeEnum.Instagram]: '',\n  [ElementTypeEnum.Invitation]: '',\n  [ElementTypeEnum.Message]: t('noumena.noum_editor.tool.message.description'),\n  [ElementTypeEnum.PersonalInterest]: t(\n    'noumena.noum_editor.tool.project_work_experience.description',\n  ),\n  [ElementTypeEnum.Profile]: '',\n  [ElementTypeEnum.ProjectWorkExperience]: t(\n    'noumena.noum_editor.tool.project_work_experience.description',\n  ),\n  [ElementTypeEnum.PublicationDesignPatterns]: t(\n    'noumena.noum_editor.tool.project_work_experience.description',\n  ),\n  [ElementTypeEnum.QuickQuestions]: t(\n    `noumena.noum_editor.tool.quick_questions.description`,\n  ),\n  [ElementTypeEnum.Skills]: '',\n  [ElementTypeEnum.SocialInterest]: t(\n    'noumena.noum_editor.tool.social_interests.description',\n  ),\n  [ElementTypeEnum.Text]: t('noumena.noum_editor.tool.text.description'),\n  [ElementTypeEnum.Usernetwork]: '',\n  [ElementTypeEnum.Userposts]: t('noumena.noum_editor.tool.post.description'),\n  [ElementTypeEnum.Video]: t('noumena.drag_drop_video_file_type_size.text'),\n  [ElementTypeEnum.Wallet]: '',\n  [ElementTypeEnum.Events]: t('noumena.noum_editor.tool.event.description'),\n};\n\nexport const elementDeleteModalDescription: Record<string, string> = {\n  [ElementTypeEnum.Userposts]: t(\n    'noumena.noum_editor.tool.posts.delete_modal_description',\n  ),\n  [ElementTypeEnum.Calendar]: t(\n    'noumena.noum_editor.tool.calendar.delete_modal_description',\n  ),\n  [ElementTypeEnum.FilesManager]: t(\n    'noumena.noum_editor.tool.file_manager.delete_modal_description',\n  ),\n};\n","import { type RefObject } from 'react';\nimport {\n  type DraggableProvided,\n  type SnapDragActions,\n} from 'react-beautiful-dnd';\nimport { type SectionToolProps } from '@/screens/Chamber/components/SectionElementRearrange/types';\nimport {\n  type ElementOutput,\n  type NoumLayoutSection,\n} from '@/apollo/generated/types';\nimport { t } from 'i18next';\n\nexport enum InsertDirection {\n  Above = 'Above',\n  Below = 'Below',\n}\n\nexport type SectionProps = {\n  children: JSX.Element | JSX.Element[];\n  className: string;\n  type: SectionToolProps;\n  isActive: boolean;\n  id: string;\n  lift?: (quoteId: string) => SnapDragActions | null;\n  currentIndex?: number;\n  totalIndex?: number;\n  section?: NoumLayoutSection;\n  tool?: ElementOutput;\n  provided?: DraggableProvided;\n  isDragging?: boolean;\n  isElementDragging?: boolean;\n  onInsert?: (direction: InsertDirection) => void;\n  onUpClick?: () => Promise<void>;\n  onDownClick?: () => Promise<void>;\n  isSectionBackground?: boolean;\n  isColumnBackground?: boolean;\n  setOnDragInitiateId?: (moveId: string) => void;\n  isTool?: boolean;\n  setCurrentElementHeight?: (currentElementHeight: number) => void;\n  elementRef?: RefObject<HTMLDivElement>;\n  elementType?: string;\n  disable?: {\n    duplicate?: boolean;\n    delete?: boolean;\n    edit?: boolean;\n    moveUp?: boolean;\n    moveDown?: boolean;\n  };\n  isCustomPreview?: boolean;\n  isEditing?: boolean;\n};\n\nexport type ControlPanelProps = {\n  isTool?: boolean;\n  id?: string;\n  onUpClick?: () => void;\n  onDownClick?: () => void;\n  provided?: DraggableProvided;\n  currentIndex?: number;\n  totalIndex?: number;\n  section?: NoumLayoutSection | undefined;\n  tool?: ElementOutput;\n  isDisabled?: boolean;\n  setOnDragInitiateId?: (moveId: string) => void;\n  setCurrentElementHeight?: (currentElementHeight: number) => void;\n  elementRef?: RefObject<HTMLDivElement>;\n  isSectionBackground?: boolean;\n};\n\nexport enum ToolbuttonEdge {\n  bothTop = 'bothTop',\n  bothBottom = 'bothBottom',\n  topLeft = 'topLeft',\n  topRight = 'topRight',\n}\n\nexport type PlusButtonProps = {\n  onClick?: () => void;\n};\n\nexport const nonRemovableTool = {\n  SKILLS: t('noumena.noum_editor.no_delete_skills_tool'),\n  USERNETWORK: t('noumena.noum_editor.no_delete_network_tool'),\n};\n","import styled, { css } from 'styled-components';\nimport { Stack } from '@/layout';\nimport { TSpan, systemInfoSmallTypography } from '@/components/Typography';\nimport { mediaSizesForNoumLayout } from '@/constants/devices';\nimport { ToolbuttonEdge } from './types';\n\nexport const HoverWrapperElements = css`\n  position: absolute;\n  top: -28px;\n  display: none;\n`;\n\nexport const ChildWrapper = styled.div<{\n  isDragging?: boolean;\n  isSectionBackground?: boolean;\n  isColumnBackground?: boolean;\n}>`\n  box-sizing: border-box;\n  border: ${({ isSectionBackground, isColumnBackground }) =>\n    isColumnBackground && isSectionBackground\n      ? '1px solid var(--bg-card-neutral-alt-default)'\n      : '1px solid var(--border-card-neutral-default)'};\n  border-radius: 16px;\n  width: ${({ isDragging }) => (isDragging ? '303px' : '100%')};\n`;\n\nexport const ToolContainer = styled.div<{ isTool: boolean }>`\n  background: ${({ isTool }) =>\n    isTool\n      ? 'var(--bg-tool-toolbox-brand-primary-default)'\n      : 'var(--bg-section-toolbox-default)'};\n  border-radius: 6px 6px 0px 0px;\n  padding: 5px 8px;\n  left: ${({ isTool }) => (isTool ? '16px' : '24px')};\n  ${HoverWrapperElements}\n  ${({ isTool }) =>\n    isTool &&\n    css`\n      max-width: 25%;\n      @media (min-width: ${mediaSizesForNoumLayout.LAPTOP_M_MIN}) {\n        max-width: 30%;\n      }\n      @media (min-width: ${mediaSizesForNoumLayout.LAPTOP_L_MIN}) {\n        max-width: 35%;\n      }\n    `}\n`;\n\nexport const ToolNameContainer = styled(TSpan)`\n  text-overflow: ellipsis;\n  display: block;\n  max-width: 100%;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nexport const PlusWrapper = styled.div<{ isBottom?: boolean }>`\n  left: calc(50% - 15px);\n  ${({ isBottom }) => isBottom && 'top: unset !important; bottom: -28px '};\n  z-index: 1;\n  ${HoverWrapperElements}\n`;\n\nexport const StackElements = styled(Stack)<{ isTool?: boolean }>`\n  right: ${({ isTool }) => (isTool ? '16px' : '24px')};\n  ${HoverWrapperElements}\n`;\n\nexport const HoverWrapperContainer = styled.div<{\n  isChild: boolean;\n  isActive: boolean;\n  isDragging?: boolean;\n  isElementDragging?: boolean;\n  isHoverNotActive?: boolean;\n  isMoveTool?: boolean;\n}>`\n  position: relative;\n  width: ${({ isDragging }) => (isDragging ? '303px' : '100%')};\n  ${({ isActive }) =>\n    isActive\n      ? css`\n          & .parent {\n            display: flex;\n          }\n          .parent-wrapper {\n            border: 1px solid var(--bg-section-toolbox-default);\n          }\n        `\n      : css`\n          &:hover:not(:has(.element-container:hover, .child:hover)) .parent {\n            display: flex;\n          }\n          &:hover:not(:has(.element-container:hover, .child:hover))\n            .parent-wrapper,\n          .parent-wrapper:hover:not(:has(.child-wrapper, .child-wrapper:hover)) {\n            border: 1px dashed var(--bg-section-toolbox-default);\n          }\n        `}\n\n  ${({\n    isChild,\n    isActive,\n    isDragging,\n    isElementDragging,\n    isHoverNotActive,\n    isMoveTool,\n  }) =>\n    isChild && (isActive || isDragging)\n      ? css`\n          &:has(.element-container, .child) .child,\n          .child {\n            display: ${isHoverNotActive ? 'none' : 'flex'};\n          }\n          .child-wrapper {\n            border: 1px ${isDragging ? 'dashed' : 'solid'}\n              var(--bg-tool-toolbox-brand-primary-default);\n            height: ${isMoveTool ? '75px' : ''};\n          }\n        `\n      : isChild &&\n        !isElementDragging &&\n        css`\n          &:hover:has(.element-container:hover, .child) .child,\n          .child:hover {\n            display: flex;\n          }\n          &:hover .child-wrapper,\n          .child-wrapper:hover {\n            border: 1px dashed var(--bg-tool-toolbox-brand-primary-default);\n          }\n        `}\n`;\n\nexport const WrapperIcon = styled.div<{ disabled?: boolean; isEdge?: string }>`\n  border-right: ${({ isEdge }) =>\n    isEdge === 'right'\n      ? ''\n      : `1px solid var(--color-base-background-transparent)`};\n  padding: 0 6px;\n  opacity: ${(p) => (p.disabled ? '0.2' : '1')};\n`;\n\nexport const ControlPanelIcon = styled.div<{\n  bgColor?: string;\n  cursorAllowed?: boolean;\n  hoverColor?: string;\n  isEdge?: string;\n  isSectionBackground?: boolean;\n}>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  height: 19px;\n  background-color: ${({ bgColor }) =>\n    bgColor ?? 'var(--bg-button-neutral-default)'};\n  border-radius: ${({ isEdge }) =>\n    isEdge === ToolbuttonEdge.topLeft\n      ? '8px 0px 0px 0px'\n      : isEdge === ToolbuttonEdge.topRight\n      ? '0px 8px 0px 0px'\n      : isEdge === ToolbuttonEdge.bothBottom\n      ? '0px 0px 8px 8px'\n      : isEdge === ToolbuttonEdge.bothTop\n      ? '8px 8px 0px 0px'\n      : ''};\n  cursor: ${({ cursorAllowed }) =>\n    !cursorAllowed ? 'not-allowed' : 'pointer'};\n  padding: 5px 0px;\n  svg {\n    ${({ cursorAllowed }) =>\n      !cursorAllowed &&\n      `\n      opacity: 0.3;\n    `}\n  }\n\n  &[data-title]:hover::after {\n    content: attr(data-title);\n    position: absolute;\n    background-color: var(--bg-tooltip-neutral-default);\n    color: var(--text-tooltip-neutral-alt-default);\n    padding: 6px 8px;\n    border-radius: 4px;\n    white-space: nowrap;\n    top: -28px;\n    ${({ isSectionBackground, cursorAllowed, isEdge }) =>\n      !isSectionBackground &&\n      !cursorAllowed &&\n      isEdge !== ToolbuttonEdge.topRight\n        ? 'right:-55px'\n        : !cursorAllowed &&\n          isEdge === ToolbuttonEdge.topRight &&\n          'right:-25px'};\n    z-index: 999999999;\n    ${systemInfoSmallTypography.systemInfoSmall};\n  }\n  :hover {\n    background-color: ${({ hoverColor }) =>\n      hoverColor ?? 'var(--bg-button-neutral-alt-hover)'};\n  }\n`;\n\nexport const SectionToolsList = styled.ul`\n  margin: 0;\n  padding: 0;\n  text-align: 'start';\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n","import Typography from '@/components/Typography';\nimport styled from 'styled-components';\n\nexport const DeleteDescriptionContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n  width: 100%;\n  color: var(--text-modal-neutral-default);\n  ${Typography.bodyTypography.bodyLarge}\n`;\n\nexport const DeleteDescription = styled.div`\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n","import styled from 'styled-components';\nimport { type Placement } from '@popperjs/core';\nimport { Stack } from '@/layout';\n\nexport const StyledPopoverWrapper = styled.div`\n  width: 100%;\n`;\n\nexport const ReferenceContainer = styled.div``;\n\nexport const Arrow = styled.div`\n  &,\n  &::before {\n    position: absolute;\n    width: 32px;\n    height: 32px;\n    z-index: -1;\n  }\n\n  &::before {\n    content: '';\n    transform: rotate(45deg);\n    background: var(--bg-card-neutral-alt-default);\n  }\n`;\n\nexport const PopoverContainer = styled.div<{\n  placement: Placement;\n  width?: number;\n}>`\n  position: relative;\n  width: ${({ width }) => width && `${width}px`};\n  min-height: 231px;\n  border-radius: 16px;\n\n  gap: 16px;\n  filter: drop-shadow(0px 4px 32px rgba(32, 17, 62, 0.08));\n  background: var(--bg-card-neutral-alt-default);\n  background-size: cover;\n  z-index: 10;\n\n  &[data-popper-placement^='top'] > ${Arrow} {\n    bottom: -16px;\n  }\n\n  &[data-popper-placement^='bottom'] > ${Arrow} {\n    top: -16px;\n  }\n\n  &[data-popper-placement^='left'] > ${Arrow} {\n    right: -16px;\n  }\n\n  &[data-popper-placement^='right'] > ${Arrow} {\n    left: -16px;\n  }\n`;\n\nexport const PopoverHeader = styled(Stack)``;\n\nexport const PopoverBody = styled(Stack)``;\n\nexport const CloseButtonWrapper = styled.div`\n  position: absolute;\n  right: 16px;\n  z-index: 5;\n`;\n","import { type FC } from 'react';\nimport { Button } from '@/components/Button';\nimport { Icon } from '@/components/Icon';\nimport { CloseButtonWrapper } from './styles';\n\nexport const CloseButton: FC<{ onClose: () => void }> = (props) => (\n  <CloseButtonWrapper>\n    <Button\n      {...props}\n      testId=\"popover_close_btn\"\n      size=\"small\"\n      textOnly\n      icon={\n        <Icon name=\"close_m\" size={24} color=\"--icon-card-neutral-default\" />\n      }\n      onClick={props.onClose}\n    />\n  </CloseButtonWrapper>\n);\n","import { type Placement } from '@popperjs/core';\nimport { type FC, useRef, useState } from 'react';\nimport { usePopper } from 'react-popper';\nimport { useClickOutside } from '@/hooks';\nimport { Stack } from '@/layout';\nimport {\n  Arrow,\n  PopoverContainer,\n  ReferenceContainer,\n  StyledPopoverWrapper,\n} from './styles';\nimport { CloseButton } from './CloseButton';\n\nexport interface IPopoverWrapper {\n  isOpen: boolean;\n  width?: number;\n  placement?: Placement;\n  onClose: () => void;\n  renderTargetContent: () => JSX.Element;\n  renderPopoverContent: () => JSX.Element;\n  offsetY?: number;\n  offsetX?: number;\n}\n\nexport const PopoverWrapper: FC<IPopoverWrapper> = ({\n  isOpen,\n  width = 384,\n  renderTargetContent,\n  renderPopoverContent,\n  placement = 'top',\n  onClose,\n  offsetX = 0,\n  offsetY = 150,\n}) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  useClickOutside(containerRef, true, onClose, {\n    excludes: ['#create_wallet_button', '#confirm_create_wallet_button'],\n  });\n  const [referenceElement, setReferenceElement] =\n    useState<HTMLDivElement | null>(null);\n  const [popperElement, setPopperElement] = useState<HTMLElement | null>(null);\n  const [arrowElement, setArrowElement] = useState<HTMLElement | null>(null);\n  const { styles, attributes } = usePopper(referenceElement, popperElement, {\n    strategy: 'fixed',\n    placement,\n    modifiers: [\n      {\n        name: 'offset',\n        options: { offset: [offsetX, offsetY] },\n      },\n      { name: 'arrow', options: { element: arrowElement, padding: 120 } },\n    ],\n  });\n\n  return (\n    <StyledPopoverWrapper\n      ref={containerRef}\n      onClick={(e) => e.stopPropagation()}\n    >\n      <ReferenceContainer\n        ref={setReferenceElement}\n        data-testid=\"popover-reference-container\"\n      >\n        {renderTargetContent()}\n      </ReferenceContainer>\n      {isOpen && (\n        <PopoverContainer\n          width={width}\n          placement={placement}\n          ref={setPopperElement}\n          style={styles.popper}\n          {...attributes.popper}\n        >\n          <Stack padding={16}>\n            <CloseButton onClose={onClose} />\n            {renderPopoverContent()}\n          </Stack>\n          <Arrow ref={setArrowElement} style={styles.arrow} />\n        </PopoverContainer>\n      )}\n    </StyledPopoverWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { systemInfoSmallTypography } from '@/components/Typography';\n\nexport const AddSectionComponentWrapper = styled.div`\n  height: 24px;\n  border-radius: 8px;\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border: 1px dashed var(--border-add-section-neutral-default);\n  background: var(--bg-add-section-neutral-default);\n  width: 100%;\n\n  &[data-title]:hover::after {\n    content: attr(data-title);\n    position: absolute;\n    background-color: var(--bg-tooltip-neutral-default);\n    color: var(--text-tooltip-neutral-alt-default);\n    padding: 6px 8px;\n    border-radius: 4px;\n    white-space: nowrap;\n    top: -20px;\n    z-index: 999999999;\n    ${systemInfoSmallTypography.systemInfoSmall};\n  }\n\n  :hover {\n    border-color: var(--border-add-section-neutral-hover);\n    background-color: var(--bg-add-section-neutral-hover);\n    path {\n      fill: var(--icon-add-content-brand-primary-default);\n    }\n  }\n`;\n\nexport const CenterIcon = styled.div`\n  margin: 0 auto;\n`;\n","import { t } from 'i18next';\nimport { ElementTypeEnum } from '@/apollo/generated/types';\nimport {\n  type ListOfOptionsTypes,\n  type TabsHeaderTypes,\n} from '@/features/noums/components/Toolbox';\n\nexport const Tabs: TabsHeaderTypes[] = [\n  {\n    name: 'test1',\n    image: 'terms_m',\n    text: t('noumena.chambers.toolbox.element.all'),\n    id: 'xss1',\n    labelSize: 'medium',\n    group: 'all',\n  },\n  {\n    name: 'test1',\n    image: 'terms_m',\n    text: t('noumena.chambers.toolbox.element.layout'),\n    id: 'xsds1',\n    labelSize: 'medium',\n    group: 'layout',\n  },\n  {\n    name: 'test1',\n    image: 'terms_m',\n    text: t('noumena.chambers.toolbox.element.socialTools'),\n    id: 'xs1',\n    labelSize: 'medium',\n    group: 'socialmedia',\n  },\n  {\n    name: 'test1',\n    image: 'terms_m',\n    text: t('noumena.chambers.toolbox.group.money'),\n    id: 'xsss1',\n    labelSize: 'medium',\n    group: 'finance',\n  },\n];\n\nexport const allToolsInToolBox: ListOfOptionsTypes[] = [\n  {\n    size: 24,\n    name: 'text_m',\n    type: ElementTypeEnum.Text,\n    text: t('noumena.chambers.toolbox.element.text'),\n    group: ['all', 'layout'],\n    disabled: false,\n    allowedNoumTypes: ['HOME', 'PROJECT', 'RISE_APPLICATION'],\n    toolTipText: t('noumena.chambers.toolbox.element.text_tool_tip'),\n  },\n  {\n    size: 24,\n    name: 'picture_m',\n    type: ElementTypeEnum.Image,\n    text: t('noumena.chambers.toolbox.element.image'),\n    group: ['all', 'layout'],\n    disabled: false,\n    allowedNoumTypes: ['HOME', 'PROJECT', 'RISE_APPLICATION'],\n    toolTipText: t('noumena.chambers.toolbox.element.image_tool_tip'),\n  },\n  {\n    size: 24,\n    name: 'play_m',\n    type: ElementTypeEnum.Video,\n    text: t('noumena.chambers.toolbox.element.video'),\n    group: ['all', 'layout'],\n    disabled: false,\n    allowedNoumTypes: ['HOME', 'PROJECT', 'RISE_APPLICATION'],\n    toolTipText: t('noumena.chambers.toolbox.element.video_tool_tip'),\n  },\n  {\n    size: 24,\n    name: 'wallet_m',\n    type: ElementTypeEnum.Wallet,\n    text: t('noumena.chambers.toolbox.element.CreateNoumWallet'),\n    group: ['all', 'finance'],\n    disabled: false,\n    allowedNoumTypes: ['PROJECT', 'RISE_APPLICATION'],\n    toolTipText: t(\n      'noumena.chambers.toolbox.element.CreateNoumWallet_tool_tip',\n    ),\n  },\n  {\n    size: 24,\n    name: 'message_m',\n    type: ElementTypeEnum.Message,\n    text: t('noumena.chambers.toolbox.element.message'),\n    group: ['all', 'socialmedia'],\n    disabled: false,\n    allowedNoumTypes: ['PROJECT', 'HOME', 'RISE_APPLICATION'],\n    toolTipText: t('noumena.chambers.toolbox.element.message_tool_tip'),\n  },\n  {\n    size: 24,\n    name: 'quick_questions_m',\n    type: ElementTypeEnum.QuickQuestions,\n    text: t('noumena.chambers.toolbox.element.quick_questions'),\n    group: ['all', 'socialmedia'],\n    disabled: false,\n    allowedNoumTypes: ['PROJECT', 'RISE_APPLICATION'],\n    toolTipText: t('noumena.chambers.toolbox.element.quick_questions_tool_tip'),\n  },\n  {\n    size: 24,\n    name: 'lecterm_m',\n    type: ElementTypeEnum.BusinessBrief,\n    text: t('noumena.chambers.toolbox.element.businessBrief'),\n    group: ['all', 'layout'],\n    disabled: false,\n    allowedNoumTypes: ['HOME'],\n  },\n  {\n    size: 24,\n    name: 'briefcase_s',\n    type: ElementTypeEnum.ProjectWorkExperience,\n    text: t('noumena.chambers.toolbox.element.projectWorkExperience'),\n    group: ['all', 'layout'],\n    disabled: false,\n    allowedNoumTypes: ['HOME'],\n  },\n  {\n    size: 24,\n    name: 'education_s',\n    type: ElementTypeEnum.EducationTraining,\n    text: t('noumena.chambers.toolbox.element.educationTraining'),\n    group: ['all', 'layout'],\n    disabled: false,\n    allowedNoumTypes: ['HOME'],\n  },\n  {\n    size: 24,\n    name: 'avard_s',\n    type: ElementTypeEnum.AchievementAward,\n    text: t('noumena.chambers.toolbox.element.achievementAward'),\n    group: ['all', 'layout'],\n    disabled: false,\n    allowedNoumTypes: ['HOME'],\n  },\n  {\n    size: 24,\n    name: 'blub_s',\n    type: ElementTypeEnum.PublicationDesignPatterns,\n    text: t('noumena.chambers.toolbox.element.publicationDesignPatterns'),\n    group: ['all', 'layout'],\n    disabled: false,\n    allowedNoumTypes: ['HOME'],\n  },\n  {\n    size: 24,\n    name: 'interest_s',\n    type: ElementTypeEnum.PersonalInterest,\n    text: t('noumena.chambers.toolbox.element.personalInterest'),\n    group: ['all', 'layout'],\n    disabled: false,\n    allowedNoumTypes: ['HOME'],\n  },\n  {\n    size: 24,\n    name: 'heart_s',\n    type: ElementTypeEnum.SocialInterest,\n    text: t('noumena.chambers.toolbox.element.socialInterest'),\n    group: ['all', 'layout'],\n    disabled: false,\n    allowedNoumTypes: ['HOME'],\n  },\n  {\n    size: 24,\n    name: 'calendar_m',\n    type: ElementTypeEnum.Calendar,\n    text: t('noumena.chambers.toolbox.element.calendar'),\n    group: ['all', 'socialmedia'],\n    disabled: false,\n    allowedNoumTypes: ['HOME', 'PROJECT', 'RISE_APPLICATION'],\n    toolTipText: t('noumena.chambers.toolbox.element.calendar_tool_tip'),\n  },\n  {\n    size: 24,\n    name: 'posts_m',\n    type: ElementTypeEnum.Userposts,\n    text: t('noumena.chambers.toolbox.element.posts'),\n    group: ['all', 'socialmedia'],\n    disabled: false,\n    allowedNoumTypes: ['PROJECT', 'RISE_APPLICATION'],\n    toolTipText: t('noumena.chambers.toolbox.element.posts_tool_tip'),\n  },\n  {\n    size: 24,\n    name: 'network_m',\n    type: ElementTypeEnum.Usernetwork,\n    text: t('noumena.chambers.toolbox.element.usernetwork'),\n    group: ['all', 'socialmedia'],\n    disabled: false,\n    allowedNoumTypes: ['HOME'],\n  },\n  {\n    size: 24,\n    name: 'file_m',\n    type: ElementTypeEnum.FilesManager,\n    text: t('noumena.chambers.toolbox.element.file'),\n    group: ['all', 'layout'],\n    disabled: false,\n    allowedNoumTypes: ['PROJECT', 'RISE_APPLICATION'],\n  },\n  {\n    size: 24,\n    name: 'contract_m',\n    type: ElementTypeEnum.ContractManager,\n    text: t('noumena.chambers.toolbox.element.contracts'),\n    group: ['all', 'layout'],\n    disabled: false,\n    allowedNoumTypes: ['PROJECT'],\n  },\n];\n\nexport const allToolsInToolBoxV2: ListOfOptionsTypes[] = [\n  {\n    size: 24,\n    name: 'text_m',\n    type: ElementTypeEnum.Text,\n    text: t('noumena.chambers.toolbox_v2.element.text'),\n    group: ['all', 'layout'],\n    disabled: false,\n    allowedNoumTypes: ['HOME', 'PROJECT', 'RISE_APPLICATION'],\n    toolTipText: t('noumena.chambers.toolbox.element.text_tool_tip'),\n  },\n  {\n    size: 24,\n    name: 'picture_m',\n    type: ElementTypeEnum.Image,\n    text: t('noumena.chambers.toolbox_v2.element.image'),\n    group: ['all', 'layout'],\n    disabled: false,\n    allowedNoumTypes: ['HOME', 'PROJECT', 'RISE_APPLICATION'],\n    toolTipText: t('noumena.chambers.toolbox.element.image_tool_tip'),\n  },\n  {\n    size: 24,\n    name: 'file_m',\n    type: ElementTypeEnum.FilesManager,\n    text: t('noumena.chambers.toolbox.element.document'),\n    toolTipText: t('noumena.chambers.toolbox.element.document_tool_tip'),\n    group: ['all', 'layout'],\n    disabled: false,\n    allowedNoumTypes: ['PROJECT', 'RISE_APPLICATION'],\n  },\n  {\n    size: 24,\n    name: 'play_m',\n    type: ElementTypeEnum.Video,\n    text: t('noumena.chambers.toolbox_v2.element.video'),\n    group: ['all', 'layout'],\n    disabled: false,\n    allowedNoumTypes: ['HOME', 'PROJECT', 'RISE_APPLICATION'],\n    toolTipText: t('noumena.chambers.toolbox.element.video_tool_tip'),\n  },\n  {\n    size: 24,\n    name: 'wallet_m',\n    type: ElementTypeEnum.Wallet,\n    text: t('noumena.chambers.toolbox_v2.element.wallet'),\n    group: ['all', 'finance'],\n    disabled: false,\n    allowedNoumTypes: ['PROJECT', 'RISE_APPLICATION'],\n    toolTipText: t(\n      'noumena.chambers.toolbox.element.CreateNoumWallet_tool_tip',\n    ),\n  },\n  {\n    size: 24,\n    name: 'message_m',\n    type: ElementTypeEnum.Message,\n    text: t('noumena.chambers.toolbox.element.message'),\n    group: ['all', 'socialmedia'],\n    disabled: false,\n    allowedNoumTypes: ['PROJECT', 'HOME', 'RISE_APPLICATION'],\n    toolTipText: t('noumena.chambers.toolbox.element.message_tool_tip'),\n  },\n  {\n    size: 24,\n    name: 'quick_questions_m',\n    type: ElementTypeEnum.QuickQuestions,\n    text: t('noumena.chambers.toolbox_v2.element.questions'),\n    group: ['all', 'socialmedia'],\n    disabled: false,\n    allowedNoumTypes: ['PROJECT', 'RISE_APPLICATION'],\n    toolTipText: t('noumena.chambers.toolbox.element.quick_questions_tool_tip'),\n  },\n  {\n    size: 24,\n    name: 'lecterm_m',\n    type: ElementTypeEnum.BusinessBrief,\n    text: t('noumena.chambers.toolbox.element.businessBrief'),\n    toolTipText: t('noumena.chambers.toolbox.element.businessBrief'),\n    group: ['all', 'layout'],\n    disabled: false,\n    allowedNoumTypes: ['HOME'],\n  },\n  {\n    size: 24,\n    name: 'briefcase_s',\n    type: ElementTypeEnum.ProjectWorkExperience,\n    text: t('noumena.chambers.toolbox.element.projectWorkExperience'),\n    toolTipText: t('noumena.chambers.toolbox.element.projectWorkExperience'),\n    group: ['all', 'layout'],\n    disabled: false,\n    allowedNoumTypes: ['HOME'],\n  },\n  {\n    size: 24,\n    name: 'education_s',\n    type: ElementTypeEnum.EducationTraining,\n    text: t('noumena.chambers.toolbox.element.educationTraining'),\n    group: ['all', 'layout'],\n    disabled: false,\n    toolTipText: t('noumena.chambers.toolbox.element.educationTraining'),\n    allowedNoumTypes: ['HOME'],\n  },\n  {\n    size: 24,\n    name: 'avard_s',\n    type: ElementTypeEnum.AchievementAward,\n    text: t('noumena.chambers.toolbox.element.achievementAward'),\n    toolTipText: t('noumena.chambers.toolbox.element.achievementAward'),\n    group: ['all', 'layout'],\n    disabled: false,\n    allowedNoumTypes: ['HOME'],\n  },\n  {\n    size: 24,\n    name: 'blub_s',\n    type: ElementTypeEnum.PublicationDesignPatterns,\n    text: t('noumena.chambers.toolbox.element.publicationDesignPatterns'),\n    toolTipText: t(\n      'noumena.chambers.toolbox.element.publicationDesignPatterns',\n    ),\n    group: ['all', 'layout'],\n    disabled: false,\n    allowedNoumTypes: ['HOME'],\n  },\n  {\n    size: 24,\n    name: 'interest_s',\n    type: ElementTypeEnum.PersonalInterest,\n    text: t('noumena.chambers.toolbox.element.personalInterest'),\n    toolTipText: t('noumena.chambers.toolbox.element.personalInterest'),\n    group: ['all', 'layout'],\n    disabled: false,\n    allowedNoumTypes: ['HOME'],\n  },\n  {\n    size: 24,\n    name: 'heart_s',\n    type: ElementTypeEnum.SocialInterest,\n    text: t('noumena.chambers.toolbox.element.socialInterest'),\n    toolTipText: t('noumena.chambers.toolbox.element.socialInterest'),\n    group: ['all', 'layout'],\n    disabled: false,\n    allowedNoumTypes: ['HOME'],\n  },\n  {\n    size: 24,\n    name: 'calendar_m',\n    type: ElementTypeEnum.Calendar,\n    text: t('noumena.chambers.toolbox.element.calendar'),\n    group: ['all', 'socialmedia'],\n    disabled: false,\n    allowedNoumTypes: ['HOME', 'PROJECT', 'RISE_APPLICATION'],\n    toolTipText: t('noumena.chambers.toolbox.element.calendar_tool_tip'),\n  },\n  {\n    size: 24,\n    name: 'posts_m',\n    type: ElementTypeEnum.Userposts,\n    text: t('noumena.chambers.toolbox.element.posts'),\n    group: ['all', 'socialmedia'],\n    disabled: false,\n    allowedNoumTypes: ['PROJECT', 'RISE_APPLICATION', 'HOME'],\n    toolTipText: t('noumena.chambers.toolbox.element.posts_tool_tip'),\n  },\n  {\n    size: 24,\n    name: 'network_m',\n    type: ElementTypeEnum.Usernetwork,\n    text: t('noumena.chambers.toolbox.element.usernetwork'),\n    group: ['all', 'socialmedia'],\n    disabled: false,\n    allowedNoumTypes: ['HOME'],\n  },\n  {\n    size: 24,\n    name: 'contract_m',\n    type: ElementTypeEnum.ContractManager,\n    text: t('noumena.chambers.toolbox.element.contracts'),\n    toolTipText: t('noumena.chambers.toolbox.element.contracts'),\n    group: ['all', 'layout'],\n    disabled: false,\n    allowedNoumTypes: ['PROJECT'],\n  },\n];\n","import { memo, useCallback, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from '@/components/Button';\nimport { TSpan } from '@/components/Typography';\nimport * as ModalComponent from '@/components/ExtendedModal';\nimport { ElementTypeEnum } from '@/apollo/generated/types';\n\nexport interface NoumWalletCreateModalProps {\n  isOpen: boolean;\n  handleClose: (isSuccess?: boolean) => void;\n  handleSelectElementType?: (type: ElementTypeEnum) => void;\n}\n\nexport const NoumWalletCreateModal = memo(\n  (props: NoumWalletCreateModalProps) => {\n    const { t } = useTranslation();\n    const [noumWalletCreated, setNoumWalletCreated] = useState<boolean>(false);\n    const handleDelete = useCallback(async () => {\n      props.handleClose();\n    }, [props]);\n\n    const handleWalletElementCreation = useCallback(async () => {\n      if (props.handleSelectElementType) {\n        props?.handleSelectElementType(\n          ElementTypeEnum.Wallet as ElementTypeEnum,\n        );\n        props.handleClose();\n      }\n    }, [props]);\n\n    const handleCreateWallet = useCallback(async () => {\n      setNoumWalletCreated(true);\n    }, []);\n\n    return (\n      <ModalComponent.Modal\n        size={ModalComponent.ModalSize.S}\n        testId=\"testCloseWallet\"\n        open={props.isOpen}\n        onClose={props.handleClose}\n        disableBackdropClick={true}\n      >\n        <ModalComponent.ModalHeader>\n          {noumWalletCreated\n            ? t(`noumena.container.created_subWallet.title`)\n            : t(`noumena.container.create_subWallet.title`)}\n        </ModalComponent.ModalHeader>\n        <ModalComponent.ModalBody hideScrollbar>\n          <TSpan\n            colorToken=\"--text-modal-neutral-default\"\n            font=\"body-l\"\n            style={{ width: '279px' }}\n            textAlign=\"center\"\n          >\n            {noumWalletCreated\n              ? t(`noumena.container.created_subWallet.text`)\n              : t(`noumena.container.create_subWallet.text`)}\n          </TSpan>\n        </ModalComponent.ModalBody>\n        <ModalComponent.ModalFooter flexDirection=\"column\" gap={16}>\n          {noumWalletCreated ? (\n            <Button\n              data-testid=\"confirmCloseWallet\"\n              primary\n              size=\"full\"\n              id=\"confirm_create_wallet_button\"\n              onClick={() => handleWalletElementCreation()}\n            >\n              {t(`noumena.container.close_subwallet.close`)}\n            </Button>\n          ) : (\n            <>\n              <Button\n                data-testid=\"continueButton\"\n                primary\n                size=\"full\"\n                id=\"create_wallet_button\"\n                onClick={handleCreateWallet}\n              >\n                {t(`noumena.container.close_subwallet.Continue`)}\n              </Button>\n              <Button\n                data-testid=\"cancelButton\"\n                tertiary\n                size=\"full\"\n                onClick={() => handleDelete()}\n              >\n                {t(`noumena.container.close_subwallet.Cancel`)}\n              </Button>\n            </>\n          )}\n        </ModalComponent.ModalFooter>\n      </ModalComponent.Modal>\n    );\n  },\n);\n\nexport default NoumWalletCreateModal;\n","import styled, { css } from 'styled-components';\nimport { TSpan } from '@/components/Typography';\nimport { Stack } from '@/layout';\n\ninterface ToolDisabledProps {\n  isDisabled: boolean;\n}\n\nexport const ToolboxWrapper = styled.div``;\nexport const ToolboxLoader = styled(Stack)`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border-radius: 12px;\n  background-color: rgba(0, 0, 0, 0.1);\n  z-index: 999;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\nexport const ToolboxTabs = styled.div``;\nexport const ToolboxTabContentWrapper = styled.div`\n  height: 277px;\n  overflow: auto;\n`;\n\nexport const ToolboxItemsRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 8px;\n  flex-wrap: wrap;\n`;\n\nexport const ToolboxItemWrapper = styled.div<{ disabled?: boolean }>`\n  display: flex;\n  padding: 12px 6px;\n  align-items: center;\n  border-radius: 8px;\n  cursor: pointer;\n  position: relative;\n  width: 109px;\n  height: 90px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid var(--bg-separator-neutral-default);\n  gap: 4px;\n  box-sizing: border-box;\n  ${({ disabled }) =>\n    !disabled &&\n    css`\n      &:hover {\n        border: 1px solid var(--bg-tool-toolbox-brand-primary-default);\n        background: var(--bg-button-brand-secondary-default);\n        path {\n          fill: var(--bg-tool-toolbox-brand-primary-default) !important;\n        }\n        & > div > span {\n          opacity: 0.95;\n          color: var(--color-base-primary-50);\n          transition: opacity 1s;\n        }\n      }\n    `}\n  &:hover span.toolbox-tooltip {\n    opacity: 0.95;\n    transition: opacity 1s;\n  }\n`;\n\nexport const ToolboxItemTextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  width: 100%;\n`;\n\nexport const ToolboxItemText = styled(TSpan)<ToolDisabledProps>`\n  color: ${({ isDisabled = false }) =>\n    isDisabled\n      ? 'var(--text-card-neutral-disabled)'\n      : 'var(--text-card-neutral-highlighted)'};\n\n  justify-content: start;\n  align-items: center;\n  .disabled {\n    color: var(--text-card-neutral-disabled);\n  }\n  width: 100%;\n  ${({ overflow }) => overflow && `text-overflow: ${overflow}`};\n`;\n\nexport const ToolboxItemComingSoonText = styled(ToolboxItemText)`\n  font-weight: var(--font-body-small-bold-weight);\n  font-size: var(--font-link-small-size);\n  color: var(--text-card-brand-primary-default);\n`;\n\nexport const ToolTip = styled(TSpan)<{ top?: string; childIndex: number }>`\n  width: max-content;\n  max-width: 270px;\n  padding: 6px 8px;\n  z-index: 100;\n  background: var(--bg-tooltip-neutral-default);\n  opacity: 0;\n  border-radius: 4px;\n  text-align: center;\n  position: absolute;\n  color: var(--text-tooltip-neutral-alt-default);\n\n  transition: opacity 0.5s;\n  top: ${({ top }) => top || '-30px'};\n  ${({ childIndex }) =>\n    childIndex % 4 === 0\n      ? `left:0 !important;`\n      : childIndex % 4 === 3\n      ? `right : 0px !important;`\n      : `left: 50%; transform: translate(-50%);`}\n`;\n\nexport const SubWalletDisabledToolTip = styled.div`\n  text-align: justify;\n  margin: 0px;\n`;\n","import styled from 'styled-components';\nimport { bodyTypography } from '@/components/Typography';\nimport { sizes } from '@/constants/devices';\nimport { Card } from '@/components/Card';\nimport { InsertDirection } from '@/features/noums/components/NoumEditor2.0';\nimport { Stack } from '@/layout';\nimport { type PlaceholderProps } from './types';\n\nexport const DropZone = styled.div<{\n  isDraggingOver: boolean;\n  isDraggingFrom: boolean;\n}>`\n  position: relative;\n  width: 100%;\n  @media (max-width: ${sizes.TABLET_L}) {\n    width: 100%;\n    margin: auto;\n  }\n`;\n\nexport const DropZoneColumn = styled.div<{\n  isDraggingOver: boolean;\n  isDraggingFrom: boolean;\n  isBackground?: boolean;\n}>`\n  position: relative;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  border-radius: 12px;\n  background: ${({ isBackground }) =>\n    isBackground ? 'var(--bg-card-neutral-alt-default)' : 'none'};\n`;\n\nexport const DNDContainer = styled.div<{ isDragging?: boolean }>`\n  padding: 8px 0;\n  &:first-child {\n    padding-top: 0px;\n  }\n`;\n\nexport const StoryWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 60px;\n  padding: 60px 0px;\n  align-items: center;\n  background-color: var(--bg-body-neutral-alt-highlighted);\n  width: 100%;\n`;\nexport const StoryWrapperContent = styled.div`\n  width: 783px;\n  @media (max-width: ${sizes.MOBILE_L}) {\n    width: min-content;\n  }\n`;\n\nexport const StoryDescription = styled.span`\n  display: inline-flex;\n  justify-content: center;\n  width: 100%;\n  padding: 24px;\n  text-align: center;\n  color: var(--text-card-brand-primary-default);\n  ${bodyTypography.bodyXLargeBold};\n`;\n\nexport const DraggingElement = styled(Card)`\n  width: 303px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 24px 0;\n`;\n\nexport const DNDElementContainer = styled.div<{\n  isDragging?: boolean;\n  insertDirection?: InsertDirection;\n}>`\n  display: flex;\n  transition: all 0.1s ease-in-out;\n  flex-direction: ${({ insertDirection }) =>\n    insertDirection === InsertDirection.Below ? 'column-reverse' : 'column'};\n  gap: 16px;\n`;\n\nexport const DroppableElement = styled.div<{\n  placeholderProps?: PlaceholderProps;\n}>`\n  border: 1px solid var(--border-section-picker-brand-secondary-default);\n  background: var(--bg-section-picker-brand-secondary-default);\n  border-radius: 8px;\n  position: absolute;\n  width: 100%;\n  ${({ placeholderProps }) =>\n    placeholderProps &&\n    `top: ${placeholderProps.dragY}px;  height: ${placeholderProps.dragHeight}px`}\n`;\n\nexport const ElementWrapper = styled(Card)<{\n  isBackground?: boolean;\n  isDragging?: boolean;\n  isSkillOrNetwork?: boolean;\n}>`\n  position: relative;\n  ${({ isDragging }) => isDragging && ' margin-top: 12px;'};\n  ${({ isBackground }) => isBackground && 'background: none'};\n  ${({ isSkillOrNetwork }) =>\n    isSkillOrNetwork ? 'padding: 16px;' : 'padding: 0'};\n`;\n\nexport const NonIntrectiveOverlay = styled.div`\n  position: absolute;\n  inset: 0;\n  background: transparent;\n  z-index: 9;\n`;\n\nexport const ColumnContainer = styled(Stack)<{ isBackground?: boolean }>`\n  position: relative;\n  transition: all 0.1s ease-in-out;\n  border-radius: 16px;\n  padding: ${({ isBackground }) => (isBackground ? '12px 24px' : '0')};\n  background: ${({ isBackground }) =>\n    isBackground ? 'var(--bg-card-neutral-alt-default)' : 'none'};\n`;\n\nexport const EditColumnContainer = styled.div<{ height?: number }>`\n  position: relative;\n  transition: all 0.1s ease-in-out;\n  border-radius: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  flex-grow: 1;\n  height: ${({ height }) => (height ? `${height}px` : 'auto')};\n  min-height: 106px;\n`;\n","import { SkeletonLoaderPost } from '@/screens/Chamber/components/elements/SkeletonLoader/StyledSkeletons';\nimport { StyledSkeleton } from '@/components/ChamberBox/SkeletonChamberBox';\nimport { StyledFlexRow } from '@/screens/Chamber/components/elements/SkeletonLoader/styled';\n\nconst SkeletonLoaderElementHeader = () => (\n  <StyledFlexRow gap={8} justify=\"flex-start\" align=\"center\">\n    <SkeletonLoaderPost />\n    <StyledSkeleton w={140} h={30} r={8} />\n  </StyledFlexRow>\n);\n\nexport default SkeletonLoaderElementHeader;\n","import { SkeletonLoaderImageInline } from '@/screens/Chamber/components/elements/SkeletonLoader/StyledSkeletons';\nimport { StyledFlexRow } from '@/screens/Chamber/components/elements/SkeletonLoader/styled';\nimport { Card } from '@/components/Card';\nimport SkeletonLoaderElementHeader from '@/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderElementHeader';\n\nconst SkeletonLoaderImageElement = () => (\n  <Card>\n    <StyledFlexRow justify=\"space-between\">\n      <SkeletonLoaderElementHeader />\n      <SkeletonLoaderImageInline />\n    </StyledFlexRow>\n  </Card>\n);\n\nexport default SkeletonLoaderImageElement;\n","export const ALL_VALID_EXTENSIONS = ['*'];\n\nexport const IMAGE_VALID_EXTENSIONS = ['image/jpg', 'image/png', 'image/jpeg'];\n\nexport const VIDEO_VALID_EXTENSIONS = ['video/mp4', 'video/quicktime'];\n\nexport const IMAGE_ACCEPTED_FORMATS = IMAGE_VALID_EXTENSIONS.map(\n  (item) => item,\n).join('');\nexport const VIDEO_ACCEPTED_FORMATS = VIDEO_VALID_EXTENSIONS.map(\n  (item) => item,\n).join('');\n\nexport const IMAGE_FILE_MAX_SIZE = 1; // 2MB TODO ask design team\nexport const VIDEO_FILE_MAX_SIZE = 5; // 200MB TODO change to 200mb\nexport const DEFAULT_FILE_MAX_SIZE = 100; // 100MB TODO ask design team\n","import {\n  DEFAULT_FILE_MAX_SIZE,\n  IMAGE_ACCEPTED_FORMATS,\n  IMAGE_FILE_MAX_SIZE,\n  IMAGE_VALID_EXTENSIONS,\n  VIDEO_ACCEPTED_FORMATS,\n  VIDEO_FILE_MAX_SIZE,\n  VIDEO_VALID_EXTENSIONS,\n} from '@/constants/uploadFile';\n\nexport interface ValidFormatsObj {\n  formats: string;\n  extensions: string[];\n  maxFileSize: number;\n  defaultFootNote: string;\n}\n\nexport const isFileTypeValid = (\n  type: string,\n  validExtensions: string[],\n): boolean => {\n  if (type === '*') return true;\n  if (validExtensions.includes(type)) {\n    return true;\n  }\n  return false;\n};\n\nexport const isFileSizeValid = (size: number, maxFileSize: number): boolean => {\n  const actualFileSize = Math.round(size / (1024 * 1024)); // checking in MB\n  if (maxFileSize > actualFileSize) {\n    return true;\n  }\n  return false;\n};\n\nexport const getValidFormats = (\n  accept: string | undefined,\n): ValidFormatsObj => {\n  if (accept === 'video') {\n    return {\n      formats: VIDEO_ACCEPTED_FORMATS,\n      extensions: VIDEO_VALID_EXTENSIONS,\n      maxFileSize: VIDEO_FILE_MAX_SIZE,\n      defaultFootNote: 'noumena.drag_drop_video_file_type_size.text',\n    };\n  }\n  if (accept === 'image') {\n    return {\n      formats: IMAGE_ACCEPTED_FORMATS,\n      extensions: IMAGE_VALID_EXTENSIONS,\n      maxFileSize: IMAGE_FILE_MAX_SIZE,\n      defaultFootNote: 'noumena.drag_drop_image_file_type_size.text',\n    };\n  }\n  return {\n    formats: '*',\n    extensions: [],\n    maxFileSize: DEFAULT_FILE_MAX_SIZE,\n    defaultFootNote: 'noumena.drag_drop_default_file_type_size.text',\n  };\n};\n","import styled from 'styled-components';\nimport { sizes } from '@/constants/devices';\nimport { type EditPreUploadProps, type EditUploadingProps } from './types';\n\nexport const Wrapper = styled.div``;\n\nexport const StyledImage = styled.div`\n  padding-top: 16px;\n  height: 413px;\n  max-height: 413px;\n  width: auto;\n  background-size: cover;\n\n  @media (max-width: ${sizes.MOBILE_L}) {\n    max-height: 222px;\n  }\n\n  img {\n    height: 413px;\n    max-height: 413px;\n    width: auto;\n    @media (max-width: ${sizes.MOBILE_L}) {\n      height: 222px;\n      max-height: 222px;\n    }\n  }\n`;\n\nexport const EditUploadingContainer = styled.div<Partial<EditUploadingProps>>`\n  width: 100%;\n\n  ${({ isUploadComplete, noumEditor2 }) =>\n    isUploadComplete\n      ? noumEditor2\n        ? `padding: 0px;`\n        : `padding: 16px;`\n      : `padding: 16px;\n        border: 1px solid var(--border-card-neutral-highlighted);\n      `}\n\n  background: ${({ isBackground }) =>\n    isBackground ? `none` : 'var(--bg-card-neutral-alt-default)'};\n  box-sizing: border-box;\n  border-radius: 8px;\n`;\n\nexport const VerticalCenterWrapper = styled.div<Partial<EditUploadingProps>>`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  ${({ isUploadComplete }) =>\n    isUploadComplete\n      ? `\n          padding-left: 16px;\n          padding-right: 16px;\n        `\n      : ''}\n`;\n\nexport const ProgressBarWrapper = styled.div`\n  width: 100%;\n  border-radius: 4px;\n`;\n\nexport const ProgressErrorWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const EditPreUploadContainer = styled.div<Partial<EditPreUploadProps>>`\n  height: 94px;\n  width: 100%;\n  background: var(--bg-dragdrop-neutral-default);\n  border: 2px dashed var(--border-dragdrop-neutral-default);\n  box-sizing: border-box;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n\n  ${({ isDraggingOver }) =>\n    isDraggingOver\n      ? `\n      background: var(--bg-dragdrop-brand-secondary-active);\n      border: 2px dashed var(--border-dragdrop-brand-primary-active);\n      box-sizing: border-box;\n      border-radius: 8px;\n      `\n      : ''}\n\n  ${({ error }) =>\n    error\n      ? `\n      background: var(--bg-dragdrop-danger-secondary-default);\n      border: 2px dashed var(--border-dragdrop-danger-primary-default);\n      box-sizing: border-box;\n      border-radius: 8px;\n      `\n      : ''}\n`;\n","import { memo } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { getValidFormats } from '@/utils/uploadFile';\nimport { Spacer } from '@/layout';\n\nimport { TSpan } from '../../../../../components/Typography';\nimport { type EditPreUploadProps } from './types';\nimport { EditPreUploadContainer } from './styles';\n\nconst EditPreUpload = memo((props: EditPreUploadProps) => {\n  const { t } = useTranslation();\n  const acceptedFormats = getValidFormats('image');\n\n  return (\n    <EditPreUploadContainer\n      {...props}\n      onClick={props.onClick}\n      data-testid=\"image-edit-pre-upload-container\"\n    >\n      <div>\n        <TSpan\n          font=\"body-l-bold\"\n          $fill\n          colorToken=\"--text-dragdrop-header-neutral-default\"\n        >\n          <Trans\n            i18nKey=\"noumena.image_element.edit_pre_upload.text\"\n            components={{\n              link1: (\n                <TSpan\n                  data-testid=\"multi_media_upload_btn\"\n                  font=\"body-l-bold\"\n                  colorToken=\"--text-dragdrop-brand-primary-default\"\n                />\n              ),\n            }}\n          />\n        </TSpan>\n      </div>\n\n      <Spacer height=\"7px\" />\n\n      <div>\n        {props.error ? (\n          <TSpan\n            font=\"footnote\"\n            $fill\n            colorToken=\"--text-dragdrop-danger-primary-default\"\n          >\n            {`${t('noumena.image_element.edit_pre_upload.error_text')} ${t(\n              acceptedFormats.defaultFootNote,\n            )}`}\n          </TSpan>\n        ) : (\n          <TSpan\n            font=\"footnote\"\n            $fill\n            colorToken=\"--text-dragdrop-neutral-default\"\n          >\n            {t(acceptedFormats.defaultFootNote)}\n          </TSpan>\n        )}\n      </div>\n    </EditPreUploadContainer>\n  );\n});\n\nexport default EditPreUpload;\n","import { memo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Icon } from '@/components/Icon';\nimport { ProgressBar } from '@/components/ProgressBar';\nimport { Spacer } from '@/layout';\nimport fileSizeConverter from '@/utils/fileSizeConverter';\nimport { TSpan } from '@/components/Typography';\nimport ImageView from './ImageView';\nimport { type EditUploadingProps } from './types';\nimport {\n  EditUploadingContainer,\n  ProgressBarWrapper,\n  ProgressErrorWrapper,\n  VerticalCenterWrapper,\n} from './styles';\n\nconst EditUploading = memo((props: EditUploadingProps) => {\n  const { t } = useTranslation();\n  const imageReady = !!(\n    !props.error &&\n    props.url &&\n    props.isUploadComplete &&\n    props.uploadPercentage === 100\n  );\n\n  return (\n    <EditUploadingContainer\n      {...props}\n      data-testid=\"image-edit-uploading\"\n      isBackground={props.noumEditor2}\n    >\n      {(!props?.noumEditor2 || !imageReady) && (\n        <ProgressErrorWrapper\n          draggable=\"false\"\n          onDragStart={(event) => event.preventDefault()}\n        >\n          <VerticalCenterWrapper isUploadComplete={imageReady}>\n            <div>\n              <TSpan\n                font=\"body-m\"\n                $fill\n                colorToken=\"--text-card-header-neutral-highlighted\"\n              >\n                {props.fileName}\n              </TSpan>\n              <Spacer height={4} />\n              {props.fileSize && (\n                <TSpan\n                  font=\"systemInfo-s\"\n                  $fill\n                  colorToken=\"--text-card-neutral-default\"\n                >\n                  {fileSizeConverter(props.fileSize || 0)}\n                </TSpan>\n              )}\n            </div>\n            <Spacer isFlex />\n            <Icon\n              name=\"close_m\"\n              size={24}\n              onClick={props.onClose}\n              color=\"--icon-card-neutral-default\"\n            />\n          </VerticalCenterWrapper>\n        </ProgressErrorWrapper>\n      )}\n\n      <div>\n        {props.error ? (\n          <>\n            <Spacer height={6} />\n            <ProgressErrorWrapper>\n              <TSpan\n                font=\"footnote\"\n                colorToken=\"--text-card-danger-primary-default\"\n              >\n                {`${t('noumena.image_element.edit_uploading.error_text')} `}\n                <TSpan\n                  font=\"link-s\"\n                  colorToken=\"--text-card-danger-primary-default\"\n                  style={{ cursor: 'pointer' }}\n                  onClick={props.onTryAgain}\n                >\n                  {t('noumena.image_element.edit_uploading.error_try_again')}\n                </TSpan>\n              </TSpan>\n            </ProgressErrorWrapper>\n          </>\n        ) : null}\n\n        {!props.error && !props.isUploadComplete && (\n          <>\n            <Spacer height={16} />\n            <ProgressBarWrapper>\n              <ProgressBar\n                backgroudColor=\"var(--bg-progressbar-neutral-default)\"\n                percentage={props.uploadPercentage}\n                barSize={8}\n              />\n            </ProgressBarWrapper>\n          </>\n        )}\n      </div>\n\n      {imageReady && (\n        <ImageView\n          url={props.url}\n          meta={props.meta}\n          elementId={props.elementId}\n          noumEditor2={props.noumEditor2}\n        />\n      )}\n    </EditUploadingContainer>\n  );\n});\n\nexport default EditUploading;\n","import { imageTypes } from '@/constants/fileTypes';\nimport { Upload } from '@/features/upload/components';\nimport EditPreUpload from './EditPreUpload';\nimport EditUploading from './EditUploading';\nimport { type ImageEditorProps } from './types';\n\nconst ImageEditor = (props: ImageEditorProps) => {\n  const url = props.url === 'undefined' ? undefined : props.url;\n\n  return (\n    <Upload<HTMLDivElement>\n      url={url}\n      acceptedFileTypes={imageTypes}\n      onContentChange={props.onContentChange}\n      maxSize={20}\n    >\n      {({ triggerElRef, ...rest }) => (\n        <div ref={triggerElRef}>\n          {!rest.isUploadStarted && !rest.isUploadComplete && (\n            <EditPreUpload\n              isDraggingOver={rest.isDraggingOver}\n              error={rest.error}\n              onClick={rest.onClickHandler}\n            />\n          )}\n          {rest.isUploadStarted && (\n            <EditUploading\n              isUploadComplete={rest.isUploadComplete}\n              url={rest.url}\n              fileName={rest.fileName}\n              fileSize={rest.fileSize}\n              fileType={rest.fileType}\n              error={rest.error}\n              uploadPercentage={rest.uploadPercentage}\n              onClose={rest.onCloseHandler}\n              noumEditor2={props.noumEditor2}\n              meta={props.meta}\n              elementId={props.elementId}\n            />\n          )}\n        </div>\n      )}\n    </Upload>\n  );\n};\n\nexport default ImageEditor;\n","import { memo, useContext, useMemo } from 'react';\nimport {\n  ElementWrapper,\n  ElementWrapperContext,\n  type ElementWrapperProps,\n} from '@/screens/Chamber/components/ElementWrapper';\n\nimport { useSkeletonIsLoadingContext } from '@/components/SkeletonLoader/SkeletonLoaderProvider';\nimport SkeletonLoaderImageElement from '@/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderImageElement';\nimport { CustomPreviewTabEnum } from '@/screens/Chamber/CustomPreview/constants';\nimport { ElementUtils } from '@/utils/element';\nimport { useLaunchDarkly } from '@/hooks';\nimport { type ImageEditorProps } from './types';\nimport ImageView from './ImageView';\nimport ImageEditor from './ImageEditor';\n\nexport interface ImageElementProps\n  extends ElementWrapperProps,\n    ImageEditorProps {\n  url?: string;\n}\n\nconst Content = memo((props: ImageElementProps) => {\n  const { isEditing, isCustomPreview, isActiveTool } = props;\n  const { isLoading } = useSkeletonIsLoadingContext();\n  const collapseContextData = useContext(ElementWrapperContext);\n  const isView = !isEditing || isCustomPreview;\n\n  const {\n    flags: { noumEditor2 },\n  } = useLaunchDarkly();\n\n  const { meta } = useMemo(\n    () =>\n      isView\n        ? ElementUtils.getPublished(props.element)\n        : ElementUtils.getUnpublished(props.element),\n    [isView, props.element],\n  );\n\n  const imageUrl = isEditing\n    ? ElementUtils.getBodyContent(props.element)\n    : props.url;\n\n  if (isView && !imageUrl) {\n    return null;\n  }\n\n  const editViewCP =\n    !props.isCustomPreview ||\n    props.selectedCustomPreviewTab === CustomPreviewTabEnum.Preview;\n\n  if (isLoading) return <SkeletonLoaderImageElement />;\n\n  return (isActiveTool && imageUrl) || isView ? (\n    <ImageView\n      url={imageUrl || undefined}\n      isCollapse={editViewCP && collapseContextData.isCollapse}\n      viewOnly={isView}\n      meta={meta}\n      isCustomPreview={props.isCustomPreview}\n      elementId={props.element._id}\n      noumEditor2={noumEditor2}\n    />\n  ) : (\n    <ImageEditor\n      url={imageUrl || undefined}\n      onContentChange={props.onContentChange}\n      meta={meta}\n      elementId={props.element._id}\n      noumEditor2={noumEditor2}\n    />\n  );\n});\n\nconst ImageElement = memo(\n  ({ onContentChange, ...props }: ImageElementProps) => (\n    <ElementWrapper {...props} isSpecialCollapsing={false}>\n      <Content {...props} onContentChange={onContentChange} />\n    </ElementWrapper>\n  ),\n);\n\nexport default ImageElement;\n","import styled from 'styled-components';\nimport { sizes } from '@/constants/devices';\nimport { type EditPreUploadProps, type EditUploadingProps } from './types';\n\nexport const Wrapper = styled.div``;\n\nexport const StyledVideo = styled.div`\n  padding-top: 16px;\n  height: 413px;\n  width: auto;\n  max-height: 413px;\n\n  div {\n    height: 413px;\n    max-height: 413px;\n    width: auto;\n  }\n\n  button.vjs-big-play-button,\n  .video-js:hover button.vjs-big-play-button {\n    width: 56px;\n    height: 56px;\n    background-color: var(--bg-button-brand-primary-default);\n    border-color: var(--bg-button-brand-primary-default);\n  }\n\n  .video-js .vjs-big-play-button .vjs-icon-placeholder:before {\n    top: 4px;\n  }\n\n  @media (max-width: ${sizes.MOBILE_L}) {\n    height: 222px;\n    max-height: 222px;\n    div {\n      height: 222px;\n      max-height: 222px;\n    }\n  }\n`;\n\nexport const EditUploadingContainer = styled.div<Partial<EditUploadingProps>>`\n  width: 100%;\n\n  ${({ isUploadComplete, noumEditor2 }) =>\n    isUploadComplete\n      ? noumEditor2\n        ? `padding: 0px;`\n        : `padding:16px;`\n      : `\n        padding: 16px;\n      `}\n\n  box-sizing: border-box;\n  border-radius: 8px;\n`;\n\nexport const VerticalCenterWrapper = styled.div<Partial<EditUploadingProps>>`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  ${({ isUploadComplete }) =>\n    isUploadComplete\n      ? `\n          padding-left: 16px;\n          padding-right: 16px;\n        `\n      : ''}\n`;\n\nexport const ProgressBarWrapper = styled.div`\n  width: 100%;\n  border-radius: 4px;\n`;\n\nexport const ProgressErrorWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const EditPreUploadContainer = styled.div<Partial<EditPreUploadProps>>`\n  height: 94px;\n  width: 100%;\n  background: var(--bg-dragdrop-neutral-default);\n  border: 2px dashed var(--border-dragdrop-neutral-default);\n  box-sizing: border-box;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n\n  ${({ isDraggingOver }) =>\n    isDraggingOver\n      ? `\n        background: var(--bg-dragdrop-brand-secondary-focused);\n        border: 2px dashed var(--border-dragdrop-brand-primary-focused);\n        box-sizing: border-box;\n        border-radius: 8px;\n        `\n      : ''}\n\n  ${({ error }) =>\n    error\n      ? `\n        background: var(--bg-dragdrop-danger-secondary/-default);\n        border: 2px dashed var(--border-dragdrop-danger-primary-default);\n        box-sizing: border-box;\n        border-radius: 8px;\n        `\n      : ''}\n`;\n","import { memo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { getValidFormats } from '@/utils/uploadFile';\nimport { Spacer } from '@/layout';\n\nimport { TSpan } from '@/components/Typography';\nimport { type EditPreUploadProps } from './types';\nimport { EditPreUploadContainer } from './styles';\n\nconst EditPreUpload = memo((props: EditPreUploadProps) => {\n  const { t } = useTranslation();\n  const acceptedFormats = getValidFormats('video');\n\n  return (\n    <EditPreUploadContainer\n      {...props}\n      onClick={props.onClick}\n      data-testid=\"edit-pre-upload-container\"\n    >\n      <div>\n        <TSpan\n          font=\"body-l-bold\"\n          $fill\n          colorToken=\"--text-dragdrop-header-neutral-default\"\n        >\n          {t('noumena.video_element.edit_pre_upload.left_text')}\n        </TSpan>\n        <TSpan\n          font=\"body-l-bold\"\n          $fill\n          colorToken=\"--text-dragdrop-brand-primary-default\"\n        >\n          {t('noumena.video_element.edit_pre_upload.link_text')}\n        </TSpan>\n        <TSpan\n          font=\"body-l-bold\"\n          $fill\n          colorToken=\"--text-dragdrop-neutral-default\"\n        >\n          {t('noumena.video_element.edit_pre_upload.right_text')}\n        </TSpan>\n      </div>\n\n      <Spacer height=\"7px\" />\n\n      <div>\n        {props.error ? (\n          <TSpan\n            font=\"footnote\"\n            $fill\n            colorToken=\"--text-dragdrop-danger-primary-default\"\n          >\n            {`${t('noumena.video_element.edit_pre_upload.error_text')} ${t(\n              acceptedFormats.defaultFootNote,\n            )}`}\n          </TSpan>\n        ) : (\n          <TSpan\n            font=\"footnote\"\n            $fill\n            colorToken=\"--text-dragdrop-neutral-default\"\n          >\n            {t(acceptedFormats.defaultFootNote)}\n          </TSpan>\n        )}\n      </div>\n    </EditPreUploadContainer>\n  );\n});\n\nexport default EditPreUpload;\n","import { memo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Icon } from '@/components/Icon';\nimport { ProgressBar } from '@/components/ProgressBar';\nimport { Spacer } from '@/layout';\nimport fileSizeConverter from '@/utils/fileSizeConverter';\n\nimport { TSpan } from '@/components/Typography';\nimport { getFileExtension, getVideoMimeType } from '@/utils/file';\nimport VideoView from './VideoView';\nimport { type EditUploadingProps } from './types';\nimport {\n  EditUploadingContainer,\n  ProgressBarWrapper,\n  ProgressErrorWrapper,\n  VerticalCenterWrapper,\n} from './styles';\n\nconst EditUploading = memo((props: EditUploadingProps) => {\n  const { t } = useTranslation();\n  const videoReady = !!(\n    !props.error &&\n    props.url &&\n    props.isUploadComplete &&\n    props.uploadPercentage === 100\n  );\n\n  const fileExtension = getFileExtension(props.url ?? '');\n  const mimeType = getVideoMimeType(fileExtension);\n\n  return (\n    <EditUploadingContainer {...props} isBackground={props.noumEditor2}>\n      {(!props?.noumEditor2 || !videoReady) && (\n        <ProgressErrorWrapper>\n          <VerticalCenterWrapper isUploadComplete={videoReady}>\n            <div>\n              <TSpan\n                font=\"body-m\"\n                $fill\n                colorToken=\"--text-card-header-neutral-highlighted\"\n              >\n                {props.fileName}\n              </TSpan>\n              <Spacer height={4} />\n              {props.fileSize && (\n                <TSpan\n                  font=\"systemInfo-s\"\n                  $fill\n                  colorToken=\"--text-card-neutral-default\"\n                >\n                  {fileSizeConverter(props.fileSize || 0)}\n                </TSpan>\n              )}\n            </div>\n            <Spacer isFlex />\n            <Icon\n              name=\"close_m\"\n              size={24}\n              onClick={props.onClose}\n              color=\"--icon-card-neutral-default\"\n            />\n          </VerticalCenterWrapper>\n        </ProgressErrorWrapper>\n      )}\n\n      <div>\n        {props.error ? (\n          <>\n            <Spacer height={6} />\n            <ProgressErrorWrapper>\n              <TSpan\n                font=\"footnote\"\n                colorToken=\"--text-card-danger-primary-default\"\n              >\n                {`${t('noumena.video_element.edit_uploading.error_text')} `}\n                <TSpan\n                  font=\"link-s\"\n                  colorToken=\"--text-card-danger-primary-default\"\n                  style={{ cursor: 'pointer' }}\n                  onClick={props.onTryAgain}\n                >\n                  {t('noumena.video_element.edit_uploading.error_try_again')}\n                </TSpan>\n              </TSpan>\n            </ProgressErrorWrapper>\n          </>\n        ) : null}\n\n        {!props.error && !props.isUploadComplete && (\n          <>\n            <Spacer height={16} />\n            <ProgressBarWrapper>\n              <ProgressBar\n                backgroudColor=\"var(--bg-progressbar-neutral-default)\"\n                percentage={props.uploadPercentage}\n                barSize={8}\n              />\n            </ProgressBarWrapper>\n          </>\n        )}\n      </div>\n\n      {videoReady && (\n        <VideoView\n          fileType={mimeType}\n          url={props.url}\n          meta={props.meta}\n          elementId={props.elementId}\n        />\n      )}\n    </EditUploadingContainer>\n  );\n});\n\nexport default EditUploading;\n","import { memo } from 'react';\nimport { Upload } from '@/features/upload/components';\nimport { videoTypes } from '@/constants/fileTypes';\n\nimport { useLaunchDarkly } from '@/hooks';\nimport EditPreUpload from './EditPreUpload';\nimport EditUploading from './EditUploading';\nimport { type VideoEditorProps } from './types';\n\nconst VideoEditor = memo((props: VideoEditorProps) => {\n  const url = props.url === 'undefined' ? undefined : props.url;\n  const {\n    flags: { noumEditor2 },\n  } = useLaunchDarkly();\n\n  return (\n    <Upload<HTMLDivElement>\n      url={url}\n      acceptedFileTypes={videoTypes}\n      onContentChange={props.onContentChange}\n      maxSize={200}\n      generateThumbnail={true}\n    >\n      {({ triggerElRef, ...rest }) => (\n        <div ref={triggerElRef}>\n          {!rest.isUploadStarted && !rest.isUploadComplete && (\n            <EditPreUpload\n              isDraggingOver={rest.isDraggingOver}\n              error={rest.error}\n              onClick={rest.onClickHandler}\n            />\n          )}\n          {rest.isUploadStarted && (\n            <EditUploading\n              isUploadComplete={rest.isUploadComplete}\n              url={rest.url}\n              fileName={rest.fileName}\n              fileSize={rest.fileSize}\n              fileType={rest.fileType}\n              error={rest.error}\n              uploadPercentage={rest.uploadPercentage}\n              onClose={rest.onCloseHandler}\n              noumEditor2={noumEditor2}\n              meta={props?.meta}\n              elementId={props.elementId}\n            />\n          )}\n        </div>\n      )}\n    </Upload>\n  );\n});\n\nexport default VideoEditor;\n","import { memo, useContext, useMemo } from 'react';\nimport {\n  ElementWrapper,\n  ElementWrapperContext,\n  type ElementWrapperProps,\n} from '@/screens/Chamber/components/ElementWrapper';\n\nimport { getFileExtension, getVideoMimeType } from '@/utils/file';\nimport { useSkeletonIsLoadingContext } from '@/components/SkeletonLoader/SkeletonLoaderProvider';\nimport SkeletonLoaderImageElement from '@/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderImageElement';\nimport { CustomPreviewTabEnum } from '@/screens/Chamber/CustomPreview/constants';\nimport { ElementUtils } from '@/utils/element';\nimport { type VideoEditorProps } from './types';\nimport VideoView from './VideoView';\nimport VideoEditor from './VideoEditor';\n\nexport interface VideoElementProps\n  extends ElementWrapperProps,\n    VideoEditorProps {\n  url?: string;\n}\n\nconst Content = memo((props: VideoElementProps) => {\n  const {\n    isEditing,\n    isCustomPreview,\n    element,\n    url,\n    selectedCustomPreviewTab,\n    onContentChange,\n  } = props;\n  const collapseContextData = useContext(ElementWrapperContext);\n  const isView = !isEditing || isCustomPreview;\n  const { isLoading } = useSkeletonIsLoadingContext();\n  const videoUrl =\n    (isEditing ? ElementUtils.getBodyContent(element) : url) || undefined;\n\n  const { meta } = useMemo(\n    () =>\n      isView\n        ? ElementUtils.getPublished(element)\n        : ElementUtils.getUnpublished(element),\n    [isView, element],\n  );\n\n  if (isLoading) return <SkeletonLoaderImageElement />;\n\n  if (isView && !videoUrl) {\n    return null;\n  }\n\n  const editViewCP =\n    !isCustomPreview ||\n    selectedCustomPreviewTab === CustomPreviewTabEnum.Preview;\n\n  const fileExtension = getFileExtension(url ?? '');\n  const mimeType = getVideoMimeType(fileExtension);\n\n  return isView ? (\n    <VideoView\n      url={videoUrl}\n      fileType={mimeType}\n      isCollapse={editViewCP && collapseContextData.isCollapse}\n      viewOnly={true}\n      isCustomPreview={isCustomPreview}\n      elementId={element?._id}\n      meta={meta}\n    />\n  ) : (\n    <VideoEditor\n      url={videoUrl}\n      onContentChange={onContentChange}\n      meta={meta}\n      elementId={element._id}\n    />\n  );\n});\n\nconst VideoElement = memo(\n  ({ onContentChange, ...props }: VideoElementProps) => (\n    <ElementWrapper {...props} isSpecialCollapsing={false}>\n      <Content {...props} onContentChange={onContentChange} />\n    </ElementWrapper>\n  ),\n);\n\nexport default VideoElement;\n","import styled from 'styled-components';\n\nimport { Stack } from '@/layout';\nimport { Card } from '@/components/Card';\nimport { headingTypography } from '@/components/Typography';\nimport { devices } from '@/constants/devices';\nimport { noScrollBar } from '@/common/globalStyles';\n\nexport const EditModeWrapper = styled(Stack)`\n  box-sizing: border-box;\n  justify-content: center;\n  align-items: center;\n  padding: 4px;\n  display: flex;\n  flex-direction: column;\n\n  @media ${devices.LAPTOP} {\n    padding: 12px;\n  }\n`;\n\nexport const ViewModeWrapper = styled(Card)<{ isNoumEditor2?: boolean }>`\n  box-sizing: border-box;\n  border-radius: 0;\n  position: relative;\n  padding: ${({ isNoumEditor2 }) => (isNoumEditor2 ? '0' : '16px')};\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  @media ${devices.LAPTOP} {\n    border-radius: 16px;\n    padding: ${({ isNoumEditor2 }) => (isNoumEditor2 ? '0' : '24px')};\n  }\n  @media ${devices.TABLET} {\n    border-radius: 16px;\n  }\n`;\n\nexport const ViewModeChildrenWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  position: relative;\n  min-height: 75px;\n`;\n\nexport const ViewModeHeaderWrapper = styled.div<{ isNoumEditor2?: boolean }>`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: ${({ isNoumEditor2 }) => isNoumEditor2 && '16px 16px 0 16px'};\n`;\n\nexport const CollapseButton = styled.div`\n  padding: 8px;\n  cursor: pointer;\n  background-color: var(--bg-button-neutral-default);\n  border-radius: 8px;\n  :hover {\n    background-color: var(--bg-button-neutral-alt-hover);\n  }\n  ${headingTypography.headingXSmallBold}\n`;\n\nexport const ViewModeHeaderTitleWrapper = styled.div`\n  flex: 1;\n  user-select: none;\n`;\n\nexport const SubHeaderWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 12px;\n  overflow-x: auto;\n  ${noScrollBar}\n`;\n\nexport const EventViewModesWrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  & > form {\n    gap: 12px;\n\n    & > div {\n      margin: 0;\n\n      & input {\n        width: 0;\n        height: 0;\n        margin: 0;\n      }\n    }\n  }\n`;\n\nexport const EventLoadingWrapper = styled.div<{ visible: boolean }>`\n  position: absolute;\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 15px 0;\n  z-index: -1;\n  background: transparent;\n  transition: all 0.2s linear;\n\n  ${({ visible }) =>\n    visible &&\n    `\n      z-index: 1;\n    `}\n`;\n\nexport const OptionRendererWrapper = styled.div`\n  overflow-y: auto;\n`;\n\nexport const AvatarWrapper = styled.div``;\n\nexport const TextContainer = styled.div`\n  margin-top: 12px;\n`;\nexport const InputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Container = styled.div`\n  width: 100%;\n`;\n\nexport const SelectOption = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 12px 0;\n`;\nexport const OptionDetail = styled.div`\n  margin-left: 16px;\n  margin-right: auto;\n`;\n","import { forwardRef, type Ref } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { ElementWrapper } from '@/screens/Chamber/components/ElementWrapper';\nimport { TSpan } from '@/components/Typography';\n\nimport { EditModeWrapper } from './styles';\nimport { type CalendarElementProps } from './types';\n\nexport const CalendarElementEditMode = forwardRef(\n  (props: CalendarElementProps, ref: Ref<HTMLDivElement>) => {\n    const { t } = useTranslation();\n\n    return (\n      <ElementWrapper\n        ref={ref}\n        isBorder={false}\n        {...props}\n        data-testid=\"calendar-element-edit\"\n      >\n        <EditModeWrapper justify=\"center\" align=\"center\">\n          <TSpan font=\"body-m\" colorToken=\"--text-placeholder-neutral-default\">\n            {t('noumena.chamber.calendar.edit_mode_message_1')}\n          </TSpan>\n          <TSpan font=\"body-m\" colorToken=\"--text-placeholder-neutral-default\">\n            {t('noumena.chamber.calendar.edit_mode_message_2')}\n          </TSpan>\n        </EditModeWrapper>\n      </ElementWrapper>\n    );\n  },\n);\n","import { useMemo, useState } from 'react';\n\nimport useEvents from './useEvents';\n\ninterface IUseEvents {\n  chamberId: string;\n  limit?: number;\n  preventGetEvents?: boolean;\n  isOwner?: boolean;\n}\n\nexport const usePaginatedEvents = ({\n  chamberId,\n  limit = 10,\n  preventGetEvents = false,\n  isOwner = true,\n}: IUseEvents) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const offset = (currentPage - 1) * limit;\n  \n\n  const { events, ...eventsProps } = useEvents({\n    chamberId,\n    // @TODO: Temporary solution for events getting merged because of appollo type policies\n    limit: limit * currentPage,\n    preventGetEvents,\n    isOwner,\n    offset: 0,\n  });\n\n  const onChangePage = (page: number) => {\n    setCurrentPage(Math.max(1, page));\n  };\n\n  const paginatedEvents = useMemo(\n    () => events.slice(offset, offset + limit),\n    [events, limit, offset],\n  );\n\n  return {\n    ...eventsProps,\n    onChangePage,\n    currentPage,\n    events: paginatedEvents,\n  };\n};\n\nexport default usePaginatedEvents;\n","import { useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router';\nimport useScrollIntoElement from './useScrollIntoElement';\n\nconst useScrollToLocation = (confirmScroll: boolean) => {\n  const scrolledRef = useRef(false);\n  const { hash } = useLocation();\n  const hashRef = useRef(hash);\n  const { scrollIntoElement } = useScrollIntoElement();\n\n  useEffect(() => {\n    if (hash) {\n      // We want to reset if the hash has changed\n      if (hashRef.current !== hash) {\n        hashRef.current = hash;\n        scrolledRef.current = false;\n      }\n      // only attempt to scroll if we haven't yet (this could have just reset above if hash changed)\n      if (!scrolledRef.current && confirmScroll) {\n        const id = hash.replace('#', '');\n        scrolledRef.current = scrollIntoElement(id);\n      }\n    }\n  });\n};\nexport default useScrollToLocation;\n","import { SkeletonLoaderPost } from '@/screens/Chamber/components/elements/SkeletonLoader/StyledSkeletons';\nimport { StyledFlexRow } from '@/screens/Chamber/components/elements/SkeletonLoader/styled';\nimport SkeletonLoaderElementHeader from '@/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderElementHeader';\n\nconst SkeletonLoaderHeaderSubElement = () => (\n  <StyledFlexRow gap={12} justify=\"space-between\" fullWidth>\n    <SkeletonLoaderElementHeader />\n    <SkeletonLoaderPost />\n  </StyledFlexRow>\n);\n\nexport default SkeletonLoaderHeaderSubElement;\n","import { SizedSkeleton } from '@/screens/Chamber/components/elements/SkeletonLoader/StyledSkeletons';\nimport {\n  StyledFlexColumn,\n  StyledFlexRow,\n} from '@/screens/Chamber/components/elements/SkeletonLoader/styled';\nimport { Card } from '@/components/Card';\nimport SkeletonLoaderHeaderSubElement from '@/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderHeaderSubElement';\n\nconst SkeletonLoaderCalendarElement = () => (\n  <Card>\n    <StyledFlexColumn gap={21} justify=\"baseline\" align=\"flex-start\">\n      <SkeletonLoaderHeaderSubElement />\n      <StyledFlexRow gap={12} fullWidth>\n        <SizedSkeleton w={234} h={94} r={8} />\n        <SizedSkeleton w={234} h={94} r={8} />\n        <SizedSkeleton w={234} h={94} r={8} />\n      </StyledFlexRow>\n    </StyledFlexColumn>\n  </Card>\n);\n\nexport default SkeletonLoaderCalendarElement;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { TSpan } from '@/components/Typography';\nimport { Button } from '@/components/Button/Button';\nimport { useEvents, useEventTimeSlot } from '@/features/events/hooks';\nimport { Spacer } from '@/layout';\nimport Timer from '@/components/Timer/Timer';\nimport { getLocalTime } from '@/utils/date';\nimport { type EventFragment } from '@/apollo/graphql';\nimport { EventItem } from '@/features/events/components';\nimport {\n  withRecurringEvent,\n  type WithRecurringEventProps,\n} from '../../elements/CalendarEvent/modals/EventListModal/withRecurringEvent';\n\nconst pageSize = 3;\n\nexport const StartNowEventWarningModal: React.FC<\n  {\n    isOpen: boolean;\n    onClose: () => void;\n    onContinueClick: () => void;\n    event: EventFragment;\n    spaceId: string;\n  } & Partial<WithRecurringEventProps>\n> = withRecurringEvent(\n  ({\n    isOpen,\n    onClose,\n    event,\n    spaceId,\n    onContinueClick,\n    onEventAccepted,\n    onEventDeclined,\n  }) => {\n    const {\n      onGoLive,\n      onAccept,\n      onDecline,\n      onAttending,\n      onNotAttending,\n      onAttend,\n    } = useEvents({\n      chamberId: spaceId,\n      limit: pageSize,\n      preventGetEvents: true,\n    });\n\n    const { t } = useTranslation();\n\n    const localDateTime = getLocalTime({\n      dateTime: new Date(event?.eventDate),\n    });\n\n    const { diffSeconds } = useEventTimeSlot({\n      startTimestamp: localDateTime?.getTime() || 0,\n      durationInSeconds: event?.duration || 0,\n      status: event?.status,\n    });\n\n    return (\n      <Modal\n        onClose={onClose}\n        enableCloseButton\n        open={isOpen}\n        size={ModalSize.M}\n        disableBackdropClick\n      >\n        <ModalHeader>{t('noumena.event.modal.start_now')}</ModalHeader>\n        <ModalBody>\n          <TSpan\n            font=\"body-m\"\n            textAlign=\"center\"\n            colorToken=\"--text-modal-neutral-default\"\n          >\n            {diffSeconds < 0 ? (\n              t('noumena.event.modal.another_event_scheduled_now')\n            ) : (\n              <>\n                {t('noumena.event.modal.another_event_scheduled_in')}\n                <Timer initialSeconds={diffSeconds} unit=\"minute\" />:\n              </>\n            )}\n          </TSpan>\n\n          <Spacer height={16} />\n          {event && spaceId && (\n            <EventItem\n              key={event._id}\n              event={event}\n              chamberId={spaceId || ''}\n              type=\"calendar\"\n              onGoLive={() => onGoLive(event._id || '')}\n              onAccept={() => onEventAccepted?.(event, onAccept)!}\n              onDecline={() => onEventDeclined?.(event, onDecline)!}\n              onAttending={() => onEventAccepted?.(event, onAttending)!}\n              onNotAttending={() => onEventDeclined?.(event, onNotAttending)!}\n              onEditEvent={() => {}}\n              onJoinEvent={() => {}}\n              onAttend={() => onEventAccepted?.(event, onAttend)!}\n              onClickSeeMore={() => {}}\n              onViewAttendees={() => {}}\n              hideActionButtons\n              notClickable\n              hideDescription\n            />\n          )}\n          <Spacer height={16} />\n          <TSpan\n            font=\"body-m\"\n            textAlign=\"center\"\n            colorToken=\"--text-modal-neutral-default\"\n          >\n            {t('noumena.event.modal.start_now.reminder')}\n          </TSpan>\n        </ModalBody>\n        <ModalFooter gap={16} flexDirection=\"row\" marginTop={12}>\n          <Button\n            tertiary\n            intent=\"negative\"\n            size=\"full\"\n            onClick={onClose}\n            data-testid=\"cancel-button\"\n          >\n            {t('noumena.event.modal.cancel')}\n          </Button>\n          <Button\n            onClick={onContinueClick}\n            primary\n            size=\"full\"\n            data-testid=\"confirm-button\"\n          >\n            {t('noumena.event.modal.continue')}\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  },\n);\n","import { EventsStatus, Privacy, UserRole } from '@/apollo/generated/types';\nimport { type EventFragment } from '@/apollo/graphql';\n\nexport const data = [\n  {\n    firstName: 'Anglea',\n    middleName: null,\n    lastName: 'Martin',\n    _id: '63467b3b9251e1000c050b96',\n  },\n  {\n    firstName: 'uday',\n    middleName: null,\n    lastName: 'user',\n    _id: '63466db79251e1000c005777',\n  },\n  {\n    firstName: 'random',\n    middleName: null,\n    lastName: 'test',\n    _id: '63453cfb16ad04000c871b31',\n  },\n  {\n    firstName: 'Test',\n    middleName: null,\n    lastName: 'Test',\n    _id: '6344ecea038639000d530722',\n  },\n  {\n    firstName: 'Test',\n    middleName: null,\n    lastName: 'Test',\n    _id: '6344e92c038639000d52f8b5',\n  },\n  {\n    firstName: 'Yunlai',\n    middleName: null,\n    lastName: 'Che',\n    _id: '63446fc3038639000d4fef8e',\n  },\n  {\n    firstName: 'Inderrrrrr',\n    middleName: null,\n    lastName: 'Non-NM',\n    _id: '633fef9a1e415d000d1344ba',\n  },\n  {\n    firstName: 'Inderrrrrr',\n    middleName: null,\n    lastName: 'Non-NM',\n    _id: '633fef201e415d000d130877',\n  },\n  {\n    firstName: 'Jackie',\n    middleName: null,\n    lastName: 'Lim',\n    _id: '633fdd3c1e415d000d0cf5e5',\n  },\n  {\n    firstName: 'Jack',\n    middleName: null,\n    lastName: 'Hostin',\n    _id: '633fc1251e415d000d034ae6',\n  },\n  {\n    firstName: 'JD October',\n    middleName: null,\n    lastName: 'Ding - test',\n    _id: '633fb1bbafb73c000d90a8c1',\n  },\n  {\n    firstName: 'James',\n    middleName: null,\n    lastName: 'Ding',\n    _id: '633fb173afb73c000d90a255',\n  },\n  {\n    firstName: 'James',\n    middleName: null,\n    lastName: 'Hostin',\n    _id: '633fabc1afb73c000d9080c5',\n  },\n  {\n    firstName: 'YunlaiEighteen',\n    middleName: null,\n    lastName: 'Che',\n    _id: '633ea2daaba440000c38a58c',\n  },\n  {\n    firstName: 'YunlaiSeventeen',\n    middleName: null,\n    lastName: 'Che',\n    _id: '633ea264aba440000c388bb9',\n  },\n  {\n    firstName: 'qwe',\n    middleName: null,\n    lastName: 'qwe',\n    _id: '633e6de2e9aef7000cc6d363',\n  },\n  {\n    firstName: 'Some',\n    middleName: null,\n    lastName: 'Test',\n    _id: '633d499299186f000c90ce0d',\n  },\n  {\n    firstName: 'Some',\n    middleName: null,\n    lastName: 'Test',\n    _id: '633d3e9399186f000c8e7411',\n  },\n  {\n    firstName: 'gab',\n    middleName: null,\n    lastName: 'gab',\n    _id: '633591f27adab5000e1955ce',\n  },\n  {\n    firstName: 'FOCIY',\n    middleName: null,\n    lastName: 'ORLYDNS',\n    _id: '633430dc166285000d983a0d',\n  },\n];\n\nexport const placeHolderdata = [\n  {\n    _id: '647f3395b19878000da40bfe',\n    status: EventsStatus.GoLive,\n    privacy: Privacy.Public,\n    title: 'Test Event #01',\n    description:\n      'This is an example event just to show you what calendar will look like in your Noum. Don’t worry, it will not be visible when you publish your Noum 🙂',\n    eventDate: '2023-06-06T14:00:00.000Z',\n    duration: 3600,\n    eventStatusUpdatedAt: '2023-06-06T13:30:00.227Z',\n    socialHall: {\n      _id: '647f33957c40e809b22407a1',\n      isActive: true,\n    },\n    chamberId: {\n      _id: '62bd985ea7564f000e31c472',\n    },\n    userId: {\n      _id: '6295ce0b1792ec247e8eb225',\n      firstName: 'Swarup',\n      middleName: null,\n      lastName: 'Ghosh Dev',\n    },\n    isInstantEvent: true,\n    currentUser: {\n      eventId: '647f3395b19878000da40bfe',\n      userId: '62fcdb69c2b876000fb22f71',\n      userRole: UserRole.Participant,\n      invitation: {\n        _id: '647f36c2b19878000da40dd3',\n      },\n    },\n  },\n] as EventFragment[];\n","import { EventFilter } from '@/features/events/components';\n\nimport { type SubHeaderProps } from './types';\nimport { SubHeaderWrapper } from './styles';\n\nexport const CalendarElementViewModeSubHeader = ({\n  activeFilter,\n  onFilterChange,\n  isNoumEditor2,\n}: SubHeaderProps) => (\n  <SubHeaderWrapper data-testid=\"calendar-element-viewmode-subheader\">\n    <EventFilter\n      visible\n      isNoumEditor2={isNoumEditor2}\n      activeFilter={activeFilter}\n      onChange={onFilterChange}\n    />\n  </SubHeaderWrapper>\n);\n","import { t } from 'i18next';\nimport { Stack } from '@/layout';\nimport { TSpan } from '@/components/Typography';\nimport { Button } from '@/components/Button';\nimport { Icon } from '@/components/Icon';\nimport { EventItem, EventFilterDropDown } from '@/features/events/components';\nimport { placeHolderdata } from '../CalendarElement/data';\nimport { type CalendarEventsPlaceHolderProps } from './types';\nimport { CalendarElementViewModeSubHeader } from '../CalendarElement/CalendarElementViewModeSubHeader';\n\nexport const CalendarPlaceHolder = ({\n  isNoumLayoutSmallViewMode,\n}: CalendarEventsPlaceHolderProps) => (\n  <Stack fullWidth vertical padding=\"16px\" gap={25}>\n    <Stack justify=\"space-between\" fullWidth align=\"center\">\n      <TSpan font=\"heading-xs-bold\">\n        {t('noumena.homeChambers.event.event_other')}\n      </TSpan>\n      <Button size=\"small\" secondary icon={<Icon name=\"plus_m\" size={24} />} />\n    </Stack>\n    {isNoumLayoutSmallViewMode ? (\n      <EventFilterDropDown activeFilter=\"all\" onChange={() => {}} />\n    ) : (\n      <CalendarElementViewModeSubHeader\n        activeFilter=\"all\"\n        activeViewMode=\"\"\n        onFilterChange={() => {}}\n        onViewModeChange={() => {}}\n        isNoumEditor2\n      />\n    )}\n    {placeHolderdata.map((event) => (\n      <EventItem\n        key={event._id}\n        event={event}\n        chamberId=\"\"\n        type=\"calendar\"\n        onGoLive={async () => undefined}\n        onAccept={async () => undefined}\n        onDecline={async () => undefined}\n        onAttending={async () => undefined}\n        onNotAttending={async () => undefined}\n        onEditEvent={async () => undefined}\n        onJoinEvent={async () => undefined}\n        onAttend={async () => undefined}\n        onClickSeeMore={async () => undefined}\n        onViewAttendees={async () => undefined}\n        isNoumLayoutSmallViewMode={isNoumLayoutSmallViewMode}\n      />\n    ))}\n  </Stack>\n);\n","import { SpaceTypeEnum } from '@/apollo/generated/types';\nimport { type EventFragment } from '@/apollo/graphql';\nimport { EventItem, EventFilter } from '@/features/events/components';\nimport {\n  Modal,\n  ModalBody,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { Infinite, getBottomStatusFromQuery } from '@/components/Infinite';\nimport { Spinner } from '@/components/Spinner';\nimport { useEvents } from '@/features/events/hooks';\nimport { useModalManager } from '@/hooks/modal/useModalManager';\nimport { Stack } from '@/layout';\nimport { NetworkStatus } from '@apollo/client';\nimport { useCallback, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { EventAttendeesModal } from '../modals';\nimport CreateEditEventModal from '../modals/CreateEditEventModal';\nimport { EventListEmptyScreen } from '../modals/EventListModal/EventListEmptyScreen';\nimport {\n  withRecurringEvent,\n  type WithRecurringEventProps,\n} from '../modals/EventListModal/withRecurringEvent';\nimport { type AllEventsProps } from './types';\n\ntype ModalType = 'edit-event';\n\ntype ModalContext = {\n  event?: EventFragment;\n  callback?: () => void;\n};\n\nexport const AllCalendarModal = withRecurringEvent(\n  ({\n    isOpen,\n    onClose,\n    isNoumEditor2,\n    chamberId,\n    isOwner,\n    spaceId,\n    onEventAccepted,\n    onEventDeclined,\n    spaceType,\n  }: AllEventsProps & Partial<WithRecurringEventProps>) => {\n    const { t } = useTranslation();\n\n    const {\n      events,\n      eventsCount,\n      activeFilter,\n      onChangeFilter,\n      onGoLive,\n      onJoinEvent,\n      networkStatus,\n      fetchMoreEvents,\n      onAccept,\n      onAttend,\n      onDecline,\n      onAttending,\n      onNotAttending,\n      onCopyLink,\n      refetchEvents,\n    } = useEvents({\n      chamberId: spaceId,\n      limit: 10,\n      isOwner,\n      preventGetEvents: !isOpen,\n    });\n\n    const attendeesRef =\n      useRef<React.ElementRef<typeof EventAttendeesModal>>(null);\n\n    const onViewAttendees = useCallback((eventId: string, isHost: boolean) => {\n      attendeesRef.current?.open(eventId, isHost);\n    }, []);\n\n    const { openModal, closeModal, contextData, modalType } = useModalManager<\n      ModalType,\n      ModalContext\n    >();\n\n    const handleJoinEvent = useCallback(\n      async (event: EventFragment) => {\n        onJoinEvent(event._id ?? '', event.socialHall?._id ?? '');\n      },\n      [onJoinEvent],\n    );\n\n    const onGoLiveEvent = useCallback(\n      async (event: EventFragment) => {\n        await onGoLive(event._id!);\n        onJoinEvent(event._id ?? '', event.socialHall?._id ?? '');\n      },\n      [onGoLive, onJoinEvent],\n    );\n\n    const closeModalHanlder = () => {\n      onClose();\n    };\n    const canFetchMore = eventsCount > events.length;\n\n    return (\n      <Modal\n        onClose={closeModalHanlder}\n        enableCloseButton\n        open={isOpen}\n        size={ModalSize.XL}\n        disableBackdropClick\n      >\n        <ModalHeader>{t('noumena.events.title')}</ModalHeader>\n        <ModalBody style={{ gap: '15px', height: '628px' }}>\n          {isOwner && (\n            <EventFilter\n              visible={true}\n              activeFilter={activeFilter}\n              onChange={onChangeFilter}\n              isNoumEditor2={isNoumEditor2}\n            />\n          )}\n          <Infinite\n            onFetchMore={() => {\n              if (canFetchMore) {\n                fetchMoreEvents();\n              }\n            }}\n            status={\n              events.length !== 0 && canFetchMore\n                ? getBottomStatusFromQuery({\n                    networkStatus,\n                    totalCount: eventsCount,\n                    currentCount: events.length,\n                  })\n                : 'end'\n            }\n            grow\n            width=\"100%\"\n            disableFetchMoreWhileLoading={true}\n            isSpinnerRelative\n            style={{ overflow: 'unset', scrollbarWidth: 'none' }}\n          >\n            <Stack gap={15} vertical align=\"center\" grow>\n              {events.length === 0 ? (\n                <>\n                  {networkStatus === NetworkStatus.ready ? (\n                    <EventListEmptyScreen activeFilter={activeFilter} />\n                  ) : (\n                    <Spinner />\n                  )}\n                </>\n              ) : (\n                events.map((event) => (\n                  <EventItem\n                    key={event._id}\n                    event={event}\n                    chamberId={chamberId}\n                    type={isNoumEditor2 ? 'calendar' : 'notification'}\n                    onGoLive={() => onGoLiveEvent(event)}\n                    onAccept={() => onEventAccepted?.(event, onAccept)!}\n                    onDecline={() => onEventDeclined?.(event, onDecline)!}\n                    onAttending={() => onEventAccepted?.(event, onAttending)!}\n                    onNotAttending={() =>\n                      onEventDeclined?.(event, onNotAttending)!\n                    }\n                    onJoinEvent={() => handleJoinEvent(event)}\n                    onAttend={() => onEventAccepted?.(event, onAttend)!}\n                    onEditEvent={() =>\n                      openModal('edit-event', {\n                        event,\n                        callback: refetchEvents,\n                      })\n                    }\n                    onViewAttendees={onViewAttendees}\n                    onCopyLink={() =>\n                      onCopyLink?.(event?.socialHall?._id!, event?.status!)\n                    }\n                  />\n                ))\n              )}\n            </Stack>\n          </Infinite>\n        </ModalBody>\n        {modalType === 'edit-event' && (\n          <CreateEditEventModal\n            chamberId={spaceId}\n            isOpen\n            onClose={closeModal}\n            event={contextData?.event}\n            eventSuccessCallback={contextData?.callback}\n            isProjectNoum={spaceType === SpaceTypeEnum.Project}\n          />\n        )}\n        <EventAttendeesModal\n          ref={attendeesRef}\n          onRefetchEvents={refetchEvents}\n        />\n      </Modal>\n    );\n  },\n);\n","import styled from 'styled-components';\n\nimport { sizes } from '@/constants/devices';\nimport { Button } from '@/components/Button';\nimport { TSpan } from '@/components/Typography';\n\nexport const CalendarNoEventsWrapper = styled.div<{ isNoumEditor2?: boolean }>`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  box-sizing: border-box;\n  ${({ isNoumEditor2 }) => isNoumEditor2 && 'padding: 0 16px 16px'}\n`;\n\nexport const NoEventsIconWrapper = styled.div`\n  margin: 0 auto;\n`;\n\nexport const StyledText = styled(TSpan)`\n  user-select: none;\n  text-align: center;\n`;\n\nexport const AddNewEventButton = styled(Button)`\n  padding: 12px;\n  margin-top: 16px;\n  min-height: unset;\n  height: unset;\n`;\n\nexport const OwnerEventsListCollapsedWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 16px;\n\n  & * {\n    user-select: none;\n  }\n  @media (max-width: ${sizes.MOBILE_L}) {\n    align-items: stretch;\n  }\n`;\n\nexport const GuestEventsListCollapsedWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  & * {\n    user-select: none;\n  }\n`;\n\nexport const OwnerEventsListCollapsedItem = styled.div<{ active: boolean }>`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 12px;\n  border-radius: 8px;\n  flex: 1;\n  cursor: pointer;\n  transition: all 0.2s linear;\n  background-color: ${({ active }) =>\n    active\n      ? `var(--bg-summary-button-brand-secondary-highlighted)`\n      : `var(--bg-summary-button-neutral-default)`};\n  &:hover {\n    background-color: ${({ active }) =>\n      active\n        ? `var(--bg-summary-button-brand-secondary-hover)`\n        : `var(--bg-summary-button-neutral-hover)`};\n  }\n`;\n\nexport const GuestEventsListCollapsedItem = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  gap: 8px;\n`;\n\nexport const EventCategory = styled(TSpan)``;\n\nexport const EventCount = styled(TSpan)``;\n\nexport const EventHelper = styled(TSpan)``;\n\nexport const EventsListExpandedWrapper = styled.div<{\n  isEventBottomBorder: boolean;\n}>`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  & * {\n    user-select: none;\n  }\n  & :nth-last-child(1) {\n    ${({ isEventBottomBorder }) =>\n      isEventBottomBorder && 'border-radius: 16px'};\n  }\n`;\n\nexport const GuestEventsHeaderTitle = styled(TSpan)<{\n  isNoumEditor2?: boolean;\n}>`\n  ${({ isNoumEditor2 }) => isNoumEditor2 && 'padding: 0 16px'}\n`;\n\nexport const EventDateWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 64px;\n`;\n\nexport const GuestEventMonth = styled(TSpan)`\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 160%;\n`;\n\nexport const GuestEventDate = styled(TSpan)`\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 150%;\n`;\n\nexport const GuestEventTitle = styled(TSpan)`\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 150%;\n  text-align: left;\n`;\n\nexport const GuestEventTime = styled(TSpan)`\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 160%;\n  text-align: left;\n`;\n\nexport const GuestEventBodyWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 16px;\n  gap: 8px;\n  border-radius: 8px;\n  border: 1px solid var(--border-card-neutral-default);\n  flex: 1;\n\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    flex-direction: column;\n\n    & > div:last-of-type {\n      margin-top: 3px;\n    }\n  }\n`;\n\nexport const GuestEventBody = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  flex: 1;\n\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    flex: 0;\n    width: 100%;\n  }\n`;\n\nexport const LoadingContainer = styled.div`\n  inset: 0 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 2;\n  height: 50px;\n  span {\n    position: absolute;\n  }\n`;\n","import { EventItemButtons } from '@/features/events/components';\nimport { getLocalTimeFormatted } from '@/utils/date';\nimport { t } from 'i18next';\nimport {\n  withRecurringEvent,\n  type WithRecurringEventProps,\n} from '../modals/EventListModal/withRecurringEvent';\nimport {\n  EventDateWrapper,\n  GuestEventBody,\n  GuestEventBodyWrapper,\n  GuestEventDate,\n  GuestEventMonth,\n  GuestEventTime,\n  GuestEventTitle,\n  GuestEventsHeaderTitle,\n  GuestEventsListCollapsedItem,\n  GuestEventsListCollapsedWrapper,\n} from './styles';\nimport { type CalendarGuestEventsListCollapsedProps } from './types';\n\nexport const CalendarGuestEventsListCollapsed = withRecurringEvent(\n  ({\n    events,\n    eventHost,\n    masterNoumId,\n    onEditEvent,\n    onGoLive,\n    onJoinEvent,\n    onAccept,\n    onDecline,\n    onAttend,\n    onAttending,\n    onNotAttending,\n    onEventDeclined,\n    onEventAccepted,\n  }: CalendarGuestEventsListCollapsedProps &\n    Partial<WithRecurringEventProps>) => (\n    <GuestEventsListCollapsedWrapper data-testid=\"guest-events-list-collapsed\">\n      {!!eventHost && (\n        <GuestEventsHeaderTitle\n          font=\"body-m\"\n          colorToken=\"--text-card-neutral-highlighted\"\n        >\n          {t('noumena.homeChambers.event.guest_upcoming_events_num', {\n            postProcess: 'interval',\n            count: events?.length || 0,\n            host: eventHost,\n          })}\n        </GuestEventsHeaderTitle>\n      )}\n      {events.map((event) => (\n        <GuestEventsListCollapsedItem key={event._id}>\n          <EventDateWrapper>\n            <GuestEventMonth colorToken=\"--text-upcoming-event-brand-primary-highlighted\">\n              {getLocalTimeFormatted({\n                dateTime: event.eventDate,\n                returnFormat: 'MMMM',\n              })}\n            </GuestEventMonth>\n            <GuestEventDate colorToken=\"--text-upcoming-event-neutral-highlighted\">\n              {getLocalTimeFormatted({\n                dateTime: event.eventDate,\n                returnFormat: 'd',\n              })}\n            </GuestEventDate>\n          </EventDateWrapper>\n          <GuestEventBodyWrapper>\n            <GuestEventBody>\n              <GuestEventTitle colorToken=\"--text-upcoming-event-neutral-highlighted\">\n                {event.title}\n              </GuestEventTitle>\n              <GuestEventTime colorToken=\"--text-tablecell-body-neutral-default\">\n                {getLocalTimeFormatted({\n                  dateTime: event.eventDate,\n                  returnFormat: 'h:mm aa',\n                })}\n              </GuestEventTime>\n            </GuestEventBody>\n            <EventItemButtons\n              type=\"calendar\"\n              event={event}\n              noumId={masterNoumId ?? ''}\n              onEditEvent={() => onEditEvent(event)}\n              onGoLive={() => onGoLive(event)}\n              onJoinEvent={() => onJoinEvent(event)}\n              onAccept={() => onEventAccepted?.(event, onAccept)!}\n              onDecline={() => onEventDeclined?.(event, onDecline)!}\n              onAttend={() => onEventAccepted?.(event, onAttend)!}\n              onAttending={() => onEventAccepted?.(event, onAttending)!}\n              onNotAttending={() => onEventDeclined?.(event, onNotAttending)!}\n            />\n          </GuestEventBodyWrapper>\n        </GuestEventsListCollapsedItem>\n      ))}\n    </GuestEventsListCollapsedWrapper>\n  ),\n);\n","import { useCallback, useRef, useState } from 'react';\nimport { t } from 'i18next';\nimport { EventItem } from '@/features/events/components';\nimport { EventAttendeesModal } from '@/screens/Chamber/components/elements/CalendarEvent/modals/EventAttendeesModal';\nimport { EventDetailModal } from '@/screens/Chamber/components/elements/CalendarEvent/modals/EventDetailModal/EventDetailModal';\n\nimport { type EventFragment } from '@/apollo/graphql';\nimport { type CalendarEventsListExpandedProps } from './types';\nimport { EventsListExpandedWrapper, GuestEventsHeaderTitle } from './styles';\nimport {\n  withRecurringEvent,\n  type WithRecurringEventProps,\n} from '../modals/EventListModal/withRecurringEvent';\n\nexport const CalendarEventsListExpanded = withRecurringEvent(\n  ({\n    events,\n    eventHost,\n    masterNoumId,\n    onGoLive,\n    onAccept,\n    onDecline,\n    onAttending,\n    onNotAttending,\n    onEditEvent,\n    onJoinEvent,\n    onAttend,\n    refetchEvents,\n    onCopyLink,\n    onEventDeclined,\n    onEventAccepted,\n    isNoumEditor2,\n    isNoumLayoutSmallViewMode,\n    eventsCount,\n  }: CalendarEventsListExpandedProps & Partial<WithRecurringEventProps>) => {\n    const attendeesRef =\n      useRef<React.ElementRef<typeof EventAttendeesModal>>(null);\n    const [openDetailModal, setOpenDetailModal] = useState<\n      EventFragment | false\n    >(false);\n\n    const onViewAttendees = useCallback((eventId: string, isHost: boolean) => {\n      attendeesRef.current?.open(eventId, isHost);\n    }, []);\n\n    const handleSeeMore = useCallback(\n      (event: EventFragment) => {\n        setOpenDetailModal(event);\n      },\n      [setOpenDetailModal],\n    );\n\n    return (\n      <>\n        <EventsListExpandedWrapper\n          data-testid=\"events-list-expanded\"\n          isEventBottomBorder={(eventsCount || 0) <= 3}\n        >\n          {!!eventHost && (\n            <GuestEventsHeaderTitle\n              font=\"body-m\"\n              colorToken=\"--text-card-neutral-highlighted\"\n              isNoumEditor2={isNoumEditor2}\n            >\n              {t('noumena.homeChambers.event.guest_upcoming_events', {\n                host: eventHost,\n              })}\n            </GuestEventsHeaderTitle>\n          )}\n          {events.map((event) => (\n            <EventItem\n              key={event._id}\n              event={event}\n              chamberId={masterNoumId || ''}\n              type=\"calendar\"\n              onGoLive={() => onGoLive(event)}\n              onAccept={() => onEventAccepted?.(event, onAccept)!}\n              onDecline={() => onEventDeclined?.(event, onDecline)!}\n              onAttending={() => onEventAccepted?.(event, onAttending)!}\n              onNotAttending={() => onEventDeclined?.(event, onNotAttending)!}\n              onEditEvent={() => onEditEvent(event)}\n              onJoinEvent={() => onJoinEvent(event)}\n              onAttend={() => onEventAccepted?.(event, onAttend)!}\n              onClickSeeMore={() => handleSeeMore(event)}\n              onViewAttendees={onViewAttendees}\n              onCopyLink={() =>\n                onCopyLink?.(event?.socialHall?._id!, event?.status!)\n              }\n              isNoumLayoutSmallViewMode={isNoumLayoutSmallViewMode}\n            />\n          ))}\n        </EventsListExpandedWrapper>\n        <EventAttendeesModal\n          ref={attendeesRef}\n          onRefetchEvents={refetchEvents}\n        />\n\n        {!!openDetailModal && (\n          <EventDetailModal\n            eventId={openDetailModal._id ?? ''}\n            isOpen={!!openDetailModal}\n            onClose={() => setOpenDetailModal(false)}\n            onEditEvent={onEditEvent}\n          />\n        )}\n      </>\n    );\n  },\n);\n","import { useMemo } from 'react';\n\nimport { CalendarGuestEventsListCollapsed } from '@/screens/Chamber/components/elements/CalendarEvent/components/CalendarGuestEventsListCollapsed';\nimport { CalendarEventsListExpanded } from '@/screens/Chamber/components/elements/CalendarEvent/components/CalendarEventsListExpanded';\n\nimport { type CalendarElementGuestViewProps } from './types';\n\nexport const CalendarElementGuestView = ({\n  masterNoumId,\n  events,\n  eventMeta,\n  isCollapsed,\n  onEditEvent,\n  onRefetchEvents,\n  onGoLive,\n  onJoin,\n  onAccept,\n  onDecline,\n  onAttend,\n  onAttending,\n  onNotAttending,\n  isNoumEditor2,\n  isNoumLayoutSmallViewMode,\n}: CalendarElementGuestViewProps) => {\n  const eventHost: string = useMemo(\n    () => events[0]?.chamberId?.uid?.firstName || '',\n    [events],\n  );\n\n  if (isCollapsed) {\n    return (\n      <CalendarGuestEventsListCollapsed\n        events={events}\n        eventMeta={eventMeta}\n        eventHost={eventHost}\n        masterNoumId={masterNoumId}\n        onGoLive={onGoLive}\n        onAccept={onAccept}\n        onDecline={onDecline}\n        onAttending={onAttending}\n        onNotAttending={onNotAttending}\n        onEditEvent={onEditEvent}\n        onJoinEvent={onJoin}\n        onAttend={onAttend}\n      />\n    );\n  }\n  return (\n    <CalendarEventsListExpanded\n      masterNoumId={masterNoumId}\n      events={events}\n      eventHost={eventHost}\n      onGoLive={onGoLive}\n      onAccept={onAccept}\n      onDecline={onDecline}\n      onAttending={onAttending}\n      onNotAttending={onNotAttending}\n      onEditEvent={onEditEvent}\n      onJoinEvent={onJoin}\n      onAttend={onAttend}\n      refetchEvents={onRefetchEvents}\n      isNoumEditor2={isNoumEditor2}\n      isNoumLayoutSmallViewMode={isNoumLayoutSmallViewMode}\n    />\n  );\n};\n","import { t } from 'i18next';\n\nimport { EventsFilter } from '@/apollo/generated/types';\nimport { Icon } from '@/components/Icon';\nimport { type IActiveFilter } from '@/features/events/hooks';\nimport { type NoEventsProps } from './types';\nimport {\n  CalendarNoEventsWrapper,\n  NoEventsIconWrapper,\n  StyledText,\n  AddNewEventButton,\n} from './styles';\n\nconst noEventMessage: Record<IActiveFilter, string> = {\n  all: t('noumena.homeChambers.calendar.noEvents'),\n  [EventsFilter.Attending]: t(\n    'noumena.homeChambers.calendar.noAttendingEvents',\n  ),\n  [EventsFilter.Hosting]: t('noumena.homeChambers.calendar.noHostingEvents'),\n  [EventsFilter.Invitation]: t('noumena.homeChambers.calendar.noInvitedEvents'),\n  [EventsFilter.Expired]: t('noumena.homeChambers.calendar.noPastEvents'),\n  [EventsFilter.Upcoming]: t('noumena.homeChambers.calendar.noUpcoming'),\n};\n\nexport const CalendarNoEvents = ({\n  isCollapsed,\n  activeFilter,\n  onAddEvent,\n  loading,\n  isNoumEditor2,\n}: NoEventsProps) => {\n  if (loading) return null;\n\n  return (\n    <CalendarNoEventsWrapper\n      data-testid=\"calendar-no-events-wrapper\"\n      isNoumEditor2={isNoumEditor2}\n    >\n      {!isCollapsed && (\n        <NoEventsIconWrapper>\n          <Icon\n            name=\"calendar_xxxl\"\n            size={64}\n            color=\"--icon-placeholder-neutral-default\"\n          />\n        </NoEventsIconWrapper>\n      )}\n      <StyledText\n        data-testid=\"no-events-text\"\n        font=\"body-xl\"\n        colorToken=\"--text-placeholder-neutral-default\"\n      >\n        {isCollapsed\n          ? t('noumena.homeChambers.calendar.noEvents')\n          : noEventMessage[activeFilter]}\n      </StyledText>\n      {!isCollapsed && ['all', EventsFilter.Hosting].includes(activeFilter) && (\n        <AddNewEventButton secondary onClick={onAddEvent}>\n          {t('noumena.homeChambers.event.add_new_event')}\n        </AddNewEventButton>\n      )}\n    </CalendarNoEventsWrapper>\n  );\n};\n","import { t } from 'i18next';\n\nimport { EventsFilter } from '@/apollo/generated/types';\nimport { getSingularPluralKey } from '@/utils/strings';\n\nimport { type CalendarOwnerEventsListCollapsedProps } from './types';\nimport {\n  OwnerEventsListCollapsedWrapper,\n  OwnerEventsListCollapsedItem,\n  EventCategory,\n  EventCount,\n  EventHelper,\n} from './styles';\n\nexport const CalendarOwnerEventsListCollapsed = ({\n  activeFilter,\n  onFilterChange,\n  eventMeta,\n}: CalendarOwnerEventsListCollapsedProps) => (\n  <OwnerEventsListCollapsedWrapper data-testid=\"owner-events-list-collapsed\">\n    <OwnerEventsListCollapsedItem\n      active={activeFilter === EventsFilter.Attending}\n      onClick={() => onFilterChange(EventsFilter.Attending)}\n    >\n      <EventCategory\n        font=\"body-m-bold\"\n        colorToken={\n          activeFilter === EventsFilter.Attending\n            ? '--text-summary-button-brand-primary-highlighted'\n            : '--text-summary-button-neutral-highlighted'\n        }\n      >\n        {t('noumena.homeChambers.event.filter_attending')}\n      </EventCategory>\n      <EventCount\n        font=\"body-xl-bold\"\n        colorToken={\n          activeFilter === EventsFilter.Attending\n            ? '--text-summary-button-brand-primary-highlighted'\n            : '--text-summary-button-neutral-highlighted'\n        }\n      >\n        {eventMeta?.acceptedEventsCount || 0}\n      </EventCount>\n      <EventHelper\n        font=\"footnote-bold\"\n        colorToken={\n          activeFilter === EventsFilter.Attending\n            ? '--text-summary-button-brand-primary-default'\n            : '--text-summary-button-neutral-default'\n        }\n      >\n        {t(\n          getSingularPluralKey(\n            'noumena.homeChambers.event.event',\n            eventMeta?.acceptedEventsCount || 0,\n          ),\n        )}\n      </EventHelper>\n    </OwnerEventsListCollapsedItem>\n\n    <OwnerEventsListCollapsedItem\n      active={activeFilter === EventsFilter.Hosting}\n      onClick={() => onFilterChange(EventsFilter.Hosting)}\n    >\n      <EventCategory\n        font=\"body-m-bold\"\n        colorToken={\n          activeFilter === EventsFilter.Hosting\n            ? '--text-summary-button-brand-primary-highlighted'\n            : '--text-summary-button-neutral-highlighted'\n        }\n      >\n        {t('noumena.homeChambers.event.filter_hosting')}\n      </EventCategory>\n      <EventCount\n        font=\"body-xl-bold\"\n        colorToken={\n          activeFilter === EventsFilter.Hosting\n            ? '--text-summary-button-brand-primary-highlighted'\n            : '--text-summary-button-neutral-highlighted'\n        }\n      >\n        {eventMeta?.hostedEventsCount || 0}\n      </EventCount>\n      <EventHelper\n        font=\"footnote-bold\"\n        colorToken={\n          activeFilter === EventsFilter.Hosting\n            ? '--text-summary-button-brand-primary-default'\n            : '--text-summary-button-neutral-default'\n        }\n      >\n        {t(\n          getSingularPluralKey(\n            'noumena.homeChambers.event.event',\n            eventMeta?.hostedEventsCount || 0,\n          ),\n        )}\n      </EventHelper>\n    </OwnerEventsListCollapsedItem>\n\n    <OwnerEventsListCollapsedItem\n      active={activeFilter === EventsFilter.Invitation}\n      onClick={() => onFilterChange(EventsFilter.Invitation)}\n    >\n      <EventCategory\n        font=\"body-m-bold\"\n        colorToken={\n          activeFilter === EventsFilter.Invitation\n            ? '--text-summary-button-brand-primary-highlighted'\n            : '--text-summary-button-neutral-highlighted'\n        }\n      >\n        {t('noumena.homeChambers.event.filter_invites')}\n      </EventCategory>\n      <EventCount\n        font=\"body-xl-bold\"\n        colorToken={\n          activeFilter === EventsFilter.Invitation\n            ? '--text-summary-button-brand-primary-highlighted'\n            : '--text-summary-button-neutral-highlighted'\n        }\n      >\n        {eventMeta?.pendingEventsCount || 0}\n      </EventCount>\n      <EventHelper\n        font=\"footnote-bold\"\n        textAlign=\"center\"\n        colorToken={\n          activeFilter === EventsFilter.Invitation\n            ? '--text-summary-button-brand-primary-default'\n            : '--text-summary-button-neutral-default'\n        }\n      >\n        {t('noumena.homeChambers.event.event_without_reply')}\n      </EventHelper>\n    </OwnerEventsListCollapsedItem>\n  </OwnerEventsListCollapsedWrapper>\n);\n","import { useMemo } from 'react';\n\nimport { CalendarNoEvents } from '@/screens/Chamber/components/elements/CalendarEvent/components/CalendarNoEvents';\nimport { CalendarOwnerEventsListCollapsed } from '@/screens/Chamber/components/elements/CalendarEvent/components/CalendarOwnerEventsListCollapsed';\nimport { CalendarEventsListExpanded } from '@/screens/Chamber/components/elements/CalendarEvent/components/CalendarEventsListExpanded';\n\nimport { Spinner } from '@/components/Spinner';\nimport { EventFilterDropDown } from '@/features/events/components';\nimport { CalendarElementViewModeSubHeader } from './CalendarElementViewModeSubHeader';\n\nimport { type CalendarElementOwnerViewProps } from './types';\nimport { LoadingContainer } from '../components/styles';\n\nexport const CalendarElementOwnerView = ({\n  masterNoumId,\n  loading,\n  events,\n  eventMeta,\n  eventsCount,\n  isCollapsed,\n  activeFilter,\n  activeViewMode,\n  onChangeFilter,\n  onFilterChanged,\n  onChangeViewMode,\n  onAddEvent,\n  onEditEvent,\n  onRefetchEvents,\n  onGoLive,\n  onJoin,\n  onAccept,\n  onDecline,\n  onAttend,\n  onAttending,\n  onNotAttending,\n  onCopyLink,\n  isNoumEditor2,\n  isNoumLayoutSmallViewMode,\n}: CalendarElementOwnerViewProps) => {\n  const showFilters = useMemo(() => {\n    if (isCollapsed) return false;\n\n    return eventsCount ? true : activeFilter !== 'all';\n  }, [activeFilter, eventsCount, isCollapsed]);\n\n  const showOwnerCollapsedTabs = useMemo(() => {\n    if (!isCollapsed) return false;\n\n    return Boolean(eventMeta?.allEventsCount);\n  }, [eventMeta?.allEventsCount, isCollapsed]);\n\n  const showNoEvents = useMemo(() => {\n    if (eventsCount) return false;\n    if (isCollapsed) {\n      return !eventMeta?.allEventsCount;\n    }\n\n    return true;\n  }, [eventMeta?.allEventsCount, eventsCount, isCollapsed]);\n\n  return (\n    <>\n      {!isNoumLayoutSmallViewMode && showFilters && (\n        <CalendarElementViewModeSubHeader\n          activeFilter={activeFilter}\n          activeViewMode={activeViewMode}\n          onFilterChange={onChangeFilter}\n          onViewModeChange={onChangeViewMode}\n          isNoumEditor2={isNoumEditor2}\n        />\n      )}\n      {isNoumLayoutSmallViewMode && Boolean(eventMeta?.allEventsCount) && (\n        <EventFilterDropDown\n          activeFilter={activeFilter}\n          onChange={onChangeFilter}\n        />\n      )}\n      {loading ? (\n        <LoadingContainer>\n          <Spinner />\n        </LoadingContainer>\n      ) : (\n        <>\n          {showOwnerCollapsedTabs && (\n            <CalendarOwnerEventsListCollapsed\n              activeFilter={activeFilter}\n              onFilterChange={onFilterChanged}\n              eventMeta={eventMeta}\n            />\n          )}\n          {eventsCount > 0 && !isCollapsed && (\n            <CalendarEventsListExpanded\n              eventsCount={eventsCount}\n              masterNoumId={masterNoumId}\n              events={events}\n              eventHost=\"\"\n              onGoLive={onGoLive}\n              onAccept={onAccept}\n              onDecline={onDecline}\n              onAttending={onAttending}\n              onNotAttending={onNotAttending}\n              onEditEvent={onEditEvent}\n              onJoinEvent={onJoin}\n              onAttend={onAttend}\n              refetchEvents={onRefetchEvents}\n              onCopyLink={onCopyLink}\n              isNoumEditor2={isNoumEditor2}\n              isNoumLayoutSmallViewMode={isNoumLayoutSmallViewMode}\n            />\n          )}\n          {showNoEvents && (\n            <CalendarNoEvents\n              isCollapsed={isCollapsed}\n              activeFilter={activeFilter}\n              loading={loading}\n              onAddEvent={onAddEvent}\n              isNoumEditor2={isNoumEditor2}\n            />\n          )}\n        </>\n      )}\n    </>\n  );\n};\n","import { Button } from '@/components/Button';\nimport { CustomPreviewTabEnum } from '@/screens/Chamber/CustomPreview/constants';\nimport { Dropdown, type DropdownTargetProps } from '@/components/Dropdown';\nimport { useLaunchDarkly } from '@/hooks';\nimport { addEventDropdownOptions } from '@/screens/Chamber/components/elements/CalendarEvent/CalendarElement/constants';\nimport { Icon } from '@/components/Icon';\nimport { type AddEventButtonProps } from './types';\n\nconst AddEventButton = ({\n  isOwner,\n  handleDropdownClick,\n  isAnotherEventLive,\n  selectedCustomPreviewTab,\n  onAddEvent,\n  isNoumEditor,\n}: AddEventButtonProps) => {\n  const { flags } = useLaunchDarkly();\n  return (\n    <>\n      {flags.shInstantEvent ? (\n        isOwner &&\n        selectedCustomPreviewTab !== CustomPreviewTabEnum.Preview && (\n          <Dropdown\n            hideIcons\n            onSelectOption={handleDropdownClick}\n            options={addEventDropdownOptions(isAnotherEventLive)}\n            usePortal={false}\n            observerMinHeight=\"0\"\n            containerPadding=\"12px\"\n            containerWidth={isAnotherEventLive ? 'auto' : '150px'}\n            padding=\"0\"\n          >\n            {({\n              targetProps,\n              targetRef,\n            }: DropdownTargetProps<HTMLButtonElement>) => (\n              <Button\n                ref={targetRef}\n                {...targetProps}\n                size=\"small\"\n                icon={\n                  <Icon\n                    name=\"add_s\"\n                    size={16}\n                    color={\n                      isNoumEditor\n                        ? '--icon-button-brand-secondary-default'\n                        : '--icon-button-neutral-alt-default'\n                    }\n                  />\n                }\n                primary={!isNoumEditor}\n                secondary={isNoumEditor}\n              />\n            )}\n          </Dropdown>\n        )\n      ) : (\n        <Button\n          onClick={onAddEvent}\n          size=\"small\"\n          icon={\n            <Icon\n              name=\"add_s\"\n              size={16}\n              color={\n                isNoumEditor\n                  ? '--icon-button-brand-secondary-default'\n                  : '--icon-button-neutral-alt-default'\n              }\n            />\n          }\n          primary={!isNoumEditor}\n          secondary={isNoumEditor}\n        />\n      )}\n    </>\n  );\n};\n\nexport default AddEventButton;\n","import { Icon } from '@/components/Icon';\nimport { TSpan } from '@/components/Typography';\n\nimport {\n  CollapseButton,\n  ViewModeHeaderTitleWrapper,\n  ViewModeHeaderWrapper,\n} from './styles';\nimport { type ViewModeHeaderProps } from './types';\nimport AddEventButton from './AddEventButton';\n\nexport const CalendarElementViewModeHeader = ({\n  currentTitle,\n  isCollapsed,\n  isOwner,\n  onToggleCollapse,\n  handleDropdownClick,\n  isAnotherEventLive,\n  selectedCustomPreviewTab,\n  onAddEvent,\n  isNoumEditor,\n  showAddEventBtn,\n}: ViewModeHeaderProps) => (\n  <>\n    <ViewModeHeaderWrapper\n      data-testid=\"calendar-element-header\"\n      isNoumEditor2={isNoumEditor}\n    >\n      {!isNoumEditor && (\n        <CollapseButton\n          data-testid=\"calendar-collapse-button\"\n          onClick={() => onToggleCollapse(!isCollapsed)}\n        >\n          <Icon\n            name={!isCollapsed ? 'chevron_small_up_m' : 'chevron_small_down_m'}\n            size={24}\n            color=\"--icon-button-neutral-default\"\n          />\n        </CollapseButton>\n      )}\n      <ViewModeHeaderTitleWrapper>\n        <TSpan\n          font=\"heading-xs-bold\"\n          colorToken=\"--text-body-header-neutral-default\"\n        >\n          {currentTitle}\n        </TSpan>\n      </ViewModeHeaderTitleWrapper>\n      {((isNoumEditor && !!showAddEventBtn) || !isNoumEditor) && (\n        <AddEventButton\n          isOwner={isOwner}\n          handleDropdownClick={handleDropdownClick}\n          isAnotherEventLive={isAnotherEventLive}\n          selectedCustomPreviewTab={selectedCustomPreviewTab}\n          onAddEvent={onAddEvent}\n          isNoumEditor={isNoumEditor}\n        />\n      )}\n    </ViewModeHeaderWrapper>\n  </>\n);\n","import { useEffect, useMemo, useState, type RefObject } from 'react';\n\nimport useResizeObserver from '@/hooks/useResizeObserver';\nimport { useLaunchDarkly } from '@/hooks';\n\nexport const useCalendar = (\n  childrenRef: RefObject<HTMLDivElement>,\n  isCustomPreview: boolean,\n) => {\n  const {\n    flags: { noumEditor2 },\n  } = useLaunchDarkly();\n  const [isCollapsed, setIsCollapsed] = useState<boolean>(\n    !(noumEditor2 && !isCustomPreview),\n  );\n  const [viewMode, setViewMode] = useState<string>('list');\n  const [childrenHeight, setChildrenHeight] = useState<number>();\n\n  useResizeObserver(childrenRef, () => {\n    setChildrenHeight(childrenRef?.current?.scrollHeight || 0);\n  });\n\n  const isNoumEditor2 = useMemo(\n    () => noumEditor2 && !isCustomPreview,\n    [isCustomPreview, noumEditor2],\n  );\n\n  useEffect(() => {\n    if (!childrenHeight) {\n      setChildrenHeight(childrenRef.current?.clientHeight);\n    }\n  }, [childrenHeight, childrenRef]);\n\n  return {\n    isCollapsed,\n    setIsCollapsed,\n    viewMode,\n    setViewMode,\n    childrenHeight,\n    isNoumEditor2,\n  };\n};\n","import {\n  forwardRef,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  type Ref,\n} from 'react';\n\nimport { SpaceTypeEnum } from '@/apollo/generated/types';\nimport { Pagination } from '@/components/Pagination';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useToggle } from '@/hooks';\nimport CreateEditEventModal from '@/screens/Chamber/components/elements/CalendarEvent/modals/CreateEditEventModal';\n\nimport { type EventFragment } from '@/apollo/graphql';\nimport { Button } from '@/components/Button';\nimport { type DropdownValueType } from '@/components/Dropdown';\nimport { Icon } from '@/components/Icon';\nimport {\n  GLOBAL_EVENT_CREATION,\n  useUserLiveEventDetails,\n} from '@/features/events/hooks';\nimport usePaginatedEvents from '@/features/events/hooks/usePaginatedEvents';\nimport { useModalManager } from '@/hooks/modal/useModalManager';\nimport useScrollToLocation from '@/hooks/useScrollToLocation';\nimport { Stack } from '@/layout';\nimport SkeletonLoaderCalendarElement from '@/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderCalendarElement';\nimport StartNowEventWarningModal from '@/screens/Chamber/components/modals/StartNowEventWarningModal';\nimport { NetworkStatus } from '@apollo/client';\nimport { t } from 'i18next';\nimport { useElementLayoutMode } from '@/features/noums/hooks/noums';\nimport { NoumLayoutViewMode } from '@/features/conversation/types';\nimport { CalendarPlaceHolder } from '../components/CalendarPlaceholder';\nimport { AllCalendarModal } from './AllCalendarModal';\nimport { CalendarElementGuestView } from './CalendarElementGuestView';\nimport { CalendarElementOwnerView } from './CalendarElementOwnerView';\nimport { CalendarElementViewModeHeader } from './CalendarElementViewModeHeader';\nimport { ViewModeChildrenWrapper, ViewModeWrapper } from './styles';\nimport { DropdownKey, type CalendarElementProps } from './types';\nimport { useCalendar } from './useCalendar';\nimport OnDemandEventModal from '../modals/OnDemandEventModal';\n\nconst pageSize = 3;\n\ntype ModalType = 'edit-event';\n\ntype ModalContext = {\n  event?: EventFragment;\n  callback?: () => void;\n};\n\nexport const CalendarElementViewMode = forwardRef(\n  (props: CalendarElementProps, ref: Ref<HTMLDivElement>) => {\n    const { masterId: masterNoumId } = useAuth();\n\n    const childrenRef = useRef<HTMLDivElement>(null);\n    const [isStartNowModalOpen, toggleStartNowModalOpen] = useToggle();\n    const [isStartNowWarningModalOpen, toggleStartNowWarningModalOpen] =\n      useToggle();\n    const [isAllEventsModalOpen, toggleAllEventsModalOpen] = useToggle();\n\n    const {\n      isCollapsed,\n      setIsCollapsed,\n      viewMode,\n      setViewMode,\n      isNoumEditor2,\n    } = useCalendar(childrenRef, props.isCustomPreview!);\n\n    const {\n      events,\n      eventsCount,\n      eventMeta,\n      currentPage,\n      activeFilter,\n      loading,\n      networkStatus,\n      onJoinEvent,\n      onChangeFilter,\n      onGoLive,\n      onAccept,\n      onDecline,\n      onAttending,\n      onNotAttending,\n      onAttend,\n      onCopyLink,\n      onChangePage,\n      refetchEvents,\n    } = usePaginatedEvents({\n      chamberId: props.spaceId,\n      limit: pageSize,\n      isOwner: props.isOwner,\n    });\n    const noumLayoutViewMode = useElementLayoutMode();\n    const isNoumLayoutSmallViewMode =\n      noumLayoutViewMode === NoumLayoutViewMode.NOUMLAYOUTSMALL;\n    const { openModal, closeModal, contextData, modalType } = useModalManager<\n      ModalType,\n      ModalContext\n    >();\n\n    const handleGlobalEventUpdates = useCallback(() => {\n      if (props.spaceId === masterNoumId) {\n        refetchEvents();\n      }\n    }, [masterNoumId, props.spaceId, refetchEvents]);\n\n    useEffect(() => {\n      document.addEventListener(\n        GLOBAL_EVENT_CREATION,\n        handleGlobalEventUpdates,\n      );\n      return () => {\n        document.removeEventListener(\n          GLOBAL_EVENT_CREATION,\n          handleGlobalEventUpdates,\n        );\n      };\n    }, [handleGlobalEventUpdates]);\n\n    useScrollToLocation(events?.length > 0);\n\n    const { isAnotherEventLive, eventScheduledIn60Mins } =\n      useUserLiveEventDetails(props.spaceId);\n\n    const onFilterChanged = useCallback(\n      (f: string) => {\n        onChangeFilter(f);\n        setIsCollapsed(false);\n      },\n      [onChangeFilter, setIsCollapsed],\n    );\n\n    const showPagination = useMemo(\n      () => (isCollapsed ? !props.isOwner : true),\n      [isCollapsed, props.isOwner],\n    );\n\n    const handleJoinEvent = useCallback(\n      async (event: EventFragment) => {\n        onJoinEvent(event._id ?? '', event.socialHall?._id ?? '');\n      },\n      [onJoinEvent],\n    );\n\n    const onGoLiveEvent = useCallback(\n      async (event: EventFragment) => {\n        await onGoLive(event._id!);\n        onJoinEvent(event._id ?? '', event.socialHall?._id ?? '');\n      },\n      [onGoLive, onJoinEvent],\n    );\n\n    const handleDropdownClick = useCallback(\n      (e: DropdownValueType<DropdownKey>) => {\n        if (e.value === DropdownKey.START_NOW) {\n          if (eventScheduledIn60Mins) {\n            toggleStartNowWarningModalOpen();\n          } else {\n            toggleStartNowModalOpen();\n          }\n        } else if (e.value === DropdownKey.SCHEDULE) {\n          openModal('edit-event', {\n            callback: refetchEvents,\n          });\n        }\n      },\n      [\n        eventScheduledIn60Mins,\n        toggleStartNowWarningModalOpen,\n        toggleStartNowModalOpen,\n        openModal,\n        refetchEvents,\n      ],\n    );\n\n    if (!eventsCount && props.isEditing && isNoumEditor2) {\n      return loading ? (\n        <SkeletonLoaderCalendarElement />\n      ) : (\n        <CalendarPlaceHolder\n          isNoumLayoutSmallViewMode={isNoumLayoutSmallViewMode}\n        />\n      );\n    }\n\n    if (!eventsCount && !props.isOwner) return null;\n\n    const onStartNowEventWarningModalContinueClick = () => {\n      toggleStartNowModalOpen();\n      toggleStartNowWarningModalOpen();\n    };\n\n    if (loading && networkStatus !== NetworkStatus.setVariables) {\n      return <SkeletonLoaderCalendarElement />;\n    }\n\n    return (\n      <>\n        <ViewModeWrapper\n          id=\"event\"\n          ref={ref}\n          style={{ overflow: 'visible' }}\n          data-testid=\"calendar-viewmode-wrapper\"\n          isNoumEditor2={isNoumEditor2}\n        >\n          <CalendarElementViewModeHeader\n            showAddEventBtn={!!eventMeta?.allEventsCount || loading}\n            isAnotherEventLive={isAnotherEventLive}\n            isStartNowModalOpen={isStartNowWarningModalOpen}\n            toggleStartNowModal={toggleStartNowWarningModalOpen}\n            currentTitle={props.currentTitle}\n            isCollapsed={isCollapsed}\n            isOwner={props.isOwner}\n            onToggleCollapse={setIsCollapsed}\n            handleDropdownClick={handleDropdownClick}\n            selectedCustomPreviewTab={props.selectedCustomPreviewTab}\n            onAddEvent={() => {\n              openModal('edit-event', {\n                callback: refetchEvents,\n              });\n            }}\n            isNoumEditor={isNoumEditor2}\n          />\n          <ViewModeChildrenWrapper ref={childrenRef}>\n            {props.isOwner ? (\n              <CalendarElementOwnerView\n                loading={loading}\n                masterNoumId={masterNoumId}\n                events={events}\n                eventMeta={eventMeta}\n                eventsCount={eventsCount}\n                isCollapsed={isCollapsed}\n                activeFilter={activeFilter}\n                activeViewMode={viewMode}\n                onChangeFilter={(f) => {\n                  onChangeFilter(f);\n                }}\n                onFilterChanged={(f) => {\n                  onFilterChanged(f);\n                }}\n                onChangeViewMode={(v: string) => setViewMode(v)}\n                onAddEvent={() => {\n                  openModal('edit-event', {\n                    callback: refetchEvents,\n                  });\n                }}\n                onEditEvent={(ev) => {\n                  openModal('edit-event', {\n                    event: ev,\n                    callback: refetchEvents,\n                  });\n                }}\n                onRefetchEvents={refetchEvents}\n                onGoLive={onGoLiveEvent}\n                onJoin={handleJoinEvent}\n                onAccept={onAccept}\n                onDecline={onDecline}\n                onAttending={onAttending}\n                onNotAttending={onNotAttending}\n                onAttend={onAttend}\n                onCopyLink={onCopyLink}\n                isNoumEditor2={isNoumEditor2}\n                isNoumLayoutSmallViewMode={isNoumLayoutSmallViewMode}\n              />\n            ) : (\n              <CalendarElementGuestView\n                masterNoumId={masterNoumId}\n                events={events}\n                eventMeta={eventMeta}\n                isCollapsed={isCollapsed}\n                onEditEvent={(ev) => {\n                  openModal('edit-event', {\n                    event: ev,\n                    callback: refetchEvents,\n                  });\n                }}\n                onRefetchEvents={refetchEvents}\n                onGoLive={onGoLiveEvent}\n                onJoin={handleJoinEvent}\n                onAccept={onAccept}\n                onDecline={onDecline}\n                onAttending={onAttending}\n                onNotAttending={onNotAttending}\n                onAttend={onAttend}\n                isNoumEditor2={isNoumEditor2}\n                isNoumLayoutSmallViewMode={isNoumLayoutSmallViewMode}\n              />\n            )}\n          </ViewModeChildrenWrapper>\n          {isNoumEditor2 && eventsCount > pageSize && !loading ? (\n            <Stack fullWidth justify=\"center\" padding=\"0 16px 16px 16px\">\n              <Button\n                textOnly\n                size=\"small\"\n                onClick={toggleAllEventsModalOpen}\n                secondary\n                rightIcon={<Icon size={12} name=\"chevron_right_m\" />}\n              >\n                {t('noumena.editor.all_events')}\n              </Button>\n            </Stack>\n          ) : (\n            showPagination &&\n            !loading && (\n              <Pagination\n                totalCount={eventsCount}\n                pageSize={pageSize}\n                currentPage={currentPage}\n                onPageChange={onChangePage}\n              />\n            )\n          )}\n        </ViewModeWrapper>\n        {modalType === 'edit-event' && (\n          <CreateEditEventModal\n            isOpen\n            onClose={closeModal}\n            event={contextData?.event}\n            eventSuccessCallback={contextData?.callback}\n            chamberId={props.spaceId}\n            isProjectNoum={props.spaceType === SpaceTypeEnum.Project}\n          />\n        )}\n        {isStartNowModalOpen && (\n          <OnDemandEventModal\n            isProjectNoum={false}\n            chamberId={props.spaceId}\n            onClose={toggleStartNowModalOpen}\n            isOpen={isStartNowModalOpen}\n          />\n        )}\n        {isStartNowWarningModalOpen && (\n          <StartNowEventWarningModal\n            onContinueClick={onStartNowEventWarningModalContinueClick}\n            spaceId={props.spaceId}\n            event={eventScheduledIn60Mins}\n            onClose={toggleStartNowWarningModalOpen}\n            isOpen={isStartNowWarningModalOpen}\n          />\n        )}\n        <AllCalendarModal\n          isOpen={isAllEventsModalOpen}\n          onClose={toggleAllEventsModalOpen}\n          chamberId={masterNoumId}\n          spaceId={props.spaceId}\n          isOwner={props.isOwner!}\n          isNoumLayoutSmallViewMode={isNoumLayoutSmallViewMode}\n          spaceType={props.spaceType!}\n          isNoumEditor2={isNoumEditor2}\n        />\n      </>\n    );\n  },\n);\n","import { forwardRef, type Ref } from 'react';\n\nimport { useLaunchDarkly } from '@/hooks';\nimport { type CalendarElementProps } from './types';\nimport { CalendarElementEditMode } from './CalendarElementEditMode';\nimport { CalendarElementViewMode } from './CalendarElementViewMode';\n\nexport const CalendarElement = forwardRef(\n  (props: CalendarElementProps, ref: Ref<HTMLDivElement>) => {\n    const {\n      flags: { noumEditor2 },\n    } = useLaunchDarkly();\n\n    if (props.isEditing && (!noumEditor2 || props.isCustomPreview)) {\n      return <CalendarElementEditMode {...props} ref={ref} />;\n    }\n\n    return <CalendarElementViewMode {...props} ref={ref} />;\n  },\n);\n","import { useMemo } from 'react';\nimport { SizedSkeleton } from '@/screens/Chamber/components/elements/SkeletonLoader/StyledSkeletons';\nimport { StyledFlexColumn } from '@/screens/Chamber/components/elements/SkeletonLoader/styled';\nimport { Card } from '@/components/Card';\nimport { useWindowDimensions } from '@/hooks';\nimport { breakpoints } from '@/constants/devices';\nimport SkeletonLoaderParagraph from '@/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderParagraph';\nimport SkeletonLoaderElementHeader from '@/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderElementHeader';\n\nconst SkeletonLoaderBusinessBriefElement = () => {\n  const { width } = useWindowDimensions();\n  const isMobile = useMemo(() => width <= breakpoints.MOBILE_MAX, [width]);\n  const maxWidth = useMemo(() => (isMobile ? '87%' : undefined), [isMobile]);\n\n  return (\n    <Card>\n      <StyledFlexColumn gap={16} justify=\"baseline\" align=\"flex-start\">\n        <SkeletonLoaderElementHeader />\n        <SizedSkeleton w={313} h={40} r={8} maxWidth={maxWidth} />\n        <SkeletonLoaderParagraph />\n      </StyledFlexColumn>\n    </Card>\n  );\n};\n\nexport default SkeletonLoaderBusinessBriefElement;\n","import styled from 'styled-components';\n\nexport const ContentContainer = styled.div<{ isNoumEditor2?: boolean }>`\n  display: flex;\n  justify-content: center;\n  ${({ isNoumEditor2 }) => isNoumEditor2 && 'padding: 16px'}\n`;\n","import { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { clone } from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport {\n  RichTextEditor,\n  type ReactQuillChangeResult,\n} from '@/features/richTextEditor';\n\nimport { BodyContentEnum, ElementStatusEnum } from '@/apollo/generated/types';\nimport { useEditChamberState } from '@/screens/Chamber/EditChamber/provider';\nimport { DisablePublishOrDraftContext } from '@/providers';\nimport SkeletonLoaderBusinessBriefElement from '@/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderBusinessBriefElement';\nimport { useSkeletonIsLoadingContext } from '@/components/SkeletonLoader/SkeletonLoaderProvider';\nimport { TSpan } from '@/components/Typography';\nimport { Stack } from '@/layout';\nimport { useUpdateElementHelper } from '@/features/noums/hooks/spaceQuery';\nimport { type BusinessBriefProps } from './types';\nimport { ContentContainer } from './styles';\nimport { ElementWrapper } from '../../ElementWrapper/ElementWrapper';\n\nconst BusinessBrief = ({\n  wrapperProps,\n  isBorder,\n  elementId,\n  elementPosition,\n  spaceId,\n  isEditing,\n  textEditor,\n  basicToolbar = false,\n}: BusinessBriefProps) => {\n  const { t } = useTranslation();\n  const { lastRerenderEvent } = useEditChamberState();\n\n  const firstRender = useRef(true);\n  const [initialValue, setInitialValue] = useState<string | undefined>(\n    textEditor?.initialValue || '',\n  );\n  const [textAreaValue, setTextAreaValue] = useState<string>(\n    textEditor?.initialValue || '',\n  );\n\n  const [internalRenderEvent, setInternalRenderEvent] =\n    useState(lastRerenderEvent);\n\n  useEffect(() => {\n    if (internalRenderEvent !== lastRerenderEvent) {\n      setInitialValue(textEditor?.initialValue);\n      setInternalRenderEvent(lastRerenderEvent);\n    }\n  }, [textEditor?.initialValue, lastRerenderEvent, internalRenderEvent]);\n\n  const updateTextAreaValue = useCallback((value: string) => {\n    setTextAreaValue(value === `<p><br></p>` ? '' : value);\n  }, []);\n\n  const { setDisableUpdate } = useContext(DisablePublishOrDraftContext);\n  const { updateElementHelper, loading: updateElementLoader } =\n    useUpdateElementHelper();\n\n  useEffect(() => {\n    setDisableUpdate(updateElementLoader);\n  }, [setDisableUpdate, updateElementLoader]);\n\n  const additionalOptions = {\n    ...(!isEditing && { ...textEditor }),\n  };\n\n  const onContentChange = useCallback(\n    (next: ReactQuillChangeResult) => {\n      if (next.isChanged) {\n        const data = clone(next.value);\n        updateTextAreaValue(data ?? '');\n        setInitialValue(data);\n        textEditor?.onContentChange?.(next);\n      }\n    },\n    [textEditor, updateTextAreaValue],\n  );\n\n  useEffect(() => {\n    if (elementId && spaceId && !firstRender.current) {\n      updateElementHelper(spaceId, {\n        elementId,\n        bodyContent: textAreaValue,\n        position: elementPosition,\n        status: ElementStatusEnum.Unsaved,\n        bodyContentType: BodyContentEnum.Json,\n      });\n    }\n    if (firstRender.current) {\n      firstRender.current = false;\n    }\n  }, [elementId, elementPosition, spaceId, textAreaValue, updateElementHelper]);\n\n  const { isLoading } = useSkeletonIsLoadingContext();\n  if (!isEditing && isLoading) return <SkeletonLoaderBusinessBriefElement />;\n\n  return (\n    <ElementWrapper\n      isBorder={isBorder}\n      {...wrapperProps}\n      currentTitle={t('noumena.homeChambers.addBusiness.currentTitle')}\n    >\n      <>\n        {wrapperProps.isNoumEditor2 ? (\n          <>\n            {!wrapperProps.isActiveTool && isEditing ? (\n              <Stack padding=\"16px\">\n                <TSpan font=\"body-m\" colorToken=\"--text-input-neutral-default\">\n                  {t('noumena.homeChambers.addBusiness.description')}\n                </TSpan>\n              </Stack>\n            ) : (\n              <ContentContainer isNoumEditor2={wrapperProps.isNoumEditor2}>\n                <RichTextEditor\n                  placeholder={t(\n                    'noumena.homeChambers.addBusiness.tellAboutExperience',\n                  )}\n                  initialValue={initialValue}\n                  onContentChange={onContentChange}\n                  width=\"100%\"\n                  basicToolbar={basicToolbar}\n                  editEnabled={isEditing}\n                  {...additionalOptions}\n                />\n              </ContentContainer>\n            )}\n          </>\n        ) : (\n          <ContentContainer>\n            <RichTextEditor\n              placeholder={t(\n                'noumena.homeChambers.addBusiness.tellAboutExperience',\n              )}\n              initialValue={initialValue}\n              onContentChange={onContentChange}\n              width=\"100%\"\n              basicToolbar={basicToolbar}\n              editEnabled={isEditing}\n              {...additionalOptions}\n            />\n          </ContentContainer>\n        )}\n      </>\n    </ElementWrapper>\n  );\n};\n\nexport default BusinessBrief;\n","import { useMemo } from 'react';\nimport { SizedSkeleton } from '@/screens/Chamber/components/elements/SkeletonLoader/StyledSkeletons';\nimport { StyledFlexColumn } from '@/screens/Chamber/components/elements/SkeletonLoader/styled';\nimport { Card } from '@/components/Card';\nimport { useWindowDimensions } from '@/hooks';\nimport { breakpoints } from '@/constants/devices';\nimport SkeletonLoaderParagraph from '@/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderParagraph';\nimport SkeletonLoaderElementHeader from '@/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderElementHeader';\nimport { Spacer } from '@/layout';\n\nconst SkeletonLoaderTextElement = () => {\n  const { width } = useWindowDimensions();\n  const isMobile = useMemo(() => width <= breakpoints.MOBILE_MAX, [width]);\n  const maxWidth = useMemo(() => (isMobile ? '87%' : undefined), [isMobile]);\n\n  return (\n    <Card>\n      <StyledFlexColumn gap={16} justify=\"baseline\" align=\"flex-start\">\n        <SkeletonLoaderElementHeader />\n        <Spacer height={5} />\n        <SizedSkeleton w={313} h={33} r={8} maxWidth={maxWidth} />\n        <SkeletonLoaderParagraph />\n        <SkeletonLoaderParagraph />\n      </StyledFlexColumn>\n    </Card>\n  );\n};\n\nexport default SkeletonLoaderTextElement;\n","import { memo, useEffect, useState } from 'react';\nimport { clone } from 'lodash';\nimport {\n  ElementWrapper,\n  type ElementWrapperProps,\n} from '@/screens/Chamber/components/ElementWrapper';\nimport {\n  RichTextEditor,\n  type ReactQuillChangeResult,\n  type RichTextEditorProps,\n} from '@/features/richTextEditor';\nimport { useEditChamberState } from '@/screens/Chamber/EditChamber/provider';\nimport SkeletonLoaderTextElement from '@/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderTextElement';\nimport { useSkeletonIsLoadingContext } from '@/components/SkeletonLoader/SkeletonLoaderProvider';\n\nexport type TextElementProps = ElementWrapperProps & {\n  textEditor?: RichTextEditorProps;\n};\n\nconst TextElement = memo((props: TextElementProps) => {\n  const { isLoading } = useSkeletonIsLoadingContext();\n  const [initialValue, setInitialValue] = useState(\n    props.textEditor?.initialValue,\n  );\n\n  const { lastRerenderEvent } = useEditChamberState();\n\n  const [internalRenderEvent, setInternalRenderEvent] =\n    useState(lastRerenderEvent);\n\n  useEffect(() => {\n    if (internalRenderEvent !== lastRerenderEvent) {\n      setInitialValue(props.textEditor?.initialValue);\n      setInternalRenderEvent(lastRerenderEvent);\n    }\n  }, [props.textEditor?.initialValue, lastRerenderEvent, internalRenderEvent]);\n\n  const onContentChange = (next: ReactQuillChangeResult) => {\n    const data = clone(next);\n    props.textEditor?.onContentChange?.(data);\n  };\n\n  if (isLoading) return <SkeletonLoaderTextElement />;\n\n  return (\n    <ElementWrapper {...props}>\n      <RichTextEditor\n        {...(!props.isCustomPreview ? { ...props.textEditor } : undefined)}\n        initialValue={initialValue}\n        onContentChange={onContentChange}\n      />\n    </ElementWrapper>\n  );\n});\n\nexport default TextElement;\n","import { SizedSkeleton } from '@/screens/Chamber/components/elements/SkeletonLoader/StyledSkeletons';\nimport {\n  StyledFlexColumn,\n  StyledFlexRow,\n} from '@/screens/Chamber/components/elements/SkeletonLoader/styled';\nimport { Card } from '@/components/Card';\nimport SkeletonLoaderHeaderSubElement from '@/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderHeaderSubElement';\n\nconst SkeletonLoaderMessageElement = () => (\n  <Card>\n    <StyledFlexColumn gap={21} justify=\"baseline\" align=\"flex-start\">\n      <SkeletonLoaderHeaderSubElement />\n      <StyledFlexRow gap={24} fullWidth>\n        <SizedSkeleton w={116} h={16} r={8} />\n        <SizedSkeleton w={24} h={24} r={8} />\n        <SizedSkeleton w={24} h={24} r={8} />\n        <SizedSkeleton w={24} h={24} r={8} />\n        <SizedSkeleton w={24} h={24} r={8} />\n        <SizedSkeleton w={24} h={24} r={8} />\n        <SizedSkeleton w={24} h={24} r={8} />\n        <SizedSkeleton w={24} h={24} r={8} />\n        <SizedSkeleton w={24} h={24} r={8} />\n        <SizedSkeleton w={24} h={24} r={8} />\n        <SizedSkeleton w={24} h={24} r={8} />\n        <SizedSkeleton w={24} h={24} r={8} />\n        <SizedSkeleton w={24} h={24} r={8} />\n        <SizedSkeleton w={24} h={24} r={8} />\n      </StyledFlexRow>\n    </StyledFlexColumn>\n  </Card>\n);\n\nexport default SkeletonLoaderMessageElement;\n","import { t } from 'i18next';\nimport { useCallback, useContext, useEffect, useState } from 'react';\nimport { Button } from '@/components/Button';\nimport {\n  Dropdown,\n  type DropdownTargetProps,\n  type DropdownValueType,\n} from '@/components/Dropdown';\nimport { Icon } from '@/components/Icon';\nimport { Radiobox } from '@/components/Radiobox';\nimport { TSpan } from '@/components/Typography';\nimport {\n  DropdownItemLayout,\n  DropDownLabel,\n} from '@/components/Dropdown/styles';\nimport { ConversationType } from '@/features/conversation/types';\nimport { ActiveConversationContext } from '@/features/conversation/contexts/ActiveConversationContext';\nimport { useLaunchDarkly } from '@/hooks';\nimport { type Placement } from '@popperjs/core';\nimport { MessageElementContext } from '../contexts/MessageElementProvider';\n\nexport const filterOptions: DropdownValueType<ConversationType>[] = [\n  {\n    label: t(`noumena.message.my_conversations`),\n    key: 'myconversation',\n    type: 'value',\n    value: ConversationType.PROJECT_OWNER,\n  },\n  {\n    label: t(`noumena.message.other_users_conversation`),\n    key: 'othersconversation',\n    type: 'value',\n    value: ConversationType.PROJECT_OWNER_OTHERS,\n  },\n];\n\nexport type FilterDropDownProps = {\n  placement?: Placement;\n};\n\nexport default function FilterDropDown({ placement }: FilterDropDownProps) {\n  const {\n    flags: { noumEditor2 },\n  } = useLaunchDarkly();\n  const { isNewConversation, isOthersConversations, setIsOthersConversations } =\n    useContext(MessageElementContext);\n  const { setActiveConversationSid } = useContext(ActiveConversationContext);\n  const [selectedValue, selectValue] = useState<ConversationType>(\n    ConversationType.PROJECT_OWNER,\n  );\n\n  useEffect(() => {\n    const value = isOthersConversations\n      ? ConversationType.PROJECT_OWNER_OTHERS\n      : ConversationType.PROJECT_OWNER;\n    selectValue(value);\n  }, [isOthersConversations]);\n\n  const onSelect = useCallback(\n    (value: ConversationType) => {\n      if (value === ConversationType.PROJECT_OWNER_OTHERS) {\n        setIsOthersConversations(true);\n      } else {\n        setIsOthersConversations(false);\n      }\n      setActiveConversationSid('');\n\n      selectValue(value);\n    },\n    [setActiveConversationSid, setIsOthersConversations],\n  );\n\n  return (\n    <Dropdown\n      hideIcons\n      placement={placement || 'bottom-end'}\n      options={filterOptions}\n      usePopStyle={true}\n      isAnimation={false}\n      containerStyle={{\n        minHeight: '97px',\n        padding: 0,\n        maxWidth: noumEditor2 ? '250px' : 'unset',\n      }}\n      onSelectOption={({ value }) => onSelect(value)}\n      optionsRenderer={(_, handleSelectOption) =>\n        filterOptions.map((option) => (\n          <DropdownItemLayout\n            isBottomBorder\n            onClick={() => handleSelectOption(option)}\n            key={option.key}\n          >\n            <DropDownLabel>\n              <TSpan\n                font=\"body-m-bold\"\n                colorToken=\"--text-tablecell-header-neutral-highlighted\"\n              >\n                {option.label}\n              </TSpan>\n            </DropDownLabel>\n            <Radiobox\n              icon={\n                <Icon\n                  name=\"radio_btn_m\"\n                  size={12}\n                  color={\n                    option.value === selectedValue\n                      ? '--icon-radiobutton-brand-primary-default'\n                      : '--icon-radiobutton-inactive-default'\n                  }\n                />\n              }\n              isChecked={option.value === selectedValue}\n            />\n          </DropdownItemLayout>\n        ))\n      }\n    >\n      {({ targetRef, toggle }: DropdownTargetProps<HTMLButtonElement>) => (\n        <Button\n          tertiary\n          size=\"small\"\n          icon={\n            <Icon\n              name=\"filters_m\"\n              size={16}\n              color=\"--icon-button-neutral-default\"\n            />\n          }\n          onClick={toggle}\n          ref={targetRef}\n          disabled={isNewConversation}\n        />\n      )}\n    </Dropdown>\n  );\n}\n","import styled, { css } from 'styled-components';\nimport { devices } from '@/constants/devices';\n\nexport const SpinnerContainer = styled.div`\n  padding: 16px;\n  position: relative;\n`;\n\nexport const ChatListWrapper = styled.div<{\n  justify?: boolean;\n  isCollapse?: boolean;\n}>`\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  display: flex;\n  box-sizing: border-box;\n  flex-direction: ${({ isCollapse }) => (isCollapse ? 'row' : 'column')};\n  align-items: center;\n  ${({ justify }) => (justify ? 'justify-content: center;' : undefined)}\n  @media ${devices.TABLET} {\n    padding: ${({ isCollapse }) => (isCollapse ? '15px 42px 16px 16px;' : '0')};\n  }\n  ${({ isCollapse }) =>\n    isCollapse &&\n    css`\n      padding: 16px;\n\n      @media ${devices.MOBILE_L} {\n        padding-right: 35px;\n      }\n\n      @media ${devices.LAPTOP} {\n        padding: 16px 30px 24px 24px;\n      }\n    `};\n`;\n\nexport const ChatListContent = styled.div<{ isFlex?: boolean }>`\n  display: flex;\n  flex-direction: row;\n  padding-left: 22px;\n  ${(props) => (props.isFlex ? 'flex: 1;' : undefined)}\n`;\n\nexport const SeeAllMessages = styled.div`\n  height: 56px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  cursor: pointer;\n\n  div {\n    margin-top: 2px;\n  }\n`;\n","import { Icon } from '@/components/Icon';\nimport { TSpan } from '@/components/Typography';\nimport { type FC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { SeeAllMessages } from './styles';\n\ntype SeeAllButtonProps = {\n  onClick: () => void;\n};\n\nexport const SeeAllButton: FC<SeeAllButtonProps> = ({ onClick }) => {\n  const { t } = useTranslation();\n  return (\n    <SeeAllMessages onClick={onClick}>\n      <TSpan font=\"button-m\" colorToken=\"--text-button-brand-primary-default\">\n        {t('noumena.chat.see_all_messages')}\n      </TSpan>\n      <Icon\n        name=\"chevron_small_right_m\"\n        size={24}\n        color=\"--icon-button-brand-secondary-default\"\n      />\n    </SeeAllMessages>\n  );\n};\n","import { useContext, useEffect, useMemo } from 'react';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useNoumContext } from '@/screens/Chamber/ViewChamber/ChamberProvider';\nimport { ConversationType } from '@/features/conversation/types';\nimport { MessageElementContext } from '../contexts/MessageElementProvider';\n\nexport function useConversationType(): ConversationType {\n  const { user } = useAuth();\n  const { isMasterNoum, space } = useNoumContext();\n  const { setConversationType, isOthersConversations } = useContext(\n    MessageElementContext,\n  );\n\n  const isOwner = space?.uid?._id === user?._id;\n\n  const conversationType = useMemo(() => {\n    if (isMasterNoum) {\n      return isOwner ? ConversationType.HOME_OWNER : ConversationType.HOME_USER;\n    }\n    if (isOwner) {\n      return isOthersConversations\n        ? ConversationType.PROJECT_OWNER_OTHERS\n        : ConversationType.PROJECT_OWNER;\n    }\n    return ConversationType.PROJECT_USER;\n  }, [isMasterNoum, isOwner, isOthersConversations]);\n\n  useEffect(() => {\n    setConversationType(conversationType);\n  }, [conversationType, setConversationType]);\n\n  return conversationType;\n}\n","import { CREAT_CONVERSATION_WITH_HOME_OWNER } from '@/constants/conversation';\nimport { ActiveConversationContext } from '@/features/conversation/contexts/ActiveConversationContext';\nimport ConversationHooks from '@/features/conversation/hooks/globalMessages';\nimport { ConversationType, ViewMode } from '@/features/conversation/types';\nimport { DeviceTypeEnum, useDeviceType } from '@/hooks';\nimport { cleanList } from '@/utils/list';\nimport { NetworkStatus } from '@apollo/client';\nimport { useCallback, useContext, useLayoutEffect, useMemo } from 'react';\nimport { type BottomStatus } from '@/components/Infinite/types';\nimport { useNoumElement } from '@/features/noums/contexts/NoumElementContext';\nimport { MessageElementContext } from '../contexts/MessageElementProvider';\nimport { useConversationType } from '../hooks/useConversationType';\n\nconst useChatList = () => {\n  const deviceType = useDeviceType();\n  const isMobile = Boolean(deviceType === DeviceTypeEnum.MOBILE);\n  const { isEditing, isNoumEditor2 } = useNoumElement();\n\n  const conversationType = useConversationType();\n\n  const {\n    privateConversation,\n    conversations,\n    networkStatus,\n    loading,\n    count,\n    totalCount,\n    unreadCount,\n    onFetchMore,\n  } = ConversationHooks.useConversationsList(conversationType);\n  const hasPrivateConversation = !!privateConversation;\n\n  const paginating = networkStatus === NetworkStatus.fetchMore;\n  const hasMore = count < totalCount;\n  const infiniteStatus: BottomStatus = paginating\n    ? 'loading'\n    : hasMore\n    ? 'hasNextPage'\n    : 'end';\n\n  const isHomeUserConversation =\n    conversationType === ConversationType.HOME_USER;\n\n  const allConversations = useMemo(\n    () => cleanList([privateConversation, ...conversations]),\n    [conversations, privateConversation],\n  );\n\n  const cids = useMemo(\n    () =>\n      cleanList(\n        allConversations.map((c) =>\n          c.__typename === 'ConversationOutput' ? c.cid : null,\n        ),\n      ),\n    [allConversations],\n  );\n\n  const showExampleConversation =\n    isEditing &&\n    isNoumEditor2 &&\n    cids.length === 0 &&\n    networkStatus === NetworkStatus.ready;\n\n  const {\n    isNewConversation,\n    setIsNewConversation,\n    isCollapse,\n    setIsCollapse,\n    viewMode,\n    setViewMode,\n    isNoumLayoutSmallViewMode,\n    noumLayoutViewMode,\n  } = useContext(MessageElementContext);\n\n  const { activeConversationSid, setActiveConversationSid } = useContext(\n    ActiveConversationContext,\n  );\n\n  const countConversationToShow = useMemo(() => {\n    if (isCollapse) {\n      if (isMobile) {\n        return 5;\n      }\n      return 11;\n    }\n    if (isMobile && viewMode === ViewMode.DEFAULT) {\n      return 5;\n    }\n    if (isNoumLayoutSmallViewMode) {\n      return 5;\n    }\n    return cids.length;\n  }, [isCollapse, isMobile, viewMode, isNoumLayoutSmallViewMode, cids.length]);\n\n  const showSlicedConversations =\n    (isMobile && viewMode === ViewMode.DEFAULT) || isNoumLayoutSmallViewMode;\n\n  const cidsToRender = useMemo(\n    () => cids.slice(0, countConversationToShow),\n    [cids, countConversationToShow],\n  );\n\n  const leftChannels = totalCount - cidsToRender.length;\n\n  const handleItemClick = useCallback(\n    (sid: string) => {\n      setActiveConversationSid(sid);\n      setIsCollapse(false);\n      setIsNewConversation(false);\n    },\n    [setActiveConversationSid, setIsCollapse, setIsNewConversation],\n  );\n\n  useLayoutEffect(() => {\n    if (loading || isNoumLayoutSmallViewMode) {\n      return;\n    }\n\n    if (!isNewConversation && !activeConversationSid) {\n      if (\n        conversationType === ConversationType.HOME_USER &&\n        !hasPrivateConversation\n      ) {\n        setActiveConversationSid(CREAT_CONVERSATION_WITH_HOME_OWNER);\n        setIsCollapse(false);\n      } else if (cids.length > 0) {\n        const firstConversation = cids[0];\n        setActiveConversationSid(firstConversation || '');\n      }\n    }\n  }, [\n    activeConversationSid,\n    conversationType,\n    cids,\n    hasPrivateConversation,\n    isNewConversation,\n    loading,\n    setActiveConversationSid,\n    setIsCollapse,\n    isNoumLayoutSmallViewMode,\n  ]);\n\n  return {\n    unreadCount,\n    onFetchMore,\n    handleItemClick,\n    leftChannels,\n    showSlicedConversations,\n    showExampleConversation,\n    noumLayoutViewMode,\n    infiniteStatus,\n    loading,\n    cids,\n    isNewConversation,\n    isCollapse,\n    isHomeUserConversation,\n    activeConversationSid,\n    allConversations,\n    cidsToRender,\n    hasPrivateConversation,\n    setViewMode,\n    viewMode,\n    isNoumLayoutSmallViewMode,\n  };\n};\n\nexport default useChatList;\n","import {\n  Modal,\n  ModalBody,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { Infinite } from '@/components/Infinite';\nimport { breakpoints } from '@/constants/devices';\nimport ChatItem from '@/features/conversation/components/ChatItem';\nimport { useWindowDimensions } from '@/hooks';\nimport { type FC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useChatList from '../ChatList/useChatList';\n\ntype ChatListModalProps = {\n  isOpen: boolean;\n  onClose: () => void;\n};\n\nexport const ChatListModal: FC<ChatListModalProps> = ({ isOpen, onClose }) => {\n  const windowDimensions = useWindowDimensions();\n  const isMobile = windowDimensions.width < breakpoints.TABLET;\n  const { t } = useTranslation();\n\n  const {\n    handleItemClick,\n    cids,\n    onFetchMore,\n    activeConversationSid,\n    infiniteStatus,\n  } = useChatList();\n\n  return (\n    <Modal\n      open={isOpen}\n      size={ModalSize.L}\n      onClose={onClose}\n      testId=\"chat-list-modal\"\n      disableBackdropClick\n      style={{ padding: isMobile ? '16px 0 0' : 8 }}\n      enableCloseButton\n      isFullScreen={isMobile}\n      noPaddingNoBorder={isMobile}\n      isScrollableContent\n    >\n      <ModalHeader topPadding={14} bottomPadding={14}>\n        {t('noumena.chat.conversations_modal.title')}\n      </ModalHeader>\n      <ModalBody style={{ padding: 0 }} noFooter>\n        <Infinite\n          onFetchMore={onFetchMore}\n          status={infiniteStatus}\n          width=\"100%\"\n          scrollbarWidth={4}\n          isSpinnerRelative\n        >\n          {cids.map((cid, index) => (\n            <ChatItem\n              index={index}\n              key={cid}\n              sid={cid}\n              isActive={cid === activeConversationSid && !isMobile}\n              isMarginRight={index !== cids.length - 1}\n              onClick={handleItemClick}\n              size={isMobile ? 'L' : 'S'}\n            />\n          ))}\n        </Infinite>\n      </ModalBody>\n    </Modal>\n  );\n};\n","import { ViewMode } from '@/features/conversation/types';\nimport { useModalManager } from '@/hooks/modal/useModalManager';\nimport { Stack } from '@/layout';\nimport { useNoumContext } from '@/screens/Chamber/ViewChamber/ChamberProvider';\nimport { useContext, type FC } from 'react';\nimport FilterDropDown from '../ChatHeader/FilterDropDown';\nimport { SeeAllButton } from '../ChatList/SeeAllButton';\nimport useChatList from '../ChatList/useChatList';\nimport { ChatListModal } from '../ChatListModal/ChatListModal';\nimport { MessageElementContext } from '../contexts/MessageElementProvider';\n\ntype ModalType = 'chat-list-modal';\n\nexport const ChatFooter: FC = () => {\n  const { openModal, closeModal, modalType } = useModalManager<ModalType>();\n\n  const { isMasterNoum, isOwner } = useNoumContext();\n\n  const { isNoumLayoutSmallViewMode, isNoumLayoutCompactViewMode } = useContext(\n    MessageElementContext,\n  );\n\n  const showFilterButton =\n    !isMasterNoum && isOwner && isNoumLayoutCompactViewMode;\n\n  const { cids, cidsToRender, setViewMode } = useChatList();\n\n  const onSeeAllClick = () => {\n    if (isNoumLayoutSmallViewMode) {\n      openModal('chat-list-modal');\n      return;\n    }\n    setViewMode(ViewMode.FULLCHAT);\n  };\n\n  return (\n    <Stack fullWidth>\n      {showFilterButton && (\n        <Stack padding=\"12px 8px\">\n          <FilterDropDown placement=\"top-start\" />\n        </Stack>\n      )}\n\n      <Stack fullWidth justify=\"center\">\n        {cids.length > cidsToRender.length && (\n          <SeeAllButton onClick={onSeeAllClick} />\n        )}\n      </Stack>\n\n      {modalType === 'chat-list-modal' && (\n        <ChatListModal isOpen onClose={closeModal} />\n      )}\n    </Stack>\n  );\n};\n","import {\n  NoumRolePermissionLevel,\n  type PermissibleElementType,\n} from '@/apollo/generated/types';\nimport { useCallback } from 'react';\nimport { useLaunchDarkly } from '@/hooks';\nimport { useNoumAuthorizationContext } from './NoumAuthorizationContext';\nimport {\n  type DefaultNoumRoleName,\n  type NoumPermissionName,\n  type ElementPermission,\n} from './types';\n\nexport interface NoumAuthorizationApi {\n  /**\n   * Checks whether the user has a Noum-level permission granted. Can be used to determine whether the user should see a particular screen or section of the Noum settings.\n   * @example\n   * ```tsx\n   * {hasNoumPermission('invite-users') && (\n   *   <InviteMembersModal />\n   * )}\n   * ```\n   */\n  hasNoumPermission(noumPermission: NoumPermissionName): boolean;\n\n  /**\n   * Checks whether the user has an Element-level permission granted. Can be used to determine whether the user should see a particular button or perform a particular action.\n   * @example\n   * ```tsx\n   * {hasElementPermission(PermissibleElementType.Calendar, 'create-event') && (\n   *   <Button primary>Create a new Event</Button>\n   * )}\n   * ```\n   */\n  hasElementPermission<ElementType extends PermissibleElementType>(\n    elementType: ElementType,\n    elementPermission: ElementPermission<ElementType>,\n  ): boolean;\n\n  /**\n   * Checks whether the user has a predefined default role. Default roles are the roles that are hard-coded in BE and cannot be modified via the Ops Portal, for example, “Co-Manager”, “Follower”, or “Guest”.\n   * @example\n   * ```tsx\n   * {hasDefaultRole('Guest') && (\n   *   <GuestWelcomeBanner />\n   * )}\n   * ```\n   */\n  hasDefaultRole(role: DefaultNoumRoleName): boolean;\n\n  /**\n   * Checks whether the user has a custom role. Custom roles are dynamic and can be added and deleted via the Ops Portal. Checking for these should be rare because they aren’t guaranteed to stay.\n   * @example\n   * ```tsx\n   * {hasCustomRole('Sub-contractor') && (\n   *   <SubContractorBanner />\n   * )}\n   * ```\n   */\n  hasCustomRole(role: string): boolean;\n}\n\nexport function useNoumAuthorization(): NoumAuthorizationApi {\n  const { role, permissions } = useNoumAuthorizationContext();\n  const { flags } = useLaunchDarkly();\n\n  const hasDefaultRole = useCallback(\n    (roleName: DefaultNoumRoleName) =>\n      !!role && role.isDefault && role.name === roleName,\n    [role],\n  );\n\n  const hasCustomRole = useCallback(\n    (roleName: string) => !!role && !role.isDefault && role.name === roleName,\n    [role],\n  );\n\n  const hasPermission = useCallback(\n    (\n      level: NoumRolePermissionLevel,\n      elementType: PermissibleElementType | null,\n      permissionName: string,\n    ) =>\n      !flags.elementPermission ||\n      !!permissions.find(\n        (permission) =>\n          permission.level === level &&\n          permission.elementType === elementType &&\n          permission.permissionIDs.includes(permissionName),\n      ),\n    [flags.elementPermission, permissions],\n  );\n\n  const hasElementPermission = useCallback(\n    <ElementType extends PermissibleElementType>(\n      elementType: ElementType,\n      elementPermission: ElementPermission<ElementType>,\n    ) =>\n      hasPermission(\n        NoumRolePermissionLevel.Element,\n        elementType,\n        elementPermission,\n      ),\n    [hasPermission],\n  );\n\n  const hasNoumPermission = useCallback(\n    (noumPermission: NoumPermissionName) =>\n      hasPermission(NoumRolePermissionLevel.Noum, null, noumPermission),\n    [hasPermission],\n  );\n\n  return {\n    hasDefaultRole,\n    hasCustomRole,\n    hasElementPermission,\n    hasNoumPermission,\n  };\n}\n","import styled from 'styled-components';\nimport { NoumLayoutViewMode } from '@/features/conversation/types';\n\nexport const Wrapper = styled.div<{ noumLayoutViewMode?: NoumLayoutViewMode }>`\n  ${({ noumLayoutViewMode }) =>\n    noumLayoutViewMode === NoumLayoutViewMode.NOUMLAYOUTCOMPACT\n      ? undefined\n      : 'width: 100%;'}\n  display: flex;\n  align-items: center;\n  gap: 12px;\n`;\n","import { PermissibleElementType } from '@/apollo/generated/types';\nimport { Button } from '@/components/Button';\nimport { Icon } from '@/components/Icon';\nimport { TSpan } from '@/components/Typography';\nimport { useAuth } from '@/features/auth/contexts';\nimport { ActiveConversationContext } from '@/features/conversation/contexts/ActiveConversationContext';\nimport ConversationHooks from '@/features/conversation/hooks/globalMessages';\nimport { ViewMode } from '@/features/conversation/types';\nimport { useNoumAuthorization } from '@/features/noums/contexts/NoumAuthorizationContext';\nimport { useBreakpoints, useLaunchDarkly } from '@/hooks';\nimport { Spacer } from '@/layout';\nimport { useNoumContext } from '@/screens/Chamber/ViewChamber/ChamberProvider';\nimport { UserUtil } from '@/utils/user';\nimport React, {\n  forwardRef,\n  useCallback,\n  useContext,\n  useLayoutEffect,\n  useMemo,\n  type Ref,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { MessageElementContext } from '../contexts/MessageElementProvider';\nimport FilterDropDown from './FilterDropDown';\nimport { Wrapper } from './styles';\nimport { type ChatheaderProps } from './types';\n\nexport const ChatHeader = forwardRef(\n  ({ currentTitle = '' }: ChatheaderProps, ref: Ref<HTMLDivElement>) => {\n    const {\n      flags: { noumEditor2 },\n    } = useLaunchDarkly();\n    const { user } = useAuth();\n    const { t } = useTranslation();\n    const { isMasterNoum, isOwner } = useNoumContext();\n    const { isMobile } = useBreakpoints();\n    const { hasElementPermission } = useNoumAuthorization();\n\n    const {\n      isCollapse,\n      setIsCollapse,\n      isNewConversation,\n      setIsNewConversation,\n      viewMode,\n      setViewMode,\n      conversationType,\n      noumLayoutViewMode,\n      isNoumLayoutCompactViewMode,\n    } = useContext(MessageElementContext);\n    const { activeConversationSid, setActiveConversationSid } = useContext(\n      ActiveConversationContext,\n    );\n    const { count } = ConversationHooks.useConversationsList(conversationType);\n\n    const hasCreateConversationPermission =\n      hasElementPermission(\n        PermissibleElementType.Messages,\n        'create-new-message-conversation',\n      ) || isMasterNoum;\n\n    const isCollapseDisabled =\n      !activeConversationSid &&\n      !isOwner &&\n      !isMasterNoum &&\n      !isNewConversation &&\n      count === 0;\n    const isShowFilter =\n      !isCollapse && !isMasterNoum && isOwner && !isNoumLayoutCompactViewMode;\n\n    const isShowAddButton = useMemo(\n      () => !UserUtil.isInactive(user) && (!isMasterNoum || isOwner),\n      [isMasterNoum, isOwner, user],\n    );\n\n    const collapseHandler = useCallback(\n      (e: React.MouseEvent<HTMLButtonElement>) => {\n        if (isCollapseDisabled) {\n          e.preventDefault();\n        } else {\n          setIsCollapse(!isCollapse);\n        }\n      },\n      [isCollapse, setIsCollapse, isCollapseDisabled],\n    );\n\n    const backHandler = useCallback(() => {\n      setViewMode(ViewMode.DEFAULT);\n    }, [setViewMode]);\n\n    const onAddNewConversationHandle = useCallback(\n      (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n        e.stopPropagation();\n\n        setIsNewConversation(true);\n        setActiveConversationSid('');\n      },\n      [setActiveConversationSid, setIsNewConversation],\n    );\n\n    useLayoutEffect(() => {\n      setIsCollapse(isCollapse || isCollapseDisabled);\n    }, [isCollapseDisabled, isCollapse, setIsCollapse]);\n\n    return (\n      <Wrapper ref={ref} noumLayoutViewMode={noumLayoutViewMode}>\n        {viewMode === ViewMode.FULLCHAT ? (\n          <Button\n            data-testid=\"back-button\"\n            neutral\n            size=\"small\"\n            icon={\n              <Icon\n                name=\"arrow_left_m\"\n                size={24}\n                color=\"--icon-button-neutral-default\"\n              />\n            }\n            onClick={backHandler}\n          />\n        ) : (\n          <>\n            {!noumEditor2 && (\n              <Button\n                data-testid=\"collapse-button\"\n                tertiary\n                icon={\n                  isCollapse ? (\n                    <Icon\n                      name=\"chevron_small_down_m\"\n                      size={24}\n                      color={\n                        isCollapseDisabled\n                          ? '--icon-button-neutral-disabled'\n                          : '--icon-button-neutral-default'\n                      }\n                    />\n                  ) : (\n                    <Icon\n                      name=\"chevron_small_up_m\"\n                      size={24}\n                      color={\n                        isCollapseDisabled\n                          ? '--icon-button-neutral-disabled'\n                          : '--icon-button-neutral-default'\n                      }\n                    />\n                  )\n                }\n                disabled={!!isCollapseDisabled}\n                size=\"small\"\n                onClick={collapseHandler}\n              />\n            )}\n          </>\n        )}\n        {!isNoumLayoutCompactViewMode && (\n          <TSpan\n            font=\"heading-xs-bold\"\n            colorToken=\"--text-body-header-neutral-default\"\n          >\n            {currentTitle}\n          </TSpan>\n        )}\n        {!isNoumLayoutCompactViewMode && <Spacer isFlex />}\n        {isShowFilter && <FilterDropDown />}\n        {isShowAddButton && (\n          <Button\n            data-testid=\"new-conversation-button\"\n            size=\"small\"\n            disabled={!hasCreateConversationPermission}\n            tooltipText={\n              hasCreateConversationPermission\n                ? ''\n                : t('noumena.chat.no_permission.create_conversation_text')\n            }\n            tooltipPosition={\n              isMobile\n                ? 'top-left'\n                : isNoumLayoutCompactViewMode\n                ? 'top-right'\n                : 'top-center'\n            }\n            icon={\n              <Icon\n                name=\"add_s\"\n                size={16}\n                color={\n                  noumEditor2\n                    ? '--icon-button-brand-secondary-default'\n                    : '--icon-button-neutral-alt-default'\n                }\n              />\n            }\n            primary={!noumEditor2}\n            secondary={noumEditor2}\n            onClick={onAddNewConversationHandle}\n          />\n        )}\n      </Wrapper>\n    );\n  },\n);\n","import { useContext, useEffect } from 'react';\nimport { ActiveConversationContext } from '../../contexts/ActiveConversationContext';\nimport { useExampleConversation } from '../../hooks/noumMessages/useExampleConversation';\nimport { type NoumLayoutViewMode } from '../../types';\nimport { ChatItemView } from './ChatItemView';\n\ninterface ChatItemExampleProps {\n  isMobile: boolean;\n  noumLayoutViewMode?: NoumLayoutViewMode;\n}\n\nexport const ChatItemExample = ({\n  isMobile,\n  noumLayoutViewMode,\n}: ChatItemExampleProps) => {\n  const { exampleConversation, exampleMessages } = useExampleConversation();\n\n  const { setActiveConversationSid } = useContext(ActiveConversationContext);\n\n  useEffect(() => {\n    if (exampleConversation?.cid) {\n      setActiveConversationSid(exampleConversation.cid);\n    }\n  }, [exampleConversation, exampleConversation.cid, setActiveConversationSid]);\n\n  return (\n    <ChatItemView\n      index={0}\n      sid={exampleConversation.cid ?? ''}\n      isActive={true}\n      isMarginRight={false}\n      onClick={() => {}}\n      size={isMobile ? 'L' : 'S'}\n      author=\"author\"\n      lastMessage={exampleMessages[0]}\n      messages={exampleMessages}\n      title=\"General\"\n      unread={0}\n      users={[{ _id: 'example-user-id', placeholder: false }]}\n      noumLayoutViewMode={noumLayoutViewMode}\n    />\n  );\n};\n","import { useMemo } from 'react';\nimport { Badge } from '@/components/Badge/Badge';\n\nimport { useAuth } from '@/features/auth/contexts';\nimport { type Maybe, type UserOutput } from '@/apollo/generated/types';\nimport { cleanList } from '@/utils/list';\nimport * as S from './styles';\n\nimport { ChatItemAvatar } from './ChatItemAvatar';\nimport ConversationHooks from '../../hooks/globalMessages';\nimport { mapToUserData } from '../../helpers';\n\ntype CollapsedChatItemProps = {\n  sid: string;\n  isMarginRight?: boolean;\n  onClick: (sid: string) => void;\n  size?: 'S' | 'M' | 'L';\n  users: Maybe<UserOutput>[];\n};\n\nexport const CollapsedChatItem = ({\n  sid,\n  isMarginRight = true,\n  onClick,\n  size,\n  users = [],\n}: CollapsedChatItemProps) => {\n  const { user: currentUser } = useAuth();\n  const unread = ConversationHooks.useConversationUnreadMessageCount({ sid });\n\n  const participants = useMemo(\n    () =>\n      cleanList(\n        users\n          .filter((participant) => participant?._id !== currentUser?._id)\n          .map((participant) => participant && mapToUserData(participant)),\n      ),\n    [currentUser?._id, users],\n  );\n\n  return (\n    <S.ChatAvatarWrapper\n      data-testid=\"chatavatar-wrapper\"\n      isMarginRight={isMarginRight}\n      onClick={() => onClick(sid)}\n    >\n      <ChatItemAvatar users={participants} size={size} />\n      {unread !== 0 && (\n        <S.BadgeWrapper>\n          <Badge text={`${unread}`} />\n        </S.BadgeWrapper>\n      )}\n    </S.ChatAvatarWrapper>\n  );\n};\n","import { useCallback, useContext, useEffect, useMemo } from 'react';\nimport { Avatar } from '@/components/Avatar/Avatar';\nimport { DeviceTypeEnum, useDeviceType } from '@/hooks';\nimport { UserUtil } from '@/utils/user';\nimport { CREAT_CONVERSATION_WITH_HOME_OWNER } from '@/constants/conversation';\nimport { useNoumContext } from '@/screens/Chamber/ViewChamber/ChamberProvider';\nimport { ActiveConversationContext } from '../../contexts/ActiveConversationContext';\nimport { ConversationViewContext } from '../../contexts/ConversationViewContext';\nimport { NewConversationContext } from '../../contexts/NewConversationContext';\nimport { ViewMode } from '../../types';\nimport { ChatItemWrapper, AvatarWrapper, Content, TitleTSPan } from './styles';\nimport { type ChatItemProps } from './types';\n\nexport const HomeOwnerChatItem = ({\n  sid = CREAT_CONVERSATION_WITH_HOME_OWNER,\n  isCollapsed = false,\n}: Partial<ChatItemProps>) => {\n  const { space } = useNoumContext();\n  const deviceType = useDeviceType();\n  const { setViewMode, setIsNewConversation } = useContext(\n    ConversationViewContext,\n  );\n  const { activeConversationSid, setActiveConversationSid } = useContext(\n    ActiveConversationContext,\n  );\n  const { setSelectedUsers } = useContext(NewConversationContext);\n\n  const avatarUrl = UserUtil.getProfilePicture(space?.uid);\n  const userFullName = UserUtil.renderFullName(space?.uid);\n\n  const active = useMemo(\n    () => sid === activeConversationSid && deviceType !== DeviceTypeEnum.MOBILE,\n    [activeConversationSid, deviceType, sid],\n  );\n\n  const handleClick = useCallback(() => {\n    if (!space?.uid) return;\n\n    setActiveConversationSid(CREAT_CONVERSATION_WITH_HOME_OWNER);\n    setSelectedUsers([space.uid]);\n\n    setViewMode(ViewMode.FULLCONVERSATION);\n    setIsNewConversation(false);\n  }, [\n    setActiveConversationSid,\n    setIsNewConversation,\n    setSelectedUsers,\n    setViewMode,\n    space?.uid,\n  ]);\n\n  useEffect(() => {\n    if (\n      activeConversationSid === CREAT_CONVERSATION_WITH_HOME_OWNER &&\n      space?.uid\n    ) {\n      setSelectedUsers([space.uid]);\n    }\n  }, [activeConversationSid, setSelectedUsers, space?.uid]);\n\n  if (isCollapsed) return null;\n\n  return (\n    <ChatItemWrapper\n      data-testid=\"chatitem-testid\"\n      active={active}\n      onClick={handleClick}\n    >\n      <AvatarWrapper>\n        <Avatar data-testid=\"avatar-testid\" url={avatarUrl || ''} size=\"M\" />\n      </AvatarWrapper>\n      <Content>\n        <TitleTSPan\n          font=\"body-m-bold\"\n          overflow=\"ellipsis\"\n          colorToken=\"--text-tablecell-header-neutral-highlighted\"\n        >\n          {userFullName}\n        </TitleTSPan>\n      </Content>\n    </ChatItemWrapper>\n  );\n};\n","import { TSpan } from '@/components/Typography';\nimport { useContext, type FC } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Spinner } from '@/components';\nimport { ActiveConversationContext } from '@/features/conversation/contexts/ActiveConversationContext';\nimport { Stack } from '@/layout';\n\nexport const ConversationEmptyState: FC = () => {\n  const { t } = useTranslation();\n\n  const { activeConversationSid } = useContext(ActiveConversationContext);\n\n  return (\n    <Stack\n      fullWidth\n      align=\"center\"\n      justify=\"center\"\n      grow\n      vertical\n      padding=\"32px 0\"\n    >\n      {activeConversationSid ? (\n        <Spinner />\n      ) : (\n        <TSpan colorToken=\"--text-placeholder-neutral-default\" font=\"body-m\">\n          {t('noumena.chat.no_conversation_yet')}\n        </TSpan>\n      )}\n    </Stack>\n  );\n};\n","import { Infinite } from '@/components/Infinite';\nimport { Spinner } from '@/components/Spinner';\nimport { TSpan } from '@/components/Typography';\nimport ChatItem from '@/features/conversation/components/ChatItem';\nimport { ChatItemExample } from '@/features/conversation/components/ChatItem/ChatItemExample';\nimport { CollapsedChatItem } from '@/features/conversation/components/ChatItem/CollapsedChatItem';\nimport { HomeOwnerChatItem } from '@/features/conversation/components/ChatItem/HomeOwnerChatItem';\nimport NewChatItem from '@/features/conversation/components/ChatItem/NewChatItem';\nimport { DeviceTypeEnum, useDeviceType } from '@/hooks';\nimport { Stack } from '@/layout';\nimport { useRef, type FC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { NoumLayoutViewMode } from '@/features/conversation/types';\nimport { ChatListContent, ChatListWrapper, SpinnerContainer } from './styles';\nimport { type ChatListProps } from './types';\nimport useChatList from './useChatList';\nimport { ConversationEmptyState } from '../ConversationEmptyState';\n\nconst ChatList: FC<ChatListProps> = () => {\n  const chatListDivRef = useRef<HTMLDivElement>(null);\n  const newMsgSpanRef = useRef<HTMLSpanElement>(null);\n  const { t } = useTranslation();\n  const deviceType = useDeviceType();\n  const isMobile = Boolean(deviceType === DeviceTypeEnum.MOBILE);\n  const isLaptop = Boolean(deviceType === DeviceTypeEnum.LAPTOP);\n\n  const {\n    loading,\n    cids,\n    isNewConversation,\n    isHomeUserConversation,\n    isCollapse,\n    showExampleConversation,\n    activeConversationSid,\n    noumLayoutViewMode,\n    unreadCount,\n    allConversations,\n    handleItemClick,\n    leftChannels,\n    showSlicedConversations,\n    infiniteStatus,\n    onFetchMore,\n    cidsToRender,\n    hasPrivateConversation,\n  } = useChatList();\n\n  if (loading && cids.length === 0) {\n    return (\n      <Stack justify=\"center\" align=\"center\" vertical grow>\n        <SpinnerContainer>\n          <Spinner />\n        </SpinnerContainer>\n      </Stack>\n    );\n  }\n\n  if (showExampleConversation) {\n    return (\n      <ChatItemExample\n        noumLayoutViewMode={noumLayoutViewMode}\n        isMobile={isMobile}\n      />\n    );\n  }\n\n  if (\n    !isNewConversation &&\n    cids.length === 0 &&\n    noumLayoutViewMode !== NoumLayoutViewMode.NOUMLAYOUTCOMPACT &&\n    (!isHomeUserConversation || isCollapse)\n  ) {\n    return <ConversationEmptyState />;\n  }\n\n  if (isCollapse) {\n    return (\n      <ChatListWrapper data-testid=\"chatlist-wrapper\" isCollapse>\n        <TSpan\n          colorToken={\n            unreadCount\n              ? '--link-card-brand-primary-default'\n              : '--text-body-neutral-default'\n          }\n          font=\"body-m\"\n          ref={newMsgSpanRef}\n        >\n          {t(isMobile ? 'noumena.chat.new' : 'noumena.chat.new_messages', {\n            count: unreadCount || t('noumena.chat.no'),\n          })}\n        </TSpan>\n        <ChatListContent ref={chatListDivRef} isFlex={!(isMobile || isLaptop)}>\n          {allConversations.map((conversation) =>\n            conversation.__typename === 'ConversationOutput' ? (\n              <CollapsedChatItem\n                key={conversation._id}\n                sid={conversation.cid ?? ''}\n                onClick={handleItemClick}\n                users={conversation.participants ?? []}\n              />\n            ) : null,\n          )}\n        </ChatListContent>\n        {!!leftChannels && leftChannels > 0 && (\n          <TSpan colorToken=\"--text-tab-chips-neutral-default\" font=\"body-m\">\n            +{leftChannels}\n          </TSpan>\n        )}\n      </ChatListWrapper>\n    );\n  }\n\n  return (\n    <ChatListWrapper data-testid=\"chatlist-wrapper\">\n      {showSlicedConversations ? (\n        <Stack vertical fullWidth align=\"center\" overflow=\"initial\">\n          {cidsToRender.map((cid, index) => (\n            <ChatItem\n              index={index}\n              key={cid}\n              sid={cid}\n              isActive={cid === activeConversationSid && !isMobile}\n              isMarginRight={index !== cidsToRender.length - 1}\n              onClick={handleItemClick}\n              size={isMobile ? 'L' : 'S'}\n            />\n          ))}\n        </Stack>\n      ) : (\n        <Infinite\n          onFetchMore={onFetchMore}\n          status={infiniteStatus}\n          width=\"100%\"\n          scrollbarWidth={0}\n          isSpinnerRelative\n        >\n          {!activeConversationSid && isNewConversation && <NewChatItem />}\n          {isHomeUserConversation && !hasPrivateConversation && (\n            <HomeOwnerChatItem isCollapsed={isCollapse} />\n          )}\n          {cidsToRender.map((cid, index) => (\n            <ChatItem\n              index={index}\n              key={cid}\n              sid={cid}\n              isActive={cid === activeConversationSid && !isMobile}\n              isMarginRight={index !== cidsToRender.length - 1}\n              onClick={handleItemClick}\n              size={isMobile ? 'L' : 'S'}\n            />\n          ))}\n        </Infinite>\n      )}\n    </ChatListWrapper>\n  );\n};\n\nexport default ChatList;\n","import styled from 'styled-components';\nimport { noScrollBar } from '@/common/globalStyles';\nimport { devices } from '@/constants/devices';\n\nexport const Wrapper = styled.div<{ isNoumLayoutSmallViewMode?: boolean }>`\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  padding: 0 16px 16px;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  ${({ isNoumLayoutSmallViewMode }) =>\n    isNoumLayoutSmallViewMode &&\n    `\n      padding: 0px;\n      overflow: hidden;\n    `}\n`;\n\nexport const MessageListWrapper = styled.div`\n  padding-right: 16px;\n  flex: 1;\n  overflow: auto;\n  ${noScrollBar}\n\n  @media ${devices.TABLET} {\n    padding-right: 0;\n  }\n`;\n\nexport const StartConversationMessage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 12px 0;\n`;\n\nexport const MessageInputWrapper = styled.div`\n  padding-top: 8px;\n`;\n","import { type FC } from 'react';\n\nimport { MessageItem } from '@/features/conversation/components/MessageItem';\nimport { useExampleConversation } from '@/features/conversation/hooks/noumMessages/useExampleConversation';\nimport { Infinite } from '@/components/Infinite';\nimport { MessageListWrapper, Wrapper } from './styles';\n\ntype ConversationBodyProps = {\n  isNoumLayoutSmallViewMode?: boolean;\n};\n\nexport const ConversationExampleBody: FC<ConversationBodyProps> = ({\n  isNoumLayoutSmallViewMode,\n}) => {\n  const { exampleMessages } = useExampleConversation();\n\n  return (\n    <Wrapper\n      data-testid=\"conversionbody-wrapper\"\n      isNoumLayoutSmallViewMode={isNoumLayoutSmallViewMode}\n    >\n      <MessageListWrapper>\n        <Infinite\n          scrollbarWidth={0}\n          reverse\n          grow\n          style={{\n            height: '100%',\n            justifyContent: 'flex-end',\n          }}\n        >\n          <MessageItem message={exampleMessages[0]} />\n        </Infinite>\n      </MessageListWrapper>\n    </Wrapper>\n  );\n};\n","import { TSpan } from '@/components/Typography';\nimport { useNoumContext } from '@/screens/Chamber/ViewChamber/ChamberProvider';\nimport { UserUtil } from '@/utils/user';\nimport { useContext, useMemo, type FC } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { CREAT_CONVERSATION_WITH_HOME_OWNER } from '@/constants/conversation';\nimport { useAuth } from '@/features/auth/contexts';\nimport { MessageInput } from '@/features/conversation/components/MessageInput';\nimport MessageList from '@/features/conversation/components/MessageList';\nimport { ActiveConversationContext } from '@/features/conversation/contexts/ActiveConversationContext';\nimport { ConversationViewContext } from '@/features/conversation/contexts/ConversationViewContext';\nimport { NewConversationContext } from '@/features/conversation/contexts/NewConversationContext';\nimport ConversationHooks from '@/features/conversation/hooks/globalMessages';\nimport { NoumLayoutViewMode } from '@/features/conversation/types';\nimport { useNoumElement } from '@/features/noums/contexts/NoumElementContext';\nimport { chunkStringWithoutWordBreaking } from '@/utils/strings';\nimport useChatList from '../ChatList/useChatList';\nimport { ConversationEmptyState } from '../ConversationEmptyState';\nimport { MessageElementContext } from '../contexts/MessageElementProvider';\nimport { ConversationExampleBody } from './ConversationExampleBody';\nimport {\n  MessageInputWrapper,\n  MessageListWrapper,\n  StartConversationMessage,\n  Wrapper,\n} from './styles';\n\nexport const ConversationBody: FC = () => {\n  const { t } = useTranslation();\n  const { user } = useAuth();\n  const { isOwner, isMasterNoum } = useNoumContext();\n  const { isOthersConversations, isNoumLayoutSmallViewMode } = useContext(\n    MessageElementContext,\n  );\n  const { isEditing, isNoumEditor2 } = useNoumElement();\n\n  const { activeConversationSid } = useContext(ActiveConversationContext);\n  const {\n    ecLoading,\n    selectedUsers,\n    isConversationCreatable,\n    createNewConversation,\n    createHomeNoumNewConversation,\n  } = useContext(NewConversationContext);\n  const { setIsNewConversation } = useContext(ConversationViewContext);\n  const { conversation } = ConversationHooks.useConversation({\n    sid: activeConversationSid,\n  });\n\n  const { users } = ConversationHooks.useConversationDetails({\n    sid: activeConversationSid,\n  });\n\n  const { cids, noumLayoutViewMode } = useChatList();\n\n  const { sendMessage, sendFile, messages, isLoading } =\n    ConversationHooks.useConversationMessages({\n      sid: activeConversationSid,\n    });\n\n  const showExampleConversation =\n    isEditing &&\n    isNoumEditor2 &&\n    messages.length === 0 &&\n    !isLoading &&\n    !ecLoading;\n\n  const isShowMessageList = !ecLoading;\n\n  const isShowMessageStartLabel =\n    !ecLoading && !activeConversationSid && isConversationCreatable;\n\n  const isShownMessageInput = useMemo(\n    () =>\n      !isOthersConversations &&\n      (activeConversationSid || isConversationCreatable) &&\n      !UserUtil.isInactive(user) &&\n      (users.length === 1 ? users[0].source !== null : true),\n    [\n      activeConversationSid,\n      isConversationCreatable,\n      isOthersConversations,\n      user,\n      users,\n    ],\n  );\n\n  const handleSendMessage = async (message: string, files: File[]) => {\n    let convo = conversation;\n    if (isConversationCreatable) {\n      if (convo) {\n        setIsNewConversation(false);\n      } else {\n        convo = isMasterNoum\n          ? await createHomeNoumNewConversation()\n          : await createNewConversation();\n      }\n    }\n\n    const splittedMessages = chunkStringWithoutWordBreaking(message, 4000);\n    splittedMessages.forEach((msg) => sendMessage(msg, convo));\n\n    // sending each media file as a separate message.\n    files.forEach((file) => sendFile(file, convo));\n  };\n\n  if (showExampleConversation) {\n    return (\n      <ConversationExampleBody\n        isNoumLayoutSmallViewMode={isNoumLayoutSmallViewMode}\n      />\n    );\n  }\n\n  if (\n    cids.length === 0 &&\n    noumLayoutViewMode === NoumLayoutViewMode.NOUMLAYOUTCOMPACT &&\n    !isShownMessageInput\n  ) {\n    return <ConversationEmptyState />;\n  }\n\n  return (\n    <Wrapper\n      data-testid=\"conversionbody-wrapper\"\n      isNoumLayoutSmallViewMode={isNoumLayoutSmallViewMode}\n    >\n      <MessageListWrapper>\n        {isShowMessageList && <MessageList />}\n      </MessageListWrapper>\n      <MessageInputWrapper>\n        {isShowMessageStartLabel && (\n          <StartConversationMessage>\n            <TSpan\n              font=\"body-s\"\n              colorToken=\"--text-placeholder-neutral-default\"\n            >\n              {activeConversationSid === CREAT_CONVERSATION_WITH_HOME_OWNER\n                ? t('noumena.message.start_home_owner_conversation')\n                : selectedUsers.length === 1\n                ? t('noumena.message.start_single_conversation', {\n                    name: `${selectedUsers[0].firstName} ${selectedUsers[0].lastName}`,\n                  })\n                : t('noumena.message.start_group_conversation')}\n            </TSpan>\n            <TSpan\n              font=\"body-s\"\n              colorToken=\"--text-placeholder-neutral-default\"\n            >\n              {!isMasterNoum &&\n                !isOwner &&\n                t('noumena.message.start_disclaimer_to_connected_user')}\n            </TSpan>\n          </StartConversationMessage>\n        )}\n        {isShownMessageInput && (\n          <MessageInput onSendMessage={handleSendMessage} />\n        )}\n      </MessageInputWrapper>\n    </Wrapper>\n  );\n};\n","import {\n  UserRelationType,\n  type UserOutput,\n  PermissibleElementType,\n} from '@/apollo/generated/types';\nimport { useAllUsersWithOwnerQuery } from '@/apollo/graphql';\nimport { useAuth } from '@/features/auth/contexts';\nimport { DeviceTypeEnum, useDeviceType } from '@/hooks';\nimport { Stack } from '@/layout';\nimport { useNoumContext } from '@/screens/Chamber/ViewChamber/ChamberProvider';\nimport { PAGE_BIG_SIZE, PAGE_SIZE } from '@/screens/Chambers/constants';\nimport { cleanList } from '@/utils/list';\nimport { NetworkStatus } from '@apollo/client';\nimport { uniqBy } from 'lodash';\nimport {\n  forwardRef,\n  useCallback,\n  useContext,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n  type ForwardedRef,\n} from 'react';\nimport { useNoumAuthorization } from '@/features/noums/contexts/NoumAuthorizationContext';\nimport { TSpan } from '@/components';\nimport { useTranslation } from 'react-i18next';\nimport { NewConversationContext } from '../../contexts/NewConversationContext';\nimport { MessageUserPicker } from '../MessageUserPicker/MessageUserPicker';\nimport { type MessageUserPickerForwardRefProps } from '../MessageUserPicker/types';\n\nexport const NewConversationUserSelector = forwardRef(\n  (_, ref: ForwardedRef<MessageUserPickerForwardRefProps>) => {\n    const { t } = useTranslation();\n    const { user: currentUser } = useAuth();\n    const { spaceId, space } = useNoumContext();\n    const deviceType = useDeviceType();\n    const { selectedUsers, setSelectedUsers } = useContext(\n      NewConversationContext,\n    );\n    const [search, setSearch] = useState('');\n    const { hasElementPermission } = useNoumAuthorization();\n\n    const hasCreateGroupPermission = hasElementPermission(\n      PermissibleElementType.Messages,\n      'create-new-group-message-conversation',\n    );\n\n    const { data, fetchMore, loading, networkStatus } =\n      useAllUsersWithOwnerQuery({\n        variables: {\n          search,\n          offset: 0,\n          limit:\n            deviceType === DeviceTypeEnum.MOBILE ? PAGE_BIG_SIZE : PAGE_SIZE,\n          activeUserOnly: false,\n          chamberId: spaceId,\n          type: UserRelationType.Connected,\n          filter: {\n            includeNonMembers: true,\n            includeNoumOwner: true,\n          },\n          ownerID: space?.uid?._id ?? '',\n        },\n        fetchPolicy: 'cache-and-network',\n      });\n\n    const totalCount = data?.allUsers?.count || 0;\n    const users = useMemo(\n      () =>\n        uniqBy(\n          cleanList(\n            [data?.user, ...(data?.allUsers.data || [])].filter(\n              (user) => user?._id !== currentUser?._id,\n            ),\n          ),\n          '_id',\n        ),\n      [currentUser?._id, data?.allUsers.data, data?.user],\n    );\n\n    const messageUserPickerRef =\n      useRef<React.ElementRef<typeof MessageUserPicker>>(null);\n\n    const onLoadMore = useCallback(async () => {\n      fetchMore({\n        variables: {\n          offset: users.length,\n        },\n      });\n    }, [fetchMore, users.length]);\n\n    const onSelect = useCallback(\n      (_users: UserOutput[]) => {\n        setSelectedUsers(_users.filter((user) => user !== undefined));\n      },\n      [setSelectedUsers],\n    );\n\n    const onCancel = useCallback(() => {\n      messageUserPickerRef?.current?.cancel?.();\n    }, [messageUserPickerRef]);\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        cancel() {\n          onCancel();\n        },\n      }),\n      [onCancel],\n    );\n\n    const CustomOptionsContent = (\n      <Stack padding=\"12px\">\n        <TSpan\n          font=\"body-m\"\n          colorToken=\"--text-tablecell-header-neutral-default\"\n        >\n          {t('noumena.chat.no_permission.create_group_conversation_text')}\n        </TSpan>\n      </Stack>\n    );\n\n    return (\n      <Stack align=\"center\" fullWidth data-testid=\"newconversation\">\n        <MessageUserPicker\n          ref={messageUserPickerRef}\n          data={users}\n          initialValue={selectedUsers}\n          CustomOptionsContent={\n            selectedUsers.length > 0 && !hasCreateGroupPermission\n              ? CustomOptionsContent\n              : null\n          }\n          multiselect={hasCreateGroupPermission}\n          onSelectUsers={onSelect}\n          initLoading={loading && !users.length}\n          loading={loading && networkStatus === NetworkStatus.fetchMore}\n          hasMore={users.length < totalCount}\n          onFetchMore={onLoadMore}\n          onSetSearch={setSearch}\n        />\n      </Stack>\n    );\n  },\n);\n","import styled from 'styled-components';\nimport { Stack } from '@/layout/Stack';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n`;\n\nexport const ButtonView = styled.div`\n  padding: 8px;\n  border-radius: 8px;\n`;\n\nexport const ProfileWrapper = styled(Stack).attrs((props) => ({\n  ...props,\n  align: 'center',\n  fullWidth: true,\n}))``;\n\nexport const ProfileInfo = styled(Stack).attrs((props) => ({\n  ...props,\n  align: 'center',\n  fullWidth: true,\n}))`\n  cursor: pointer;\n`;\n","import { type FC } from 'react';\nimport { TSpan } from '@/components/Typography';\nimport { Spacer, Stack } from '@/layout';\nimport { useNoumContext } from '@/screens/Chamber/ViewChamber/ChamberProvider';\nimport { UserUtil } from '@/utils/user';\nimport { Avatar } from '@/components/Avatar/Avatar';\nimport { ProfileWrapper, ProfileInfo } from './styles';\n\nexport const HomeOwnerConversationProfile: FC = () => {\n  const { space } = useNoumContext();\n  const avatarUrl = UserUtil.getProfilePicture(space?.uid);\n  const userFullName = UserUtil.renderFullName(space?.uid);\n  const subTitle = space?.uid?.title;\n\n  return (\n    <ProfileWrapper data-testid=\"receiverprofile\">\n      <ProfileInfo>\n        <Avatar data-testid=\"avatar-testid\" url={avatarUrl || ''} size=\"M\" />\n        <Spacer width={16} />\n        <Stack vertical style={{ overflow: 'hidden' }}>\n          <TSpan\n            font=\"body-m\"\n            overflow=\"ellipsis\"\n            colorToken=\"--text-tablecell-header-neutral-highlighted\"\n          >\n            {userFullName}\n          </TSpan>\n          <TSpan\n            font=\"body-s\"\n            colorToken=\"--text-tablecell-body-neutral-default\"\n          >\n            {subTitle}\n          </TSpan>\n        </Stack>\n      </ProfileInfo>\n    </ProfileWrapper>\n  );\n};\n","import { Icon } from '@/components/Icon';\nimport { TSpan } from '@/components/Typography';\nimport { CREAT_CONVERSATION_WITH_HOME_OWNER } from '@/constants/conversation';\nimport ConversationProfile from '@/features/conversation/components/ConversationProfile';\nimport { ConversationProfileView } from '@/features/conversation/components/ConversationProfile/ConversationProfileView';\nimport { NewConversationUserSelector } from '@/features/conversation/components/NewConversationUserSelector/NewConversationUserSelector';\nimport { NewHomeConversationUserSelector } from '@/features/conversation/components/NewConversationUserSelector/NewHomeConversationUserSelector';\nimport { ActiveConversationContext } from '@/features/conversation/contexts/ActiveConversationContext';\nimport ConversationHooks from '@/features/conversation/hooks/globalMessages';\nimport { useExampleConversation } from '@/features/conversation/hooks/noumMessages/useExampleConversation';\nimport { ViewMode } from '@/features/conversation/types';\nimport { useNoumElement } from '@/features/noums/contexts/NoumElementContext';\nimport { useBreakpoints } from '@/hooks';\nimport { Stack } from '@/layout';\nimport { useNoumContext } from '@/screens/Chamber/ViewChamber/ChamberProvider';\nimport { useCallback, useContext, useRef, type FC } from 'react';\nimport { t } from 'i18next';\nimport { MessageElementContext } from '../contexts/MessageElementProvider';\nimport { useConversationType } from '../hooks/useConversationType';\nimport { HomeOwnerConversationProfile } from './HomeOwnerConversationProfile';\nimport { ButtonView, Wrapper } from './styles';\n\nexport const ConversationHeader: FC = () => {\n  const addNewConversationRef =\n    useRef<React.ElementRef<typeof NewConversationUserSelector>>(null);\n  const { isMobile } = useBreakpoints();\n\n  const { isMasterNoum, isOwner } = useNoumContext();\n  const { activeConversationSid, setActiveConversationSid } = useContext(\n    ActiveConversationContext,\n  );\n  const {\n    isNewConversation,\n    viewMode,\n    setViewMode,\n    isNoumLayoutCompactViewMode,\n  } = useContext(MessageElementContext);\n  const conversationType = useConversationType();\n  const { totalCount } =\n    ConversationHooks.useConversationsList(conversationType);\n\n  const { exampleUser } = useExampleConversation();\n  const { isEditing, isNoumEditor2 } = useNoumElement();\n\n  const showExampleConversation =\n    isEditing && isNoumEditor2 && totalCount === 0;\n\n  const backHandler = useCallback(() => {\n    setViewMode(ViewMode.FULLCHAT);\n    addNewConversationRef?.current?.cancel?.();\n    setActiveConversationSid('');\n  }, [setActiveConversationSid, setViewMode]);\n\n  return (\n    <Stack vertical fullWidth gap={16} data-testid=\"conversationheader-wrapper\">\n      {isNewConversation && (\n        <Stack fullWidth justify={isMobile ? 'flex-start' : 'center'}>\n          <TSpan\n            font=\"heading-xs-bold\"\n            colorToken=\"--text-modal-header-neutral-default\"\n          >\n            Start a New Conversation\n          </TSpan>\n        </Stack>\n      )}\n\n      <Wrapper>\n        {isNoumLayoutCompactViewMode &&\n          !isEditing &&\n          totalCount === 0 &&\n          !isNewConversation && (\n            <Stack vertical grow justify=\"stretch\" fullWidth align=\"stretch\">\n              <TSpan\n                font=\"heading-xs-bold\"\n                colorToken=\"--text-modal-header-neutral-default\"\n              >\n                {t(`noumena.chambers.toolbox.element.messages`)}\n              </TSpan>\n            </Stack>\n          )}\n        {viewMode === ViewMode.FULLCONVERSATION && (\n          <ButtonView data-testid=\"back-button\" onClick={backHandler}>\n            <Icon\n              name=\"arrow_left_m\"\n              size={24}\n              color=\"--icon-button-neutral-default\"\n            />\n          </ButtonView>\n        )}\n\n        {isNewConversation ? (\n          isMasterNoum ? (\n            <NewHomeConversationUserSelector ref={addNewConversationRef} />\n          ) : (\n            <Stack fullWidth vertical>\n              <NewConversationUserSelector ref={addNewConversationRef} />\n            </Stack>\n          )\n        ) : isMasterNoum &&\n          !isOwner &&\n          activeConversationSid === CREAT_CONVERSATION_WITH_HOME_OWNER ? (\n          <HomeOwnerConversationProfile />\n        ) : showExampleConversation ? (\n          <ConversationProfileView\n            title=\"General\"\n            users={[exampleUser]}\n            isConversationBlocked={false}\n          />\n        ) : (\n          <ConversationProfile />\n        )}\n      </Wrapper>\n    </Stack>\n  );\n};\n","import { ModalBody } from '@/components/ExtendedModal';\nimport { Stack } from '@/layout';\nimport styled from 'styled-components';\n\nconst ModalHeader = styled(Stack)`\n  min-height: 42px;\n  align-items: center;\n`;\n\nconst ModalBodyStyled = styled(ModalBody)`\n  padding: 0;\n  height: 100%;\n  flex: 1;\n`;\n\nexport default {\n  ModalHeader,\n  ModalBodyStyled,\n};\n","import { Modal, ModalSize } from '@/components/ExtendedModal';\nimport { breakpoints } from '@/constants/devices';\nimport { ActiveConversationContext } from '@/features/conversation/contexts/ActiveConversationContext';\nimport { useWindowDimensions } from '@/hooks';\nimport { MessageElementContext } from '@/screens/Chamber/components/elements/MessageElementV2/contexts/MessageElementProvider';\nimport { useContext, type FC, type ReactNode } from 'react';\nimport S from './styles';\n\ntype ConversationModalProps = {\n  ConversationHeader: ReactNode;\n  ConversationBody: ReactNode;\n};\n\nexport const ConversationModal: FC<ConversationModalProps> = (props) => {\n  const windowDimensions = useWindowDimensions();\n  const isMobile = windowDimensions.width < breakpoints.TABLET;\n  const { isNewConversation, isNoumLayoutSmallViewMode, setIsNewConversation } =\n    useContext(MessageElementContext);\n  const { activeConversationSid, setActiveConversationSid } = useContext(\n    ActiveConversationContext,\n  );\n\n  const handleClose = () => {\n    setActiveConversationSid('');\n    setIsNewConversation(false);\n  };\n\n  const showModal =\n    !!activeConversationSid ||\n    (!!isNewConversation && !!isNoumLayoutSmallViewMode);\n\n  return (\n    <Modal\n      open={showModal}\n      size={ModalSize.L}\n      onClose={handleClose}\n      testId=\"noum-conversation-modal\"\n      disableBackdropClick\n      isScrollableContent={false}\n      style={{ padding: 16, minHeight: 300 }}\n      enableCloseButton={!isNewConversation}\n      isFullScreen={isMobile}\n    >\n      <S.ModalHeader>{props.ConversationHeader}</S.ModalHeader>\n      <S.ModalBodyStyled noFooter>{props.ConversationBody}</S.ModalBodyStyled>\n    </Modal>\n  );\n};\n","import styled, { css } from 'styled-components';\nimport { cssVar, rgba } from 'polished';\nimport { Stack } from '@/layout';\nimport { Card } from '@/components/Card';\nimport { devices } from '@/constants/devices';\nimport { NoumLayoutViewMode, ViewMode } from '@/features/conversation/types';\n\nexport const fullScreenStyle = css`\n  z-index: 99;\n  position: fixed;\n  top: 0;\n  width: 100vw;\n  height: 100%;\n  background: var(--bg-modal-neutral-alt-default);\n`;\n\nexport const noumLayoutSmallStyle = css`\n  width: 100% !important;\n`;\n\nexport const noumLayoutCompactStyle = css`\n  width: 56px !important;\n`;\n\nexport const noumLayoutBigStyle = css`\n  width: 300px !important;\n`;\n\nexport const EditModeWrapper = styled(Stack)`\n  justify-content: center;\n  align-items: center;\n  padding: 4px;\n\n  @media ${devices.LAPTOP} {\n    padding: 12px;\n  }\n`;\n\nexport const Wrapper = styled(Card)`\n  position: relative;\n  padding: 0;\n  display: flex;\n  flex-direction: row;\n  border-radius: 0;\n  overflow: visible;\n\n  @media ${devices.TABLET} {\n    border-radius: 16px;\n  }\n`;\n\nexport const MainWrapper = styled.div<{\n  isCollapse?: boolean;\n  viewMode?: ViewMode;\n  noumLayoutViewMode?: NoumLayoutViewMode;\n}>`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  ${({ viewMode }) =>\n    viewMode === ViewMode.FULLCHAT ? fullScreenStyle : undefined}\n\n  @media ${devices.TABLET} {\n    width: ${({ isCollapse }) => (isCollapse ? '100%' : '313px')};\n  }\n\n  ${({ noumLayoutViewMode }) =>\n    noumLayoutViewMode === NoumLayoutViewMode.NOUMLAYOUTSMALL\n      ? noumLayoutSmallStyle\n      : noumLayoutViewMode === NoumLayoutViewMode.NOUMLAYOUTCOMPACT\n      ? noumLayoutCompactStyle\n      : noumLayoutViewMode === NoumLayoutViewMode.NOUMLAYOUTBIG\n      ? noumLayoutBigStyle\n      : undefined}\n`;\n\nexport const ConversationWrapper = styled.div<{\n  isCollapse?: boolean;\n  viewMode?: ViewMode;\n  noumLayoutViewMode?: NoumLayoutViewMode;\n}>`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  border-left: 1px solid var(--bg-separator-neutral-default);\n  overflow: hidden;\n\n  ${({ viewMode }) =>\n    viewMode === ViewMode.FULLCONVERSATION\n      ? fullScreenStyle\n      : css`\n          display: none;\n        `}\n\n  @media ${devices.TABLET} {\n    ${({ isCollapse }) =>\n      isCollapse\n        ? css`\n            display: none;\n          `\n        : css`\n            display: flex;\n            flex-direction: column;\n          `};\n  }\n\n  ${({ noumLayoutViewMode }) =>\n    noumLayoutViewMode === NoumLayoutViewMode.NOUMLAYOUTSMALL\n      ? `\n        padding: 0px !important;\n        border: none !important;\n        width: 100%;\n      `\n      : undefined}\n`;\n\nexport const ConversationLoadingWrapper = styled.div`\n  z-index: 10;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${rgba(cssVar('--bg-overlay-neutral-light'), 0.1)};\n  border-radius: 0;\n\n  @media ${devices.TABLET} {\n    border-radius: 16px;\n  }\n`;\n\nexport const HeaderWrapper = styled.div<{\n  isElement?: boolean;\n  noumEditor2?: boolean;\n  noumLayoutViewMode?: NoumLayoutViewMode;\n}>`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid var(--bg-separator-neutral-default);\n  padding: ${({ noumEditor2 }) => (noumEditor2 ? '0px' : '16px')};\n\n  @media ${devices.TABLET} {\n    ${({ isElement }) =>\n      isElement\n        ? css`\n            height: 80px;\n            padding: 22px 24px 16px;\n          `\n        : css`\n            min-height: 80px;\n            padding-right: 24px;\n          `};\n  }\n\n  ${({ noumLayoutViewMode }) =>\n    noumLayoutViewMode === NoumLayoutViewMode.NOUMLAYOUTCOMPACT\n      ? `padding : 0px !important; \n          height : 72px;\n          width: 100%;\n          justify-content: center;\n        `\n      : noumLayoutViewMode === NoumLayoutViewMode.NOUMLAYOUTSMALL\n      ? `\n          border: none;\n          min-height: 46px !important;\n        `\n      : undefined}\n`;\n\nexport const BodyWrapper = styled.div<{\n  headerHeight: number;\n  footerHeight?: number;\n  isCollapse?: boolean;\n  noumLayoutViewMode?: NoumLayoutViewMode;\n}>`\n  height: calc(100% - ${(props) => props.headerHeight || 72}px);\n  display: flex;\n  flex-direction: column;\n\n  @media ${devices.TABLET} {\n    max-height: 340px;\n\n    ${({ noumLayoutViewMode, footerHeight }) =>\n      noumLayoutViewMode === NoumLayoutViewMode.NOUMLAYOUTCOMPACT\n        ? `\n          height: calc(340px + ${footerHeight || 0}px);\n          max-height: calc(340px + ${footerHeight || 0}px)\n      `\n        : noumLayoutViewMode === NoumLayoutViewMode.NOUMLAYOUTSMALL\n        ? `\n          max-height: none; \n        `\n        : ''}\n  }\n\n  ${({ noumLayoutViewMode }) =>\n    noumLayoutViewMode === NoumLayoutViewMode.NOUMLAYOUTSMALL\n      ? `padding : 0px !important; width: 100%; `\n      : undefined}\n`;\n\nexport const InfoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 9px;\n  border-bottom: 1px solid var(--bg-separator-neutral-default);\n`;\n","import { Spinner } from '@/components/Spinner';\nimport { TSpan } from '@/components/Typography';\nimport { NewConversationContext } from '@/features/conversation/contexts/NewConversationContext';\nimport { NoumLayoutViewMode } from '@/features/conversation/types';\nimport { t } from 'i18next';\nimport {\n  forwardRef,\n  useContext,\n  useRef,\n  type ReactNode,\n  type Ref,\n} from 'react';\nimport { useNoumElement } from '@/features/noums/contexts/NoumElementContext';\nimport ConversationModal from './ConversationModal';\nimport { MessageElementContext } from './contexts/MessageElementProvider';\nimport {\n  BodyWrapper,\n  ConversationLoadingWrapper,\n  ConversationWrapper,\n  HeaderWrapper,\n  InfoWrapper,\n  MainWrapper,\n  Wrapper,\n} from './styles';\n\nexport type ConverstaionProps = {\n  ConversationHeader: ReactNode;\n  ConversationBody: ReactNode;\n};\n\nexport type ViewModeProps = {\n  id?: string;\n  ElementHeader: ReactNode;\n  ChatList: ReactNode;\n  ConversationHeader: ReactNode;\n  ConversationBody: ReactNode;\n  ChatFooter: ReactNode;\n};\n\nexport const ViewModeLayout = forwardRef(\n  (props: ViewModeProps, ref: Ref<HTMLDivElement>) => {\n    const headRef1 = useRef<HTMLDivElement>(null);\n    const headRef2 = useRef<HTMLDivElement>(null);\n    const footerRef = useRef<HTMLDivElement>(null);\n    const headHeights = [\n      headRef1.current?.scrollHeight ?? 0,\n      headRef2.current?.scrollHeight ?? 0,\n    ];\n    const { isEditing } = useNoumElement();\n    const footerHeight = footerRef?.current?.scrollHeight ?? 0;\n\n    const {\n      isCollapse,\n      viewMode,\n      isOthersConversations,\n      noumLayoutViewMode,\n      isNoumLayoutSmallViewMode,\n      isNoumLayoutCompactViewMode,\n    } = useContext(MessageElementContext);\n    const { loading: isCreatingNewConversation } = useContext(\n      NewConversationContext,\n    );\n\n    return (\n      <Wrapper ref={ref} data-testid=\"mew-wrapper\" id={props.id}>\n        {isCreatingNewConversation && (\n          <ConversationLoadingWrapper data-testid=\"mew-spinner\">\n            <Spinner />\n          </ConversationLoadingWrapper>\n        )}\n\n        <MainWrapper\n          isCollapse={isCollapse}\n          viewMode={viewMode}\n          noumLayoutViewMode={noumLayoutViewMode}\n          data-testid=\"mew-main-wrapper\"\n        >\n          <HeaderWrapper\n            data-testid=\"msg-header-wrapper\"\n            isElement\n            ref={headRef1}\n            noumLayoutViewMode={noumLayoutViewMode}\n          >\n            {props.ElementHeader}\n          </HeaderWrapper>\n          <BodyWrapper\n            headerHeight={headHeights[0]}\n            isCollapse={isCollapse}\n            noumLayoutViewMode={noumLayoutViewMode}\n            footerHeight={0}\n          >\n            {isOthersConversations && !isNoumLayoutCompactViewMode && (\n              <InfoWrapper>\n                <TSpan font=\"body-s\" colorToken=\"--text-body-neutral-default\">\n                  {t(`noumena.message.other_users_conversation_notice`)}\n                </TSpan>\n              </InfoWrapper>\n            )}\n            {props.ChatList}\n            {props.ChatFooter}\n          </BodyWrapper>\n        </MainWrapper>\n        {noumLayoutViewMode !== NoumLayoutViewMode.NOUMLAYOUTSMALL && (\n          <ConversationWrapper\n            isCollapse={isCollapse}\n            viewMode={viewMode}\n            data-testid=\"mew-conversation-wrapper\"\n          >\n            <HeaderWrapper ref={headRef2}>\n              {props.ConversationHeader}\n            </HeaderWrapper>\n            <BodyWrapper\n              headerHeight={headHeights[1]}\n              isCollapse={isCollapse}\n              noumLayoutViewMode={NoumLayoutViewMode.NOUMLAYOUTCOMPACT}\n              footerHeight={footerHeight}\n            >\n              {props.ConversationBody}\n            </BodyWrapper>\n          </ConversationWrapper>\n        )}\n        {isNoumLayoutSmallViewMode && !isEditing && (\n          <ConversationModal\n            ConversationBody={props.ConversationBody}\n            ConversationHeader={props.ConversationHeader}\n          />\n        )}\n      </Wrapper>\n    );\n  },\n);\n","import { forwardRef, type Ref } from 'react';\nimport { ChatFooter } from './ChatFooter/ChatFooter';\nimport ChatHeader from './ChatHeader';\nimport ChatList from './ChatList';\nimport ConversationBody from './ConversationBody';\nimport ConversationHeader from './ConversationHeader';\nimport { type MessageElementProps } from './types';\nimport { ViewModeLayout } from './ViewModeLayout';\n\nexport const MessageElementViewMode = forwardRef(\n  (props: MessageElementProps, ref: Ref<HTMLDivElement>) => {\n    const { currentTitle } = props;\n\n    return (\n      <ViewModeLayout\n        id={props.element._id || ''}\n        ref={ref}\n        ElementHeader={<ChatHeader currentTitle={currentTitle} />}\n        ChatList={<ChatList />}\n        ChatFooter={<ChatFooter />}\n        ConversationHeader={<ConversationHeader />}\n        ConversationBody={<ConversationBody />}\n      />\n    );\n  },\n);\n","import { forwardRef, type Ref } from 'react';\nimport { t } from 'i18next';\nimport { ElementWrapper } from '@/screens/Chamber/components/ElementWrapper';\nimport { TSpan } from '@/components/Typography';\nimport { EditModeWrapper } from './styles';\nimport { type MessageElementProps } from './types';\n\nexport const MessageElementEditMode = forwardRef(\n  (props: MessageElementProps, ref: Ref<HTMLDivElement>) => (\n    <ElementWrapper ref={ref} isBorder={false} {...props}>\n      <EditModeWrapper justify=\"center\" align=\"center\">\n        <TSpan font=\"body-m\" colorToken=\"--text-placeholder-neutral-default\">\n          {t('noumena.chat.edit_mode_message')}\n        </TSpan>\n      </EditModeWrapper>\n    </ElementWrapper>\n  ),\n);\n","import { forwardRef, type Ref, useEffect } from 'react';\nimport { useQueryClient } from 'react-query';\nimport { ConversationViewProvider } from '@/features/conversation/contexts/ConversationViewProvider';\nimport { ActiveConversationProvider } from '@/features/conversation/contexts/ActiveConversationProvider';\nimport { NewConversationProvider } from '@/features/conversation/contexts/NewConversationProvider';\nimport { TwilioClientProvider } from '@/features/conversation/contexts/TwilioClientProvider';\nimport { useSkeletonIsLoadingContext } from '@/components/SkeletonLoader/SkeletonLoaderProvider';\nimport SkeletonLoaderMessageElement from '@/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderMessageElement';\nimport { useLaunchDarkly } from '@/hooks';\nimport { MessageElementProvider } from './contexts/MessageElementProvider';\nimport { MessageElementViewMode } from './MessageElementViewMode';\nimport { MessageElementEditMode } from './MessageElementEditMode';\nimport { type MessageElementProps } from './types';\n\nexport const MessageElement = forwardRef(\n  (props: MessageElementProps, ref: Ref<HTMLDivElement>) => {\n    const {\n      flags: { noumEditor2 },\n    } = useLaunchDarkly();\n    const { isLoading } = useSkeletonIsLoadingContext();\n    const queryClient = useQueryClient();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(() => () => queryClient.clear(), []);\n\n    if (props.isEditing && !noumEditor2) {\n      return <MessageElementEditMode {...props} ref={ref} />;\n    }\n    if (isLoading) return <SkeletonLoaderMessageElement />;\n\n    return (\n      <ConversationViewProvider>\n        <MessageElementProvider>\n          <TwilioClientProvider>\n            <ActiveConversationProvider>\n              <NewConversationProvider>\n                <MessageElementViewMode {...props} />\n              </NewConversationProvider>\n            </ActiveConversationProvider>\n          </TwilioClientProvider>\n        </MessageElementProvider>\n      </ConversationViewProvider>\n    );\n  },\n);\n","import { MessageElement } from './MessageElement';\n\nconst MessageElementV2 = MessageElement;\n\nexport default MessageElementV2;\n","import { type Maybe } from '@/apollo/generated/types';\nimport { type SpaceOutputFragment } from '@/apollo/graphql';\nimport { DeviceTypeEnum, useDeviceType, useLaunchDarkly } from '@/hooks';\nimport { useNoumContext } from '@/screens/Chamber/ViewChamber/ChamberProvider';\nimport {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n  type FC,\n  type ReactNode,\n} from 'react';\n\nexport enum WalletViewMode {\n  DEFAULT = 'default',\n  FULLDATA = 'full-data',\n}\n\ninterface IWalletElementContext {\n  loading: boolean;\n  space: SpaceOutputFragment | undefined;\n  spaceId: Maybe<string> | undefined;\n  isCollapse: boolean;\n  setIsCollapse: (value: boolean) => void;\n  viewMode: WalletViewMode;\n  setViewMode: (value: WalletViewMode) => void;\n}\n\nconst initialValue: IWalletElementContext = {\n  loading: false,\n  space: undefined,\n  spaceId: undefined,\n\n  isCollapse: false,\n  setIsCollapse: () => {},\n  viewMode: WalletViewMode.DEFAULT,\n  setViewMode: () => {},\n};\n\nexport const WalletElementContext =\n  createContext<IWalletElementContext>(initialValue);\n\nexport const WalletElementProvider: FC<{ children: ReactNode }> = ({\n  children,\n}) => {\n  const {\n    flags: { noumEditor2 },\n  } = useLaunchDarkly();\n  const deviceType = useDeviceType();\n  const { loading, spaceId, space } = useNoumContext();\n  const [isCollapse, setIsCollapse] = useState(true);\n  const [viewMode, changeViewMode] = useState<WalletViewMode>(\n    WalletViewMode.DEFAULT,\n  );\n  const setViewMode = useCallback(\n    (value: WalletViewMode) => {\n      if (deviceType === DeviceTypeEnum.MOBILE) {\n        changeViewMode(value);\n      } else {\n        changeViewMode(WalletViewMode.DEFAULT);\n      }\n    },\n    [deviceType],\n  );\n\n  useEffect(() => {\n    if (deviceType === DeviceTypeEnum.MOBILE)\n      changeViewMode(WalletViewMode.FULLDATA);\n  }, [deviceType]);\n\n  useEffect(() => {\n    if (deviceType !== DeviceTypeEnum.MOBILE)\n      changeViewMode(WalletViewMode.DEFAULT);\n  }, [deviceType]);\n\n  const value = useMemo(\n    () => ({\n      loading,\n      spaceId,\n      space,\n      isCollapse: isCollapse && !noumEditor2,\n      setIsCollapse,\n      viewMode,\n      setViewMode,\n    }),\n    [loading, spaceId, space, isCollapse, noumEditor2, viewMode, setViewMode],\n  );\n\n  return (\n    <WalletElementContext.Provider value={value}>\n      {children}\n    </WalletElementContext.Provider>\n  );\n};\n\nexport const useWalletElement = () => {\n  const value = useContext(WalletElementContext);\n\n  return value;\n};\n","import styled, { css } from 'styled-components';\nimport { Stack } from '@/layout';\nimport { Card } from '@/components/Card';\nimport { devices } from '@/constants/devices';\nimport { TSpan } from '@/components/Typography';\nimport { customScrollBar } from '@/common/globalStyles';\nimport { type Property } from 'csstype';\nimport { WalletViewMode } from './providers/WalletElementProvider';\n\nconst paddingForNoumEditor = css`\n  padding: 12px 16px !important;\n`;\n\nexport const fullScreenStyle = css`\n  z-index: 999;\n  position: fixed;\n  top: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: var(--bg-body-neutral-alt-default);\n`;\n\nexport const EditModeWrapper = styled(Stack)`\n  justify-content: center;\n  align-items: center;\n  padding: 4px;\n\n  @media ${devices.LAPTOP} {\n    padding: 12px;\n  }\n`;\n\nexport const ViewModeWrapper = styled(Stack)<{ noumEditor2?: boolean }>`\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  padding: 16px;\n  @media ${devices.LAPTOP} {\n    padding: 16px;\n  }\n  ${({ noumEditor2 }) => noumEditor2 && paddingForNoumEditor}\n`;\n\nexport const Wrapper = styled(Card)`\n  padding: 0;\n  display: flex;\n  flex-direction: row;\n  border-radius: 0;\n\n  @media ${devices.TABLET} {\n    border-radius: 16px;\n  }\n`;\n\nexport const MainWrapper = styled.div<{\n  isCollapse?: boolean;\n  viewMode?: WalletViewMode;\n}>`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  ${({ viewMode }) =>\n    viewMode === WalletViewMode.FULLDATA ? fullScreenStyle : undefined}\n\n  @media ${devices.TABLET} {\n    width: 100%;\n  }\n`;\n\nexport const HeaderWrapper = styled.div<{\n  isElement?: boolean;\n  noumEditor2?: boolean;\n}>`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  padding: 16px;\n\n  @media ${devices.TABLET} {\n    ${({ isElement }) =>\n      isElement\n        ? css`\n            // height: 80px;\n            padding: 22px 24px 16px;\n          `\n        : css`\n            min-height: 80px;\n            padding-right: 24px;\n          `};\n  }\n\n  ${({ noumEditor2 }) => noumEditor2 && paddingForNoumEditor}\n`;\n\nexport const BodyWrapper = styled.div<{\n  headerHeight: number;\n  isCollapse?: boolean;\n  noumEditor2?: boolean;\n}>`\n  height: fit-content;\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  ${customScrollBar}\n  ${({ noumEditor2 }) =>\n    noumEditor2 &&\n    `\n  padding:0px;\n  border-radius: unset !important;\n  `}\n`;\n\nexport const WrapperChildContainer = styled.span<{\n  isBorder?: boolean;\n  isCollapse?: boolean;\n  noumEditor2?: boolean;\n}>`\n  border-radius: ${({ isCollapse }) =>\n    isCollapse ? '16px' : '16px 16px 0px 0px'};\n  border: ${({ isBorder }) =>\n    isBorder && '1px solid var(--border-card-neutral-highlighted)'};\n\n  border-radius: ${({ noumEditor2 }) => noumEditor2 && 'unset'};\n  ${({ noumEditor2 }) =>\n    noumEditor2 &&\n    `border-top: 1px solid var(--border-card-neutral-highlighted);\n    border-bottom: 1px solid var(--border-card-neutral-highlighted);\n  `}\n`;\n\nexport const WrapperRecentTransactions = styled.span<{\n  isBorder?: boolean;\n  hidden?: boolean;\n}>`\n  padding: 16px 0px;\n  border-radius: 0px 0px 16px 16px;\n  height: fit-content;\n  border: ${({ isBorder }) =>\n    isBorder ? '1px solid var(--border-card-neutral-highlighted)' : 'none'};\n  ${({ hidden }) => (hidden ? 'display: none;' : '')}\n`;\n\nexport const TransactionHeading = styled(TSpan)``;\n\nexport const TransactionListsContainer = styled(Stack)``;\n\nexport const SeeAllButton = styled.div<{ textAlign?: Property.TextAlign }>`\n  font-size: 14px;\n  font-weight: 400;\n  font-style: normal;\n  color: var(--text-button-brand-primary-default);\n  font-family: var(--font-family);\n  line-height: 22.4px;\n  text-align: ${({ textAlign }) => textAlign || 'center'};\n`;\n\nexport const LinkButton = styled.div<{\n  disabled ? : boolean;\n}>`\n  font-size: 16px;\n  font-weight: 500;\n  color: var(--text-button-brand-primary-default);\n  line-height: 16px;\n  font-family: var(--font-button-medium-font);\n  text-align: center;\n  ${({ disabled }) => (disabled ? 'pointer-events: none;' : '')}\n  &:hover {\n    cursor: pointer;\n    color: var(--text-button-brand-primary-hover);\n  }\n`;\n","import { forwardRef, type Ref } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ElementWrapper } from '@/screens/Chamber/components/ElementWrapper';\nimport { TSpan } from '@/components/Typography';\n\nimport { ElementStatusEnum } from '@/apollo/generated/types';\n\nimport { useSubWalletAccounts } from '@/features/money/hooks';\nimport convertToCurrency from '@/utils/currencyToCurrency';\nimport { EditModeWrapper } from './styles';\nimport { type WalletElementProps } from './types';\n\nexport const WalletElementEditMode = forwardRef(\n  (props: WalletElementProps, ref: Ref<HTMLDivElement>) => {\n    const { element, spaceId, isNoumEditor2 } = props;\n\n    const { t } = useTranslation();\n    const { subWalletData } = useSubWalletAccounts(\n      spaceId,\n      element?.tempStatus!,\n    );\n\n    return (\n      <ElementWrapper isBorder={false} {...props} ref={ref}>\n        <>\n          <EditModeWrapper justify=\"center\" align=\"center\">\n            <TSpan\n              font=\"body-m\"\n              colorToken=\"--text-placeholder-neutral-default\"\n            >\n              {element.status === ElementStatusEnum.Published\n                ? `${t('noumena.money.money-detail.balanceLabel')}\n                ${convertToCurrency(\n                  Number(subWalletData.subWalletBalance?.value || 0),\n                  subWalletData?.subWalletBalance?.currency!,\n                  2,\n                )}`\n                : t('noumena.chamber_view.walletEditUnPublishedBalanceMode')}\n            </TSpan>\n          </EditModeWrapper>\n          {(props.element.status === ElementStatusEnum.Draft ||\n            props.element.tempStatus === ElementStatusEnum.Unsaved) &&\n            isNoumEditor2 && (\n              <EditModeWrapper justify=\"center\" align=\"center\">\n                <TSpan\n                  font=\"body-m\"\n                  colorToken=\"--text-placeholder-neutral-default\"\n                >\n                  {t('noumena.chamber_view.walletEditUnpublishedMode')}\n                </TSpan>\n              </EditModeWrapper>\n            )}\n        </>\n      </ElementWrapper>\n    );\n  },\n);\n","import { SizedSkeleton } from '@/screens/Chamber/components/elements/SkeletonLoader/StyledSkeletons';\nimport {\n  StyledFlexColumn,\n  StyledFlexRow,\n} from '@/screens/Chamber/components/elements/SkeletonLoader/styled';\nimport { Card } from '@/components/Card';\nimport SkeletonLoaderElementHeader from '@/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderElementHeader';\n\nconst SkeletonLoaderWalletElement = () => (\n  <Card>\n    <StyledFlexColumn gap={21} justify=\"baseline\" align=\"flex-start\">\n      <StyledFlexRow gap={12} justify=\"space-between\" fullWidth>\n        <SkeletonLoaderElementHeader />\n        <StyledFlexRow gap={12}>\n          <SizedSkeleton w={118} h={40} r={8} />\n          <SizedSkeleton w={118} h={40} r={8} />\n        </StyledFlexRow>\n      </StyledFlexRow>\n      <StyledFlexColumn\n        gap={12}\n        fullWidth\n        style={{\n          border: 'solid 1px var(--border-card-neutral-default)',\n          padding: '8px',\n          borderRadius: '16px',\n        }}\n        align=\"flex-start\"\n      >\n        <SizedSkeleton w={118} h={16} r={8} />\n        <SizedSkeleton w={186} h={31} r={8} />\n      </StyledFlexColumn>\n    </StyledFlexColumn>\n  </Card>\n);\n\nexport default SkeletonLoaderWalletElement;\n","import styled from 'styled-components';\nimport { Stack } from '@/layout';\n\nexport const Wrapper = styled(Stack)`\n  background: var(--bg-card-neutral-alt-default);\n  box-sizing: border-box;\n  border-radius: 8px;\n  padding-top: 20px;\n  padding-left: 16px;\n  padding-right: 16px;\n  padding-bottom: 20px;\n  display: flex;\n  flex-direction: row;\n  gap: 16px;\n  width: 100%;\n  height: fit-content;\n  border-bottom: 1px solid var(--bg-tablecell-neutral-alt-default);\n  box-sizing: border-box;\n`;\n\nexport const Profile = styled.img`\n  height: 40px;\n  width: 40px;\n`;\nexport const ProfileWarpper = styled.div`\n  width: 40px;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  align-self: center;\n`;\n\nexport const TransactionDetails = styled.div<{ isMobile: boolean }>`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  width: 80%;\n  overflow: hidden;\n`;\nexport const AccountName = styled.div`\n  width: 100%;\n  color: var(--text-tablecell-header-neutral-highlighted);\n  font-size: var(--font-body-medium-size);\n  font-weight: var(--font-link-large-weight);\n  line-height: var(--font-link-xlarge-lineheight);\n  text-align: left;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  &:hover {\n    overflow: visible;\n    white-space: nowrap;\n  }\n`;\nexport const Account = styled.div`\n  width: 100%;\n  color: var(--text-tablecell-body-neutral-default);\n  font-size: var(--font-footnote-size);\n  font-weight: var(--font-footnote-regular-weight);\n  line-height: var(--font-link-xlarge-lineheight);\n  text-align: left;\n`;\nexport const TransactionAmout = styled.div<{\n  isTransactionWithOwnAccounts: boolean;\n}>`\n  font-family: var(--font-family);\n  align-self: center;\n  color: ${(props) =>\n    props.isTransactionWithOwnAccounts\n      ? 'var(--text-tablecell-header-neutral-default)'\n      : 'var(--text-tablecell-header-neutral-highlighted)'};\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 22.4px;\n  justify-content: flex-end;\n`;\nexport const AmountWrapper = styled.div`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  align-self: center;\n  color: var(--text-tablecell-header-neutral-highlighted);\n  font-size: var(--font-link-medium-size);\n  font-weight: var(--font-link-xlarge-weight);\n  line-height: var(--font-link-xlarge-lineheight);\n  justify-content: flex-end;\n`;\n","import { useTranslation } from 'react-i18next';\nimport { useMemo, useState } from 'react';\nimport { groupBy, isEmpty } from 'lodash';\nimport * as Styles from '@/screens/Money/Payments/Tokens/styles';\nimport {\n  Modal,\n  ModalBody,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { TSpan } from '@/components/Typography';\nimport { Button } from '@/components/Button';\nimport {\n  type AllCurrencyEnum,\n  PaymentAccountTypeEnum,\n} from '@/apollo/generated/types';\nimport mainWallet from '@/assets/images/main-wallet.svg';\nimport { useGetConnectedChamberPaymentsQuery } from '@/apollo/graphql';\nimport { Pagination } from '@/components/Pagination';\nimport { DateFormaterStringInput } from '@/screens/MoneyDetails/ViewTransactions/helper';\nimport convertToCurrency from '@/utils/currencyToCurrency';\nimport { Spacer } from '@/layout';\nimport { formatTimeAMPM } from '@/screens/MoneyDetails/helper';\nimport {\n  AmountWrapper,\n  Profile,\n  ProfileWarpper,\n  TransactionAmout,\n  TransactionDetails,\n  Wrapper,\n  Account,\n  AccountName,\n} from './transactionstyles';\n\nconst TransactionWindow = (props: {\n  open: boolean;\n  onClose: Function;\n  userId: string;\n  chamberId: string;\n  connectedNoumWalletId?: string;\n}) => {\n  const { t } = useTranslation();\n  const [page, setPage] = useState<number>(1);\n  const { data, loading } = useGetConnectedChamberPaymentsQuery({\n    fetchPolicy: 'network-only',\n    variables: {\n      filter: {\n        chamberId: props.chamberId || '',\n        userId: props.userId,\n        endDate: new Date().toISOString().split('T')[0],\n        startDate: '',\n        accountId: props.connectedNoumWalletId,\n        accountType: [PaymentAccountTypeEnum.SubWallet],\n      },\n      limit: 10,\n      page,\n    },\n  });\n\n  const info = useMemo(() => {\n    if (\n      data?.getConnectedChamberPayments &&\n      data?.getConnectedChamberPayments?.data\n    ) {\n      return data?.getConnectedChamberPayments;\n    }\n    return {\n      data: data?.getConnectedChamberPayments?.data,\n      count: data?.getConnectedChamberPayments?.count,\n    };\n  }, [data]);\n\n  const onPageChange = (val: number) => {\n    setPage(val);\n  };\n\n  const groupedByDay = groupBy(info?.data, (item) =>\n    DateFormaterStringInput(item?.createdAt!),\n  );\n\n  return (\n    <Modal\n      enableCloseButton\n      size={ModalSize.L}\n      disableBackdropClick\n      disableEscapeKeyDown\n      onClose={() => props.onClose()}\n      open={props.open}\n    >\n      {loading ? (\n        <>\n          <ModalBody align=\"center\">\n            <Button loading neutral />\n          </ModalBody>\n        </>\n      ) : (\n        <>\n          <ModalHeader>{t(`noumena.connected_noum_transactions`)}</ModalHeader>\n          <ModalBody hideScrollbar overflowY=\"scroll\">\n            {Object.keys(groupedByDay).map((key: string) => (\n              <div key={key} style={{ width: '100%' }}>\n                <Styles.Container>\n                  <Styles.DateContainer>\n                    <TSpan\n                      font=\"body-s\"\n                      colorToken=\"--text-card-neutral-default\"\n                    >\n                      {new Date().getUTCFullYear() === Number(key.split(',')[1])\n                        ? key.split(',')[0]\n                        : key}\n                    </TSpan>\n                  </Styles.DateContainer>\n                </Styles.Container>\n                {groupedByDay[key].length > 0 &&\n                  groupedByDay[key as string].map((transaction) => (\n                    <Wrapper key={transaction?.id}>\n                      <ProfileWarpper>\n                        <Profile src={mainWallet} alt=\"profile\" />\n                      </ProfileWarpper>\n                      <Spacer width={16} />\n                      <TransactionDetails isMobile={false}>\n                        <AccountName>\n                          <span style={{ fontWeight: '400' }}>\n                            {t(\n                              `noumena.money.money-detail.viewStatements.from`,\n                            )}\n                          </span>{' '}\n                          {`${transaction?.sourceDetail?.name || ''} ${\n                            transaction?.sourceDetail?.maskNumber || ''\n                          } ${transaction?.sourceDetail?.accountName || ''}`}\n                        </AccountName>\n                        <Spacer height={2} />\n                        <AccountName>\n                          <span style={{ fontWeight: '400' }}>\n                            {t(`noumena.money.money-detail.viewStatements.to`)}\n                          </span>{' '}\n                          {`${transaction?.destinationDetail?.name || ''}  ${\n                            transaction?.destinationDetail?.accountName || ''\n                          }`}\n                        </AccountName>\n                        <Spacer height={2} />\n                        <Account>\n                          {`${formatTimeAMPM(transaction?.paymentDate)} `}\n                          {transaction?.transactionReason}\n                        </Account>\n                      </TransactionDetails>\n                      <AmountWrapper>\n                        <TransactionAmout isTransactionWithOwnAccounts={false}>\n                          {Number(transaction?.amount) < 0 ? '-' : '+'}\n                          {convertToCurrency(\n                            Math.abs(Number(transaction?.amount)),\n                            transaction?.currency! as AllCurrencyEnum,\n                            2,\n                          )}\n                        </TransactionAmout>\n                      </AmountWrapper>\n                    </Wrapper>\n                  ))}\n                <Spacer height={8} />\n              </div>\n            ))}\n            {isEmpty(groupedByDay) && (\n              <TSpan\n                font=\"body-l\"\n                colorToken=\"--text-modal-neutral-default\"\n                textAlign=\"center\"\n              >\n                {t('noumena.money.noTransactions')}\n              </TSpan>\n            )}\n            {info?.count! > 10 && (\n              <div style={{ alignSelf: 'center' }}>\n                <Spacer height={4} />\n                <Pagination\n                  currentPage={page}\n                  pageSize={10}\n                  totalCount={info.count!}\n                  onPageChange={onPageChange}\n                />\n              </div>\n            )}\n          </ModalBody>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default TransactionWindow;\n","import styled from 'styled-components';\nimport { Stack } from '@/layout';\nimport { type Property } from 'csstype';\n\nexport const Wrapper = styled.div<{ flexDirection?: Property.FlexDirection }>`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 12px;\n  ${({ flexDirection }) => flexDirection && `flex-direction: ${flexDirection};`}\n`;\n\nexport const HeaderButtonsWrapper = styled(Stack)<{\n  isOwner?: boolean;\n  isFullHeader?: boolean;\n}>`\n  display: flex;\n  ${({ isFullHeader }) =>\n    isFullHeader &&\n    `\n  display:grid;\n  grid-template-columns: 1fr 1fr;\n  `}\n`;\n\nexport const ButtonView = styled.div<{ isBackground?: boolean }>`\n  cursor: pointer;\n  padding: 8px;\n  border-radius: 8px;\n  ${({ isBackground }) =>\n    isBackground &&\n    `\n      background-color: var(--bg-button-neutral-default);\n      :hover {\n       background-color: var(--bg-button-neutral-alt-hover);\n      }\n  `}\n`;\n\nexport const ParentWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 12px;\n`;\n","import {\n  forwardRef,\n  type Ref,\n  useCallback,\n  useState,\n  useEffect,\n  useMemo,\n} from 'react';\nimport { useParams } from 'react-router';\nimport * as Sentry from '@sentry/react';\nimport { useTranslation } from 'react-i18next';\nimport { Icon } from '@/components/Icon';\nimport { TSpan } from '@/components/Typography';\nimport { Button } from '@/components/Button';\nimport {\n  DeviceTypeEnum,\n  useDeviceType,\n  useToast,\n  useLaunchDarkly,\n} from '@/hooks';\nimport { useAuth } from '@/features/auth/contexts';\nimport {\n  useCreateCustomerPayeeMutation,\n  useGetAccountsLazyQuery,\n  useGetCustomerPayeeListLazyQuery,\n  useGetSubWalletBalanceLazyQuery,\n  useCreateCustomerUnverifiedMutation,\n  useGetWalletLazyQuery,\n  useCheckWalletExistDetailLazyQuery,\n  useCheckWalletExistsLazyQuery,\n} from '@/apollo/graphql';\nimport {\n  type TPayee,\n  TransactionModal,\n  TransactionModalType,\n} from '@/features/TransactionModal';\nimport { type Icons } from '@/components/Icon/Icon';\nimport { Stack } from '@/layout';\nimport { breakpointsForNoumLayoutColumn } from '@/constants/devices';\nimport {\n  EWalletStatus,\n  NoumenaStatus,\n} from '@/screens/Money/Payments/Wallets/types';\nimport { useNoumContext } from '@/screens/Chamber/ViewChamber/ChamberProvider';\nimport { type WalletheaderProps } from './types';\nimport {\n  ButtonView,\n  Wrapper,\n  ParentWrapper,\n  HeaderButtonsWrapper,\n} from './styles';\nimport { useWalletElement } from '../providers/WalletElementProvider';\nimport CloseWallet from '../../../modals/CloseWallet/Modal';\nimport NonZeroWalletModal from '../../../modals/NonZeroWalletModal/Modal';\n\nconst IconForButton = (iconName: keyof typeof Icons, isShow: boolean) =>\n  isShow ? (\n    <Icon\n      name={iconName}\n      size={24}\n      color=\"--icon-button-brand-secondary-default\"\n    />\n  ) : undefined;\n\nexport const WalletHeader = forwardRef(\n  (\n    {\n      currentTitle = '',\n      refresh,\n      isOwner,\n      subWalletId,\n      columnWidth,\n      element,\n      isEditing,\n      spaceId,\n    }: WalletheaderProps,\n    ref: Ref<HTMLDivElement>,\n  ) => {\n    const {\n      flags: { noumEditor2 },\n    } = useLaunchDarkly();\n    const { t } = useTranslation();\n    const { user } = useAuth();\n    const { space } = useNoumContext();\n    const [payeeGneration, setPayeeGeneration] = useState<boolean>(false);\n    const [\n      createCustomerUnverifiedMutation,\n      { loading: createCustomerLoading, error: unverifedCustomerError },\n    ] = useCreateCustomerUnverifiedMutation();\n\n    const [createCustomerPayeeMutation] = useCreateCustomerPayeeMutation();\n    const [gqlPayee] = useGetCustomerPayeeListLazyQuery({\n      fetchPolicy: 'cache-and-network',\n    });\n    const [gqlAccList] = useGetAccountsLazyQuery({\n      fetchPolicy: 'cache-and-network',\n    });\n\n    const [checkUserStatus, { loading: checkingStatus }] =\n      useGetWalletLazyQuery({\n        fetchPolicy: 'cache-and-network',\n      });\n\n    const [\n      checkSourceDestinationWalletIsValid,\n      { loading: walletExistsLoading },\n    ] = useCheckWalletExistDetailLazyQuery({\n      fetchPolicy: 'cache-first',\n    });\n\n    const [\n      checkNonNoumenaDestinationWallet,\n      { loading: nonNoumenaDestinationWalletLoading },\n    ] = useCheckWalletExistsLazyQuery({\n      fetchPolicy: 'cache-first',\n    });\n\n    const [checkSourceWallet] = useGetWalletLazyQuery({\n      fetchPolicy: 'cache-first',\n    });\n\n    const device = useDeviceType();\n    const isMobile = device === DeviceTypeEnum.MOBILE;\n    const { isCollapse, setIsCollapse } = useWalletElement();\n    const { addToast } = useToast();\n    const { isUnregistered } = useAuth();\n\n    const isFullHeader = useMemo(\n      () => (isMobile || (columnWidth! < 475 && noumEditor2)) && !isEditing,\n      [columnWidth, isEditing, isMobile, noumEditor2],\n    );\n\n    useEffect(() => {\n      async function createCustomer() {\n        try {\n          const { data } = await checkUserStatus();\n          const status = data?.getWalletBalance?.status;\n          if (status === EWalletStatus.CUSTOMER_NOT_CREATED) {\n            await createCustomerUnverifiedMutation();\n          }\n        } catch (error) {\n          Sentry.captureException(error, {\n            tags: {\n              section: 'createCustomerPayeeMutationPayeeInNoumena',\n            },\n          });\n          if (error instanceof Error) {\n            addToast('error', 'none', `${error.message}`);\n          } else {\n            addToast('error', 'none', `Unexpected error occured`);\n          }\n        }\n      }\n      if (isUnregistered) {\n        createCustomer();\n      }\n    }, [\n      addToast,\n      checkUserStatus,\n      createCustomerUnverifiedMutation,\n      isUnregistered,\n    ]);\n\n    const collapseHandler = useCallback(() => {\n      setIsCollapse(!isCollapse);\n    }, [isCollapse, setIsCollapse]);\n\n    const [state, setState] = useState<{\n      open: boolean;\n      modalType: TransactionModalType.TRANSFER | TransactionModalType.PAY;\n      defaultFrom: string | undefined;\n      defaultTo: string | undefined;\n      walletPayee?: TPayee;\n    }>({\n      open: false,\n      modalType: TransactionModalType.PAY,\n      defaultFrom: undefined,\n      defaultTo: undefined,\n    });\n    const { id = '' } = useParams();\n    const [gqlGetSubWalletBalance] = useGetSubWalletBalanceLazyQuery();\n\n    const canPaymentBeMadeToConnectedNoums = useCallback(async () => {\n      let result: boolean = true;\n      if (isUnregistered) {\n        await checkNonNoumenaDestinationWallet({\n          variables: {\n            targetUserId: space?.uid?._id || '',\n          },\n          onError: (err) => {\n            if (err instanceof Error) {\n              result = false;\n              addToast(\n                'error',\n                'none',\n                t('noumena.container.close_subwallet.error_checkwalletquery'),\n              );\n            }\n          },\n          onCompleted: (res) => {\n            if (!res?.checkWalletExists?.target) {\n              addToast(\n                'error',\n                'none',\n                t(`noumena.container.close_subwallet.error_receiver`),\n              );\n              result = false;\n            }\n          },\n        });\n      } else {\n        await checkSourceDestinationWalletIsValid({\n          variables: {\n            sourceUserId: user?._id || '',\n            targetUserId: space?.uid?._id || '',\n            noumId: id,\n          },\n          onError: (err) => {\n            if (err instanceof Error) {\n              result = false;\n              addToast(\n                'error',\n                'none',\n                t('noumena.container.close_subwallet.error_checkwalletquery'),\n              );\n            }\n          },\n          onCompleted: (res) => {\n            if (!res?.checkWalletExistDetail?.sourceWallet) {\n              addToast(\n                'error',\n                'none',\n                t(`noumena.container.close_subwallet.error_owner`),\n              );\n              result = false;\n            }\n            if (!res?.checkWalletExistDetail?.targetWallet) {\n              addToast(\n                'error',\n                'none',\n                t(`noumena.container.close_subwallet.error_receiver`),\n              );\n              result = false;\n            }\n          },\n        });\n      }\n\n      return result;\n    }, [\n      addToast,\n      checkSourceDestinationWalletIsValid,\n      checkNonNoumenaDestinationWallet,\n      id,\n      isUnregistered,\n      space?.uid?._id,\n      user?._id,\n      t,\n    ]);\n\n    const handlePaymentForOwner = useCallback(\n      async (\n        transactionType:\n          | TransactionModalType.TRANSFER\n          | TransactionModalType.PAY,\n      ) => {\n        await checkSourceWallet({\n          onError: (err) => {\n            if (err instanceof Error) {\n              addToast(\n                'error',\n                'none',\n                t('noumena.container.close_subwallet.error_checkwalletquery'),\n              );\n            }\n          },\n          onCompleted: (res) => {\n            if (\n              res?.getWalletBalance?.noumenaStatus === NoumenaStatus.APPROVED\n            ) {\n              setState({\n                open: true,\n                modalType: transactionType,\n                defaultFrom: undefined,\n                defaultTo: undefined,\n              });\n            } else {\n              addToast(\n                'error',\n                'none',\n                t(`noumena.container.close_subwallet.error_owner`),\n              );\n            }\n          },\n        });\n      },\n      [addToast, checkSourceWallet, t],\n    );\n\n    const handlePayeeGeneration = useCallback(async () => {\n      if (isUnregistered && unverifedCustomerError) {\n        addToast('error', 'none', 'Failed to create customer');\n        return;\n      }\n      /* if either source or destination wallet is not active\n    no need to tgrigger payee generation */\n      if (!(await canPaymentBeMadeToConnectedNoums())) {\n        return;\n      }\n\n      setPayeeGeneration(true);\n      const res = await Promise.all([\n        gqlGetSubWalletBalance({\n          fetchPolicy: 'cache-first',\n          variables: {\n            chamberId: id,\n          },\n        }),\n        gqlPayee(),\n        gqlAccList({\n          variables: {\n            input: {\n              self: true,\n              limit: 100,\n              page: 1,\n            },\n          },\n        }),\n      ]);\n      // Wallet is created for the user\n      const connectedUserSubwalletData = res[0].data?.getSubWalletBalance;\n      const payeeList = res[1].data?.getCustomerPayeeList || [];\n      const index = payeeList.findIndex(\n        (payee) => payee?.accountId === connectedUserSubwalletData?.id,\n      );\n      try {\n        let response;\n        if (index === -1) {\n          response = await createCustomerPayeeMutation({\n            variables: {\n              input: {\n                masterWalletId:\n                  connectedUserSubwalletData?.masterWalletId || '',\n                accountId: connectedUserSubwalletData?.id || '',\n              },\n            },\n          });\n        }\n        if (!response || response?.data?.createCustomerPayee?.message) {\n          setState({\n            open: true,\n            modalType: TransactionModalType.PAY,\n            defaultFrom: isUnregistered ? 'PAY_BY_CARD' : undefined,\n            defaultTo: connectedUserSubwalletData?.id || '',\n          });\n        } else {\n          addToast('error', 'none', 'Failed to add payee');\n        }\n      } catch (error) {\n        Sentry.captureException(error, {\n          tags: {\n            section: 'createCustomerPayeeMutationPayeeInNoumena',\n          },\n        });\n        if (error instanceof Error) {\n          addToast('error', 'none', `${error.message}`);\n        } else {\n          addToast('error', 'none', `Unexpected error occured`);\n        }\n      }\n\n      setPayeeGeneration(false);\n    }, [\n      isUnregistered,\n      unverifedCustomerError,\n      gqlGetSubWalletBalance,\n      id,\n      gqlPayee,\n      gqlAccList,\n      addToast,\n      createCustomerPayeeMutation,\n      canPaymentBeMadeToConnectedNoums,\n    ]);\n\n    const defaultPayeeID = isOwner ? undefined : state?.defaultTo;\n\n    const [isSubWalletDeleteModal, setIsSubWalletDeleteModal] =\n      useState<boolean>(false);\n    const [showNonZeroWalletModal, setShowNonZeroWalletModal] =\n      useState<boolean>(false);\n\n    const handleCloseSubWalletModal = () => {\n      setIsSubWalletDeleteModal(false);\n    };\n\n    const handleCloseNonZeroWalletModal = () => {\n      setShowNonZeroWalletModal(false);\n    };\n\n    const walletTitleMaxWidth = useMemo(\n      () =>\n        !!columnWidth && columnWidth <= breakpointsForNoumLayoutColumn.BIG_700PX\n          ? '70%'\n          : 'fit-content',\n      [columnWidth],\n    );\n\n    const walletTitleMaxWidthForEditor1 = useMemo(\n      () => (isMobile ? '100%' : '65%'),\n      [isMobile],\n    );\n\n    return (\n      <ParentWrapper>\n        <Wrapper ref={ref} flexDirection={isFullHeader ? 'column' : 'row'}>\n          <Stack\n            fullWidth={!walletTitleMaxWidth}\n            maxWidth={\n              noumEditor2 ? walletTitleMaxWidth : walletTitleMaxWidthForEditor1\n            }\n            gap={noumEditor2 ? 0 : 12}\n            align=\"center\"\n          >\n            {isUnregistered || noumEditor2 ? undefined : (\n              <ButtonView\n                data-testid=\"collapse-button\"\n                onClick={collapseHandler}\n                isBackground\n              >\n                {isCollapse ? (\n                  <Icon\n                    name=\"chevron_small_down_m\"\n                    size={24}\n                    color=\"--icon-button-neutral-default\"\n                  />\n                ) : (\n                  <Icon\n                    name=\"chevron_small_up_m\"\n                    size={24}\n                    color=\"--icon-button-neutral-default\"\n                  />\n                )}\n              </ButtonView>\n            )}\n            <TSpan\n              font=\"heading-xs-bold\"\n              colorToken=\"--text-body-header-neutral-default\"\n              overflow=\"ellipsis\"\n            >\n              {currentTitle}\n            </TSpan>\n          </Stack>\n\n          {isEditing ? null : (\n            <HeaderButtonsWrapper\n              gap={8}\n              fullWidth={isFullHeader}\n              isOwner={isOwner}\n              isFullHeader={isOwner}\n            >\n              {isOwner && (\n                <Button\n                  secondary\n                  icon={IconForButton('transfer_m', !noumEditor2)}\n                  size=\"full_small\"\n                  primary\n                  onClick={() => {\n                    handlePaymentForOwner(TransactionModalType.TRANSFER);\n                  }}\n                >\n                  {t(`noumena.subWalletHeader.Transfer`)}\n                </Button>\n              )}\n              <Button\n                secondary\n                icon={IconForButton('send_with_m', !noumEditor2)}\n                loading={\n                  payeeGneration ||\n                  createCustomerLoading ||\n                  checkingStatus ||\n                  walletExistsLoading ||\n                  nonNoumenaDestinationWalletLoading\n                }\n                size=\"full_small\"\n                primary\n                onClick={() => {\n                  if (isOwner) {\n                    handlePaymentForOwner(TransactionModalType.PAY);\n                  } else {\n                    handlePayeeGeneration();\n                  }\n                }}\n              >\n                {t(`noumena.subWalletHeader.Pay`)}\n              </Button>\n            </HeaderButtonsWrapper>\n            // </>\n          )}\n        </Wrapper>\n        {state.open && (\n          <TransactionModal\n            open={state.open}\n            handleClose={() => {\n              setState({ ...state, open: false });\n              refresh?.();\n            }}\n            type={state.modalType}\n            defaultAccountID={isOwner ? subWalletId : state.defaultFrom}\n            defaultPayeeID={defaultPayeeID}\n            defaultWalletPayee={state.walletPayee}\n            isDestinationDropdownDisabled={\n              !!state.walletPayee || !!defaultPayeeID\n            }\n            hideToDropdownIcon={isUnregistered}\n          />\n        )}\n        <CloseWallet\n          spaceId={spaceId}\n          elementId={element._id || ''}\n          isOpen={isSubWalletDeleteModal}\n          handleClose={handleCloseSubWalletModal}\n          setShowNonZeroWalletModal={setShowNonZeroWalletModal}\n        />\n        <NonZeroWalletModal\n          isOpen={showNonZeroWalletModal}\n          handleClose={handleCloseNonZeroWalletModal}\n        />\n      </ParentWrapper>\n    );\n  },\n);\n","import styled from 'styled-components';\nimport { Stack } from '@/layout';\n\nexport const Wrapper = styled(Stack)`\n  width: 100%;\n  height: 102px;\n  border-bottom: 1px solid var(--bg-tablecell-neutral-alt-default);\n  box-sizing: border-box;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  padding: 20px 0px;\n  gap: 16px;\n`;\n\nexport const TransactionContent = styled(Stack)``;\n\nexport const Profile = styled.img`\n  height: 40px;\n  width: 40px;\n`;\nexport const ProfileWarpper = styled.div`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  width: 40px;\n`;\n\nexport const TransactionDetails = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  width: 80%;\n  overflow: hidden;\n`;\nexport const AccountName = styled.div`\n  width: 100%;\n  color: var(--text-tablecell-header-neutral-highlighted);\n  font-size: var(--font-body-medium-size);\n  font-weight: var(--font-link-large-weight);\n  line-height: var(--font-link-xlarge-lineheight);\n  text-align: left;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  &:hover {\n    overflow: visible;\n    white-space: nowrap;\n  }\n`;\nexport const Account = styled.div`\n  width: 80%;\n  color: var(--text-card-neutral-default);\n  font-size: var(--font-footnote-size);\n  font-weight: var(--font-footnote-regular-weight);\n  line-height: var(--font-link-xlarge-lineheight);\n  text-align: left;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nexport const TransactionAmout = styled.div<{\n  isMobile: boolean;\n  noumEditor2?: boolean;\n}>`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  align-self: flex-end;\n  float: right;\n  color: var(--text-tablecell-header-neutral-highlighted);\n  font-size: var(--font-link-medium-size);\n  font-weight: var(--font-link-xlarge-weight);\n  line-height: var(--font-link-xlarge-lineheight);\n  justify-content: flex-end;\n  width: ${(props) => (props.isMobile ? '20%' : `100%`)};\n  ${({ noumEditor2 }) => noumEditor2 && `width:67px;`}}\n`;\n","import { useMemo, type FC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  type AllCurrencyEnum,\n  type TransferDetail,\n} from '@/apollo/generated/types';\nimport mainWallet from '@/assets/images/main-wallet.svg';\n\nimport convertToCurrency from '@/utils/currencyToCurrency';\nimport { DeviceTypeEnum, useDeviceType, useLaunchDarkly } from '@/hooks';\nimport { Separator } from '@/components/Separator/Separator';\nimport { Stack } from '@/layout';\nimport {\n  Wrapper,\n  Profile,\n  ProfileWarpper,\n  TransactionDetails,\n  AccountName,\n  Account,\n  TransactionAmout,\n  TransactionContent,\n} from './styles';\n\ninterface Transaction {\n  sourceDetail: TransferDetail | undefined;\n  destinationDetail: TransferDetail | undefined;\n  paymentDate: string | undefined | null;\n  amount: number | undefined | null;\n  transactionReason: string | undefined | null;\n  currency: string | undefined | null;\n  hideTo?: boolean;\n  columnWidth?: number;\n}\n\nconst TransactionCard: FC<Transaction> = ({\n  sourceDetail,\n  destinationDetail,\n  paymentDate,\n  amount,\n  transactionReason,\n  currency,\n  hideTo = false,\n  columnWidth,\n}) => {\n  const {\n    flags: { noumEditor2 },\n  } = useLaunchDarkly();\n  const formatTimeAMPM = (str: string | undefined | null) => {\n    if (!str) return '';\n    const date = new Date(Number(str));\n    let hours = date.getHours();\n    const minutes = date.getMinutes();\n    const ampm = hours >= 12 ? 'PM' : 'AM';\n    hours %= 12;\n    hours = hours || 12; // the hour '0' should be '12'\n    const newminutes = `0${minutes}`.slice(-2);\n    const strTime = `${hours}:${newminutes} ${ampm}`;\n    return strTime;\n  };\n  const { t } = useTranslation();\n  const deviceType = useDeviceType();\n\n  const contentMaxWidth = useMemo(\n    () => (noumEditor2 && columnWidth ? columnWidth - 100 - 32 : undefined),\n    [columnWidth, noumEditor2],\n  );\n\n  return (\n    <Stack fullWidth vertical padding=\"0 16px\">\n      <Wrapper justify=\"space-between\">\n        <TransactionContent\n          gap={16}\n          fullWidth={!contentMaxWidth}\n          align=\"center\"\n          maxWidth={contentMaxWidth}\n        >\n          <ProfileWarpper>\n            <Profile src={mainWallet} alt=\"profile\" />\n          </ProfileWarpper>\n          <TransactionDetails>\n            <AccountName>\n              <span style={{ fontWeight: '400' }}>\n                {t(`noumena.money.money-detail.viewStatements.from`)}\n              </span>{' '}\n              {`${sourceDetail?.name || ''} ${sourceDetail?.maskNumber || ''} ${\n                sourceDetail?.accountName || ''\n              }`}\n            </AccountName>\n            {!hideTo && (\n              <AccountName>\n                <span style={{ fontWeight: '400' }}>\n                  {t(`noumena.money.money-detail.viewStatements.to`)}\n                </span>{' '}\n                {`${destinationDetail?.name || ''}  ${\n                  destinationDetail?.accountName || ''\n                }`}\n              </AccountName>\n            )}\n            <Account>\n              {`${formatTimeAMPM(paymentDate)} `}\n              {transactionReason}\n            </Account>\n          </TransactionDetails>\n        </TransactionContent>\n        <TransactionAmout\n          isMobile={DeviceTypeEnum.MOBILE === deviceType}\n          noumEditor2={noumEditor2}\n        >\n          {Number(amount) < 0 ? '-' : '+'}\n          {convertToCurrency(\n            Math.abs(Number(amount)),\n            currency! as AllCurrencyEnum,\n            2,\n          )}\n        </TransactionAmout>\n      </Wrapper>\n      <Separator fullWidth noMargin />\n    </Stack>\n  );\n};\nexport default TransactionCard;\n","import {\n  forwardRef,\n  type Ref,\n  useCallback,\n  useEffect,\n  useState,\n  useRef,\n} from 'react';\nimport { useNavigate, useParams } from 'react-router';\nimport { useTranslation } from 'react-i18next';\nimport { Stack } from '@/layout';\nimport { useSubWalletAccounts, useTransactions } from '@/features/money/hooks';\nimport { TSpan } from '@/components/Typography/Typography';\nimport {\n  ElementStatusEnum,\n  PaymentAccountTypeEnum,\n  type PaymentFilter,\n  type TransferDetail,\n} from '@/apollo/generated/types';\nimport convertToCurrency from '@/utils/currencyToCurrency';\nimport { useNoumContext } from '@/screens/Chamber/ViewChamber/ChamberProvider';\nimport {\n  useGetConnectedChamberPaymentsQuery,\n  useGetSubWalletBalanceQuery,\n} from '@/apollo/graphql';\nimport SkeletonLoaderWalletElement from '@/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderWalletElement';\nimport { useLaunchDarkly } from '@/hooks';\nimport { format } from 'date-fns';\nimport { useNoumElement } from '@/features/noums/contexts/NoumElementContext';\nimport TransactionWindow from './TransactionWindow';\nimport WalletHeader from './WalletHeader';\nimport {\n  BodyWrapper,\n  WrapperChildContainer,\n  LinkButton,\n  WrapperRecentTransactions,\n  TransactionHeading,\n  SeeAllButton,\n  ViewModeWrapper,\n  HeaderWrapper,\n  MainWrapper,\n  Wrapper,\n  TransactionListsContainer,\n} from './styles';\nimport TransactionCard from './Transaction';\nimport { type WalletElementProps } from './types';\nimport { useWalletElement } from './providers/WalletElementProvider';\n\nexport const WalletElementViewMode = forwardRef(\n  (props: WalletElementProps, ref: Ref<HTMLDivElement>) => {\n    const {\n      flags: { noumEditor2 },\n    } = useLaunchDarkly();\n    const { spaceId, currentTitle, element, isOwner, isEditing } = props;\n    const { space } = useNoumContext();\n    const { columnWidth } = useNoumElement();\n    const { id = '' } = useParams();\n    const [filter, setFilter] = useState<PaymentFilter>({});\n    const date = useRef<string>(format(new Date(), 'yyyy-MM-dd'));\n\n    const [showConnectedNoumtransactions, setShowConnectedNoumtransactions] =\n      useState<boolean>(false);\n    const { isCollapse } = useWalletElement();\n\n    const { t } = useTranslation();\n    const { subWalletData, refetch: refreshBalance } = useSubWalletAccounts(\n      spaceId,\n      element?.status!,\n    );\n    const favouriteConnected = space?.connectionRole === 'FAVORITE';\n    const { data } = useGetSubWalletBalanceQuery({\n      variables: {\n        chamberId: space?._id || '',\n      },\n      skip: isOwner || !favouriteConnected,\n    });\n    const connectedNoumSubWallet = data?.getSubWalletBalance?.id ?? undefined;\n    const favouriteConnectedBalance = data?.getSubWalletBalance?.amount;\n\n    const {\n      data: connectedChamberPaymentsData,\n      refetch: refreshConnectedUserTransactionList,\n    } = useGetConnectedChamberPaymentsQuery({\n      variables: {\n        filter: {\n          chamberId: id || '',\n          userId: space?.uid?._id || '',\n          endDate: date.current,\n          startDate: '',\n          accountId: connectedNoumSubWallet,\n          accountType: [PaymentAccountTypeEnum.SubWallet],\n        },\n        limit: 2,\n        page: 1,\n      },\n      skip: isOwner,\n    });\n\n    const connectedNoumTransactions =\n      connectedChamberPaymentsData?.getConnectedChamberPayments?.data ?? [];\n\n    useEffect(() => {\n      if (subWalletData?.id) {\n        setFilter({\n          endDate: date.current,\n          startDate: '',\n          accountId: `${subWalletData.id}`,\n          accountType: [PaymentAccountTypeEnum.SubWallet],\n        });\n      }\n    }, [subWalletData.id]);\n\n    const { transactionData, refresh: refreshTransactionList } =\n      useTransactions({\n        filter,\n        limit: 2,\n        page: 1,\n        disabled:\n          isCollapse ||\n          !isOwner ||\n          (noumEditor2 &&\n            isEditing &&\n            element.status !== ElementStatusEnum.Published),\n      });\n\n    const navigate = useNavigate();\n\n    const handleNavigation = useCallback(async () => {\n      if (isEditing) return;\n      if (isOwner) {\n        navigate(\n          `/view-transactions/${PaymentAccountTypeEnum.SubWallet}/${subWalletData.id}`,\n        );\n      } else {\n        setShowConnectedNoumtransactions(true);\n      }\n    }, [isEditing, isOwner, navigate, subWalletData.id]);\n\n    const closeTransactionWindowForConnectedNoum = useCallback(() => {\n      setShowConnectedNoumtransactions(false);\n    }, []);\n\n    if (subWalletData?.loading) {\n      return <SkeletonLoaderWalletElement />;\n    }\n\n    return (\n      <Wrapper data-testid=\"mew-wrapper\" ref={ref} id={element._id || ''}>\n        <MainWrapper data-testid=\"mew-main-wrapper\">\n          <HeaderWrapper isElement noumEditor2={noumEditor2}>\n            <WalletHeader\n              {...props}\n              subWalletId={subWalletData.id || ''}\n              spaceId={spaceId}\n              currentTitle={currentTitle}\n              refresh={() => {\n                refreshBalance();\n                if (isOwner) {\n                  refreshTransactionList();\n                } else {\n                  refreshConnectedUserTransactionList();\n                }\n              }}\n              isOwner={isOwner}\n            />\n          </HeaderWrapper>\n          {!subWalletData.loading && (\n            <BodyWrapper\n              isCollapse={isCollapse}\n              headerHeight={0}\n              noumEditor2={noumEditor2}\n            >\n              <WrapperChildContainer\n                isBorder={!noumEditor2}\n                isCollapse={isCollapse}\n                noumEditor2={noumEditor2}\n              >\n                {(isOwner || favouriteConnected) && (\n                  <ViewModeWrapper noumEditor2={noumEditor2}>\n                    <TSpan\n                      font=\"footnote\"\n                      colorToken=\"--text-card-neutral-default\"\n                    >\n                      {t(\n                        'noumena.container.close_subwallet.view_availablebanlance',\n                      )}\n                    </TSpan>\n                    <TSpan\n                      font=\"heading-s\"\n                      colorToken=\"--text-card-neutral-highlighted\"\n                    >\n                      {isOwner\n                        ? convertToCurrency(\n                            Number(subWalletData.subWalletBalance?.value),\n                            subWalletData?.subWalletBalance?.currency!,\n                            2,\n                          )\n                        : favouriteConnected\n                        ? convertToCurrency(\n                            Number(favouriteConnectedBalance?.value),\n                            favouriteConnectedBalance?.currency!,\n                            2,\n                          )\n                        : null}\n                    </TSpan>\n                    {props.isEditing &&\n                      element.status !== ElementStatusEnum.Published && (\n                        <TSpan\n                          font=\"footnote\"\n                          colorToken=\"--text-card-neutral-default\"\n                        >\n                          {t('noumena.editor.wallet.publish_description')}\n                        </TSpan>\n                      )}\n                  </ViewModeWrapper>\n                )}\n              </WrapperChildContainer>\n              <WrapperRecentTransactions\n                isBorder={!noumEditor2}\n                hidden={isCollapse}\n              >\n                <Stack fullWidth padding=\"0 16px\">\n                  <TransactionHeading\n                    font=\"body-m-bold\"\n                    colorToken=\"--text-card-neutral-default\"\n                  >\n                    {t(\n                      'noumena.container.close_subwallet.view_recentTransactions',\n                    )}\n                  </TransactionHeading>\n                </Stack>\n                <TransactionListsContainer vertical>\n                  {isOwner\n                    ? transactionData.data.length > 0 &&\n                      transactionData.data.map((transaction) => (\n                        <TransactionCard\n                          key={transaction?.id}\n                          sourceDetail={\n                            transaction?.sourceDetail as TransferDetail\n                          }\n                          destinationDetail={\n                            transaction?.destinationDetail as TransferDetail\n                          }\n                          paymentDate={transaction?.paymentDate}\n                          amount={transaction?.amount}\n                          transactionReason={transaction?.transactionReason}\n                          currency={transaction?.currency}\n                          columnWidth={columnWidth}\n                        />\n                      ))\n                    : connectedNoumTransactions.length > 0 &&\n                      connectedNoumTransactions.map((transaction) => (\n                        <TransactionCard\n                          key={transaction?.id}\n                          sourceDetail={\n                            transaction?.sourceDetail as TransferDetail\n                          }\n                          destinationDetail={\n                            transaction?.destinationDetail as TransferDetail\n                          }\n                          paymentDate={transaction?.paymentDate}\n                          amount={transaction?.amount}\n                          transactionReason={transaction?.transactionReason}\n                          currency={transaction?.currency}\n                          hideTo={!isOwner}\n                          columnWidth={columnWidth}\n                        />\n                      ))}\n                </TransactionListsContainer>\n                {transactionData.data.length === 0 && isOwner && (\n                  <SeeAllButton\n                    textAlign=\"center\"\n                    style={{ padding: '0 16px' }}\n                  >\n                    <TSpan\n                      font=\"footnote\"\n                      colorToken=\"--text-placeholder-neutral-default\"\n                    >\n                      {t(\n                        noumEditor2\n                          ? 'noumena.editor.wallet.no_transactions'\n                          : 'noumena.container.close_subwallet.noTransactionsFound',\n                      )}\n                    </TSpan>\n                  </SeeAllButton>\n                )}\n                {connectedNoumTransactions.length === 0 && !isOwner && (\n                  <SeeAllButton\n                    textAlign=\"center\"\n                    style={{ padding: '0 16px' }}\n                  >\n                    <TSpan\n                      font=\"footnote\"\n                      colorToken=\"--text-placeholder-neutral-default\"\n                    >\n                      {t(\n                        noumEditor2\n                          ? 'noumena.editor.wallet.no_transactions'\n                          : 'noumena.container.close_subwallet.noTransactionsFound',\n                      )}\n                    </TSpan>\n                  </SeeAllButton>\n                )}\n                {(!!transactionData.data.length ||\n                  !!connectedNoumTransactions.length) && (\n                  <Stack fullWidth justify=\"center\" padding=\"16px 0px 0px 0px\">\n                    <LinkButton\n                      onClick={() => handleNavigation()}\n                      disabled={isEditing}\n                    >\n                      {t('noumena.container.subwallet.seeAllTransactions')}\n                    </LinkButton>\n                  </Stack>\n                )}\n              </WrapperRecentTransactions>\n              {showConnectedNoumtransactions && (\n                <TransactionWindow\n                  open={showConnectedNoumtransactions}\n                  onClose={closeTransactionWindowForConnectedNoum}\n                  userId={space?.uid?._id || ''}\n                  connectedNoumWalletId={connectedNoumSubWallet}\n                  chamberId={id}\n                />\n              )}\n            </BodyWrapper>\n          )}\n        </MainWrapper>\n      </Wrapper>\n    );\n  },\n);\n","import { forwardRef, type Ref } from 'react';\nimport { useLaunchDarkly } from '@/hooks';\nimport { type WalletElementProps } from './types';\nimport { WalletElementEditMode } from './WalletElementEditMode';\nimport { WalletElementViewMode } from './WalletElementViewMode';\nimport { WalletElementProvider } from './providers/WalletElementProvider';\n\nexport const WalletElement = forwardRef(\n  (props: WalletElementProps, ref: Ref<HTMLDivElement>) => {\n    const {\n      flags: { noumEditor2 },\n    } = useLaunchDarkly();\n    if (props.isEditing && !noumEditor2) {\n      return <WalletElementEditMode {...props} ref={ref} />;\n    }\n    return (\n      <WalletElementProvider>\n        <WalletElementViewMode\n          {...{\n            ...props,\n            isOwner: props.isEditing && noumEditor2 ? true : props.isOwner,\n          }}\n          ref={ref}\n        />\n      </WalletElementProvider>\n    );\n  },\n);\n","import {\n  createContext,\n  type FC,\n  type ReactNode,\n  useContext,\n  useMemo,\n  useState,\n} from 'react';\nimport { useLaunchDarkly } from '@/hooks';\n\nexport interface IQuickQuestionsElementContext {\n  isCollapse: boolean;\n  setIsCollapse: (value: boolean) => void;\n}\n\nexport const initialValue: IQuickQuestionsElementContext = {\n  isCollapse: true,\n  setIsCollapse: () => {},\n};\n\nexport const QuickQuestionsElementContext =\n  createContext<IQuickQuestionsElementContext>(initialValue);\n\nexport const QuickQuestionsElementProvider: FC<{ children: ReactNode }> = ({\n  children,\n}) => {\n  const {\n    flags: { noumEditor2 },\n  } = useLaunchDarkly();\n  const [isCollapse, setIsCollapse] = useState(true);\n\n  const value = useMemo(\n    () => ({\n      isCollapse: isCollapse && !noumEditor2,\n      setIsCollapse,\n    }),\n    [isCollapse, noumEditor2],\n  );\n\n  return (\n    <QuickQuestionsElementContext.Provider value={value}>\n      {children}\n    </QuickQuestionsElementContext.Provider>\n  );\n};\n\nexport const useQuickQuestionsElementContext = () =>\n  useContext(QuickQuestionsElementContext);\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n`;\n\nexport const ButtonView = styled.div<{ isBackground?: boolean }>`\n  cursor: pointer;\n  padding: 8px;\n  color: var(--icon-button-neutral-default);\n  border-radius: 8px;\n  ${({ isBackground }) =>\n    isBackground &&\n    `\n      background-color: var(--bg-button-neutral-default);\n      :hover {\n       background-color: var(--bg-button-neutral-alt-hover);\n      }\n    `}\n`;\n","export const QuickQuestionsWrapperTestId = 'quick-questions-wrapper';\nexport const NoQuestionsAddedYetTextTestId = 'no-questions-added-yet-text';\nexport const NoQuestionsIconTestId = 'no-questions-icon';\nexport const AddFirstQuestionButtonTestId = 'add-first-question-button';\nexport const QuickQuestionsCollapseButtonTestId =\n  'quick-questions-collapse-button';\nexport const QuickQuestionsEditWrapperTestId = 'quick-questions-edit-wrapper';\n","import { forwardRef, type Ref, useCallback } from 'react';\nimport { Icon } from '@/components/Icon';\nimport { TSpan } from '@/components/Typography';\nimport { Button } from '@/components/Button';\nimport { useLaunchDarkly } from '@/hooks';\nimport { Spacer } from '@/layout';\nimport { CustomPreviewTabEnum } from '@/screens/Chamber/CustomPreview/constants';\nimport { useQuickQuestionsElementContext } from '../../providers/QuickQuestionsElementProvider';\nimport { ButtonView, Wrapper } from './styles';\nimport { type QuickQuestionsElementHeaderProps } from './types';\nimport { QuickQuestionsCollapseButtonTestId } from '../../testIds';\n\nexport const QuickQuestionsElementHeader = forwardRef(\n  (\n    {\n      currentTitle = '',\n      openAddQuestionModal,\n      isAllowed,\n      selectedCustomPreviewTab,\n      openQuestionCount,\n    }: QuickQuestionsElementHeaderProps,\n    ref: Ref<HTMLDivElement>,\n  ) => {\n    const {\n      flags: { noumEditor2 },\n    } = useLaunchDarkly();\n    const { isCollapse, setIsCollapse } = useQuickQuestionsElementContext();\n\n    const onCollapseButtonClick = useCallback(() => {\n      setIsCollapse(!isCollapse);\n    }, [isCollapse, setIsCollapse]);\n\n    return (\n      <Wrapper ref={ref}>\n        {!noumEditor2 && (\n          <ButtonView\n            data-testid={QuickQuestionsCollapseButtonTestId}\n            onClick={onCollapseButtonClick}\n            isBackground\n          >\n            <Icon\n              name={isCollapse ? 'chevron_small_down_m' : 'chevron_small_up_m'}\n              color=\"--icon-button-neutral-default\"\n              size={24}\n            />\n          </ButtonView>\n        )}\n        <TSpan\n          font=\"heading-xs-bold\"\n          colorToken=\"--text-body-header-neutral-default\"\n        >\n          {currentTitle}\n        </TSpan>\n        <Spacer isFlex />\n        {isAllowed && (!noumEditor2 || openQuestionCount)\n          ? selectedCustomPreviewTab !== CustomPreviewTabEnum.Preview && (\n              <Button\n                size=\"small\"\n                type=\"button\"\n                onClick={openAddQuestionModal}\n                icon={\n                  <Icon\n                    name=\"add_s\"\n                    size={16}\n                    color={\n                      noumEditor2\n                        ? '--icon-button-brand-secondary-default'\n                        : '--icon-button-neutral-alt-default'\n                    }\n                  />\n                }\n                primary={!noumEditor2}\n                secondary={noumEditor2}\n              />\n            )\n          : null}\n      </Wrapper>\n    );\n  },\n);\n","import styled from 'styled-components';\nimport { sizes } from '@/constants/devices';\n\nexport const StyledTabWrapper = styled.div<{\n  fullWidth?: boolean;\n}>`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  ${({ fullWidth }) => fullWidth && 'width: 100%;'}\n\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    padding-top: 0;\n  }\n`;\n","import { t } from 'i18next';\nimport { subDays } from 'date-fns';\nimport ImageEditor from '@/screens/Chamber/components/elements/ImageElement/ImageEditor';\nimport { TextArea } from '@/components/TextArea/TextArea';\nimport { DatePicker } from '@/components/DatePicker';\nimport { type EditElementProps } from './types';\nimport { StyledTabWrapper } from './styles';\n\nexport const EditElement = ({\n  question,\n  date,\n  url,\n  handleChangeTitle,\n  handleChangeDate,\n  onContentChange,\n}: EditElementProps) => (\n  <StyledTabWrapper data-testid=\"EditElementWrapper\" fullWidth>\n    <TextArea\n      data-testid=\"tTextArea\"\n      placeholder={t('noumena.chamber.quick_question.question')}\n      value={question}\n      resize={false}\n      maxLength={250}\n      onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) =>\n        handleChangeTitle(e.target.value)\n      }\n    />\n    <DatePicker\n      minDate={new Date()}\n      required\n      placement=\"bottom-end\"\n      value={date && new Date(date)}\n      label={t('noumena.chamber.quick_question.expiry_date')}\n      onChange={handleChangeDate}\n      disabled={{ from: new Date(0), to: subDays(new Date(), 1) }}\n    />\n\n    <ImageEditor\n      url={url}\n      onContentChange={onContentChange}\n      noumEditor2={false}\n    />\n  </StyledTabWrapper>\n);\n","import { useCallback } from 'react';\nimport { t } from 'i18next';\nimport * as Sentry from '@sentry/react';\nimport { useCreateQuestionMutation } from '@/apollo/graphql';\nimport { useToast } from '@/hooks';\nimport { type HelperProps } from './types';\n\nexport function useAddQuestionHelper({\n  spaceId,\n  resetData,\n  closeModal,\n  question,\n  url,\n  date,\n  refetch,\n}: HelperProps) {\n  const { addToast } = useToast();\n\n  const [createQuestion, { loading }] = useCreateQuestionMutation();\n\n  const handleError = useCallback(\n    (error: String | Error | null) => {\n      addToast('error', 'none', `${error}`);\n    },\n    [addToast],\n  );\n\n  const handleSuccess = useCallback(() => {\n    addToast(\n      'success',\n      'none',\n      `${t('noumena.chamber_edit.add_question.question_saved')}`,\n    );\n  }, [addToast]);\n\n  const handleSaveChanges = useCallback(async () => {\n    const input = {\n      body: question,\n      spaceId,\n      questionImage: url,\n      expiryDate: date?.toDateString() ?? new Date().toDateString(),\n    };\n    await createQuestion({\n      variables: { input },\n      onError: ({ networkError = null, graphQLErrors = [] }) => {\n        const [err] = graphQLErrors;\n        const error = t('noumena.toast_error.text');\n        handleError(\n          err?.message\n            ? `${error}: ${err?.message}`\n            : `${error}: ${networkError}`,\n        );\n        Sentry.captureException(new Error(err?.message ?? networkError), {\n          tags: {\n            section: 'createQuestionMutation',\n          },\n        });\n      },\n      onCompleted: () => {\n        handleSuccess();\n        if (refetch) {\n          refetch();\n        }\n        resetData();\n        closeModal();\n      },\n    });\n  }, [\n    question,\n    spaceId,\n    url,\n    date,\n    createQuestion,\n    handleError,\n    handleSuccess,\n    refetch,\n    resetData,\n    closeModal,\n  ]);\n\n  return {\n    loading,\n    handleSaveChanges,\n  };\n}\n","import { useCallback, useEffect, useState } from 'react';\nimport { t } from 'i18next';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { Button } from '@/components/Button';\nimport { useWindowDimensions } from '@/hooks/dimensions';\nimport { Spacer } from '@/layout';\nimport { breakpoints } from '@/constants/devices';\nimport { type AddQuestionProps, type EditElementSchema } from './types';\nimport { EditElement } from './EditElement';\nimport { useAddQuestionHelper } from './useAddQuestionHelper';\n\nconst AddQuestion = ({\n  isEmpty = true,\n  spaceId,\n  refetch,\n  onClose,\n  isOpen,\n}: AddQuestionProps) => {\n  const [question, setQuestion] = useState<string>('');\n  const [url, setUrl] = useState<string>('');\n  const [date, setDate] = useState<Date | undefined>();\n\n  const setDateMethod = (value?: Date) => {\n    setDate(value);\n  };\n\n  const onContentChange = (value: string) => {\n    setUrl(value);\n  };\n\n  const elementSchema = yup\n    .object({\n      question: yup.string().required().max(250),\n      date: yup.date().required(),\n    })\n    .required();\n\n  const {\n    reset,\n    trigger,\n    setValue,\n    formState: { isValid },\n  } = useForm<EditElementSchema>({\n    resolver: yupResolver(elementSchema),\n    mode: 'all',\n    reValidateMode: 'onBlur',\n  });\n\n  const resetData = useCallback(() => {\n    reset();\n    setQuestion('');\n    setDate(undefined);\n    setUrl('');\n  }, [reset]);\n\n  const closeModal = useCallback(() => {\n    resetData();\n    onClose();\n  }, [onClose, resetData]);\n\n  const { width } = useWindowDimensions();\n  const { handleSaveChanges, loading } = useAddQuestionHelper({\n    spaceId,\n    resetData,\n    closeModal,\n    question,\n    url,\n    date,\n    refetch,\n  });\n  const isDesktop = width > breakpoints.LAPTOP - 1;\n\n  useEffect(() => {\n    setValue('question', question);\n    setValue('date', date ?? new Date());\n    trigger('date');\n    trigger('question');\n  }, [question, date, setValue, trigger]);\n\n  return (\n    <Modal\n      open={isOpen}\n      onClose={closeModal}\n      testId=\"add_question_modal\"\n      enableCloseButton\n      size={ModalSize.XL}\n      disableBackdropClick\n    >\n      <ModalHeader>{t('noumena.chamber_edit.add_question')}</ModalHeader>\n      <ModalBody tabletFlex isFullScreen={!isDesktop} minHeight=\"60vh\">\n        <EditElement\n          question={question}\n          date={date}\n          url={url}\n          handleChangeTitle={setQuestion}\n          handleChangeDate={setDateMethod}\n          onContentChange={onContentChange}\n        />\n        <Spacer height={8} />\n      </ModalBody>\n      <ModalFooter gap={16} marginTop={16}>\n        <Button\n          data-testid=\"cancel_button\"\n          tertiary\n          size=\"full\"\n          onClick={closeModal}\n        >\n          {t('noumena.cancel')}\n        </Button>\n        <Button\n          data-testid=\"ask_question_button\"\n          size=\"full\"\n          primary={!isEmpty || isValid}\n          disabled={!isValid || loading}\n          onClick={handleSaveChanges}\n          loading={loading}\n        >\n          {t('noumena.chamber_edit.visibility.ask_question')}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default AddQuestion;\n","import styled from 'styled-components';\nimport { Stack } from '@/layout';\n\nexport const Wrapper = styled(Stack).attrs((props) => ({\n  ...props,\n  gap: 16,\n}))``;\n\nexport const AvatarWrapper = styled.div``;\n\nexport const ContentWrapper = styled.div<{ isMyAnswer: boolean }>`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 12px;\n  border-radius: 8px;\n  background-color: ${({ isMyAnswer }) =>\n    isMyAnswer\n      ? 'var(--bg-comment-brand-secondary-default)'\n      : 'var(--bg-comment-neutral-default)'};\n`;\n\nexport const HeaderWrapper = styled(Stack).attrs((props) => ({\n  ...props,\n  justify: 'space-between',\n}))``;\n\nexport const TipWrapper = styled(Stack).attrs((props) => ({\n  ...props,\n  align: 'center',\n  gap: 12,\n}))``;\n","import { type AnswerOutput } from '@/apollo/generated/types';\n\nexport enum AnswerElementType {\n  MY_ANSWERS = 'MyAnswers',\n  MY_TIPS = 'MyTips',\n  ALL_ANSWERS_MODAL = 'AllAnswersModal',\n}\n\nexport type AnswerProps = {\n  answer: AnswerOutput;\n  type: AnswerElementType;\n  isClosedQuestion: boolean;\n  onTip?: () => Promise<void>;\n  onShowAllTips?: () => void;\n};\n","import { type FC, useCallback, useMemo, useState } from 'react';\nimport { t } from 'i18next';\nimport { Trans } from 'react-i18next';\nimport { sumBy } from 'lodash';\nimport { Avatar } from '@/components/Avatar/Avatar';\nimport { Button } from '@/components/Button';\nimport { TSpan } from '@/components/Typography';\nimport { UserUtil } from '@/utils/user';\nimport { distanceDate } from '@/utils/date';\nimport convertToCurrency from '@/utils/currencyToCurrency';\nimport { CurrencyEnum, type TipOutput } from '@/apollo/generated/types';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useLaunchDarkly } from '@/hooks/launchDarkly';\nimport { useNoumContext } from '@/screens/Chamber/ViewChamber/ChamberProvider';\nimport {\n  AvatarWrapper,\n  ContentWrapper,\n  HeaderWrapper,\n  TipWrapper,\n  Wrapper,\n} from './styles';\nimport { AnswerElementType, type AnswerProps } from './types';\n\nconst TipsSection = (\n  props: {\n    userId: string;\n    tips: TipOutput[];\n    showTipButton?: boolean;\n  } & Pick<AnswerProps, 'onTip' | 'onShowAllTips'>,\n) => {\n  const [isChecking, setIsChecking] = useState(false);\n  const { userId, tips, showTipButton, onTip, onShowAllTips } = props;\n  const hasTips = tips.length > 0;\n  const hasMyTip = tips.some((tip) => tip.tipBy?._id === userId);\n  const i18nKey =\n    hasMyTip && tips.length === 1\n      ? 'noumena.quick_questions.users_tipped'\n      : 'noumena.quick_questions.tipped_by_users';\n\n  const tipAmount = convertToCurrency(\n    sumBy(tips, 'amount'),\n    CurrencyEnum.Usd,\n    2,\n  );\n\n  const users = useMemo(() => {\n    if (!hasTips) return undefined;\n\n    let value = hasMyTip\n      ? t('noumena.quick_questions.you')\n      : UserUtil.renderFullName(tips[0].tipBy);\n    if (tips.length === 2) {\n      value += ` and ${tips.length - 1} user`;\n    }\n    if (tips.length > 2) {\n      value += ` and ${tips.length - 1} users`;\n    }\n\n    return value;\n  }, [hasMyTip, hasTips, tips]);\n\n  const handleTip = useCallback(async () => {\n    setIsChecking(true);\n    await onTip?.();\n    setIsChecking(false);\n  }, [onTip]);\n\n  return (\n    <TipWrapper>\n      {showTipButton && !hasMyTip && (\n        <Button loading={isChecking} size=\"small\" neutral onClick={handleTip}>\n          {t('noumena.quick_questions.tip')}\n        </Button>\n      )}\n      {hasTips && (\n        <TSpan\n          cursor={onShowAllTips ? 'pointer' : undefined}\n          font=\"body-m\"\n          colorToken=\"--text-card-neutral-default\"\n          onClick={onShowAllTips}\n        >\n          <Trans\n            i18nKey={i18nKey}\n            values={{\n              users,\n              tipAmount,\n            }}\n            components={{\n              TipAmount: (\n                <TSpan\n                  font=\"body-m-bold\"\n                  colorToken=\"--text-card-neutral-highlighted\"\n                />\n              ),\n            }}\n          />\n        </TSpan>\n      )}\n    </TipWrapper>\n  );\n};\n\nconst Answer: FC<AnswerProps> = (props) => {\n  const { answer, type, isClosedQuestion, onTip, onShowAllTips } = props;\n  const { user } = useAuth();\n  const { isConnected, isOwner } = useNoumContext();\n  const {\n    flags: { webTips },\n  } = useLaunchDarkly();\n  const {\n    fullName,\n    createdDateAtTime,\n    avatarUrl,\n    isAvatar,\n    isAllAnswersModal,\n    isMyAnswer,\n  } = useMemo(\n    () => ({\n      fullName: UserUtil.renderFullName(answer?.user),\n      createdDateAtTime: distanceDate(answer.createdAt),\n      avatarUrl: UserUtil.getProfilePicture(answer.user),\n      isAvatar: [\n        AnswerElementType.ALL_ANSWERS_MODAL,\n        AnswerElementType.MY_TIPS,\n      ].includes(type),\n      isAllAnswersModal: type === AnswerElementType.ALL_ANSWERS_MODAL,\n      isMyAnswer: answer.user?._id === user?._id,\n    }),\n    [answer, type, user],\n  );\n  const isVisitableOtherProfile = !(\n    isMyAnswer ||\n    UserUtil.isUnregistered(user) ||\n    UserUtil.isUnregistered(answer.user)\n  );\n\n  const onClickUser = useCallback(() => {\n    if (!isVisitableOtherProfile) return;\n    UserUtil.goToUserProfile(answer.user);\n  }, [answer.user, isVisitableOtherProfile]);\n\n  return (\n    <Wrapper fullWidth>\n      {isAvatar && (\n        <AvatarWrapper>\n          <Avatar\n            url={avatarUrl}\n            size=\"L\"\n            onClick={onClickUser}\n            overridedIcon={\n              type === AnswerElementType.MY_TIPS\n                ? isMyAnswer\n                  ? 'arrow_down_m'\n                  : 'arrow_up_m'\n                : undefined\n            }\n          />\n        </AvatarWrapper>\n      )}\n      <ContentWrapper isMyAnswer={isMyAnswer && isAllAnswersModal}>\n        <HeaderWrapper fullWidth>\n          <TSpan\n            font=\"body-m-bold\"\n            cursor={isVisitableOtherProfile ? 'pointer' : 'default  '}\n            colorToken={\n              isMyAnswer && isAllAnswersModal\n                ? '--text-comment-brand-primary-default'\n                : '--text-comment-header-neutral-highlighted'\n            }\n            onClick={onClickUser}\n          >\n            {isMyAnswer\n              ? t(\n                  isAllAnswersModal\n                    ? 'noumena.quick_questions.you'\n                    : 'noumena.quick_questions.your_answer',\n                )\n              : fullName}\n          </TSpan>\n          {isAllAnswersModal && (\n            <TSpan\n              font=\"body-m\"\n              colorToken={\n                isMyAnswer\n                  ? '--text-timestamp-brand-primary-default'\n                  : '--text-timestamp-neutral-default'\n              }\n            >\n              {createdDateAtTime}\n            </TSpan>\n          )}\n        </HeaderWrapper>\n        <TSpan font=\"body-m\" colorToken=\"--text-comment-neutral-highlighted\">\n          {answer.body}\n        </TSpan>\n        {webTips && (\n          <TipsSection\n            userId={user?._id || ''}\n            tips={answer.tipDetails || []}\n            showTipButton={\n              !isClosedQuestion &&\n              (isConnected || isOwner) &&\n              !isMyAnswer &&\n              isAllAnswersModal\n            }\n            onTip={onTip}\n            onShowAllTips={onShowAllTips}\n          />\n        )}\n      </ContentWrapper>\n    </Wrapper>\n  );\n};\n\nexport default Answer;\n","import { useCallback, useMemo, useState } from 'react';\nimport { t } from 'i18next';\nimport { endOfYesterday } from 'date-fns';\nimport { ModalBody, ModalHeader, ModalSize } from '@/components/ExtendedModal';\nimport { Modal } from '@/components/ExtendedModal/Modal';\nimport { TSpan } from '@/components/Typography';\nimport { Spacer, Stack } from '@/layout';\nimport { cleanList, sortList } from '@/utils/list';\nimport {\n  TransactionModal,\n  TransactionModalType,\n} from '@/features/TransactionModal';\nimport { type AnswerOutput } from '@/apollo/generated/types';\nimport {\n  useCheckWalletExistsLazyQuery,\n  useGetQuestionAnswersQuery,\n} from '@/apollo/graphql';\nimport Answer, { AnswerElementType } from '../../components/Answer';\nimport { type AllAnswerProps } from './types';\n\nconst AllAnswerModal = ({\n  question,\n  onClose,\n  isOpen,\n  onShowAllTips,\n}: AllAnswerProps) => {\n  const [openTransactionModal, setOpenTransactionModal] = useState<\n    AnswerOutput | false\n  >(false);\n  const [answers, setAnswers] = useState<AnswerOutput[]>([]);\n\n  const isClosed = useMemo(\n    () =>\n      question.expiryDate\n        ? new Date(question.expiryDate).getTime() <\n          new Date(endOfYesterday()).getTime()\n        : true,\n    [question],\n  );\n  const { refetch } = useGetQuestionAnswersQuery({\n    skip: !isOpen,\n    variables: {\n      spaceId: question.spaceId?._id!,\n      questionId: question._id!,\n      offset: 0,\n    },\n    onCompleted: (data) => {\n      setAnswers(\n        sortList(cleanList(data?.getQuestionAnswers?.data), 'createdAt'),\n      );\n    },\n  });\n  const [checkWalletExists] = useCheckWalletExistsLazyQuery({\n    fetchPolicy: 'network-only',\n  });\n\n  const handleInitTip = useCallback(\n    async (answer: AnswerOutput) => {\n      await checkWalletExists({\n        variables: { targetUserId: answer.user?._id! },\n        onCompleted: (res) => {\n          if (res.checkWalletExists?.success) {\n            setOpenTransactionModal(answer);\n            return;\n          }\n          if (!res.checkWalletExists?.source) {\n            // TODO Display a modal for setting up my wallet: NOUM-3973\n            // eslint-disable-next-line no-alert\n            alert('Display a modal for setting up my wallet');\n            return;\n          }\n          if (!res.checkWalletExists?.target) {\n            // TODO Display a modal for notifying to receiver: NOUM-3974\n            // eslint-disable-next-line no-alert\n            alert('Display a modal for notifying to receiver');\n          }\n        },\n      });\n    },\n    [checkWalletExists],\n  );\n\n  return (\n    <Modal\n      open={isOpen}\n      onClose={onClose}\n      testId=\"all_answer_modal\"\n      enableCloseButton\n      size={ModalSize.XL}\n      disableBackdropClick\n    >\n      <ModalHeader>\n        {t('noumena.chamber.quick_question.all_answers')}\n      </ModalHeader>\n      <ModalBody maxHeight=\"100%\" minHeight=\"40vh\">\n        <TSpan\n          font=\"body-xl-bold\"\n          colorToken=\"--text-modal-header-neutral-default\"\n        >\n          {question.body}\n        </TSpan>\n        <Spacer height={24} />\n        <Stack gap={16} vertical fullWidth>\n          {answers &&\n            answers.length > 0 &&\n            answers?.map((answer) => (\n              <Answer\n                key={answer._id}\n                answer={answer}\n                type={AnswerElementType.ALL_ANSWERS_MODAL}\n                isClosedQuestion={isClosed}\n                onTip={() => handleInitTip(answer)}\n                onShowAllTips={() => onShowAllTips?.(answer)}\n              />\n            ))}\n        </Stack>\n      </ModalBody>\n      {openTransactionModal && (\n        <TransactionModal\n          type={TransactionModalType.TIP}\n          open\n          handleClose={() => setOpenTransactionModal(false)}\n          onSuccessfulTransaction={refetch}\n          answerForTip={openTransactionModal}\n        />\n      )}\n    </Modal>\n  );\n};\n\nexport default AllAnswerModal;\n","import { useCallback } from 'react';\nimport * as Sentry from '@sentry/react';\nimport { t } from 'i18next';\nimport { useToast } from '@/hooks';\nimport { useAddAnswerMutation } from '@/apollo/graphql';\nimport { type QuestionModalProps } from '../modals/QuestionModal/types';\n\nexport const useAddAnswerHelper = ({\n  questionId,\n  refetch,\n}: QuestionModalProps) => {\n  const { addToast } = useToast();\n\n  const handleError = useCallback(\n    (networkError: String | Error | null) => {\n      addToast(\n        'error',\n        'none',\n        `${t('noumena.toast_error.text')}: ${networkError}`,\n      );\n    },\n    [addToast],\n  );\n\n  const handleSuccess = useCallback(() => {\n    addToast(\n      'success',\n      'none',\n      t('noumena.chamber.quick_question.answer_published'),\n    );\n  }, [addToast]);\n\n  const [addAnswerMutation, { loading }] = useAddAnswerMutation();\n\n  const addAnswer = useCallback(\n    async (answerBody: string) => {\n      await addAnswerMutation({\n        variables: { questionId, answerBody },\n        onError: ({ networkError = null, graphQLErrors = [] }) => {\n          const [err] = graphQLErrors;\n          handleError(err?.message ?? networkError);\n          Sentry.captureException(new Error(err?.message ?? networkError), {\n            tags: {\n              section: 'deleteQuestionMutation',\n            },\n          });\n        },\n        onCompleted: () => {\n          handleSuccess();\n          if (refetch) {\n            refetch();\n          }\n        },\n      });\n    },\n    [addAnswerMutation, handleError, handleSuccess, questionId, refetch],\n  );\n\n  return { loading, addAnswer };\n};\n","import styled from 'styled-components';\nimport { TSpan } from '@/components/Typography';\n\nexport const StyledTSpan = styled(TSpan)`\n  text-align: center;\n`;\n\nexport const ActionButtonContainer = styled.div`\n  margin-top: 12px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  width: 100%;\n`;\n","import React, { useCallback } from 'react';\nimport { t } from 'i18next';\nimport { Modal } from '@/components/ExtendedModal/Modal';\nimport { Stack } from '@/layout';\nimport { Button } from '@/components/Button';\nimport { type QuestionModalProps } from './types';\nimport { StyledTSpan, ActionButtonContainer } from './styles';\n\nexport const QuestionModal: React.FC<QuestionModalProps> = ({\n  questionId,\n  isOpenModal,\n  isClosedModal,\n  loading,\n  onClose,\n  onConfirm,\n}) => {\n  const handleConfirm = useCallback(() => {\n    if (onConfirm) {\n      onConfirm();\n    }\n  }, [onConfirm]);\n  return (\n    <Modal\n      isFullScreen={false}\n      open={isOpenModal ?? false}\n      testId=\"question_modal\"\n      onClose={onClose}\n      disableBackdropClick\n    >\n      <Stack gap={16} vertical maxWidth={327} align=\"center\" justify=\"center\">\n        <StyledTSpan\n          font=\"heading-s-bold\"\n          colorToken=\"--text-modal-header-neutral-default\"\n        >\n          {isClosedModal\n            ? t('noumena.quick_questions.modal.close_title')\n            : t('noumena.quick_questions.modal.delete_title')}\n        </StyledTSpan>\n        <StyledTSpan\n          data-testid=\"confirm_text\"\n          font=\"body-l\"\n          colorToken=\"--text-modal-neutral-default\"\n        >\n          {isClosedModal\n            ? t('noumena.quick_questions.modal.close_description')\n            : t('noumena.quick_questions.modal.delete_description')}\n        </StyledTSpan>\n        <ActionButtonContainer>\n          <Button\n            primary\n            size=\"full\"\n            testId=\"confirm_btn\"\n            disabled={!questionId || loading}\n            intent={!isClosedModal ? 'negative' : undefined}\n            onClick={handleConfirm}\n            loading={loading}\n          >\n            {isClosedModal\n              ? t('noumena.quick_questions.modal.close_confirm')\n              : t('noumena.quick_questions.modal.delete_confirm')}\n          </Button>\n          <Button tertiary onClick={onClose} size=\"full\" testId=\"cancel_btn\">\n            {isClosedModal\n              ? t('noumena.quick_questions.modal.close_cancel')\n              : t('noumena.quick_questions.modal.delete_cancel')}\n          </Button>\n        </ActionButtonContainer>\n      </Stack>\n    </Modal>\n  );\n};\n","import { useMemo, useCallback } from 'react';\nimport * as Sentry from '@sentry/react';\nimport { t } from 'i18next';\nimport { useToast } from '@/hooks';\nimport {\n  useDeleteQuestionMutation,\n  useUpdateQuestionMutation,\n} from '@/apollo/graphql';\nimport { type QuestionModalProps } from '../modals/QuestionModal/types';\n\nexport const useEllipsisMenuHelper = ({\n  questionId,\n  isClosedModal,\n  onClose,\n  refetch,\n}: QuestionModalProps) => {\n  const { addToast } = useToast();\n\n  const handleError = useCallback(\n    (networkError: String | Error | null) => {\n      addToast(\n        'error',\n        'none',\n        `${t('noumena.toast_error.text')}: ${networkError}`,\n      );\n    },\n    [addToast],\n  );\n\n  const handleSuccess = useCallback(() => {\n    addToast(\n      'primary',\n      'none',\n      isClosedModal\n        ? t('noumena.quick_questions.modal.close_success')\n        : t('noumena.quick_questions.modal.delete_success'),\n    );\n    if (refetch) {\n      refetch();\n    }\n    if (onClose) {\n      onClose();\n    }\n  }, [addToast, isClosedModal, onClose, refetch]);\n\n  const [deleteQuestionMutation, { loading: loadingDelete }] =\n    useDeleteQuestionMutation();\n  const [closeQuestionMutation, { loading: loadingUpdate }] =\n    useUpdateQuestionMutation();\n\n  const loading = useMemo(\n    () => loadingDelete || loadingUpdate,\n    [loadingDelete, loadingUpdate],\n  );\n\n  const deleteQuestion = useCallback(async () => {\n    await deleteQuestionMutation({\n      variables: { questionId },\n      onError: ({ networkError = null, graphQLErrors = [] }) => {\n        const [err] = graphQLErrors;\n        handleError(err?.message ?? networkError);\n        Sentry.captureException(new Error(err?.message ?? networkError), {\n          tags: {\n            section: 'deleteQuestionMutation',\n          },\n        });\n      },\n      onCompleted: handleSuccess,\n    });\n  }, [deleteQuestionMutation, handleError, handleSuccess, questionId]);\n\n  const closeQuestion = useCallback(async () => {\n    const date = new Date();\n    date.setDate(date.getDate() - 1);\n\n    await closeQuestionMutation({\n      variables: {\n        questionId,\n        input: {\n          expiryDate: date.toDateString(),\n        },\n      },\n      onError: ({ networkError = null, graphQLErrors = [] }) => {\n        const [err] = graphQLErrors;\n        handleError(err?.message ?? networkError);\n        Sentry.captureException(new Error(err?.message ?? networkError), {\n          tags: {\n            section: 'updateQuestionMutation',\n          },\n        });\n      },\n      onCompleted: handleSuccess,\n    });\n  }, [closeQuestionMutation, handleError, handleSuccess, questionId]);\n\n  return { loading, deleteQuestion, closeQuestion };\n};\n","import { useState, useMemo, useEffect } from 'react';\nimport { t } from 'i18next';\nimport {\n  Dropdown,\n  type DropdownTargetProps,\n  type DropdownValueType,\n} from '@/components/Dropdown';\nimport { Button } from '@/components/Button';\nimport { Icon } from '@/components/Icon';\nimport { QuestionModal } from '@/screens/Chamber/components/elements/QuickQuestionsElement/modals/QuestionModal/QuestionModal';\nimport { type EllipsisMenuProp } from './types';\nimport { useEllipsisMenuHelper } from '../../hooks/useEllipsisMenuHelper';\n\nconst EllipsisMenu = ({\n  questionId,\n  isOwner,\n  isQuestionOwner,\n  isClosed,\n  refetch,\n}: EllipsisMenuProp) => {\n  const menuOptions: DropdownValueType<string>[] = useMemo(() => [], []);\n\n  useEffect(() => {\n    if ((isQuestionOwner && !isClosed) || (!isClosed && isOwner)) {\n      menuOptions.push({\n        label: t(`noumena.quick_questions.close_question`),\n        key: t(`noumena.quick_questions.close_question`),\n        type: 'value',\n        value: t(`noumena.quick_questions.close_question`),\n        icon: (\n          <Icon\n            size={24}\n            name=\"close_m\"\n            color=\"--icon-tablecell-neutral-highlighted\"\n          />\n        ),\n        labelColor: '--text-tablecell-header-neutral-highlighted',\n      });\n    }\n    if (isOwner || isQuestionOwner) {\n      menuOptions.push({\n        label: t(`noumena.quick_questions.delete_question`),\n        key: t(`noumena.quick_questions.delete_question`),\n        type: 'value',\n        value: t(`noumena.quick_questions.delete_question`),\n        icon: (\n          <Icon\n            size={24}\n            name=\"delete_m\"\n            color=\"--icon-tablecell-danger-primary-default\"\n          />\n        ),\n        labelColor: '--text-tablecell-header-danger-primary-highlighted',\n        intent: 'danger',\n      });\n    }\n  }, [isQuestionOwner, isClosed, isOwner, menuOptions]);\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [isClosedModal, setIsCloseModal] = useState(false);\n\n  const onClose = () => {\n    setIsOpen(false);\n    setIsCloseModal(false);\n  };\n\n  const { loading, deleteQuestion, closeQuestion } = useEllipsisMenuHelper({\n    questionId,\n    isClosedModal,\n    onClose,\n    refetch,\n  });\n\n  const onConfirm = () => {\n    if (isClosedModal) closeQuestion();\n    else deleteQuestion();\n  };\n\n  const onMenuOptionSelect = (value: string) => {\n    if (value === t(`noumena.quick_questions.close_question`)) {\n      setIsCloseModal(true);\n    }\n    setIsOpen(true);\n  };\n\n  return (\n    <>\n      <Dropdown\n        placement=\"bottom-end\"\n        onSelectOption={(options) => {\n          onMenuOptionSelect(options.value);\n        }}\n        options={menuOptions}\n        isPopperStyle\n      >\n        {({ targetRef, toggle }: DropdownTargetProps<HTMLButtonElement>) => (\n          <Button ref={targetRef} size=\"small\" textOnly onClick={toggle}>\n            <Icon\n              size={24}\n              name=\"more_m\"\n              color=\"--icon-button-brand-primary-default\"\n            />\n          </Button>\n        )}\n      </Dropdown>\n      <QuestionModal\n        refetch={refetch}\n        isClosedModal={isClosedModal}\n        questionId={questionId}\n        onClose={onClose}\n        onConfirm={onConfirm}\n        isOpenModal={isOpen}\n        loading={loading}\n      />\n    </>\n  );\n};\n\nexport default EllipsisMenu;\n","import styled, { css } from 'styled-components';\nimport { Button } from '@/components/Button';\nimport { TSpan } from '@/components/Typography';\n\nexport const Container = styled.div<{ noumEditor2?: boolean }>`\n  position: relative;\n  transition: all 0.1s ease-in-out;\n  display: flex;\n  flex-direction: column;\n  border: 1px solid var(--border-card-neutral-highlighted);\n  border-radius: 8px;\n  background: var(--bg-card-neutral-alt-default);\n  padding: 16px;\n  vertical-align: middle;\n  overflow: hidden;\n  ${({ noumEditor2 }) =>\n    noumEditor2 &&\n    css`\n      border: none;\n      border-bottom: 1px solid var(--border-card-neutral-highlighted);\n      border-radius: unset;\n    `}\n`;\n\nexport const SubConatiner = styled.div<{\n  vertical?: boolean;\n  gap?: string;\n  width?: string;\n  hasBackground?: boolean;\n  hasBorderRadius?: boolean;\n  hasPadding?: boolean;\n}>`\n  box-sizing: border-box;\n  position: relative;\n  display: flex;\n  flex-direction: ${(p) => (p.vertical ? 'column' : 'row')};\n  align-items: ${(p) => (p.vertical ? 'flex-start' : 'center')};\n  ${(p) => p.vertical && 'gap: 16px'};\n  ${(p) => p.gap && `gap:${p.gap}`};\n  width: ${(p) => (p.width ? p.width : '100%')};\n  height: 100%;\n  ${({ hasBackground }) =>\n    hasBackground && 'background-color:var(--bg-comment-neutral-default) '};\n  ${({ hasBorderRadius }) => hasBorderRadius && 'border-radius:8px '};\n  ${({ hasPadding }) => hasPadding && 'padding:12px '};\n`;\n\nexport const QuestionBodyWrapper = styled.div<{\n  isMobile?: boolean;\n}>`\n  max-width: ${({ isMobile }) => (isMobile ? '95%' : 'none')};\n`;\n\nexport const AvatarContainer = styled.div``;\n\nexport const SendButton = styled(Button)<{ disabled?: boolean }>`\n  min-width: auto;\n  position: relative;\n  max-height: 40px;\n  margin: -22px 0px 0px 10px;\n\n  height: 30px;\n  width: 30px;\n  :disabled {\n    background: transparent;\n  }\n  :hover,\n  :active {\n    background-color: transparent;\n  }\n  path {\n    fill: ${(p) =>\n      p.disabled\n        ? `var(--icon-button-neutral-disabled)`\n        : 'var(--icon-button-neutral-pressed)'};\n  }\n`;\n\nexport const StyleImage = styled.img<{ isCollapse?: boolean }>`\n  width: ${(p) => (p.isCollapse ? '120px' : '100%')};\n  height: ${(p) => (p.isCollapse ? '90px' : 'auto')};\n  object-fit: cover;\n  border-radius: 8px;\n`;\n\nexport const StyledTextArea = styled.div<{\n  value?: string;\n  noumEditor2?: boolean;\n}>`\n  width: 100%;\n\n  textarea {\n    height: 40px;\n    padding: 10px 12px;\n    z-index: 1;\n    ${({ noumEditor2 }) =>\n      noumEditor2 &&\n      `\n    padding: 8px 12px;\n    margin:0px !important;\n    `}\n  }\n  label {\n    transform: translate(2px, -8px);\n    z-index: 1;\n    ${(props) =>\n      props.value &&\n      css`\n        transform: translate(12px, -10px);\n      `};\n  }\n  textarea:focus + fieldset + label {\n    transform: translate(12px, -10px);\n  }\n  fieldset {\n    z-index: 1;\n  }\n  textarea:focus + fieldset {\n    z-index: 1;\n  }\n`;\n\nexport const EllipsisButton = styled.div<{ isAbsolute?: boolean }>`\n  button {\n    height: 24px;\n    width: 24px;\n    display: flex;\n    margin-top: 2px;\n    justify-content: center;\n    align-items: center;\n  }\n  ${(p) =>\n    p.isAbsolute &&\n    css`\n      position: absolute;\n      top: 0;\n      right: 0;\n    `};\n`;\n\nexport const AnswerCount = styled(TSpan)<{ isActive?: boolean }>`\n  padding-top: 2px;\n  ${(p) => p.isActive && 'cursor: pointer;'}\n`;\n\nexport const IconContainer = styled.div<{ isSpinner?: boolean }>`\n  position: absolute;\n  right: 0;\n  top: 0;\n  margin-top: ${(p) => (p.isSpinner ? '8px' : '10px')};\n  ${(p) => p.isSpinner && 'margin-right: -5px'};\n`;\nexport const SpinnerContainer = styled.div`\n  position: relative;\n`;\n\nexport const StyledForm = styled.form<{ disabled?: boolean }>`\n  width: 100%;\n  position: relative;\n  display: inline-flex;\n  ${(props) =>\n    props.disabled &&\n    css`\n      button[disabled]:hover {\n        background-color: transparent;\n      }\n    `};\n`;\n\nexport const AnswerContainer = styled.div`\n  width: 100%;\n  fieldset {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    min-width: -webkit-fill-available;\n    padding: 16px;\n    padding-top: 6px;\n    border-radius: 16px;\n    border: 1px solid var(--border-card-neutral-highlighted);\n    background: var(--bg-card-neutral-default);\n  }\n`;\n\nexport const ClosesText = styled(TSpan)`\n  padding-top: 2px;\n`;\n","import { t } from 'i18next';\nimport { type InputListTypes } from '@/components/Tabs/types';\nimport { QuestionStatusEnum } from '@/apollo/generated/types';\n\nexport const PAGE_SIZE = 5;\nexport const NUM_ANSWERS_SHOWN_PER_QUESTION = 3;\n\nexport const questionStatus: InputListTypes[] = [\n  {\n    id: QuestionStatusEnum.Active,\n    name: QuestionStatusEnum.Active,\n    image: 'terms_m',\n    text: t('noumena.quick_questions.open'),\n    labelSize: 'small',\n  },\n  {\n    id: QuestionStatusEnum.Closed,\n    name: QuestionStatusEnum.Closed,\n    image: 'terms_m',\n    text: t('noumena.quick_questions.closed'),\n    labelSize: 'small',\n  },\n  {\n    id: QuestionStatusEnum.Answered,\n    name: QuestionStatusEnum.Answered,\n    image: 'terms_m',\n    text: t('noumena.quick_questions.my_answers'),\n    labelSize: 'small',\n  },\n  {\n    id: QuestionStatusEnum.Tipped,\n    name: QuestionStatusEnum.Tipped,\n    image: 'terms_m',\n    text: t('noumena.quick_questions.my_tips'),\n    labelSize: 'small',\n  },\n];\n","import {\n  forwardRef,\n  type Ref,\n  useEffect,\n  useMemo,\n  useState,\n  useCallback,\n} from 'react';\nimport { t } from 'i18next';\nimport { endOfYesterday, format } from 'date-fns';\nimport { type SubmitHandler, useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { Icon } from '@/components/Icon';\nimport { Avatar } from '@/components/Avatar/Avatar';\nimport { TSpan } from '@/components/Typography';\nimport { TextArea } from '@/components/TextArea';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useLaunchDarkly, useWindowDimensions } from '@/hooks';\nimport { sizes } from '@/constants/devices';\nimport AllAnswerModal from '@/screens/Chamber/components/elements/QuickQuestionsElement/modals/AllAnswerModal/AllAnswerModal';\nimport { CustomPreviewTabEnum } from '@/screens/Chamber/CustomPreview/constants';\nimport { UserUtil } from '@/utils/user';\nimport Answer, {\n  AnswerElementType,\n} from '@/screens/Chamber/components/elements/QuickQuestionsElement/components/Answer';\nimport {\n  type AnswerOutput,\n  QuestionStatusEnum,\n} from '@/apollo/generated/types';\nimport { cleanList } from '@/utils/list';\nimport { Button } from '@/components/Button';\nimport { useNoumContext } from '@/screens/Chamber/ViewChamber/ChamberProvider';\nimport { useAddAnswerHelper } from '../../hooks/useAddAnswerHelper';\nimport EllipsisMenu from './EllipsisMenu';\nimport { type QuestionAnswerProps, type QuestionSchema } from './types';\nimport {\n  Container,\n  SendButton,\n  StyleImage,\n  SubConatiner,\n  StyledTextArea,\n  EllipsisButton,\n  StyledForm,\n  AnswerCount,\n  ClosesText,\n  AvatarContainer,\n  QuestionBodyWrapper,\n} from './styles';\nimport { NUM_ANSWERS_SHOWN_PER_QUESTION } from '../../constants';\n\nexport const QuestionAnswer = forwardRef(\n  (\n    {\n      question,\n      refetch,\n      isCollapse,\n      selectedCustomPreviewTab,\n      selectedTab,\n      isOwner,\n    }: QuestionAnswerProps,\n    ref: Ref<HTMLDivElement>,\n  ) => {\n    const {\n      flags: { noumEditor2 },\n    } = useLaunchDarkly();\n    const { user } = useAuth();\n    const { isConnected, isFollowing } = useNoumContext();\n    const userId = user?._id;\n    const {\n      questionerNoumId,\n      questionId,\n      name,\n      closesDate,\n      questionBody,\n      profileImageURL,\n      questionImageURL,\n      isQuestionOwner,\n      answerCount,\n      hasOwnAnswer,\n      answersWithTip,\n      numMoreAnswers,\n    } = useMemo(() => {\n      const answers = cleanList(\n        question?.answers?.filter(\n          (answer) =>\n            answer?.tipDetails?.some((tip) => tip.tipBy?._id === userId) ||\n            (answer?.user?._id === userId && !!answer?.tipDetails?.length),\n        ),\n      );\n      return {\n        questionerNoumId: question?.user?.chamber?._id,\n        questionId: question?._id ?? '',\n        name:\n          userId === question?.user?._id\n            ? t('noumena.you')\n            : `${question?.user?.firstName} ${question?.user?.lastName}`,\n        closesDate: question?.expiryDate,\n        questionBody: question?.body,\n        profileImageURL: UserUtil.getProfilePicture(question?.user),\n        questionImageURL: question?.questionImage,\n        isQuestionOwner: userId === question?.user?._id,\n        answerCount: question?.answers?.length ?? 0,\n        hasOwnAnswer: question?.answers?.find(\n          (answer) => answer?.user?._id === userId,\n        ),\n        answersWithTip: answers.filter(\n          (_item, index) => index < NUM_ANSWERS_SHOWN_PER_QUESTION,\n        ),\n        numMoreAnswers:\n          answers.length > NUM_ANSWERS_SHOWN_PER_QUESTION\n            ? answers.length - NUM_ANSWERS_SHOWN_PER_QUESTION\n            : 0,\n      };\n    }, [question, userId]);\n\n    const expiryDate = useMemo(\n      () =>\n        closesDate ? format(new Date(closesDate), 'MM/dd/yyyy') : undefined,\n      [closesDate],\n    );\n    const hasAnswers = useMemo(() => answerCount > 0, [answerCount]);\n    const isClosed = useMemo(\n      () =>\n        new Date(closesDate).getTime() < new Date(endOfYesterday()).getTime(),\n      [closesDate],\n    );\n\n    const shouldShowAnswerField = useMemo(\n      () =>\n        !isClosed &&\n        !isQuestionOwner &&\n        !hasOwnAnswer &&\n        (isOwner || (!isOwner && (isConnected || isFollowing))),\n      [\n        hasOwnAnswer,\n        isClosed,\n        isConnected,\n        isFollowing,\n        isOwner,\n        isQuestionOwner,\n      ],\n    );\n\n    const [isMobile, setIsMobile] = useState(false);\n    const [isOpenAnswerModal, setIsOpenAnswerModal] = useState(false);\n    const [answer, setAnswer] = useState<string>('');\n\n    const allAnswer = () => {\n      if (hasAnswers) setIsOpenAnswerModal(true);\n    };\n\n    const windowSize = useWindowDimensions();\n    const MobileWidth = parseInt(sizes.MOBILE_MAX, 10);\n\n    const divWidth = useCallback(() => {\n      const checkOne =\n        (isOwner && questionImageURL && isCollapse) ||\n        (isQuestionOwner && questionImageURL && !isClosed);\n      const checkTwo = isCollapse && questionImageURL;\n      const checkThree =\n        (!isCollapse && questionImageURL) ||\n        (!isOwner && !isQuestionOwner) ||\n        (isQuestionOwner && isClosed);\n\n      if (checkOne) return 'auto';\n      if (checkTwo) return '130px';\n      if (checkThree) return 'auto';\n\n      return '30px';\n    }, [isClosed, isCollapse, isOwner, isQuestionOwner, questionImageURL]);\n\n    const elementSchema = yup\n      .object({\n        answer: yup.string().required().max(600),\n      })\n      .required();\n\n    const {\n      handleSubmit,\n      trigger,\n      getValues,\n      setValue,\n      formState: { isValid },\n    } = useForm<QuestionSchema>({\n      resolver: yupResolver(elementSchema),\n      mode: 'all',\n      reValidateMode: 'onSubmit',\n    });\n\n    useEffect(() => {\n      setValue('answer', answer);\n      trigger('answer');\n    }, [answer, setValue, trigger]);\n\n    const { addAnswer, loading } = useAddAnswerHelper({ questionId, refetch });\n\n    const onSubmit: SubmitHandler<QuestionSchema> = () =>\n      addAnswer(getValues('answer'));\n\n    useEffect(() => {\n      setIsMobile(windowSize.width < MobileWidth);\n    }, [MobileWidth, windowSize.width]);\n\n    const onClickUser = useCallback(() => {\n      if (\n        !questionerNoumId ||\n        isQuestionOwner ||\n        UserUtil.isUnregistered(user) ||\n        UserUtil.isUnregistered(question.user)\n      )\n        return;\n\n      window.open(`/noum/${questionerNoumId}`, '_blank');\n    }, [isQuestionOwner, question.user, questionerNoumId, user]);\n\n    const handleShowMoreTips = useCallback((answerData?: AnswerOutput) => {\n      setIsOpenAnswerModal(false);\n      if (answerData) {\n        // TODO Show the modal to display tips per answer\n        // eslint-disable-next-line no-alert\n        alert('Display the modal for tips per answer');\n      } else {\n        // TODO Show the modal to display tips for all answers\n        // eslint-disable-next-line no-alert\n        alert('Display the modal for tips for all answers');\n      }\n    }, []);\n\n    const showAnswers =\n      (selectedTab === QuestionStatusEnum.Answered ||\n        selectedTab === QuestionStatusEnum.Active) &&\n      hasOwnAnswer;\n\n    return (\n      <Container\n        ref={ref}\n        data-testid=\"tQuestionAnswer\"\n        noumEditor2={noumEditor2}\n      >\n        <SubConatiner vertical>\n          <SubConatiner>\n            <SubConatiner vertical>\n              <QuestionBodyWrapper isMobile={isMobile}>\n                <TSpan\n                  font=\"body-l\"\n                  colorToken=\"--text-card-neutral-highlighted\"\n                >\n                  {questionBody}\n                </TSpan>\n              </QuestionBodyWrapper>\n              {questionImageURL &&\n                (!isCollapse || (isCollapse && isMobile)) && (\n                  <StyleImage\n                    data-testid=\"tQINotCollapsed\"\n                    isCollapse={isCollapse}\n                    alt={t('noumena.quick_questions.question_image')}\n                    src={questionImageURL}\n                  />\n                )}\n              {selectedTab !== QuestionStatusEnum.Tipped && (\n                <SubConatiner gap=\"8px\">\n                  {!noumEditor2 && (\n                    <AvatarContainer onClick={onClickUser}>\n                      <Avatar url={profileImageURL ?? undefined} size=\"M\" />\n                    </AvatarContainer>\n                  )}\n                  <SubConatiner gap=\"4px\">\n                    <TSpan\n                      font=\"footnote\"\n                      colorToken=\"--text-card-neutral-highlighted\"\n                      onClick={onClickUser}\n                    >\n                      {name}\n                    </TSpan>\n                    <TSpan\n                      font=\"footnote\"\n                      colorToken=\"--text-card-neutral-default\"\n                    >\n                      {' '}\n                      ·{' '}\n                    </TSpan>\n                    {isClosed ? (\n                      <TSpan\n                        colorToken=\"--text-card-neutral-default\"\n                        font=\"footnote\"\n                      >\n                        {t('noumena.quick_questions.closed')}\n                      </TSpan>\n                    ) : (\n                      <ClosesText\n                        font=\"footnote-bold\"\n                        colorToken=\"--text-card-neutral-highlighted\"\n                      >\n                        {t('noumena.quick_questions.closes_on')}{' '}\n                        {expiryDate ?? ''}\n                      </ClosesText>\n                    )}\n                    <TSpan\n                      font=\"footnote\"\n                      colorToken=\"--text-card-neutral-default\"\n                    >\n                      {' '}\n                      ·\n                    </TSpan>{' '}\n                    <AnswerCount\n                      onClick={allAnswer}\n                      isActive={hasAnswers}\n                      font={hasAnswers ? 'link-s' : 'footnote-bold'}\n                      colorToken={\n                        hasAnswers\n                          ? '--link-card-brand-primary-default'\n                          : '--text-card-neutral-default'\n                      }\n                    >\n                      {answerCount}{' '}\n                      {t(\n                        'noumena.chambers.toolbox.element.quick_questions.answers',\n                      )}\n                    </AnswerCount>\n                  </SubConatiner>\n                </SubConatiner>\n              )}\n            </SubConatiner>\n            <SubConatiner gap=\"16px\" width={divWidth()}>\n              {questionImageURL && isCollapse && !isMobile && (\n                <StyleImage\n                  data-testid=\"tQuestionImage\"\n                  isCollapse={isCollapse}\n                  alt={t('noumena.quick_questions.question_image')}\n                  src={questionImageURL}\n                />\n              )}\n              {selectedTab &&\n                ![\n                  QuestionStatusEnum.Answered,\n                  QuestionStatusEnum.Tipped,\n                ].includes(selectedTab) &&\n                ((isQuestionOwner && !isClosed) || isOwner) &&\n                selectedCustomPreviewTab !== CustomPreviewTabEnum.Preview && (\n                  <EllipsisButton\n                    isAbsolute={!questionImageURL || !isCollapse || isMobile}\n                  >\n                    <EllipsisMenu\n                      refetch={refetch}\n                      questionId={questionId}\n                      isOwner={isOwner}\n                      isQuestionOwner={isQuestionOwner}\n                      isClosed={isClosed}\n                    />\n                  </EllipsisButton>\n                )}\n              {selectedTab === QuestionStatusEnum.Tipped &&\n                selectedCustomPreviewTab !== CustomPreviewTabEnum.Preview && (\n                  <EllipsisButton\n                    isAbsolute={!questionImageURL || !isCollapse || isMobile}\n                  >\n                    <Button size=\"small\" textOnly onClick={allAnswer}>\n                      <Icon\n                        size={24}\n                        name=\"chevron_small_right_m\"\n                        color=\"--icon-button-brand-primary-default\"\n                      />\n                    </Button>\n                  </EllipsisButton>\n                )}\n            </SubConatiner>\n          </SubConatiner>\n          {showAnswers && (\n            <Answer\n              answer={hasOwnAnswer}\n              type={AnswerElementType.MY_ANSWERS}\n              isClosedQuestion={isClosed}\n            />\n          )}\n          {selectedTab === QuestionStatusEnum.Tipped && answersWithTip.length\n            ? answersWithTip.map((answerData) => (\n                <Answer\n                  key={answerData._id}\n                  answer={answerData}\n                  type={AnswerElementType.MY_TIPS}\n                  isClosedQuestion={isClosed}\n                />\n              ))\n            : null}\n          {selectedTab === QuestionStatusEnum.Tipped && !!numMoreAnswers && (\n            <TSpan\n              style={{ margin: 'auto' }}\n              cursor=\"pointer\"\n              font=\"button-m\"\n              colorToken=\"--text-button-brand-primary-default\"\n              onClick={() => handleShowMoreTips()}\n            >\n              {t('noumena.quick_questions.show_more_tips', {\n                numTips: numMoreAnswers,\n              })}\n            </TSpan>\n          )}\n          {shouldShowAnswerField && (\n            <StyledForm onSubmit={handleSubmit(onSubmit)} disabled={!isValid}>\n              <SubConatiner>\n                <StyledTextArea\n                  value={getValues('answer')}\n                  noumEditor2={noumEditor2 && !getValues('answer')}\n                >\n                  <TextArea\n                    data-testid=\"tTextArea\"\n                    autoResize\n                    value={getValues('answer')}\n                    resize={false}\n                    maxLength={600}\n                    onChange={(e) => setAnswer(e.target.value)}\n                    label={t('noumena.quick_questions.type_your_answer')}\n                  />\n                </StyledTextArea>\n                <SendButton\n                  data-testid=\"tSendButton\"\n                  type=\"submit\"\n                  textOnly\n                  disabled={!isValid}\n                  loading={loading}\n                >\n                  <Icon\n                    name=\"send_m\"\n                    size={24}\n                    color={\n                      isValid\n                        ? '--icon-button-brand-secondary-default'\n                        : '--icon-button-neutral-disabled'\n                    }\n                  />\n                </SendButton>\n              </SubConatiner>\n            </StyledForm>\n          )}\n        </SubConatiner>\n        <AllAnswerModal\n          question={question}\n          onClose={() => setIsOpenAnswerModal(false)}\n          isOpen={isOpenAnswerModal}\n          onShowAllTips={handleShowMoreTips}\n        />\n      </Container>\n    );\n  },\n);\n\nexport default QuestionAnswer;\n","import { useEffect, useState } from 'react';\nimport { t } from 'i18next';\nimport { useGetQuestionsForSpaceQuery } from '@/apollo/graphql';\nimport { useToast } from '@/hooks/toast';\nimport {\n  type QuestionStatusEnum,\n  SortOperator,\n} from '@/apollo/generated/types';\nimport { PAGE_SIZE } from '../constants';\n\nexport function useGetQuickQuestionHelper(\n  spaceId: string,\n  status: QuestionStatusEnum | undefined,\n  isCollapse: boolean,\n  offset: number,\n) {\n  const { addToast } = useToast();\n\n  const [counts, setCounts] = useState({\n    openQuestionCount: 0,\n    closeQuestionCount: 0,\n    answeredQuestionCount: 0,\n    tippedQuestionCount: 0,\n    totalQuestionCount: 0,\n  });\n\n  const variables = {\n    spaceId,\n    sort: {\n      column: 'createdAt',\n      operator: SortOperator.Desc,\n    },\n    limit: isCollapse ? 1 : PAGE_SIZE,\n    filter: isCollapse ? {} : { status },\n    offset,\n  };\n\n  const { data, loading, error, refetch } = useGetQuestionsForSpaceQuery({\n    variables,\n    skip: (!isCollapse && !status) || !spaceId,\n    fetchPolicy: 'cache-and-network',\n  });\n\n  useEffect(() => {\n    if (!data) return;\n\n    const openQuestionCount = data?.open?.count || 0;\n    const closeQuestionCount = data?.close?.count || 0;\n    const answeredQuestionCount = data?.answered?.count || 0;\n    const tippedQuestionCount = data?.tipped?.count || 0;\n    const totalQuestionCount = openQuestionCount + closeQuestionCount;\n\n    setCounts({\n      openQuestionCount,\n      closeQuestionCount,\n      answeredQuestionCount,\n      tippedQuestionCount,\n      totalQuestionCount,\n    });\n  }, [data]);\n\n  useEffect(() => {\n    if (error) {\n      let message = t('noumena.error.unknown');\n      if (error instanceof Error) {\n        message = error.message;\n      }\n      addToast('error', 'none', message);\n    }\n  }, [addToast, error]);\n\n  return {\n    data,\n    loading,\n    refetch,\n    ...counts,\n  };\n}\n","import styled, { css } from 'styled-components';\nimport { Stack } from '@/layout';\nimport { Card } from '@/components/Card';\nimport { devices } from '@/constants/devices';\nimport { customScrollBar } from '@/common/globalStyles';\n\nexport const TextPadding = styled.div<{ isCollapse: boolean }>`\n  padding: ${(props) => (!props.isCollapse ? '16px' : '0')} 0;\n`;\n\nexport const QuickQuestionsBodyWrapper = styled.div<{\n  isCollapse?: boolean;\n}>`\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  display: flex;\n  box-sizing: border-box;\n  flex-direction: ${(props) => (props.isCollapse ? 'row' : 'column')};\n  align-items: center;\n  justify-content: center;\n  padding: 24px;\n\n  @media ${devices.TABLET} {\n    padding: ${(props) => (props.isCollapse ? '15px 42px 16px 16px;' : '24px')};\n  }\n\n  ${(props) =>\n    props.isCollapse &&\n    css`\n      padding: 16px;\n\n      @media ${devices.LAPTOP} {\n        padding: 16px 30px 24px 24px;\n      }\n      @media ${devices.MOBILE_L} {\n        padding-right: 35px;\n      }\n    `};\n\n  ${customScrollBar}\n`;\n\nexport const EditModeWrapper = styled(Stack)`\n  justify-content: center;\n  align-items: center;\n  padding: 4px;\n\n  @media ${devices.LAPTOP} {\n    padding: 12px;\n  }\n`;\n\nexport const Wrapper = styled(Card)`\n  padding: 0;\n  display: flex;\n  flex-direction: row;\n  border-radius: 0;\n\n  @media ${devices.TABLET} {\n    border-radius: 16px;\n  }\n`;\n\nexport const MainWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\nexport const SpinnerWrapper = styled.div`\n  position: relative;\n  min-height: 100px;\n  width: 100%;\n`;\n\nexport const HeaderWrapper = styled.div<{\n  isElement?: boolean;\n  noumEditor2?: boolean;\n}>`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  padding: 16px;\n\n  @media ${devices.LAPTOP} {\n    ${({ isElement }) =>\n      isElement\n        ? css`\n            height: 80px;\n            padding: 22px 24px 16px;\n          `\n        : css`\n            min-height: 80px;\n            padding-right: 24px;\n          `};\n  }\n  ${({ noumEditor2 }) =>\n    noumEditor2 &&\n    css`\n      padding: 16px 16px 12px !important;\n    `}\n`;\n\nexport const QuestionWrapper = styled.div<{ noumEditor2?: boolean }>`\n  padding: 24px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  ${({ noumEditor2 }) =>\n    noumEditor2 &&\n    `\n  padding:0px;\n  gap:0px;\n  `}\n`;\n\nexport const TabWrapper = styled.div<{ noumEditor2?: boolean }>`\n  padding: 16px 8px 0px 18px;\n  margin-bottom: -8px;\n  ${({ noumEditor2 }) =>\n    noumEditor2 &&\n    `\n    padding: 0px 8px !important;\n  justify-content:center;\n  margin-bottom:8px;\n  `}\n`;\n","import { type GetQuestionsForSpaceQuery } from '@/apollo/graphql';\n\nexport const questionsMockData: GetQuestionsForSpaceQuery = {\n  getQuestionsForSpace: {\n    count: 3,\n    data: [\n      {\n        _id: '64806ec884a29e0010739339',\n        body: 'This is an example content just to show you what questions will look like in your Noum. Don’t worry, it will not be visible when you publish your Noum',\n        questionImage: '',\n        expiryDate: '2023-06-30T00:00:00.000Z',\n        user: {\n          _id: '62b1523ae60231000d355ecb',\n          firstName: 'Xudong',\n          middleName: null,\n          lastName: 'Ding',\n          profile: {\n            profilePictureThumbnail:\n              'https://noumena-img.s3-accelerate.amazonaws.com/62b1523ae60231000d355ecb/profile/62b1523ae60231000d355ecb-1668767787669-thumbnail.png',\n            profilePicture:\n              'https://noumena-img.s3-accelerate.amazonaws.com/download (1).JbWIkvWB.png',\n            __typename: 'ProfileOutput',\n          },\n          chamber: {\n            _id: '62b15325d66879000f7b358d',\n            userId: '62b1523ae60231000d355ecb',\n            __typename: 'ChamberByUserIdRef',\n          },\n          userStatus: 'ACTIVE',\n          __typename: 'UserOutput',\n        },\n        spaceId: {\n          _id: '644bd3aa74e740000d90856d',\n          __typename: 'SpaceOutput',\n        },\n        createdAt: '2023-06-07T11:49:28.814Z',\n        updatedAt: '2023-06-07T11:49:28.814Z',\n        answers: [],\n        __typename: 'NoumQuestionOutput',\n      },\n      {\n        _id: '64806c6f84a29e00107373b8',\n        body: 'You can control who can ask questions in your Noum. Note - if a user can see the Quick Questions tool, they can see all questions and answers inside it.',\n        questionImage: '',\n        expiryDate: '2023-06-17T00:00:00.000Z',\n        user: {\n          _id: '629ef35c2a240b000f5d62cd',\n          firstName: 'James',\n          middleName: null,\n          lastName: 'Ding',\n          profile: {\n            profilePictureThumbnail:\n              'https://noumena-img.s3-accelerate.amazonaws.com/629ef35c2a240b000f5d62cd/profile/629ef35c2a240b000f5d62cd-1659677532584-thumbnail.png',\n            profilePicture:\n              'https://noumena-img.s3-accelerate.amazonaws.com/avatar.E2H4cWsp.jpg',\n            __typename: 'ProfileOutput',\n          },\n          chamber: {\n            _id: '62a837eee1f9a80010e213b0',\n            userId: '629ef35c2a240b000f5d62cd',\n            __typename: 'ChamberByUserIdRef',\n          },\n          userStatus: 'ACTIVE',\n          __typename: 'UserOutput',\n        },\n        spaceId: {\n          _id: '644bd3aa74e740000d90856d',\n          __typename: 'SpaceOutput',\n        },\n        createdAt: '2023-06-07T11:39:27.427Z',\n        updatedAt: '2023-06-07T11:39:27.427Z',\n        answers: [\n          {\n            _id: '64806d0184a29e00107379bc',\n            user: {\n              _id: '62b1523ae60231000d355ecb',\n              firstName: 'Xudong',\n              middleName: null,\n              lastName: 'Ding',\n              profile: {\n                profilePictureThumbnail:\n                  'https://noumena-img.s3-accelerate.amazonaws.com/62b1523ae60231000d355ecb/profile/62b1523ae60231000d355ecb-1668767787669-thumbnail.png',\n                profilePicture:\n                  'https://noumena-img.s3-accelerate.amazonaws.com/download (1).JbWIkvWB.png',\n                __typename: 'ProfileOutput',\n              },\n              chamber: {\n                _id: '62b15325d66879000f7b358d',\n                userId: '62b1523ae60231000d355ecb',\n                __typename: 'ChamberByUserIdRef',\n              },\n              userStatus: 'ACTIVE',\n              __typename: 'UserOutput',\n            },\n            body: 'I play once a week.',\n            spaceId: null,\n            tipDetails: [],\n            createdAt: '2023-06-07T11:41:53.498Z',\n            updatedAt: '2023-06-07T11:41:53.498Z',\n            __typename: 'AnswerOutput',\n          },\n          {\n            _id: '64806d0184a29e00107379bc',\n            user: {\n              _id: '62b1523ae60231000d355ecb',\n              firstName: 'Xudong',\n              middleName: null,\n              lastName: 'Ding',\n              profile: {\n                profilePictureThumbnail:\n                  'https://noumena-img.s3-accelerate.amazonaws.com/62b1523ae60231000d355ecb/profile/62b1523ae60231000d355ecb-1668767787669-thumbnail.png',\n                profilePicture:\n                  'https://noumena-img.s3-accelerate.amazonaws.com/download (1).JbWIkvWB.png',\n                __typename: 'ProfileOutput',\n              },\n              chamber: {\n                _id: '62b15325d66879000f7b358d',\n                userId: '62b1523ae60231000d355ecb',\n                __typename: 'ChamberByUserIdRef',\n              },\n              userStatus: 'ACTIVE',\n              __typename: 'UserOutput',\n            },\n            body: 'I play once a week.',\n            spaceId: null,\n            tipDetails: [],\n            createdAt: '2023-06-07T11:41:53.498Z',\n            updatedAt: '2023-06-07T11:41:53.498Z',\n            __typename: 'AnswerOutput',\n          },\n        ],\n        __typename: 'NoumQuestionOutput',\n      },\n      {\n        _id: '64806c4984a29e001073733e',\n        body: 'Users can be tipped for valuable answers too.',\n        questionImage: '',\n        expiryDate: '2023-06-10T00:00:00.000Z',\n        user: {\n          _id: '629ef35c2a240b000f5d62cd',\n          firstName: 'James',\n          middleName: null,\n          lastName: 'Ding',\n          profile: {\n            profilePictureThumbnail:\n              'https://noumena-img.s3-accelerate.amazonaws.com/629ef35c2a240b000f5d62cd/profile/629ef35c2a240b000f5d62cd-1659677532584-thumbnail.png',\n            profilePicture:\n              'https://noumena-img.s3-accelerate.amazonaws.com/avatar.E2H4cWsp.jpg',\n            __typename: 'ProfileOutput',\n          },\n          chamber: {\n            _id: '62a837eee1f9a80010e213b0',\n            userId: '629ef35c2a240b000f5d62cd',\n            __typename: 'ChamberByUserIdRef',\n          },\n          userStatus: 'ACTIVE',\n          __typename: 'UserOutput',\n        },\n        spaceId: {\n          _id: '644bd3aa74e740000d90856d',\n          __typename: 'SpaceOutput',\n        },\n        createdAt: '2023-06-07T11:38:49.948Z',\n        updatedAt: '2023-06-07T11:38:49.948Z',\n        answers: [],\n        __typename: 'NoumQuestionOutput',\n      },\n    ],\n    __typename: 'QuestionOutputResponse',\n  },\n  tipped: {\n    count: 1,\n    __typename: 'QuestionOutputResponse',\n  },\n  answered: {\n    count: 1,\n    __typename: 'QuestionOutputResponse',\n  },\n  close: {\n    count: 1,\n    __typename: 'QuestionOutputResponse',\n  },\n  open: {\n    count: 3,\n    __typename: 'QuestionOutputResponse',\n  },\n};\n","import { forwardRef, type Ref, useState, useMemo, useEffect } from 'react';\nimport { t } from 'i18next';\nimport { TSpan } from '@/components/Typography';\nimport { Icon } from '@/components/Icon';\nimport { useQuickQuestionsElementContext } from '@/screens/Chamber/components/elements/QuickQuestionsElement/providers/QuickQuestionsElementProvider';\nimport QuickQuestionsElementHeader from '@/screens/Chamber/components/elements/QuickQuestionsElement/components/QuickQuestionsElementHeader';\nimport { Button } from '@/components/Button/Button';\nimport AddQuestion from '@/screens/Chamber/components/elements/QuickQuestionsElement/modals/AddQuestion/AddQuestion';\nimport { useNoumContext } from '@/screens/Chamber/ViewChamber/ChamberProvider';\nimport { Spinner } from '@/components/Spinner';\nimport { QuestionAnswer } from '@/screens/Chamber/components/elements/QuickQuestionsElement/components/QuestionAnswer';\nimport BasicChipsTabsForm from '@/components/Tabs/TabsForm';\nimport { QuestionStatusEnum } from '@/apollo/generated/types';\nimport { Pagination } from '@/components/Pagination/Pagination';\nimport { Spacer } from '@/layout';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useLaunchDarkly } from '@/hooks';\nimport { cleanList } from '@/utils/list';\nimport { useGetQuickQuestionHelper } from './hooks/useGetQuickQuestionHelper';\nimport { PAGE_SIZE, questionStatus } from './constants';\nimport {\n  AddFirstQuestionButtonTestId,\n  NoQuestionsAddedYetTextTestId,\n  NoQuestionsIconTestId,\n  QuickQuestionsWrapperTestId,\n} from './testIds';\nimport {\n  HeaderWrapper,\n  MainWrapper,\n  QuestionWrapper,\n  QuickQuestionsBodyWrapper,\n  SpinnerWrapper,\n  TabWrapper,\n  TextPadding,\n  Wrapper,\n} from './styles';\nimport { type QuickQuestionsElementProps } from './types';\nimport { questionsMockData } from './data';\n\nconst NoQuestions: React.FC<{\n  isCollapse: boolean;\n  isAllowed: boolean;\n  openAddQuestionModal: () => void;\n  totalQuestionCount: number;\n  openQuestionCount: number;\n  closeQuestionCount: number;\n  selectedTab: QuestionStatusEnum | undefined;\n}> = ({\n  isCollapse,\n  isAllowed,\n  openAddQuestionModal,\n  totalQuestionCount,\n  openQuestionCount,\n  closeQuestionCount,\n  selectedTab,\n}) => {\n  let text = t(`noumena.quick_questions.no_questions_added_yet`);\n  if (selectedTab === QuestionStatusEnum.Active && closeQuestionCount) {\n    text = t(`noumena.quick_questions.no_active_questions`, {\n      count: closeQuestionCount,\n    });\n  }\n  if (selectedTab === QuestionStatusEnum.Closed && openQuestionCount) {\n    text = t(`noumena.quick_questions.no_closed_questions`);\n  }\n  const askButtonEnabled = !isCollapse && isAllowed && openQuestionCount === 0;\n  return (\n    <QuickQuestionsBodyWrapper isCollapse={isCollapse}>\n      {!isCollapse && (\n        <Icon\n          data-testid={NoQuestionsIconTestId}\n          name=\"quick_questions_m\"\n          size={80}\n          color=\"--icon-placeholder-neutral-default\"\n        />\n      )}\n      <TextPadding isCollapse={isCollapse}>\n        <TSpan\n          data-testid={NoQuestionsAddedYetTextTestId}\n          colorToken=\"--text-placeholder-neutral-default\"\n          font=\"body-m\"\n        >\n          {text}\n        </TSpan>\n      </TextPadding>\n      {askButtonEnabled && (\n        <Button\n          data-testid={AddFirstQuestionButtonTestId}\n          size=\"small\"\n          secondary\n          onClick={openAddQuestionModal}\n        >\n          {totalQuestionCount\n            ? t('noumena.chamber.quick_question.add_qustion')\n            : t('noumena.chamber.quick_question.add_first_qustion')}\n        </Button>\n      )}\n    </QuickQuestionsBodyWrapper>\n  );\n};\n\nconst QuickQuestionsElementViewMode = forwardRef(\n  (\n    {\n      isEditing,\n      spaceId,\n      currentTitle,\n      selectedCustomPreviewTab,\n      isOwner,\n    }: QuickQuestionsElementProps,\n    ref: Ref<HTMLDivElement>,\n  ) => {\n    const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [selectedTab, setSelectedTab] = useState<\n      QuestionStatusEnum | undefined\n    >(undefined);\n\n    const {\n      flags: { webTips, noumEditor2 },\n    } = useLaunchDarkly();\n    const { isUnregistered } = useAuth();\n    const { isCollapse } = useQuickQuestionsElementContext();\n    const { isConnected, isFollowing } = useNoumContext();\n    const {\n      data,\n      loading,\n      refetch,\n      totalQuestionCount,\n      openQuestionCount,\n      closeQuestionCount,\n      answeredQuestionCount,\n      tippedQuestionCount,\n    } = useGetQuickQuestionHelper(spaceId, selectedTab, isCollapse, offset);\n    const isShowPlaceholder = useMemo(\n      () => noumEditor2 && isEditing && totalQuestionCount < 1,\n      [isEditing, noumEditor2, totalQuestionCount],\n    );\n\n    const availableTabOptions = useMemo(() => {\n      const availableTabs: string[] = [\n        QuestionStatusEnum.Active,\n        QuestionStatusEnum.Closed,\n      ];\n      if (isShowPlaceholder) {\n        availableTabs.push(\n          QuestionStatusEnum.Answered,\n          QuestionStatusEnum.Tipped,\n        );\n      } else {\n        if (answeredQuestionCount) {\n          availableTabs.push(QuestionStatusEnum.Answered);\n        }\n        if (webTips && tippedQuestionCount) {\n          availableTabs.push(QuestionStatusEnum.Tipped);\n        }\n      }\n      return [...questionStatus].filter((item) =>\n        availableTabs.includes(item.name),\n      );\n    }, [\n      answeredQuestionCount,\n      isShowPlaceholder,\n      tippedQuestionCount,\n      webTips,\n    ]);\n\n    const onTabChange = (value: string) => {\n      setSelectedTab(value as QuestionStatusEnum);\n      setCurrentPage(1);\n      setOffset(0);\n    };\n\n    const closeAddModal = () => {\n      setIsAddModalOpen(false);\n    };\n\n    const openAddQuestionModal = () => {\n      setIsAddModalOpen(true);\n    };\n\n    const isAllowed = useMemo(() => {\n      if (isUnregistered) return false;\n      return isOwner || isConnected || (noumEditor2 && isEditing);\n    }, [isConnected, isEditing, isOwner, isUnregistered, noumEditor2]);\n    const dataQuestions = useMemo(\n      () =>\n        cleanList(\n          isShowPlaceholder\n            ? questionsMockData.getQuestionsForSpace?.data\n            : data?.getQuestionsForSpace?.data,\n        ),\n      [data?.getQuestionsForSpace?.data, isShowPlaceholder],\n    );\n    const onPageChange = (page: number) => {\n      setCurrentPage(page);\n      setOffset((page - 1) * PAGE_SIZE);\n    };\n\n    useEffect(() => {\n      if (!isCollapse) {\n        onTabChange(QuestionStatusEnum.Active);\n      } else {\n        setSelectedTab(undefined);\n      }\n    }, [isCollapse]);\n\n    useEffect(() => {\n      if (closeQuestionCount < 1 && selectedTab === QuestionStatusEnum.Closed) {\n        onTabChange(QuestionStatusEnum.Active);\n      }\n      if (openQuestionCount < 1 && selectedTab === QuestionStatusEnum.Active) {\n        onTabChange(QuestionStatusEnum.Closed);\n      }\n      // cause loop if we add selectedTac in dependencies\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [closeQuestionCount, openQuestionCount]);\n\n    return (\n      <>\n        {((isFollowing && dataQuestions && dataQuestions.length > 0) ||\n          totalQuestionCount ||\n          isAllowed) && (\n          <Wrapper ref={ref} data-testid={QuickQuestionsWrapperTestId}>\n            <MainWrapper>\n              <HeaderWrapper isElement noumEditor2={noumEditor2}>\n                <QuickQuestionsElementHeader\n                  spaceId={spaceId}\n                  currentTitle={currentTitle}\n                  isAllowed={isAllowed}\n                  openAddQuestionModal={openAddQuestionModal}\n                  selectedCustomPreviewTab={selectedCustomPreviewTab}\n                  openQuestionCount={openQuestionCount}\n                />\n              </HeaderWrapper>\n              {!isCollapse && selectedTab && (\n                <TabWrapper noumEditor2={noumEditor2}>\n                  <BasicChipsTabsForm\n                    onChange={onTabChange}\n                    inputList={availableTabOptions}\n                    selectedId={selectedTab}\n                    mode={noumEditor2 ? 'isUnderline' : 'isBackground'}\n                    isWithoutImage\n                    fontSize=\"--font-link-medium-size\"\n                    textFont=\"--font-body-medium-regular-font\n                    \"\n                  />\n                </TabWrapper>\n              )}\n              {loading ? (\n                <SpinnerWrapper>\n                  <Spinner />\n                </SpinnerWrapper>\n              ) : dataQuestions && dataQuestions.length > 0 ? (\n                <QuestionWrapper noumEditor2={noumEditor2}>\n                  {dataQuestions.map((question) => (\n                    <QuestionAnswer\n                      key={question?._id}\n                      question={question}\n                      isCollapse={isCollapse}\n                      selectedCustomPreviewTab={selectedCustomPreviewTab}\n                      selectedTab={selectedTab}\n                      refetch={refetch}\n                      isOwner={isOwner}\n                    />\n                  ))}\n                  {!!data?.getQuestionsForSpace?.count &&\n                    data?.getQuestionsForSpace?.count > PAGE_SIZE &&\n                    !isCollapse && (\n                      <div>\n                        <Spacer height={4} />\n                        <Pagination\n                          currentPage={currentPage}\n                          pageSize={PAGE_SIZE}\n                          totalCount={data.getQuestionsForSpace.count}\n                          onPageChange={onPageChange}\n                        />\n                      </div>\n                    )}\n                </QuestionWrapper>\n              ) : (\n                <NoQuestions\n                  totalQuestionCount={totalQuestionCount}\n                  isAllowed={!!isAllowed}\n                  isCollapse={isCollapse}\n                  openAddQuestionModal={openAddQuestionModal}\n                  openQuestionCount={openQuestionCount}\n                  closeQuestionCount={closeQuestionCount}\n                  selectedTab={selectedTab}\n                />\n              )}\n              <AddQuestion\n                spaceId={spaceId}\n                onClose={closeAddModal}\n                isOpen={isAddModalOpen}\n                refetch={refetch}\n              />\n            </MainWrapper>\n          </Wrapper>\n        )}\n      </>\n    );\n  },\n);\n\nexport default QuickQuestionsElementViewMode;\n","import { forwardRef, type Ref } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { TSpan } from '@/components/Typography';\nimport { ElementWrapper } from '@/screens/Chamber/components/ElementWrapper';\nimport { EditModeWrapper } from './styles';\nimport { type QuickQuestionsElementProps } from './types';\nimport { QuickQuestionsEditWrapperTestId } from './testIds';\n\nconst QuickQuestionsElementEditMode = forwardRef(\n  (props: QuickQuestionsElementProps, ref: Ref<HTMLDivElement>) => {\n    const { t } = useTranslation();\n\n    return (\n      <ElementWrapper ref={ref} isBorder={false} {...props}>\n        <EditModeWrapper\n          data-testid={QuickQuestionsEditWrapperTestId}\n          justify=\"center\"\n          align=\"center\"\n        >\n          <TSpan font=\"body-m\" colorToken=\"--text-placeholder-neutral-default\">\n            {t('noumena.quick_questions.edit_mode_message')}\n          </TSpan>\n        </EditModeWrapper>\n      </ElementWrapper>\n    );\n  },\n);\n\nexport default QuickQuestionsElementEditMode;\n","import { forwardRef, type Ref } from 'react';\nimport { useLaunchDarkly } from '@/hooks';\nimport QuickQuestionsElementViewMode from './QuickQuestionsElementViewMode';\nimport { type QuickQuestionsElementProps } from './types';\nimport QuickQuestionsElementEditMode from './QuickQuestionsElementEditMode';\nimport { QuickQuestionsElementProvider } from './providers/QuickQuestionsElementProvider';\n\nconst QuickQuestionsElement = forwardRef(\n  (props: QuickQuestionsElementProps, ref: Ref<HTMLDivElement>) => {\n    const {\n      flags: { noumEditor2 },\n    } = useLaunchDarkly();\n    if ((props.isEditing && !noumEditor2) || props.isCustomPreview) {\n      return <QuickQuestionsElementEditMode {...props} ref={ref} />;\n    }\n\n    return (\n      <QuickQuestionsElementProvider>\n        <QuickQuestionsElementViewMode {...props} />\n      </QuickQuestionsElementProvider>\n    );\n  },\n);\n\nexport default QuickQuestionsElement;\n","import {\n  StyledFlexColumn,\n  StyledFlexRowBordered,\n} from '@/screens/Chamber/components/elements/SkeletonLoader/styled';\nimport {\n  SizedSkeleton,\n  SkeletonLoaderPostII,\n} from '@/screens/Chamber/components/elements/SkeletonLoader/StyledSkeletons';\nimport { Card } from '@/components/Card';\nimport SkeletonLoaderElementHeader from '@/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderElementHeader';\n\nconst SkeletonLoaderPostElement = () => (\n  <Card style={{ padding: 24 }}>\n    <StyledFlexColumn gap={24} justify=\"baseline\" align=\"flex-start\">\n      <SkeletonLoaderElementHeader />\n      <StyledFlexRowBordered gap={12} justify=\"flex-start\" align=\"center\">\n        <SkeletonLoaderPostII />\n        <SizedSkeleton w=\"100%\" h={56} r={8} />\n      </StyledFlexRowBordered>\n      <SizedSkeleton w={111} h={16} r={8} />\n    </StyledFlexColumn>\n  </Card>\n);\n\nexport default SkeletonLoaderPostElement;\n","import styled from 'styled-components';\nimport { devices } from '@/constants/devices';\nimport { Card } from '@/components/Card';\n\nexport const Container = styled(Card)<{ noumEditor2?: boolean }>`\n  padding: ${({ noumEditor2 }) => (noumEditor2 ? '0' : ' 24px')};\n  display: flex;\n  flex-direction: column;\n  border-radius: 0;\n  ${({ noumEditor2 }) => !noumEditor2 && 'gap: 16px'};\n  @media ${devices.TABLET} {\n    border-radius: 16px;\n  }\n  overflow: visible;\n`;\n","import styled from 'styled-components';\nimport { Button } from '@/components/Button';\n\nexport const Container = styled.div<{ noumEditor2?: boolean }>`\n  padding: ${({ noumEditor2 }) => (noumEditor2 ? '16px 0px 0px 16px' : '0')};\n  display: flex;\n  flex-direction: row;\n  border-radius: 0;\n`;\nexport const Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n`;\nexport const FilterButton = styled(Button)`\n  padding: 8px;\n`;\n","import styled from 'styled-components';\nimport { flexColumn } from '@/common/globalStyles';\nimport { Button } from '@/components/Button';\n\nexport const SortWrap = styled.div`\n  ${flexColumn};\n  width: 100%;\n  position: relative;\n`;\n\nexport const VisibilitySection = styled.div`\n  ${flexColumn};\n  width: 100%;\n  position: relative;\n`;\n\nexport const FullButton = styled(Button)`\n  width: 100%;\n`;\n\nexport const EmptyButton = styled(Button)`\n  cursor: pointer;\n`;\n\nexport const SearchSection = styled.div`\n  ${flexColumn};\n  width: 100%;\n  position: relative;\n`;\n","import { useCallback, useMemo, useState, useEffect } from 'react';\nimport { t } from 'i18next';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from '@/components/ExtendedModal';\nimport { Icon } from '@/components/Icon';\nimport { Dropdown, type DropdownValueType } from '@/components/Dropdown';\nimport { TextField } from '@/components/TextField';\nimport { getFullName } from '@/utils/fullName';\nimport { Avatar } from '@/components/Avatar/Avatar';\nimport {\n  PostVisibility,\n  SortOperator,\n  type UserOutput,\n} from '@/apollo/generated/types';\nimport useDebounce from '@/hooks/useDebounce';\nimport { capitalizeAllWord, trimAndLowerString } from '@/utils/strings';\nimport { cleanList } from '@/utils/list';\nimport { Spacer } from '@/layout';\nimport { useWindowDimensions } from '@/hooks/dimensions';\nimport { breakpoints } from '@/constants/devices';\nimport VisibilityoptionsRenderer from './VisibilityOptionsRenderer';\nimport AuthorOptionsRenderer from './AuthorOptionsRenderer';\nimport { type FilterType } from '../../types';\nimport { type FilterPostProps } from './types';\nimport { OrderOptions, VisibilityOptions } from './constants';\nimport { usePostElement } from '../../PostElementProvider';\nimport {\n  SortWrap,\n  VisibilitySection,\n  FullButton,\n  EmptyButton,\n  SearchSection,\n} from './styles';\n\nconst allOption: DropdownValueType<string> = {\n  type: 'value',\n  value: 'all',\n  key: 'all_authors',\n  label: 'All',\n};\n\nexport const FilterPost = (props: FilterPostProps) => {\n  const {\n    setShowFilter,\n    setFilter: setPostFilter,\n    authors,\n    filter,\n  } = usePostElement();\n  const { onClose } = props;\n  const [keyword, setKeyword] = useState<string>('');\n  const debouncedKeyword = useDebounce<string>(keyword, 500);\n\n  const [isOrderOpen, setIsOrderOpen] = useState(false);\n  const [isVisibilityOpen, setVisibilityOpen] = useState(false);\n  const [order, setOrder] = useState<SortOperator>(SortOperator.Desc);\n  const [visibility, setVisibility] = useState<PostVisibility[]>([\n    PostVisibility.Connection,\n  ]);\n  const [author, setAuthor] =\n    useState<DropdownValueType<UserOutput | string>>(allOption);\n  const { width } = useWindowDimensions();\n  const isMobile = width < breakpoints.TABLET;\n\n  const closeModal = useCallback(() => {\n    setShowFilter(false);\n  }, [setShowFilter]);\n\n  const onSelectOrder = useCallback((op) => {\n    setOrder(op.value);\n  }, []);\n\n  const onSelectMember = useCallback(\n    (op) => {\n      const found = visibility.find((item) => item === op.value);\n      if (found) {\n        setVisibility(visibility.filter((item) => item !== op.value));\n      } else {\n        setVisibility([...visibility, op.value]);\n      }\n    },\n    [visibility],\n  );\n\n  const onSelectAuthor = useCallback((op) => {\n    setAuthor(op);\n  }, []);\n\n  const orderValue = useMemo(\n    () => OrderOptions.find((od) => od.value === order)?.label?.toString(),\n    [order],\n  );\n\n  const visibilityValue = useMemo(() => {\n    if (visibility.length === 2) {\n      return 'All';\n    }\n    if (visibility.length === 0) {\n      return 'Members';\n    }\n    return `${capitalizeAllWord(visibility[0])}s`;\n  }, [visibility]);\n\n  const authorValue = useMemo(() => {\n    if (typeof author.value === 'string') {\n      return 'All';\n    }\n    return getFullName(\n      author.value.firstName,\n      author.value.middleName,\n      author.value.lastName,\n    );\n  }, [author]);\n\n  const searchedAuthors = useMemo(() => {\n    const list = authors.filter((user) => {\n      const fullSearchableWord = trimAndLowerString(\n        `${user.firstName || ''}${user.middleName || ''}${user.lastName || ''}`,\n      );\n      return fullSearchableWord.includes(trimAndLowerString(debouncedKeyword));\n    });\n    return list.slice(0, 20);\n  }, [authors, debouncedKeyword]);\n\n  const authorOptions = useMemo(() => {\n    const options: DropdownValueType<UserOutput | string>[] = [\n      {\n        ...allOption,\n      },\n    ];\n    searchedAuthors.map((item) => {\n      const option: DropdownValueType<UserOutput | string> = {\n        type: 'value',\n        value: item,\n        key: item._id,\n        label: getFullName(item.firstName, item.middleName, item.lastName),\n        icon: (\n          <Avatar url={item.profile?.profilePictureThumbnail || ''} size=\"M\" />\n        ),\n      };\n      options.push(option);\n      return undefined;\n    });\n    return options;\n  }, [searchedAuthors]);\n\n  const handleInputAuthor = useCallback((e) => {\n    setKeyword(e.target.value);\n  }, []);\n\n  const applyFilters = useCallback(() => {\n    const tmpFilter: FilterType = {};\n    if (typeof author.value === 'string') {\n      // means author is selected All\n      tmpFilter.filter = {\n        visibility,\n      };\n    } else {\n      tmpFilter.filter = {\n        uid: author.value._id,\n        visibility,\n      };\n    }\n    tmpFilter.sort = {\n      column: 'createdAt',\n      operator: order,\n    };\n\n    setPostFilter(tmpFilter);\n    onClose();\n  }, [author, order, visibility, setPostFilter, onClose]);\n\n  const resetFilters = useCallback(() => {\n    setPostFilter({});\n  }, [setPostFilter]);\n\n  useEffect(() => {\n    if (!filter) return;\n    // initialize Filter modal with Current Filter\n    if (filter.filter?.uid) {\n      const findAuthor = authorOptions.find((au) => {\n        if (typeof au.value !== 'string') {\n          return filter.filter?.uid === au.value._id;\n        }\n        return false;\n      });\n      setAuthor(findAuthor || allOption);\n    } else {\n      setAuthor(allOption);\n    }\n    setVisibility(\n      cleanList(filter.filter?.visibility) || [PostVisibility.Connection],\n    );\n    setOrder(filter.sort?.operator || SortOperator.Desc);\n  }, [filter, authorOptions]);\n  return (\n    <Modal\n      isFullScreen={false}\n      open\n      testId=\"filter_post\"\n      onClose={closeModal}\n      enableCloseButton\n      closeButtonStyles={{ enforceRight: !isMobile }}\n      style={{\n        width: isMobile ? '100vw' : 450,\n      }}\n      disableBackdropClick\n    >\n      <ModalHeader\n        isFullScreen={false}\n        justifyContent={isMobile ? 'flex-start' : 'center'}\n      >\n        {t('noumena.post.filter.title')}\n      </ModalHeader>\n\n      <ModalBody\n        minHeight={isMobile && width <= breakpoints.MOBILE_M ? 360 : 500}\n        tabletFlex\n        mobileFlex\n        hideScrollbar\n        isFullScreen={isMobile}\n      >\n        <Spacer height={12} />\n        <SortWrap>\n          <Dropdown\n            hideIcons={true}\n            closeOnSelect\n            placement=\"bottom-end\"\n            options={OrderOptions}\n            containerWidth=\"100%\"\n            onSelectOption={onSelectOrder}\n            onOpen={() => setIsOrderOpen(true)}\n            onClose={() => setIsOrderOpen(false)}\n            usePortal={false}\n            calRefTop={false}\n            isAnimation={false}\n            usePopStyle\n          >\n            {({ inputProps, inputRef, toggle }) => (\n              <TextField\n                readOnly\n                inputSize=\"small\"\n                ref={inputRef}\n                {...inputProps}\n                value={orderValue}\n                label={t('noumena.post.filter.order_label')}\n                spellCheck=\"false\"\n                rightIcon={\n                  isOrderOpen ? (\n                    <Icon\n                      name=\"chevron_up_m\"\n                      size={16}\n                      color=\"--icon-input-neutral-default\"\n                      onClick={toggle}\n                    />\n                  ) : (\n                    <Icon\n                      name=\"chevron_down_m\"\n                      color=\"--icon-input-neutral-default\"\n                      size={16}\n                      onClick={toggle}\n                    />\n                  )\n                }\n              />\n            )}\n          </Dropdown>\n        </SortWrap>\n        <Spacer height={24} />\n        <VisibilitySection>\n          <Dropdown\n            multiselect\n            closeOnSelect={false}\n            hideIcons={true}\n            placement=\"bottom-end\"\n            options={VisibilityOptions}\n            containerWidth=\"100%\"\n            onSelectOption={onSelectMember}\n            onOpen={() => setVisibilityOpen(true)}\n            onClose={() => setVisibilityOpen(false)}\n            usePortal={false}\n            calRefTop={false}\n            isAnimation={false}\n            usePopStyle\n            optionsRenderer={(options, handleSelectOption) => (\n              <VisibilityoptionsRenderer\n                handleSelectOption={handleSelectOption}\n                options={options}\n                activeItem={visibility}\n              />\n            )}\n          >\n            {({ inputProps, inputRef, toggle }) => (\n              <TextField\n                inputSize=\"small\"\n                readOnly\n                ref={inputRef}\n                {...inputProps}\n                value={visibilityValue}\n                label={t('noumena.post.filter.visibility_label')}\n                spellCheck=\"false\"\n                rightIcon={\n                  isVisibilityOpen ? (\n                    <Icon\n                      name=\"chevron_up_m\"\n                      color=\"--icon-input-neutral-default\"\n                      size={16}\n                      onClick={toggle}\n                    />\n                  ) : (\n                    <Icon\n                      name=\"chevron_down_m\"\n                      color=\"--icon-input-neutral-default\"\n                      size={16}\n                      onClick={toggle}\n                    />\n                  )\n                }\n              />\n            )}\n          </Dropdown>\n        </VisibilitySection>\n        <Spacer height={24} />\n        <SearchSection>\n          <Dropdown\n            multiselect={false}\n            hideIcons={false}\n            closeOnSelect\n            placement=\"bottom-end\"\n            options={authorOptions}\n            containerWidth=\"100%\"\n            containerHeight={\n              authorOptions.length > 2 && !isMobile ? '150px' : 'auto'\n            }\n            padding={authorOptions.length > 2 ? '5px 8px 5px 0' : '5px 0px'}\n            onSelectOption={onSelectAuthor}\n            usePortal={false}\n            calRefTop={false}\n            isAnimation={false}\n            usePopStyle\n            optionsRenderer={(options, handleSelectOption) => (\n              <AuthorOptionsRenderer\n                options={options}\n                handleSelectOption={handleSelectOption}\n                activeItem={author}\n              />\n            )}\n          >\n            {({ inputProps, inputRef, toggle }) => (\n              <TextField\n                inputSize=\"small\"\n                ref={inputRef}\n                {...inputProps}\n                value={authorValue}\n                onChange={handleInputAuthor}\n                label={t('noumena.post.filter.authors_label')}\n                spellCheck=\"false\"\n                rightIcon={\n                  <Icon\n                    name=\"search_m\"\n                    size={16}\n                    color=\"--icon-input-neutral-default\"\n                    onClick={toggle}\n                  />\n                }\n              />\n            )}\n          </Dropdown>\n        </SearchSection>\n      </ModalBody>\n\n      <ModalFooter isFullScreen={false} flexDirection=\"row\" gap={16}>\n        <EmptyButton\n          onClick={resetFilters}\n          color=\"primary\"\n          size=\"full\"\n          tertiary\n        >\n          {t('noumena.post.filter.reset_filters')}\n        </EmptyButton>\n        <FullButton onClick={applyFilters} primary>\n          {t('noumena.post.filter.apply_filters')}\n        </FullButton>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default FilterPost;\n","import { type WrapperViewProp } from '@/screens/Chamber/components/ElementWrapper';\nimport { ViewMode } from '@/screens/Chamber/components/ElementWrapper/ViewMode';\nimport { Icon } from '@/components/Icon';\nimport { useNoumContext } from '@/screens/Chamber/ViewChamber/ChamberProvider';\nimport { ViewModeNoumEditor } from '@/screens/Chamber/components/ElementWrapper/ViewModeNoumEditor';\nimport { Container, FilterButton } from './styles';\nimport { usePostElement } from '../../PostElementProvider';\nimport { FilterPost } from '../../modals/FilterPost';\n\nconst PostHeader = (props: WrapperViewProp) => {\n  const {\n    spaceId,\n    element,\n    currentTitle,\n    isCollapse,\n    setIsCollapse,\n    isCustomPreview,\n  } = props;\n  const { setShowFilter, showFilter, isCollapseDisabled, noumEditor2 } =\n    usePostElement();\n  const { space } = useNoumContext();\n\n  return (\n    <Container noumEditor2={noumEditor2 && !isCustomPreview}>\n      {noumEditor2 && !isCustomPreview ? (\n        <ViewModeNoumEditor currentTitle={currentTitle} />\n      ) : (\n        <>\n          <ViewMode\n            spaceId={spaceId}\n            element={element}\n            currentTitle={currentTitle}\n            isCollapse={isCollapse}\n            setIsCollapse={setIsCollapse}\n            isCollapseDisabled={isCollapseDisabled}\n          />\n          {!isCollapse && space?.type !== 'HOME' && (\n            <FilterButton\n              data-testid=\"filter-button\"\n              onClick={() => setShowFilter(true)}\n              size=\"small\"\n              icon={\n                <Icon\n                  name=\"align_center_m\"\n                  size={24}\n                  color=\"--icon-button-neutral-default\"\n                />\n              }\n            />\n          )}\n\n          {showFilter && <FilterPost onClose={() => setShowFilter(false)} />}\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default PostHeader;\n","import styled from 'styled-components';\nimport { flexRow, noScrollBar } from '@/common/globalStyles';\nimport { TSpan } from '@/components/Typography';\nimport { Chips } from '@/components/Chips/Chips';\n\nexport const Container = styled.div<{ noumEditor2?: boolean }>`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  padding: ${({ noumEditor2 }) => (noumEditor2 ? `0 16px` : ' 0')};\n  box-sizing: border-box;\n  gap: 10px;\n  width: 100%;\n  overflow-y: auto;\n  min-height: 40px;\n  ${noScrollBar}\n`;\n\nexport const AllTab = styled(Chips)<{\n  isDisabled?: boolean;\n  noumEditor2?: boolean;\n}>`\n  ${({ noumEditor2 }) => noumEditor2 && `background: none; border-radius: 0`};\n  ${({ noumEditor2, isDisabled }) =>\n    noumEditor2 &&\n    !isDisabled &&\n    `border-bottom: 2px solid var(--text-tab-chips-brand-primary-selected);`};\n  span {\n    font-size: 14px !important;\n    ${({ isDisabled }) =>\n      isDisabled\n        ? `color: var(--text-tab-chips-neutral-default) !important;`\n        : 'color: var(--text-tab-chips-brand-primary-selected) !important;'}\n  }\n`;\nexport const UserFrame = styled.div`\n  ${flexRow}\n`;\nexport const UserItem = styled.div<{\n  isActive: boolean;\n  noumEditor2?: boolean;\n}>`\n  ${flexRow}\n  gap: 8px;\n  left: 0px;\n  top: 0px;\n  border-radius: 8px;\n  padding: 8px 12px 8px 12px;\n  cursor: pointer;\n\n  ${({ isActive, noumEditor2 }) =>\n    isActive &&\n    !noumEditor2 &&\n    `background: var(--bg-tab-chips-brand-secondary-selected);`}\n  ${({ noumEditor2, isActive }) =>\n    noumEditor2 &&\n    isActive &&\n    `border-bottom: 2px solid var(--text-tab-chips-brand-primary-selected); border-radius: 0`};\n`;\nexport const MoreText = styled(TSpan)`\n  padding-left: 8px;\n`;\n","import { useMemo, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Avatar } from '@/components/Avatar/Avatar';\nimport { DiagonalAvatar3 } from '@/components/Avatar/Diagonal3/Diagonal3';\nimport { TSpan } from '@/components/Typography';\nimport { getFullName } from '@/utils/fullName';\nimport { UserUtil } from '@/utils/user';\nimport { usePostElement } from '../../PostElementProvider';\nimport { Container, AllTab, UserFrame, UserItem, MoreText } from './styles';\n\nconst TO_SHOW = 6;\n\nconst AuthorsList = () => {\n  const { authors, filter, setFilter, noumEditor2, isCustomPreview } =\n    usePostElement();\n  const { t } = useTranslation();\n\n  const selectedUid = useMemo(\n    () => filter.filter?.uid || 'all',\n    [filter.filter],\n  );\n\n  const all = useMemo(() => [...authors], [authors]);\n\n  const remainCount = useMemo(() => all.length - TO_SHOW, [all]);\n\n  const lastUrls = useMemo(() => {\n    if (remainCount > 0) {\n      const tmp = all.slice(TO_SHOW, TO_SHOW + 3);\n      const urls: string[] = [];\n      tmp.map((item) => {\n        urls.push(item.profile?.profilePictureThumbnail || '');\n        return undefined;\n      });\n      return urls;\n    }\n    return [];\n  }, [all, remainCount]);\n\n  const handleSelect = useCallback(\n    (uid) => {\n      if (uid === 'all') {\n        setFilter({\n          ...filter,\n          filter: {\n            ...filter.filter,\n            uid: undefined,\n          },\n        });\n      } else {\n        setFilter({\n          ...filter,\n          filter: {\n            ...filter.filter,\n            uid,\n          },\n        });\n      }\n    },\n    [filter, setFilter],\n  );\n\n  return (\n    <Container noumEditor2={noumEditor2 && !isCustomPreview}>\n      <AllTab\n        onClick={() => {\n          handleSelect('all');\n        }}\n        size=\"large\"\n        borderRadius=\"8px\"\n        secondary={selectedUid !== 'all'}\n        isDisabled={selectedUid !== 'all'}\n        noumEditor2={noumEditor2 && !isCustomPreview}\n      >\n        {t('noumena.post_all_authors')}\n      </AllTab>\n      <UserFrame>\n        {all.slice(0, TO_SHOW).map((author) => (\n          <UserItem\n            key={author._id}\n            onClick={() => {\n              handleSelect(author._id);\n            }}\n            isActive={selectedUid === author._id}\n            noumEditor2={noumEditor2 && !isCustomPreview}\n          >\n            <Avatar size=\"M\" url={UserUtil.getProfilePicture(author) ?? ''} />\n            {selectedUid === author._id && (\n              <TSpan colorToken=\"--text-tab-chips-brand-primary-selected\">\n                {getFullName(\n                  author.firstName,\n                  author.middleName,\n                  author.lastName,\n                )}\n              </TSpan>\n            )}\n          </UserItem>\n        ))}\n        {remainCount > 0 && (\n          <>\n            <DiagonalAvatar3 size=\"M\" urls={lastUrls} />\n            <MoreText colorToken=\"--text-tab-chips-neutral-default\">\n              +{remainCount}\n            </MoreText>\n          </>\n        )}\n      </UserFrame>\n    </Container>\n  );\n};\n\nexport default AuthorsList;\n","import {\n  PostStatus,\n  PostVisibility,\n  type PostOutput,\n} from '@/apollo/generated/types';\nimport { EXAMPLE_POST_ID } from '../../helpers';\n\nexport const noPostData: PostOutput[] = [\n  {\n    chamberId: '6358f4534eeb64000d8d30d6',\n    createdAt: '2023-06-01T08:55:33.773Z',\n    postStatus: PostStatus.Accepted,\n    rawJSON: {\n      blocks: [\n        {\n          data: {},\n          depth: 0,\n          entityRanges: [],\n          inlineStyleRanges: [],\n          key: '8v90q',\n          text: 'This is an example post just to show you what posts will look like in your Noum. Don’t worry, it will not be visible when you publish your Noum',\n          type: 'unstyled',\n        },\n      ],\n      entityMap: {},\n    },\n    text: '<p>This is an example post just to show you what posts will look like in your Noum. Don’t worry, it will not be visible when you publish your Noum</p>',\n    uid: {\n      __typename: 'UserOutput',\n      _id: '62fcdb69c2b876000fb22f71',\n      firstName: 'John',\n      lastName: 'Doe',\n      userStatus: 'ACTIVE',\n    },\n    updatedAt: '2023-06-01T08:55:33.773Z',\n    visibility: PostVisibility.Connection,\n    __typename: 'PostOutput',\n    _id: `${EXAMPLE_POST_ID}_1`,\n  },\n  {\n    chamberId: '6358f4534eeb64000d8d30d9',\n    createdAt: '2023-06-01T08:55:33.773Z',\n    postStatus: PostStatus.Accepted,\n    rawJSON: {\n      blocks: [\n        {\n          data: {},\n          depth: 0,\n          entityRanges: [],\n          inlineStyleRanges: [],\n          key: '8v90u',\n          text: 'This is an example post just to show you what posts will look like in your Noum. Don’t worry, it will not be visible when you publish your Noum',\n          type: 'unstyled',\n        },\n      ],\n      entityMap: {},\n    },\n    text: '<p>This is an example post just to show you what posts will look like in your Noum. Don’t worry, it will not be visible when you publish your Noum</p>',\n    uid: {\n      __typename: 'UserOutput',\n      _id: '62fcdb69c2b876000fb22f70',\n      firstName: 'John',\n      lastName: 'Doe',\n      userStatus: 'ACTIVE',\n    },\n    updatedAt: '2023-06-01T08:55:33.773Z',\n    visibility: PostVisibility.Connection,\n    __typename: 'PostOutput',\n    _id: `${EXAMPLE_POST_ID}_2`,\n  },\n];\n","import { Fragment, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useToggle } from '@/hooks';\nimport { type WrapperViewProp } from '@/screens/Chamber/components/ElementWrapper';\nimport { Button } from '@/components/Button';\nimport { SpaceTypeEnum, UserStatus } from '@/apollo/generated/types';\nimport { Spacer } from '@/layout';\nimport { getBottomStatusFromQuery, Infinite } from '@/components/Infinite';\nimport useScrollToLocation from '@/hooks/useScrollToLocation';\nimport { CustomPreviewTabEnum } from '@/screens/Chamber/CustomPreview/constants';\nimport { Icon } from '@/components/Icon';\nimport { useNavigate, useParams } from 'react-router';\nimport { usePermissions } from '@/features/posts/hooks';\nimport AuthorsList from '../AuthorsList';\nimport { CreatePost } from '../../modals/CreatePost/Modal';\nimport PostItem from '../PostItem';\nimport { AllPosts, Container, NoPosts, NoPostsContainer } from './styles';\nimport { usePostElement } from '../../PostElementProvider';\nimport CreateSection from '../CreateSection';\nimport { noPostData } from './mockData';\n\nexport const PostBody = (props: WrapperViewProp) => {\n  const {\n    setShowCreate,\n    showCreate,\n    refetchPosts,\n    posts,\n    loading,\n    fetchMore,\n    networkStatus,\n    totalCount,\n    space,\n    isSpaceOwner,\n    noumEditor2,\n  } = usePostElement();\n  useScrollToLocation(posts?.length > 0);\n  const [showAll, toggleShowAll] = useToggle(false);\n  const { isCollapse, spaceId, selectedCustomPreviewTab, isEditing } = props;\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const { user, isUnregistered } = useAuth();\n  const { t } = useTranslation();\n  const recentPost = useMemo(() => posts[0], [posts]);\n  const getUserPermission = usePermissions();\n  const isCreatable = useMemo(() => {\n    if (space?.type === 'HOME' && !isSpaceOwner) return false;\n    if (isUnregistered)\n      return getUserPermission('POST', 'CREATE', 'UNREGISTERED');\n    return (\n      (isSpaceOwner || space?.isConnected) &&\n      user?.userStatus === UserStatus.Active\n    );\n  }, [isSpaceOwner, space, user, isUnregistered, getUserPermission]);\n\n  const noumId = id || space?._id;\n\n  const initialSliceItems = useMemo(\n    () =>\n      noumEditor2 && selectedCustomPreviewTab !== CustomPreviewTabEnum.Preview\n        ? 2\n        : 1,\n    [noumEditor2, selectedCustomPreviewTab],\n  );\n\n  const postData = useMemo(() => {\n    if (showAll) {\n      return posts;\n    }\n    return posts.slice(0, initialSliceItems);\n  }, [showAll, posts, initialSliceItems]);\n  // useEffect(() => refetchPosts(), [isCollapse, refetchPosts]);\n  return (\n    <>\n      <Container data-testid=\"post-body-container\">\n        {isCreatable &&\n          selectedCustomPreviewTab !== CustomPreviewTabEnum.Preview && (\n            <CreateSection\n              onClick={() => setShowCreate(true)}\n              isCreatable={isCreatable ?? false}\n              size={noumEditor2 ? 'L' : 'M'}\n              noumEditor2={noumEditor2}\n            />\n          )}\n        {showCreate && (\n          <CreatePost\n            spaceId={spaceId}\n            onClose={() => setShowCreate(false)}\n            onSuccess={() => {\n              setShowCreate(false);\n              refetchPosts();\n            }}\n            isMasterNoum={space?.type === 'HOME'}\n          />\n        )}\n        {isCollapse ? (\n          recentPost && (\n            <PostItem\n              recent\n              collapsed\n              data={recentPost}\n              isMasterNoum={space?.type === SpaceTypeEnum.Home}\n              selectedCustomPreviewTab={selectedCustomPreviewTab}\n            />\n          )\n        ) : (\n          <>\n            {space?.type !== SpaceTypeEnum.Home && !isEditing && (\n              <AuthorsList />\n            )}\n            {postData.length > 0 && (\n              <AllPosts showAll={showAll}>\n                <Infinite\n                  width=\"100%\"\n                  onFetchMore={fetchMore}\n                  unsetOverflow\n                  status={\n                    showAll\n                      ? getBottomStatusFromQuery({\n                          networkStatus,\n                          totalCount,\n                          currentCount: posts.length,\n                        })\n                      : 'end'\n                  }\n                >\n                  {postData.map((post) => (\n                    <PostItem key={`post-item-${post._id}`} data={post} />\n                  ))}\n                </Infinite>\n              </AllPosts>\n            )}\n            {(!noumEditor2 ||\n              selectedCustomPreviewTab === CustomPreviewTabEnum.Preview) &&\n              posts.length > 1 && (\n                <Button size=\"small\" onClick={toggleShowAll} secondary>\n                  {!showAll\n                    ? t('noumena.post_show_all')\n                    : t('noumena.post_show_less')}\n                </Button>\n              )}\n          </>\n        )}\n        {!loading && posts.length < 1 && (\n          <>\n            {isEditing ? (\n              <>\n                {noPostData.map((post) => (\n                  <PostItem key={`post-item-${post._id}`} data={post} />\n                ))}\n              </>\n            ) : (\n              <NoPostsContainer>\n                <NoPosts font=\"body-m\" colorToken=\"--text-card-neutral-default\">\n                  {t('noumena.post.no_posts_yet')}\n                </NoPosts>\n                <Spacer height={16} />\n              </NoPostsContainer>\n            )}\n          </>\n        )}\n      </Container>\n      {noumEditor2 &&\n        selectedCustomPreviewTab !== CustomPreviewTabEnum.Preview &&\n        posts.length > 2 && (\n          <>\n            <Spacer height={6} />\n            <Button\n              textOnly\n              size=\"small\"\n              onClick={() => navigate(`/posts/${noumId}`)}\n              secondary\n              rightIcon={<Icon size={12} name=\"chevron_right_m\" />}\n            >\n              {t('noumena.editor.all_posts')}\n            </Button>\n            <Spacer height={16} />\n          </>\n        )}\n    </>\n  );\n};\n","import { type ElementWrapperProps } from '@/screens/Chamber/components/ElementWrapper';\nimport { Spinner } from '@/components/Spinner';\nimport { Container } from './styles';\nimport PostHeader from '../PostHeader';\nimport PostBody from '../PostBody';\nimport { usePostElement } from '../../PostElementProvider';\n\nconst PostViewMode = (props: ElementWrapperProps) => {\n  const { isCollapse, setIsCollapse, loading, noumEditor2 } = usePostElement();\n  return (\n    <Container\n      data-testid=\"view-userpost\"\n      id=\"post\"\n      noumEditor2={noumEditor2 && !props.isCustomPreview}\n    >\n      <PostHeader\n        {...props}\n        isCollapse={isCollapse}\n        setIsCollapse={setIsCollapse}\n      />\n      {loading && <Spinner />}\n      <PostBody\n        {...props}\n        isCollapse={isCollapse}\n        setIsCollapse={setIsCollapse}\n      />\n    </Container>\n  );\n};\n\nexport default PostViewMode;\n","import { useTranslation } from 'react-i18next';\nimport {\n  ElementWrapper,\n  type ElementWrapperProps,\n} from '@/screens/Chamber/components/ElementWrapper';\nimport { TSpan } from '@/components/Typography';\nimport { Stack } from '@/layout';\nimport { useSkeletonIsLoadingContext } from '@/components/SkeletonLoader/SkeletonLoaderProvider';\nimport SkeletonLoaderPostElement from '@/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderPostElement';\nimport { useNoumContext } from '@/screens/Chamber/ViewChamber/ChamberProvider';\nimport { useLaunchDarkly } from '@/hooks';\nimport { useMemo } from 'react';\nimport { useEditChamberState } from '@/screens/Chamber/EditChamber/provider';\nimport { PostElementProvider } from './PostElementProvider';\nimport PostViewMode from './components/PostViewMode';\n\nconst PostElement = (props: ElementWrapperProps) => {\n  const { t } = useTranslation();\n  const { isLoading } = useSkeletonIsLoadingContext();\n  const { space } = useNoumContext();\n  const { space: editSpace } = useEditChamberState();\n\n  const {\n    flags: { noumEditor2 },\n  } = useLaunchDarkly();\n\n  const spaceView = useMemo(\n    () => (props.isEditing ? editSpace : space),\n    [editSpace, props.isEditing, space],\n  );\n\n  if (isLoading) return <SkeletonLoaderPostElement />;\n\n  if (props.isEditing && (!noumEditor2 || props.isCustomPreview))\n    return (\n      <ElementWrapper {...props}>\n        {!props.isCustomPreview ? (\n          <Stack justify=\"center\">\n            <TSpan font=\"body-m\" colorToken=\"--text-card-neutral-default\">\n              {t('noumena.post.edit_mode_message')}\n            </TSpan>\n          </Stack>\n        ) : (\n          <></>\n        )}\n      </ElementWrapper>\n    );\n  return (\n    <PostElementProvider\n      space={spaceView!}\n      isCustomPreview={props.isCustomPreview}\n    >\n      <PostViewMode {...props} />\n    </PostElementProvider>\n  );\n};\nexport default PostElement;\n","import {\n  createContext,\n  useContext,\n  useMemo,\n  type FC,\n  type ReactNode,\n  useState,\n} from 'react';\nimport { type SocialLink } from '@/apollo/generated/types';\nimport { useAuth } from '@/features/auth/contexts';\nimport { cleanList } from '@/utils/list';\n\ntype INetworkElementContext = {\n  isCollapse: boolean;\n  setIsCollapse: (value: boolean) => void;\n  networks: SocialLink[];\n};\n\nconst initialValue: INetworkElementContext = {\n  isCollapse: true,\n  setIsCollapse: () => {},\n  networks: [],\n};\n\nexport const PAGE_SIZE = 10;\n\nexport const NetworkElementContext =\n  createContext<INetworkElementContext>(initialValue);\n\nexport const NetworkElementProvider: FC<{\n  children: ReactNode;\n}> = ({ children }) => {\n  const [isCollapse, setIsCollapse] = useState<boolean>(true);\n  const { user } = useAuth();\n  const networks = useMemo(() => cleanList(user?.profile?.socialLinks), [user]);\n\n  const value = useMemo(\n    () => ({\n      isCollapse,\n      setIsCollapse,\n      networks,\n    }),\n    [isCollapse, setIsCollapse, networks],\n  );\n\n  return (\n    <NetworkElementContext.Provider value={value}>\n      {children}\n    </NetworkElementContext.Provider>\n  );\n};\n\nexport const useNetworkElement = () => {\n  const value = useContext(NetworkElementContext);\n\n  return value;\n};\n","import { SkeletonLoaderPost } from '@/screens/Chamber/components/elements/SkeletonLoader/StyledSkeletons';\nimport {\n  StyledFlexColumn,\n  StyledFlexRow,\n} from '@/screens/Chamber/components/elements/SkeletonLoader/styled';\nimport { Card } from '@/components/Card';\nimport SkeletonLoaderElementHeader from '@/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderElementHeader';\n\nconst SkeletonLoaderNetworkElement = () => (\n  <Card>\n    <StyledFlexColumn gap={21} justify=\"baseline\" align=\"flex-start\">\n      <SkeletonLoaderElementHeader />\n      <StyledFlexRow gap={12}>\n        <SkeletonLoaderPost />\n        <SkeletonLoaderPost />\n        <SkeletonLoaderPost />\n        <SkeletonLoaderPost />\n        <SkeletonLoaderPost />\n        <SkeletonLoaderPost />\n        <SkeletonLoaderPost />\n        <SkeletonLoaderPost />\n        <SkeletonLoaderPost />\n        <SkeletonLoaderPost />\n        <SkeletonLoaderPost />\n      </StyledFlexRow>\n    </StyledFlexColumn>\n  </Card>\n);\n\nexport default SkeletonLoaderNetworkElement;\n","import styled from 'styled-components';\nimport { Button } from '@/components/Button';\n\nexport const Container = styled.div`\n  padding: 0;\n  display: flex;\n  flex-direction: row;\n  border-radius: 0;\n`;\nexport const Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n`;\nexport const FilterButton = styled(Button)`\n  padding: 8px;\n`;\n","import { type WrapperViewProp } from '@/screens/Chamber/components/ElementWrapper';\nimport { ViewMode } from '@/screens/Chamber/components/ElementWrapper/ViewMode';\nimport { useNetworkElement } from '../../NetworkElementProvider';\nimport { Container } from './styles';\n\nexport const NetworkHeader = (props: WrapperViewProp) => {\n  const { spaceId, element, currentTitle } = props;\n  const { isCollapse, setIsCollapse } = useNetworkElement();\n  return (\n    <Container data-testid=\"network-header-container\">\n      <ViewMode\n        spaceId={spaceId}\n        element={element}\n        currentTitle={currentTitle}\n        isCollapse={isCollapse}\n        setIsCollapse={setIsCollapse}\n      />\n    </Container>\n  );\n};\n","import styled, { css } from 'styled-components';\nimport { borderBox, flexColumn, flexRow } from '@/common/globalStyles';\nimport { devices } from '@/constants/devices';\n\nexport const Container = styled.a<{ isCollapse: boolean }>`\n  position: relative;\n  cursor: pointer;\n  text-decoration: none;\n  ${flexColumn}\n  ${borderBox}\n  @media ${devices.MOBILE_L} {\n    ${({ isCollapse }) =>\n      !isCollapse\n        ? css`\n            border-radius: 16px;\n            padding: 16px 0px 16px 0px;\n            gap: 8px;\n            border: solid 1px var(--border-card-neutral-default);\n            max-width: 128px;\n            min-width: 128px;\n            height: 115px;\n          `\n        : css``}\n  }\n\n  ${({ isCollapse }) =>\n    !isCollapse\n      ? css`\n          border-radius: 16px;\n          padding: 16px 0px 16px 0px;\n          gap: 8px;\n          border: solid 1px var(--border-card-neutral-default);\n          width: calc(50% - 8px);\n          height: 115px;\n        `\n      : css``}\n`;\n\nexport const TextWrap = styled.div`\n  width: 70%;\n  ${flexRow};\n  justify-content: center;\n`;\n","import { useCallback, useMemo } from 'react';\nimport { type SocialLink } from '@/apollo/generated/types';\nimport { TSpan } from '@/components/Typography';\nimport { Icon } from '@/components/Icon';\nimport { type Maybe } from '@/common/types';\nimport { getSocialHandleFromLink, getSocialNameFromLink } from '@/utils/url';\nimport { Container, TextWrap } from './styles';\n\ntype NetworkItemProps = {\n  data: SocialLink;\n  isCollapse: boolean;\n};\nexport const NetworkItem = (props: NetworkItemProps) => {\n  const { isCollapse, data } = props;\n\n  const handle = useMemo(\n    () => getSocialHandleFromLink(data?.link!),\n    [data?.link],\n  );\n\n  const makeViableLink = useCallback((link: string) => {\n    const regProtocal = ['https', 'http'];\n    if (!link.includes(regProtocal[0]) && !link.includes(regProtocal[1])) {\n      return `https://${link}`;\n    }\n    return link;\n  }, []);\n\n  const getIconFromName = useCallback(\n    (name: Maybe<string>) => {\n      const lower = name?.toLowerCase();\n      const size = isCollapse ? 40 : 56;\n      switch (lower) {\n        case 'linkedin':\n          return (\n            <Icon size={size} name=\"linkedin_xxl\" data-testid=\"item-linkedin\" />\n          );\n        case 'github':\n          return (\n            <Icon size={size} name=\"github_xxl\" data-testid=\"item-github\" />\n          );\n        case 'twitter':\n          return (\n            <Icon size={size} name=\"twitter_xxl\" data-testid=\"item-twitter\" />\n          );\n        case 'medium':\n          return (\n            <Icon size={size} name=\"medium_xxl\" data-testid=\"item-medium\" />\n          );\n        case 'dribbble':\n          return (\n            <Icon size={size} name=\"dribbble_xxl\" data-testid=\"item-dribble\" />\n          );\n        case 'behance':\n          return (\n            <Icon size={size} name=\"behance_xxl\" data-testid=\"item-behance\" />\n          );\n        case 'instagram':\n          return (\n            <Icon\n              size={size}\n              name=\"instagram_xxl\"\n              data-testid=\"item-instagram\"\n            />\n          );\n        default:\n          return <Icon size={size} name=\"my_networks_xxl\" />;\n      }\n    },\n    [isCollapse],\n  );\n\n  if (!data.link) {\n    return null;\n  }\n\n  return (\n    <Container\n      href={makeViableLink(data.link!)}\n      target=\"_blank\"\n      isCollapse={isCollapse}\n    >\n      {getIconFromName(getSocialNameFromLink(data.link!))}\n      {!isCollapse && (\n        <TextWrap>\n          <TSpan\n            colorToken=\"--text-card-neutral-default\"\n            overflow=\"ellipsis\"\n            font=\"footnote\"\n          >\n            {handle}\n          </TSpan>\n        </TextWrap>\n      )}\n    </Container>\n  );\n};\n","import styled from 'styled-components';\nimport { devices } from '@/constants/devices';\nimport { Card } from '@/components/Card';\nimport { flexRow } from '@/common/globalStyles';\n\nexport const Container = styled(Card)`\n  padding: 24px;\n  display: flex;\n  flex-direction: column;\n  border-radius: 0;\n  gap: 16px;\n  @media ${devices.TABLET} {\n    border-radius: 16px;\n  }\n  @media ${devices.MOBILE_L} {\n    border-radius: 16px;\n  }\n`;\n\nexport const Body = styled.div`\n  ${flexRow}\n  gap: 16px;\n  flex-wrap: wrap;\n  position: relative;\n  justify-content: flex-start;\n`;\n","import { useMemo } from 'react';\nimport { type SocialLink } from '@/apollo/generated/types';\nimport { makeSocialLink, type TSocialName } from '@/utils/url';\nimport { useSkeletonIsLoadingContext } from '@/components/SkeletonLoader/SkeletonLoaderProvider';\nimport SkeletonLoaderNetworkElement from '@/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderNetworkElement';\nimport { useNoumContext } from '@/screens/Chamber/ViewChamber/ChamberProvider';\nimport { type ElementWrapperProps } from '../../../ElementWrapper';\nimport { NetworkHeader } from '../components/NetworkHeader';\nimport { NetworkItem } from '../components/NetworkItem';\nimport { useNetworkElement } from '../NetworkElementProvider';\nimport { Body, Container } from './styles';\n\ninterface NetworkViewModeProps extends ElementWrapperProps {\n  body: string | undefined;\n}\n\nexport const NetworkViewMode = (props: NetworkViewModeProps) => {\n  const {\n    isCollapse,\n    setIsCollapse,\n    networks: profileNetworks,\n  } = useNetworkElement();\n  const { body } = props;\n  const { isOwner, space } = useNoumContext();\n\n  const noumNetworks = useMemo(() => {\n    const userNetworks = isOwner\n      ? profileNetworks\n      : space?.uid?.profile?.socialLinks || [];\n    return userNetworks;\n  }, [isOwner, profileNetworks, space]);\n\n  const networks = useMemo(() => {\n    const result: SocialLink[] = [];\n    let jsonBody: { [name: string]: string } = {};\n    if (!body) {\n      noumNetworks.map((network) => {\n        jsonBody = {\n          ...jsonBody,\n          [network?.name!]: network?.link!,\n        };\n        return undefined;\n      });\n    } else {\n      try {\n        jsonBody = JSON.parse(body);\n      } catch (error) {\n        jsonBody = {};\n      }\n    }\n    Object.keys(jsonBody).map((key) => {\n      if (jsonBody[key]) {\n        const link = makeSocialLink(key as TSocialName, jsonBody[key]);\n        const item: SocialLink = {\n          name: key,\n          link,\n        };\n        result.push(item);\n      }\n      return undefined;\n    });\n\n    return result.sort((a: SocialLink, b: SocialLink) => {\n      if (a.name! > b.name!) return 1;\n      if (a.name! === b.name!) return 0;\n      return -1;\n    });\n  }, [noumNetworks, body]);\n  const { isLoading } = useSkeletonIsLoadingContext();\n  if (isLoading) return <SkeletonLoaderNetworkElement />;\n  if (!networks.length) return <></>;\n\n  return (\n    <Container data-testid=\"network-view-container\">\n      <NetworkHeader\n        isCollapse={isCollapse}\n        setIsCollapse={setIsCollapse}\n        {...props}\n      />\n      <Body>\n        {networks.map((network: SocialLink) => (\n          <NetworkItem\n            key={network.link}\n            data={network}\n            isCollapse={isCollapse}\n          />\n        ))}\n      </Body>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\nimport { flexRow } from '@/common/globalStyles';\nimport { devices } from '@/constants/devices';\n\nexport const Container = styled.div`\n  ${flexRow}\n  width: 100%;\n  @media ${devices.MOBILE_L} {\n    max-width: calc(50% - 8px);\n  }\n`;\n","import { useCallback } from 'react';\nimport { Icon } from '@/components/Icon';\nimport { TextField } from '@/components/TextField';\nimport { parseAndSanitizeOpenLink } from '@/utils/url';\nimport { Container } from './styles';\n\ntype EditItemProps = {\n  handleChange: (name: string, value: string) => void;\n  name: string;\n  value: string;\n  label: string;\n};\n\nconst NetworkEditItem = (props: EditItemProps) => {\n  const { handleChange, name, value, label } = props;\n  const getIconFromName = useCallback((_name: string) => {\n    const lowerName = _name.toLocaleLowerCase();\n    let result;\n\n    if (lowerName.includes('linkedin'))\n      result = (\n        <Icon\n          size={24}\n          color=\"--icon-input-neutral-default\"\n          name=\"linkedin_m\"\n          data-testid=\"item-linkedin\"\n        />\n      );\n    else if (lowerName.includes('github'))\n      result = (\n        <Icon\n          size={24}\n          color=\"--icon-input-neutral-default\"\n          name=\"github_m\"\n          data-testid=\"item-github\"\n        />\n      );\n    else if (lowerName.includes('twitter'))\n      result = (\n        <Icon\n          size={24}\n          color=\"--icon-input-neutral-default\"\n          name=\"twitter_m\"\n          data-testid=\"item-twitter\"\n        />\n      );\n    else if (lowerName.includes('medium'))\n      result = (\n        <Icon\n          size={24}\n          color=\"--icon-input-neutral-default\"\n          name=\"medium_m\"\n          data-testid=\"item-medium\"\n        />\n      );\n    else if (lowerName.includes('dribbble'))\n      result = (\n        <Icon\n          size={24}\n          color=\"--icon-input-neutral-default\"\n          name=\"dribbble_m\"\n          data-testid=\"item-dribbble\"\n        />\n      );\n    else if (lowerName.includes('behance'))\n      result = (\n        <Icon\n          size={24}\n          color=\"--icon-input-neutral-default\"\n          name=\"behance_m\"\n          data-testid=\"item-behance\"\n        />\n      );\n    else if (lowerName.includes('instagram'))\n      result = (\n        <Icon\n          size={24}\n          color=\"--icon-input-neutral-default\"\n          name=\"instagram_m\"\n          data-testid=\"item-instagram\"\n        />\n      );\n    else\n      result = (\n        <Icon\n          size={24}\n          color=\"--icon-input-neutral-default\"\n          name=\"network_m\"\n          data-testid=\"item-network\"\n        />\n      );\n\n    return result;\n  }, []);\n\n  return (\n    <Container>\n      <TextField\n        label={label}\n        value={value}\n        onChange={(e) => {\n          if (name === 'www1' || name === 'www2' || name === 'www3') {\n            const parsedLink = parseAndSanitizeOpenLink(e.target.value);\n            handleChange(name, parsedLink ?? '');\n          }\n          handleChange(name, e.target.value);\n        }}\n        rightIcon={getIconFromName(name)}\n      />\n    </Container>\n  );\n};\n\nexport default NetworkEditItem;\n","import styled from 'styled-components';\nimport { flexColumn, flexRow } from '@/common/globalStyles';\n\nexport const Container = styled.div`\n  ${flexColumn}\n  gap: 16px;\n  position: relative;\n`;\n\nexport const Body = styled.div`\n  ${flexRow}\n  gap: 16px;\n  flex-wrap: wrap;\n  position: relative;\n`;\n","import { useCallback, useEffect, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { TSpan } from '@/components/Typography';\nimport {\n  getSocialHandleFromLink,\n  makeSocialLink,\n  type TSocialName,\n} from '@/utils/url';\nimport { type ElementOutput } from '@/apollo/generated/types';\nimport { ElementUtils } from '@/utils/element';\nimport NetworkEditItem from '../components/NetworkEditItem';\nimport { useNetworkElement } from '../NetworkElementProvider';\nimport { Container, Body } from './styles';\n\ntype NetworkEditModeProps = {\n  handleChange: (networkDetails: object) => void;\n  body: string | undefined;\n  element?: ElementOutput;\n};\nlet timeout: NodeJS.Timeout;\nlet networkDetails: {};\nconst socialSites: { [key: string]: string } = {\n  github: 'github.com/',\n  linkedin: 'linkedin.com/in/',\n  behance: 'behance.net/',\n  twitter: 'twitter.com/',\n  instagram: 'instagram.com/',\n  medium: 'medium.com/',\n  dribbble: 'dribbble.com/',\n  www1: 'Your Link',\n  www2: 'Your Link',\n  www3: 'Your Link',\n};\n\nconst NetworkEditMode = (props: NetworkEditModeProps) => {\n  const { networks } = useNetworkElement();\n  const { handleChange, body, element } = props;\n  const { t } = useTranslation();\n\n  const bodyContentString = useMemo(\n    () => ElementUtils.getBodyContent(element!) || undefined,\n    [element],\n  );\n\n  const jsonBody = useMemo(() => {\n    let result: { [name: string]: string } = {};\n    if (body) {\n      let jBody: { [name: string]: string } = {};\n      try {\n        jBody = JSON.parse(body);\n      } catch (error) {\n        jBody = {};\n      }\n      Object.keys(jBody).map((key) => {\n        if (jBody[key]) {\n          result[key] = makeSocialLink(key as TSocialName, jBody[key]) ?? '';\n        }\n        return undefined;\n      });\n      return result;\n    }\n    networks.map((network) => {\n      result = {\n        ...result,\n        [network.name!]: network.link!,\n      };\n      return undefined;\n    });\n    return result;\n  }, [body, networks]);\n\n  useEffect(() => {\n    let parsedBodyContent: { [name: string]: string } = {};\n    try {\n      parsedBodyContent = JSON.parse(bodyContentString || '{}');\n    } catch (error) {\n      parsedBodyContent = {};\n    }\n    networkDetails = parsedBodyContent;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getHandle = useCallback(\n    (social) => {\n      let result = '';\n      if (social === 'www1' || social === 'www2' || social === 'www3') {\n        result = jsonBody[social];\n      } else {\n        result = getSocialHandleFromLink(jsonBody[social]);\n        result = result?.replace('@', '');\n      }\n      return result;\n    },\n    [jsonBody],\n  );\n  const handleUpdate = useCallback(\n    (name, value) => {\n      networkDetails = { ...networkDetails, [name]: value };\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        handleChange(networkDetails);\n      }, 10);\n      return () => clearTimeout(timeout);\n    },\n    [handleChange],\n  );\n\n  return (\n    <Container data-testid=\"network-edit-mode-container\">\n      <TSpan colorToken=\"--text-body-header-neutral-default\" font=\"body-m\">\n        {t('noumena.element.mynetwork.edit_title')}\n      </TSpan>\n      <Body>\n        {Object.keys(socialSites).map((key) => (\n          <NetworkEditItem\n            key={`network-edit-${key}`}\n            name={key}\n            label={socialSites[key]}\n            handleChange={handleUpdate}\n            value={getHandle(key)}\n          />\n        ))}\n      </Body>\n    </Container>\n  );\n};\n\nexport default NetworkEditMode;\n","import {\n  ElementWrapper,\n  type ElementWrapperProps,\n} from '@/screens/Chamber/components/ElementWrapper';\nimport { type ElementOutput } from '@/apollo/generated/types';\nimport { NetworkElementProvider } from './NetworkElementProvider';\nimport NetworkViewMode from './NetworkViewMode';\nimport NetworkEditMode from './NetworkEditMode';\n\ninterface NetworkElementProps extends ElementWrapperProps {\n  onContentChange: (networkDetails: object) => void;\n  body: string | undefined;\n  element: ElementOutput;\n}\n\nexport const NetworkElement = (props: NetworkElementProps) => {\n  const { onContentChange, element } = props;\n  return (\n    <NetworkElementProvider>\n      {props.isEditing ? (\n        <ElementWrapper {...props}>\n          <NetworkEditMode\n            body={props.body}\n            handleChange={onContentChange}\n            element={element}\n          />\n        </ElementWrapper>\n      ) : (\n        <NetworkViewMode {...props} body={props.body} />\n      )}\n    </NetworkElementProvider>\n  );\n};\n","import { useState, useEffect, useRef, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { TextField } from '@/components/TextField';\nimport { Icon } from '@/components/Icon';\nimport { Dropdown, type DropdownValueType } from '@/components/Dropdown';\nimport { mergeRefs } from '@/utils/mergeRefs';\nimport useDebounce from '@/hooks/useDebounce';\nimport { type TSearchSkill } from './types';\nimport { ClearIconWrapper } from '../../styles';\n\nexport const SearchSkill = ({\n  options = [],\n  onSelect = () => {},\n  placeholder,\n  ...rest\n}: TSearchSkill) => {\n  const { t } = useTranslation();\n\n  const searchRef = useRef<HTMLInputElement>(null);\n  const [search, setSearch] = useState<string>('');\n  const [isOpen, setIsOpen] = useState(false);\n  const debouncedSearch = useDebounce<string>(search, 500);\n  const [searchOptions, setOptions] =\n    useState<DropdownValueType<string>[]>(options);\n\n  const onInputChange = (val: string) => {\n    setSearch(val);\n    setIsOpen(true);\n  };\n\n  const clearSelection = useCallback(() => {\n    setSearch('');\n    searchRef.current?.focus();\n  }, [searchRef]);\n\n  useEffect(() => {\n    const filteredOptions = options.filter((option) => {\n      if (option && option.type === 'value' && option.label) {\n        const regex = new RegExp(`\\\\s*${debouncedSearch.trim()}\\\\w*`, 'i');\n        return String(option.label)?.match(regex);\n      }\n      return true;\n    });\n    setOptions(filteredOptions);\n  }, [debouncedSearch, options]);\n\n  return (\n    <Dropdown\n      inputValue={search}\n      options={searchOptions}\n      onSelectOption={(option) => {\n        onSelect(option);\n        setIsOpen(false);\n      }}\n      onInputChange={onInputChange}\n      isMatchedBoldText\n      hideIcons\n      isOpen={!!search && isOpen}\n      usePortal={false}\n      containerHeight=\"230px\"\n      minHeight=\"0px\"\n      placement=\"bottom\"\n      noSearchOptionsText=\"No results\"\n    >\n      {({ inputProps, inputRef, toggle }) => (\n        <TextField\n          {...inputProps}\n          {...rest}\n          placeholder={placeholder ?? t('noumena.skills_search.placeholder')}\n          ref={mergeRefs<HTMLInputElement>(searchRef, inputRef)}\n          rightIcon={\n            debouncedSearch && (\n              <ClearIconWrapper>\n                <Icon\n                  name=\"clear_m\"\n                  size={24}\n                  color=\"--icon-input-brand-primary-default\"\n                  onClick={() => {\n                    clearSelection();\n                  }}\n                />\n              </ClearIconWrapper>\n            )\n          }\n          leftIcon={\n            !debouncedSearch && (\n              <Icon\n                name=\"search_m\"\n                size={24}\n                color=\"--icon-input-neutral-default\"\n              />\n            )\n          }\n          data-testid=\"input-component\"\n          value={search}\n          onChange={(e) => onInputChange(e.target.value)}\n          onClick={debouncedSearch.trim().length > 0 ? toggle : () => {}}\n        />\n      )}\n    </Dropdown>\n  );\n};\n","import styled from 'styled-components';\nimport { sizes } from '@/constants/devices';\nimport { noScrollBar } from '@/common/globalStyles';\n\nexport const SkillListContainer = styled.div`\n  flex-direction: row;\n  width: 100%;\n  overflow-x: auto;\n  flex-wrap: nowrap;\n  gap: 12px;\n  > span {\n    display: inline-flex;\n  }\n`;\n\nexport const SkillItem = styled.div`\n  display: inline-flex;\n  margin: 6px;\n  span {\n    cursor: default;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  height: 100%;\n  position: relative;\n  @media (max-width: ${sizes.TABLET}) {\n    width: 736px;\n    margin-left: 16px;\n    margin-right: 16px;\n  }\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    width: 343px;\n    margin-left: 16px;\n    margin-right: 16px;\n  }\n`;\n\nexport const ChipWrapper = styled.div`\n  padding-right: 8px;\n  padding-bottom: 8px;\n  display: inline-flex;\n`;\nexport const ChipsSection = styled.div`\n  flex-direction: row;\n  width: 100%;\n  overflow-x: auto;\n  flex-wrap: nowrap;\n  ${noScrollBar}\n`;\n\nexport const ModalFooter = styled.div`\n  margin-top: 24px;\n  height: 56px;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  display: flex;\n`;\n\nexport const CollapseWrap = styled.div`\n  cursor: pointer;\n`;\n\nexport const ButtonWrap = styled.div<{ selectedSkills: boolean }>`\n  position: fixed;\n  bottom: 40px;\n  right: 40px;\n  height: 56px;\n  width: ${(p) => (p.selectedSkills ? '322px' : '207px')};\n  @media (max-width: ${sizes.TABLET}) {\n    width: 360px;\n    bottom: 16px;\n    left: 0;\n    transform: translate(calc(50vw - 50%));\n  }\n  @media (max-width: ${sizes.MOBILE_L}) {\n    width: 343px;\n    bottom: 16px;\n    left: 0;\n    transform: translate(calc(50vw - 50%));\n  }\n`;\nexport const MySkillsWrap = styled.div``;\n","import { useCallback } from 'react';\nimport { t } from 'i18next';\nimport {\n  useSkills,\n  SearchSkill,\n} from '@/features/skills/components/SkillSelection';\nimport { Chips } from '@/components/Chips/Chips';\nimport {\n  type CategoryWithSkills,\n  type Maybe,\n  type Skill,\n} from '@/apollo/generated/types';\nimport { Accordion } from '@/components/Accordion';\nimport { Badge } from '@/components/Badge/Badge';\nimport { Spacer } from '@/layout';\nimport { Icon } from '@/components/Icon';\nimport { TSpan } from '@/components/Typography';\nimport {\n  ChipsSection,\n  ChipWrapper,\n  CollapseWrap,\n  ModalFooter,\n  MySkillsWrap,\n  Wrapper,\n} from './styles';\nimport { type SkillElementProps } from './types';\nimport { ElementWrapper } from '../../ElementWrapper';\n\nconst SkillsEditElement = (props: SkillElementProps) => {\n  const {\n    options,\n    selectSkill,\n    selectedSkills,\n    categories,\n    getCategoryBadgeCount,\n    isCategoryOpen,\n    toggleOpenCategory,\n    collapseAll,\n    collapseStatus,\n  } = useSkills(props.element);\n\n  const isSelected = useCallback(\n    (skill: Skill) => {\n      const index = selectedSkills.findIndex(\n        (item) => item.value === skill._id,\n      );\n      return index !== -1;\n    },\n    [selectedSkills],\n  );\n\n  const renderAccordionChildren = useCallback(\n    (skills: Maybe<Skill>[]) =>\n      skills.map((skill: Maybe<Skill>) => (\n        <ChipWrapper key={skill?._id}>\n          <Chips\n            onClick={() =>\n              selectSkill({\n                key: skill?._id!,\n                type: 'value',\n                value: skill?._id!,\n                label: skill?.name,\n              })\n            }\n            primary={isSelected(skill!)}\n            secondary={!isSelected(skill!)}\n            size=\"large\"\n            icon={\n              isSelected(skill!) ? (\n                <Icon\n                  color=\"--icon-skillbadge-brand-primary-selected\"\n                  name=\"close_m\"\n                  size={20}\n                />\n              ) : undefined\n            }\n          >\n            {skill?.name}\n          </Chips>\n        </ChipWrapper>\n      )),\n    [selectSkill, isSelected],\n  );\n\n  const renderCategory = useCallback(\n    (category: CategoryWithSkills) => (\n      <Accordion\n        key={`accord-${category._id}`}\n        expanded={isCategoryOpen(category._id)}\n        onToggle={() => toggleOpenCategory(category._id)}\n        right={\n          getCategoryBadgeCount(category._id) ? (\n            <Badge\n              size=\"large\"\n              text={`${getCategoryBadgeCount(category._id)}`}\n            />\n          ) : undefined\n        }\n        title={category.name}\n      >\n        {renderAccordionChildren(category.skills!)}\n      </Accordion>\n    ),\n    [\n      renderAccordionChildren,\n      getCategoryBadgeCount,\n      isCategoryOpen,\n      toggleOpenCategory,\n    ],\n  );\n\n  return (\n    <ElementWrapper {...props}>\n      <MySkillsWrap>\n        <Wrapper>\n          <SearchSkill\n            options={options}\n            onSelect={selectSkill}\n            placeholder={t('noumena.homenoum.skills.search_placeholder')}\n          />\n          <Spacer height={16} />\n          <ChipsSection>\n            {selectedSkills?.map((item) => (\n              <ChipWrapper key={item.value}>\n                <Chips\n                  onClick={() => selectSkill(item)}\n                  icon={\n                    <Icon\n                      color=\"--icon-skillbadge-brand-primary-selected\"\n                      name=\"close_m\"\n                      size={20}\n                    />\n                  }\n                  size=\"large\"\n                >\n                  {item.label}\n                </Chips>\n              </ChipWrapper>\n            ))}\n          </ChipsSection>\n          {collapseStatus &&\n            categories?.map((category) => renderCategory(category!))}\n          <ModalFooter>\n            <CollapseWrap onClick={collapseAll}>\n              <TSpan\n                font=\"button-m\"\n                colorToken=\"--text-button-brand-secondary-default\"\n              >\n                {collapseStatus\n                  ? t(`noumena.skill_select.collapse_skills`)\n                  : t(`noumena.skill_select.show_all_skills`)}\n              </TSpan>\n            </CollapseWrap>\n          </ModalFooter>\n        </Wrapper>\n      </MySkillsWrap>\n    </ElementWrapper>\n  );\n};\n\nexport default SkillsEditElement;\n","import { SizedSkeleton } from '@/screens/Chamber/components/elements/SkeletonLoader/StyledSkeletons';\nimport {\n  StyledFlexColumn,\n  StyledFlexRow,\n} from '@/screens/Chamber/components/elements/SkeletonLoader/styled';\nimport { Card } from '@/components/Card';\nimport SkeletonLoaderElementHeader from '@/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderElementHeader';\n\nconst SkeletonLoaderSkillElement = () => (\n  <Card>\n    <StyledFlexColumn gap={21} justify=\"baseline\" align=\"flex-start\">\n      <SkeletonLoaderElementHeader />\n      <StyledFlexRow gap={12}>\n        <SizedSkeleton w={140} h={40} r={8} />\n        <SizedSkeleton w={140} h={40} r={8} />\n        <SizedSkeleton w={94} h={40} r={8} />\n        <SizedSkeleton w={168} h={40} r={8} />\n        <SizedSkeleton w={145} h={40} r={8} />\n      </StyledFlexRow>\n    </StyledFlexColumn>\n  </Card>\n);\n\nexport default SkeletonLoaderSkillElement;\n","import { Chips } from '@/components/Chips/Chips';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useNoumContext } from '@/screens/Chamber/ViewChamber/ChamberProvider';\nimport { useSkeletonIsLoadingContext } from '@/components/SkeletonLoader/SkeletonLoaderProvider';\nimport SkeletonLoaderSkillElement from '@/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderSkillElement';\nimport { ElementWrapper } from '../../ElementWrapper';\nimport { type SkillElementProps } from './types';\nimport { SkillItem, SkillListContainer } from './styles';\n\nconst SkillsViewElement = (props: SkillElementProps) => {\n  const { user } = useAuth();\n  const { isOwner, space } = useNoumContext();\n  const skills = isOwner ? user?.skills : space?.uid?.skills || [];\n  const { isLoading } = useSkeletonIsLoadingContext();\n  if (isLoading) return <SkeletonLoaderSkillElement />;\n  return (\n    <>\n      {skills && skills?.length > 0 && (\n        <ElementWrapper {...props}>\n          <SkillListContainer>\n            {skills?.map((skill) => (\n              <SkillItem key={skill?._id}>\n                <Chips secondary size=\"large\">\n                  {skill?.name}\n                </Chips>\n              </SkillItem>\n            ))}\n          </SkillListContainer>\n        </ElementWrapper>\n      )}\n    </>\n  );\n};\n\nexport default SkillsViewElement;\n","import SkillsEditElement from './SkillsEditElement';\nimport SkillsViewElement from './SkillsViewElement';\nimport { type SkillElementProps } from './types';\n\nconst SkillElement = (props: SkillElementProps) =>\n  props.isEditing ? (\n    <SkillsEditElement {...props} />\n  ) : (\n    <SkillsViewElement {...props} />\n  );\n\nexport default SkillElement;\n","import { isSafari } from 'react-device-detect';\n\nexport const getIconColorByExtension = (ext: string) => {\n  switch (ext) {\n    case 'zip':\n      return '--icon-file-unknown-default';\n    case 'pdf':\n      return '--icon-file-pdf-default';\n    case 'xls':\n    case 'xlsx':\n      return '--icon-file-xls-default';\n    case 'doc':\n    case 'docx':\n      return '--icon-file-doc-default';\n    case 'pptx':\n    case 'ppt':\n      return '--icon-file-ppt-default';\n    default:\n      return '--icon-file-unknown-default';\n  }\n};\n\nexport const isSupportedVideoType = (extension: string) =>\n  // .mov is not supported by safari\n  isSafari ? ['mp4'].includes(extension) : ['mp4', 'mov'].includes(extension);\n\nexport const isImageType = (extension: string) =>\n  ['png', 'jpg', 'jpeg'].includes(extension);\n\nexport const isSupportedMediaType = (extension: string) =>\n  isSupportedVideoType(extension) || isImageType(extension);\n","import styled from 'styled-components';\nimport { TSpan } from '@/components/Typography';\nimport { mediaSizes } from '@/constants/devices';\n\nconst FilePreviewWrapper = styled.div`\n  flex-basis: 70%;\n  margin-right: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  max-height: 100%;\n  overflow: hidden;\n  border-radius: 8px;\n  border: 1px solid var(--border-file-unknown-default);\n\n  @media (max-width: ${mediaSizes.TABLET_MAX}) {\n    flex-basis: 100%;\n    justify-content: center;\n  }\n`;\n\nconst Image = styled.img`\n  max-width: 100%;\n  max-height: 100%;\n  border-radius: 8px;\n`;\n\nconst PreviewVideo = styled.video`\n  max-width: 100%;\n  max-height: 100%;\n  border-radius: 8px;\n`;\n\nconst PreviewNotAvailableContainer = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nconst PreviewNotAvailableText = styled(TSpan)`\n  margin-top: 20px;\n  color: var(--text-card-neutral-disabled);\n`;\n\nconst SpinnerContainer = styled.div`\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n`;\n\nexport default {\n  FilePreviewWrapper,\n  Image,\n  PreviewVideo,\n  PreviewNotAvailableContainer,\n  PreviewNotAvailableText,\n  SpinnerContainer,\n};\n","import { Document, Page, pdfjs } from 'react-pdf';\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Icon } from '@/components/Icon';\nimport { type NoumFile } from '@/apollo/generated/types';\nimport { useWindowDimensions } from '@/hooks';\nimport { Spinner } from '@/components/Spinner';\nimport { useBreakpoints } from '@/hooks/useBreakpoints';\nimport {\n  isImageType,\n  isSupportedMediaType,\n  isSupportedVideoType,\n} from '../../../elements/FileManagerElement/utils';\nimport S from './styles';\n\ntype FilePreviewProps = {\n  file: NoumFile;\n};\n\npdfjs.GlobalWorkerOptions.workerSrc = `${window.location.origin}/pdf.worker.js`;\n\nconst FilePreview = (props: FilePreviewProps) => {\n  const { file } = props;\n  const { height: windowHeight } = useWindowDimensions();\n  const { t } = useTranslation();\n\n  const [isLoaded, setIsLoaded] = useState(\n    () => !isSupportedMediaType(file.extension ?? ''),\n  );\n\n  const { isDesktop } = useBreakpoints();\n\n  const previewHeight = windowHeight - (isDesktop ? 240 : 100); // window height - modal paddings - modal header height - modal footer height\n\n  const onLoad = () => setIsLoaded(true);\n\n  return (\n    <S.FilePreviewWrapper>\n      {isSupportedVideoType(file.extension ?? '') ? (\n        <S.PreviewVideo\n          data-testid=\"preivew-video\"\n          autoPlay\n          muted\n          loop\n          onLoadedData={onLoad}\n        >\n          <source src={file.fileUrl ?? ''} />\n        </S.PreviewVideo>\n      ) : isImageType(file.extension ?? '') ? (\n        <S.Image\n          src={file.fileUrl ?? ''}\n          data-testid=\"image-preview\"\n          onLoad={onLoad}\n        />\n      ) : file.extension === 'pdf' ? (\n        <Document file={file.fileUrl} onLoadSuccess={onLoad}>\n          <Page height={previewHeight} pageNumber={1} />\n        </Document>\n      ) : (\n        <S.PreviewNotAvailableContainer>\n          <Icon\n            name=\"eye_off_m\"\n            size={64}\n            color=\"--icon-image-placeholder-neutral-default\"\n          />\n          <S.PreviewNotAvailableText>\n            {t('noumena.file_manager.preview_modal.not_available')}\n          </S.PreviewNotAvailableText>\n        </S.PreviewNotAvailableContainer>\n      )}\n      {!isLoaded && (\n        <S.SpinnerContainer>\n          <Spinner />\n        </S.SpinnerContainer>\n      )}\n    </S.FilePreviewWrapper>\n  );\n};\n\nexport default FilePreview;\n","import {\n  createContext,\n  type FC,\n  type ReactNode,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n} from 'react';\n\nimport { type NetworkStatus } from '@apollo/client';\nimport { useNoumFilesQuery } from '@/apollo/graphql/queries';\nimport {\n  useUpdateNoumFileMutation,\n  useDeleteNoumFileMutation,\n  useAddNoumFileMutation,\n  useMarkNoumFileAsDownloadedMutation,\n} from '@/apollo/graphql/mutations';\nimport {\n  type AddNoumFileInput,\n  type Maybe,\n  type NoumFile,\n  NoumFilesFilterType,\n  type UpdateNoumFileInput,\n} from '@/apollo/generated/types';\nimport { cleanList } from '@/utils/list';\nimport { useLaunchDarkly } from '@/hooks';\nimport { type FileManagerElementProps } from '../types';\n\nexport type FileManagerElementContextType = FileManagerElementProps & {\n  isCollapse: boolean;\n  showAddFileModal: boolean;\n  files: NoumFile[];\n  showFilePreviewModalId: string | null;\n  loading: boolean;\n  isOwner?: boolean;\n  filterType: NoumFilesFilterType;\n  setFilterType: (value: NoumFilesFilterType) => void;\n  setShowFilePreviewModalId: (value: string | null) => void;\n  setIsCollapse: (value: boolean) => void;\n  setShowAddFileModal: (value: boolean) => void;\n  showEditFileModalId: string | null;\n  setShowEditFileModalId: (value: string | null) => void;\n  showDeleteFileModalId: string | null;\n  setShowDeleteFileModalId: (value: string | null) => void;\n  addFile: (input: AddNoumFileInput) => Promise<Maybe<NoumFile> | undefined>;\n  updateFile: (\n    input: UpdateNoumFileInput,\n  ) => Promise<Maybe<NoumFile> | undefined>;\n  deleteFile: (fieldId: string) => Promise<Maybe<boolean> | undefined>;\n  markNoumFileAsDownloaded: (fileId: string) => Promise<boolean | undefined>;\n  networkStatus: NetworkStatus;\n  showAllFilesModal: boolean;\n  setShowAllFilesModal: (value: boolean) => void;\n  hasFiles?: boolean;\n  setSearchQuery: (value: string) => void;\n  searchQuery: string;\n};\n\nexport const FileManagerElementContext =\n  createContext<FileManagerElementContextType>(\n    {} as FileManagerElementContextType,\n  );\n\ntype FileManagerElementProviderProps = {\n  children: ReactNode;\n} & FileManagerElementProps;\n\nexport const FileManagerElementProvider: FC<\n  FileManagerElementProviderProps\n> = ({ children, ...props }) => {\n  const {\n    flags: { noumEditor2 },\n  } = useLaunchDarkly();\n  const [isCollapse, setIsCollapse] = useState(true);\n  const [showAddFileModal, setShowAddFileModal] = useState(false);\n  const [showAllFilesModal, setShowAllFilesModal] = useState(false);\n  const [showDeleteFileModalId, setShowDeleteFileModalId] = useState<\n    string | null\n  >(null);\n  const [showEditFileModalId, setShowEditFileModalId] = useState<string | null>(\n    null,\n  );\n  const [showFilePreviewModalId, setShowFilePreviewModalId] = useState<\n    string | null\n  >(null);\n  const [filterType, setFilterType] = useState<NoumFilesFilterType>(\n    NoumFilesFilterType.All,\n  );\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const { data, refetch, loading, networkStatus } = useNoumFilesQuery({\n    variables: {\n      input: {\n        filesManagerElementId: props.element._id ?? '',\n        filterType,\n        offset: 0,\n        limit: 50,\n        query: searchQuery,\n      },\n    },\n    skip: !props.element._id,\n    fetchPolicy: 'cache-and-network',\n  });\n\n  const [addNoumFileMutation] = useAddNoumFileMutation({\n    onCompleted: () => {\n      refetch();\n    },\n  });\n\n  const [updateNoumFileMutation] = useUpdateNoumFileMutation({\n    onCompleted: () => {\n      refetch();\n    },\n  });\n\n  const [deleteNoumFileMutation] = useDeleteNoumFileMutation({\n    onCompleted: () => {\n      refetch();\n    },\n  });\n\n  const [markNoumFileAsDownloadedMutation] =\n    useMarkNoumFileAsDownloadedMutation({\n      onCompleted: () => {\n        refetch();\n      },\n    });\n\n  const addFile = useCallback(\n    async (input: AddNoumFileInput) => {\n      const res = await addNoumFileMutation({ variables: { input } });\n      return res.data?.addNoumFile;\n    },\n    [addNoumFileMutation],\n  );\n\n  const updateFile = useCallback(\n    async (input: UpdateNoumFileInput) => {\n      const res = await updateNoumFileMutation({ variables: { input } });\n      return res.data?.updateNoumFile;\n    },\n    [updateNoumFileMutation],\n  );\n\n  const deleteFile = useCallback(\n    async (fileId: string) => {\n      const res = await deleteNoumFileMutation({ variables: { fileId } });\n      return res.data?.deleteNoumFile;\n    },\n    [deleteNoumFileMutation],\n  );\n\n  const markNoumFileAsDownloaded = useCallback(\n    async (fileId: string) => {\n      const res = await markNoumFileAsDownloadedMutation({\n        variables: { fileId },\n      });\n      return res.data?.markNoumFileAsDownloaded;\n    },\n    [markNoumFileAsDownloadedMutation],\n  );\n\n  const files = useMemo(\n    () => cleanList(data?.noumFiles.data ?? []),\n    [data?.noumFiles.data],\n  );\n\n  const value = useMemo(\n    () => ({\n      isCollapse: isCollapse && !noumEditor2,\n      setIsCollapse,\n      showAddFileModal,\n      showEditFileModalId,\n      showDeleteFileModalId,\n      setShowAddFileModal,\n      setShowEditFileModalId,\n      setShowDeleteFileModalId,\n      addNoumFileMutation,\n      files,\n      showFilePreviewModalId,\n      setShowFilePreviewModalId,\n      addFile,\n      updateFile,\n      deleteFile,\n      loading,\n      filterType,\n      setFilterType,\n      networkStatus,\n      markNoumFileAsDownloaded,\n      showAllFilesModal,\n      setShowAllFilesModal,\n      hasFiles: files.length > 0,\n      setSearchQuery,\n      searchQuery,\n      ...props,\n    }),\n    [\n      isCollapse,\n      noumEditor2,\n      showAddFileModal,\n      showEditFileModalId,\n      showDeleteFileModalId,\n      addNoumFileMutation,\n      files,\n      showFilePreviewModalId,\n      addFile,\n      updateFile,\n      deleteFile,\n      loading,\n      filterType,\n      networkStatus,\n      markNoumFileAsDownloaded,\n      showAllFilesModal,\n      props,\n      setSearchQuery,\n      searchQuery,\n    ],\n  );\n\n  return (\n    <FileManagerElementContext.Provider value={value}>\n      {children}\n    </FileManagerElementContext.Provider>\n  );\n};\n\nexport const useFileManagerElementContext = () =>\n  useContext(FileManagerElementContext);\n","import { useTranslation } from 'react-i18next';\nimport { useMemo } from 'react';\nimport { type DropdownValueType } from '@/components/Dropdown';\nimport { Icon } from '@/components/Icon';\nimport EllipsisMenu from '@/screens/Chambers/EllipsisMenu';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useFileManagerElementContext } from '../../providers/FileManagerElementProvider';\n\ntype FileManagerEllipsisMenuType = {\n  onDelete?: () => void;\n  onEdit?: () => void;\n  onPreview?: () => void;\n  fileOwnerId?: string;\n};\n\nconst FileManagerEllipsisMenu = ({\n  onDelete,\n  onEdit,\n  onPreview,\n  fileOwnerId,\n}: FileManagerEllipsisMenuType) => {\n  const { isOwner } = useFileManagerElementContext();\n  const { user } = useAuth();\n  const userId = user?._id ?? '';\n  const isFileOwner = userId === fileOwnerId;\n\n  const { t } = useTranslation();\n\n  const menuOptions = useMemo(() => {\n    const arr: DropdownValueType<string>[] = [];\n    if (onPreview)\n      arr.push({\n        label: t('noumena.file_manager.action_buttons.preview'),\n        key: 'preview',\n        type: 'value',\n        value: 'preview',\n        icon: (\n          <Icon\n            name=\"eye_on_m\"\n            size={16}\n            color=\"--icon-tablecell-neutral-highlighted\"\n          />\n        ),\n      });\n    if (onEdit && (isOwner || isFileOwner))\n      arr.push({\n        label: t('noumena.file_manager.action_buttons.edit'),\n        type: 'value',\n        key: 'edit',\n        value: 'edit',\n        icon: (\n          <Icon\n            name=\"edit_m\"\n            size={16}\n            color=\"--icon-tablecell-neutral-highlighted\"\n          />\n        ),\n      });\n    if (onDelete && (isOwner || isFileOwner))\n      arr.push({\n        label: t('noumena.file_manager.action_buttons.delete'),\n        type: 'value',\n        key: 'delete',\n        value: 'delete',\n        intent: 'danger',\n        icon: (\n          <Icon\n            name=\"delete_m\"\n            size={16}\n            color=\"--icon-tablecell-danger-primary-default\"\n          />\n        ),\n      });\n\n    return arr;\n  }, [isFileOwner, isOwner, onDelete, onEdit, onPreview, t]);\n\n  const handleOnClick = (value?: string) => {\n    switch (value) {\n      case 'delete':\n        onDelete?.();\n        break;\n      case 'edit':\n        onEdit?.();\n        break;\n      case 'preview':\n        onPreview?.();\n        break;\n      default:\n        break;\n    }\n  };\n\n  if (!menuOptions.length) return null;\n\n  return (\n    <EllipsisMenu\n      containerWidth=\"125px\"\n      neutral\n      onClick={handleOnClick}\n      menuOptions={menuOptions}\n      iconColorToken=\"--button-card-neutral-default\"\n    />\n  );\n};\n\nexport default FileManagerEllipsisMenu;\n","import styled from 'styled-components';\nimport { TSpan } from '@/components/Typography';\nimport { mediaSizes } from '@/constants/devices';\n\nconst FileInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-basis: 30%;\n  width: 100%;\n  justify-content: space-between;\n\n  @media (max-width: ${mediaSizes.TABLET_MAX}) {\n    flex-basis: 100%;\n  }\n`;\n\nconst ModalBody = styled.div`\n  display: flex;\n  width: 100%;\n  flex: 1;\n  height: 100%;\n\n  @media (max-width: ${mediaSizes.TABLET_MAX}) {\n    flex-direction: column;\n  }\n`;\n\nconst LabelText = styled(TSpan)`\n  color: var(--text-card-neutral-default);\n`;\n\nconst ValueText = styled(TSpan)`\n  color: var(--text-modal-neutral-highlighted);\n`;\n\nconst DescriptionWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 12px;\n  row-gap: 4px;\n  margin-top: 16px;\n`;\n\nconst TableRowItem = styled.div`\n  margin-top: 16px;\n  display: flex;\n  justify-content: space-between;\n\n  @media (max-width: ${mediaSizes.TABLET_MAX}) {\n    display: grid;\n    grid-template-columns: 0.3fr 0.7fr;\n  }\n`;\n\nconst FooterButtons = styled.div`\n  display: flex;\n  gap: 16px;\n  margin-top: 24px;\n\n  @media (max-width: ${mediaSizes.TABLET_MAX}) {\n    width: 100%;\n    justify-content: space-between;\n  }\n`;\n\nconst ButtonsWrapper = styled.div`\n  gap: 16px;\n  display: flex;\n`;\n\nconst ModalBodyInnerWrapper = styled.div`\n  max-height: 100%;\n  width: 100%;\n  flex-grow: 1;\n`;\n\nexport default {\n  FileInfoWrapper,\n  ModalBody,\n  LabelText,\n  ValueText,\n  DescriptionWrapper,\n  TableRowItem,\n  FooterButtons,\n  ButtonsWrapper,\n  ModalBodyInnerWrapper,\n};\n","import { useState } from 'react';\nimport { format } from 'date-fns';\nimport { useTranslation } from 'react-i18next';\nimport { delay } from 'lodash';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { Icon } from '@/components/Icon';\nimport { Button } from '@/components/Button';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useWindowDimensions } from '@/hooks';\nimport { TSpan } from '@/components/Typography';\nimport BasicChipsTabsForm from '@/components/Tabs/TabsForm';\nimport { type NoumFile } from '@/apollo/generated/types';\nimport { UserUtil } from '@/utils/user';\nimport { useBreakpoints } from '@/hooks/useBreakpoints';\nimport useModalWidth from '@/hooks/modal/useModalWidth';\nimport { Stack } from '@/layout';\nimport { bytesToMegabytes } from '../FileUploadModal/utils';\nimport FilePreview from './FilePreview';\nimport { useFileManagerElementContext } from '../../elements/FileManagerElement/providers/FileManagerElementProvider';\nimport FileManagerEllipsisMenu from '../../elements/FileManagerElement/components/FileManagerEllipsisMenu';\nimport S from './styles';\n\ntype FilePreviewModalProps = {\n  isOpen: boolean;\n  handleClose: () => void;\n  file?: NoumFile;\n};\n\nconst FilePreviewModal = (props: FilePreviewModalProps) => {\n  const { file, isOpen, handleClose } = props;\n  const { isDesktop, isTablet, isMobile } = useBreakpoints();\n  const { t } = useTranslation();\n  const { user } = useAuth();\n  const modalWidth = useModalWidth(ModalSize.XXL);\n\n  const [activeTab, setActiveTab] = useState('preview');\n  const windowSize = useWindowDimensions();\n\n  const isFileOwner = file?.owner?._id === user?._id;\n\n  const {\n    setShowEditFileModalId,\n    setShowDeleteFileModalId,\n    isOwner,\n    markNoumFileAsDownloaded,\n  } = useFileManagerElementContext();\n\n  if (!file) {\n    return null;\n  }\n\n  const DownloadButton = (\n    <a\n      style={{\n        flexGrow: 1,\n        display: 'flex',\n        textDecoration: 'none',\n      }}\n      href={file.fileUrl ?? ''}\n      download\n      onClick={() => {\n        // workaround for browser which triggers network request twice\n        delay(() => markNoumFileAsDownloaded(file._id), 150);\n      }}\n      rel=\"noreferrer\"\n    >\n      <Button\n        primary\n        size={isMobile || isTablet ? 'large' : 'small'}\n        leftIcon={<Icon size={18} name=\"download_m\" />}\n        grow\n      >\n        {t('noumena.file_manager.action_buttons.download')}\n      </Button>\n    </a>\n  );\n\n  return (\n    <Modal\n      isFullScreen={!isDesktop}\n      testId=\"link-confirmation-modal\"\n      open={isOpen}\n      onClose={handleClose}\n      enableCloseButton\n      size={ModalSize.XXL}\n      disableBackdropClick\n    >\n      <ModalHeader isFullScreen={!isDesktop} maxTitleWidth={modalWidth! - 300}>\n        <TSpan font=\"heading-xs\">{file.name}</TSpan>\n        {isTablet && (\n          <BasicChipsTabsForm\n            onChange={(tab) => setActiveTab(tab)}\n            inputList={[\n              {\n                id: 'preview',\n                name: 'preview',\n                text: t('noumena.file_manager.preview_modal.tabs.preview'),\n                labelSize: 'auto',\n              },\n              {\n                id: 'info',\n                name: 'info',\n                text: t('noumena.file_manager.preview_modal.tabs.info'),\n                labelSize: 'auto',\n              },\n            ]}\n            tabWidth={isTablet ? `${windowSize.width - 32}px` : '100%'}\n            selectedId={activeTab}\n            mode=\"isUnderline\"\n            isWithoutImage\n            windowSize={windowSize.width}\n            fontSize={\n              isTablet ? '--font-input-small-size' : '--font-button-small-size'\n            }\n            isMobile={isMobile}\n          />\n        )}\n      </ModalHeader>\n      <ModalBody\n        isFullScreen={!isDesktop}\n        noFooter={!isTablet}\n        style={{ alignItems: 'stretch', flexDirection: 'unset' }}\n      >\n        <S.ModalBodyInnerWrapper>\n          <S.ModalBody>\n            {(!isTablet || (isTablet && activeTab === 'preview')) && (\n              <FilePreview file={file} />\n            )}\n\n            {(!isTablet || (isTablet && activeTab === 'info')) && (\n              <Stack vertical fullWidth justify=\"space-between\" gap={16}>\n                <Stack vertical fullWidth>\n                  {file.description ? (\n                    <S.DescriptionWrapper>\n                      <S.LabelText font=\"footnote\">\n                        {t('noumena.file_manager.preview_modal.description')}\n                      </S.LabelText>\n                      <S.ValueText font=\"body-m\">\n                        {file.description}\n                      </S.ValueText>\n                    </S.DescriptionWrapper>\n                  ) : null}\n\n                  <S.FileInfoWrapper>\n                    <S.TableRowItem>\n                      <S.LabelText font=\"footnote\">\n                        {t('noumena.file_manager.preview_modal.size')}\n                      </S.LabelText>\n                      <S.ValueText font=\"footnote\">\n                        {bytesToMegabytes(file.fileSize)} MB\n                      </S.ValueText>\n                    </S.TableRowItem>\n\n                    <S.TableRowItem>\n                      <S.LabelText font=\"footnote\">\n                        {t('noumena.file_manager.preview_modal.date_added')}\n                      </S.LabelText>\n                      <S.ValueText font=\"footnote\">\n                        {format(new Date(file.uploadedAt), 'dd MMM yyyy')}\n                      </S.ValueText>\n                    </S.TableRowItem>\n\n                    <S.TableRowItem>\n                      <S.LabelText font=\"footnote\">\n                        {t('noumena.file_manager.preview_modal.uploaded_by')}\n                      </S.LabelText>\n                      <S.ValueText font=\"footnote\">\n                        {UserUtil.renderFullName(file.owner)}\n                      </S.ValueText>\n                    </S.TableRowItem>\n\n                    <S.TableRowItem>\n                      <S.LabelText font=\"footnote\">\n                        {t('noumena.file_manager.preview_modal.file_type')}\n                      </S.LabelText>\n                      <S.ValueText font=\"footnote\">\n                        {file.extension}\n                      </S.ValueText>\n                    </S.TableRowItem>\n\n                    <S.TableRowItem>\n                      <S.LabelText font=\"footnote\">\n                        {t(\n                          'noumena.file_manager.preview_modal.downloads_count',\n                        )}\n                      </S.LabelText>\n                      <S.ValueText font=\"footnote\">\n                        {file.downloadsCount}\n                      </S.ValueText>\n                    </S.TableRowItem>\n\n                    <S.TableRowItem>\n                      <S.LabelText font=\"footnote\">\n                        {t('noumena.file_manager.preview_modal.visible_for')}\n                      </S.LabelText>\n                      <S.ValueText font=\"footnote\">\n                        {file.visibilityRoles\n                          .map((role) =>\n                            t(\n                              `noumena.file_manager.visibility_roles.${role.toLowerCase()}`,\n                            ),\n                          )\n                          .join(', ')}\n                      </S.ValueText>\n                    </S.TableRowItem>\n                  </S.FileInfoWrapper>\n                </Stack>\n\n                {isDesktop && (\n                  <Stack fullWidth gap={16}>\n                    {DownloadButton}\n\n                    <FileManagerEllipsisMenu\n                      onDelete={() => {\n                        setShowDeleteFileModalId(file._id);\n                      }}\n                      onEdit={() => {\n                        handleClose();\n                        setShowEditFileModalId(file._id);\n                      }}\n                      fileOwnerId={file.owner?._id}\n                    />\n                  </Stack>\n                )}\n              </Stack>\n            )}\n          </S.ModalBody>\n        </S.ModalBodyInnerWrapper>\n      </ModalBody>\n\n      {(isTablet || isMobile) && (\n        <ModalFooter isFullScreen={isMobile}>\n          {isMobile ? (\n            <S.FooterButtons>\n              {isOwner || isFileOwner ? (\n                <>\n                  <Button\n                    intent=\"negative\"\n                    secondary\n                    size=\"large\"\n                    leftIcon={<Icon size={18} name=\"delete_m\" />}\n                    onClick={() => setShowDeleteFileModalId(file._id)}\n                  />\n                  <S.ButtonsWrapper>\n                    <Button\n                      tertiary\n                      size=\"large\"\n                      onClick={() => {\n                        handleClose();\n                        setShowEditFileModalId(file._id);\n                      }}\n                      leftIcon={<Icon size={18} name=\"edit_m\" />}\n                    />\n                  </S.ButtonsWrapper>\n                  {DownloadButton}\n                </>\n              ) : (\n                DownloadButton\n              )}\n            </S.FooterButtons>\n          ) : (\n            <S.FooterButtons>\n              {isOwner || isFileOwner ? (\n                <Stack justify=\"space-between\" fullWidth>\n                  <Button\n                    intent=\"negative\"\n                    secondary\n                    size=\"large\"\n                    leftIcon={<Icon size={18} name=\"delete_m\" />}\n                    onClick={() => setShowDeleteFileModalId(file._id)}\n                  />\n                  <Stack gap={16}>\n                    <Button\n                      tertiary\n                      size=\"large\"\n                      onClick={() => {\n                        handleClose();\n                        setShowEditFileModalId(file._id);\n                      }}\n                      leftIcon={<Icon size={18} name=\"edit_m\" />}\n                    >\n                      {t('noumena.file_manager.preview_modal.edit')}\n                    </Button>\n                    {DownloadButton}\n                  </Stack>\n                </Stack>\n              ) : (\n                DownloadButton\n              )}\n            </S.FooterButtons>\n          )}\n        </ModalFooter>\n      )}\n    </Modal>\n  );\n};\n\nexport default FilePreviewModal;\n","import { memo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from '@/components/Button';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { TSpan } from '@/components/Typography';\n\nexport interface DiscardChangesModalProps {\n  isOpen: boolean;\n  handleClose: (isSuccess?: boolean) => void;\n}\n\nexport const DiscardChangesModal = memo((props: DiscardChangesModalProps) => {\n  const { isOpen, handleClose } = props;\n  const { t } = useTranslation();\n\n  return (\n    <Modal\n      open={isOpen}\n      onClose={handleClose}\n      size={ModalSize.S}\n      disableBackdropClick\n    >\n      <>\n        <ModalHeader>\n          {t('noumena.file_manager.discard_changes_modal.title')}\n        </ModalHeader>\n        <ModalBody align=\"center\">\n          <TSpan\n            colorToken=\"--text-modal-neutral-default\"\n            font=\"body-l\"\n            textAlign=\"center\"\n          >\n            {t('noumena.file_manager.discard_changes_modal.description')}\n          </TSpan>\n        </ModalBody>\n        <ModalFooter flexDirection=\"column\" gap={16}>\n          <Button\n            primary\n            intent=\"negative\"\n            size=\"full\"\n            onClick={() => handleClose(true)}\n          >\n            {t('noumena.file_manager.discard_changes_modal.confirm')}\n          </Button>\n          <Button tertiary size=\"full\" onClick={() => handleClose(false)}>\n            {t('noumena.file_manager.discard_changes_modal.cancel')}\n          </Button>\n        </ModalFooter>\n      </>\n    </Modal>\n  );\n});\n","import styled from 'styled-components';\nimport { TSpan } from '@/components/Typography';\n\nconst ModalBody = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n`;\n\nconst FooterButtons = styled.div`\n  display: flex;\n  width: 100%;\n  gap: 16px;\n`;\n\nconst FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 16px;\n`;\n\nconst CheckBoxWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding-left: 8px;\n`;\n\nconst CheckBoxLabel = styled.label`\n  padding-left: 16px;\n`;\n\nconst VisibleForLabel = styled(TSpan)`\n  color: var(--text-modal-header-neutral-default);\n`;\n\nconst UploadedItem = styled.div`\n  padding: 0;\n  display: flex;\n  flex-direction: row;\n  border-radius: 0;\n  flex: 0 0 1;\n  justify-content: space-between;\n  align-items: center;\n  border: 1px solid var(--border-card-neutral-highlighted);\n  border-radius: 8px;\n  padding: 12px;\n`;\n\nconst UploadedItemLeftWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst UploadedItemIconContainer = styled.div`\n  border: 1px solid var(--border-file-unknown-default);\n  border-radius: 8px;\n  padding: 12px;\n`;\n\nconst UploadedItemTextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-left: 16px;\n`;\n\nconst UploadedItemFileName = styled(TSpan)`\n  color: var(--text-card-header-neutral-highlighted);\n`;\n\nconst UploadedItemSizeText = styled(TSpan)`\n  color: var(--text-card-neutral-default);\n`;\n\nconst SpinnerContainer = styled.div`\n  position: relative;\n  padding: 16px;\n`;\n\nconst UploadingText = styled(TSpan)`\n  color: var(--text-card-brand-primary-default);\n`;\n\nexport default {\n  ModalBody,\n  FooterButtons,\n  FormContainer,\n  CheckBoxLabel,\n  CheckBoxWrapper,\n  VisibleForLabel,\n  UploadedItem,\n  UploadedItemLeftWrapper,\n  UploadedItemIconContainer,\n  UploadedItemTextContainer,\n  UploadedItemFileName,\n  UploadedItemSizeText,\n  SpinnerContainer,\n  UploadingText,\n};\n","import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { Button } from '@/components/Button';\nimport { UploadMedia } from '@/features/upload/components';\nimport { allTypes } from '@/constants/fileTypes';\nimport { TextField } from '@/components/TextField';\nimport { Checkbox } from '@/components/Checkbox';\nimport { Icon } from '@/components/Icon';\nimport { Spinner } from '@/components/Spinner';\nimport { type NoumFile, NoumFileRole } from '@/apollo/generated/types';\nimport { useBreakpoints } from '@/hooks/useBreakpoints';\nimport { TSpan } from '@/components/Typography';\nimport { useToast } from '@/hooks';\nimport { Stack } from '@/layout';\nimport { useFileManagerElementContext } from '../../elements/FileManagerElement/providers/FileManagerElementProvider';\nimport { getIconColorByExtension } from '../../elements/FileManagerElement/utils';\nimport { bytesToMegabytes, schema } from './utils';\nimport DiscardChangesModal from '../DiscardChangesModal';\nimport S from './styles';\n\ntype FileUploadModalProps = {\n  isOpen: boolean;\n  file?: NoumFile;\n  handleClose: () => void;\n};\n\ntype FileUploadValues = {\n  fileName: string;\n  description: string;\n  visibleFor: NoumFileRole[];\n};\n\nconst FileUploadModal = (props: FileUploadModalProps) => {\n  const { isOpen, handleClose, file } = props;\n  const { t } = useTranslation();\n  const { element, addFile, updateFile, connectionRole, isOwner } =\n    useFileManagerElementContext();\n  const { isMobile } = useBreakpoints();\n  const [uploadedFile, setUploadedFile] = useState(file?.fileUrl ?? '');\n  const [isUploading, setIsUploading] = useState(false);\n  const [showDiscardChangesModal, setShowDiscardChangesModal] = useState(false);\n  const [mediaDetail, setMediaDetail] = useState({\n    name: file?.name ?? '',\n    type: '',\n    size: file?.fileSize ?? 0,\n    extension: file?.extension ?? '',\n  });\n\n  const { addSuccessIconToast } = useToast();\n  const isEditMode = !!file;\n  const [uploadError, setUploadError] = useState(false);\n\n  const closeModal = () => {\n    setShowDiscardChangesModal(false);\n    handleClearMedia();\n    handleClose();\n  };\n\n  const onClose = () => {\n    if (isDirty || uploadedFile) {\n      setShowDiscardChangesModal(true);\n    } else {\n      closeModal();\n    }\n  };\n\n  const handleSetMediaDetails = (e: File) => {\n    setMediaDetail({\n      name: e.name,\n      type: e.type,\n      size: e.size,\n      extension: e.name.substring(e.name.lastIndexOf('.') + 1),\n    });\n  };\n\n  const {\n    register,\n    getValues,\n    handleSubmit,\n    setValue,\n    formState: { isValid, errors, isSubmitting, isDirty },\n  } = useForm<FileUploadValues>({\n    mode: 'onChange',\n    defaultValues: {\n      fileName: file?.name ?? '',\n      description: file?.description ?? '',\n      visibleFor: file?.visibilityRoles ?? [],\n    },\n    resolver: yupResolver(schema),\n  });\n\n  const submit = async (values: FileUploadValues) => {\n    if (isEditMode) {\n      await updateFile({\n        name: values.fileName,\n        visibilityRoles: values.visibleFor,\n        description: values.description,\n        fileId: file?._id,\n        fileUrl: uploadedFile ?? file.fileUrl,\n      });\n      addSuccessIconToast(t('noumena.file_manager.toast.file_updated'));\n    } else {\n      await addFile({\n        fileSize: mediaDetail.size,\n        fileUrl: uploadedFile,\n        name: values.fileName,\n        visibilityRoles: values.visibleFor,\n        description: values.description,\n        filesManagerElementId: element._id ?? '',\n      });\n      addSuccessIconToast(t('noumena.file_manager.toast.file_uploaded'));\n    }\n    handleClose();\n  };\n\n  const onUploadChange = (fileUrl: string) => {\n    if (fileUrl) {\n      setUploadedFile(fileUrl);\n      setIsUploading(false);\n    }\n  };\n\n  const handleClearMedia = () => {\n    setUploadedFile('');\n    setUploadError(false);\n    setMediaDetail({ name: '', type: '', size: 0, extension: '' });\n  };\n\n  const handleCheckboxChange = (role: NoumFileRole, value: boolean) => {\n    const currentRoles = getValues('visibleFor');\n    if (value) {\n      setValue('visibleFor', [...currentRoles, role], {\n        shouldValidate: true,\n        shouldDirty: true,\n      });\n    } else {\n      setValue(\n        'visibleFor',\n        currentRoles.filter((r) => role !== r),\n        {\n          shouldValidate: true,\n          shouldDirty: true,\n        },\n      );\n    }\n  };\n\n  const renderCheckbox = (role: NoumFileRole) => (\n    <S.CheckBoxWrapper>\n      <Checkbox\n        isChecked={getValues('visibleFor').includes(role)}\n        icon={\n          <Icon\n            name=\"tick_m\"\n            size={20}\n            color=\"--icon-checkbox-neutral-alt-default\"\n          />\n        }\n        onChange={(value) => handleCheckboxChange(role, value)}\n      />\n      <S.CheckBoxLabel>\n        {t(`noumena.file_manager.visibility_roles.${role.toLowerCase()}`)}\n      </S.CheckBoxLabel>\n    </S.CheckBoxWrapper>\n  );\n\n  return (\n    <>\n      <Modal\n        isFullScreen={isMobile}\n        testId=\"link-confirmation-modal\"\n        open={isOpen}\n        onClose={onClose}\n        enableCloseButton\n        size={ModalSize.L}\n        disableBackdropClick\n      >\n        <form onSubmit={handleSubmit(submit)}>\n          <ModalHeader isFullScreen={isMobile}>\n            {isEditMode\n              ? t('noumena.file_manager.upload_modal.title_edit')\n              : t('noumena.file_manager.upload_modal.title_create')}\n          </ModalHeader>\n          <ModalBody isFullScreen={isMobile}>\n            <S.ModalBody>\n              <S.FormContainer>\n                <UploadMedia\n                  acceptedFileTypes={allTypes}\n                  allTypesSupported\n                  onUploading={setIsUploading}\n                  maxSize={20}\n                  setMediaDetail={handleSetMediaDetails}\n                  onContentChange={onUploadChange}\n                  onError={(value) => setUploadError(value)}\n                  marginTop={0}\n                  isHidden={!!mediaDetail.name}\n                  keepOriginalName\n                />\n                {mediaDetail.name ? (\n                  <S.UploadedItem>\n                    <S.UploadedItemLeftWrapper>\n                      {isUploading ? (\n                        <S.SpinnerContainer>\n                          <Spinner />\n                        </S.SpinnerContainer>\n                      ) : (\n                        <S.UploadedItemIconContainer>\n                          <Icon\n                            name=\"file_m\"\n                            size={24}\n                            color={getIconColorByExtension(\n                              mediaDetail.extension ?? file?.extension,\n                            )}\n                          />\n                        </S.UploadedItemIconContainer>\n                      )}\n                      <S.UploadedItemTextContainer>\n                        <S.UploadedItemFileName font=\"body-m\">\n                          {mediaDetail.name ?? file?.name}\n                        </S.UploadedItemFileName>\n                        <S.UploadedItemSizeText font=\"footnote\">\n                          {t('noumena.file_manager.size_in_mb', {\n                            size: bytesToMegabytes(\n                              mediaDetail.size ?? file?.fileSize,\n                            ),\n                          })}\n                          {isUploading ? (\n                            <S.UploadingText font=\"footnote\">\n                              {` · ${t(\n                                'noumena.file_manager.upload_modal.uploading',\n                              )}`}\n                            </S.UploadingText>\n                          ) : uploadError ? (\n                            <TSpan\n                              font=\"footnote\"\n                              colorToken=\"--text-card-danger-primary-default\"\n                            >\n                              {` · ${t('Upload failed')}`}\n                            </TSpan>\n                          ) : null}\n                        </S.UploadedItemSizeText>\n                      </S.UploadedItemTextContainer>\n                    </S.UploadedItemLeftWrapper>\n                    <Button\n                      size=\"small\"\n                      tertiary\n                      disabled={isUploading || isSubmitting}\n                      icon={\n                        <Icon\n                          name=\"delete_m\"\n                          size={20}\n                          color=\"--button-card-neutral-default\"\n                        />\n                      }\n                      onClick={handleClearMedia}\n                      neutral\n                    />\n                  </S.UploadedItem>\n                ) : null}\n                <TextField\n                  {...register('fileName')}\n                  label={t('noumena.file_manager.upload_modal.file_name')}\n                  value={getValues('fileName')}\n                  error={!!errors.fileName}\n                  helperText={errors.fileName?.message}\n                />\n\n                <TextField\n                  {...register('description', { required: false })}\n                  label={t('noumena.file_manager.upload_modal.description')}\n                  value={getValues('description')}\n                  error={!!errors.description}\n                  helperText={errors.description?.message}\n                />\n\n                <Stack vertical>\n                  <S.VisibleForLabel font=\"footnote-bold\">\n                    {t('noumena.file_manager.upload_modal.visible_for')}\n                  </S.VisibleForLabel>\n\n                  <TSpan\n                    colorToken=\"--text-modal-neutral-default\"\n                    font=\"footnote\"\n                  >\n                    {t(\n                      'noumena.file_manager.upload_modal.visible_for_helper_text',\n                    )}\n                  </TSpan>\n                </Stack>\n\n                {isOwner || connectionRole === 'GUEST'\n                  ? renderCheckbox(NoumFileRole.Guest)\n                  : null}\n\n                {isOwner || connectionRole === 'FAVORITE'\n                  ? renderCheckbox(NoumFileRole.Favorite)\n                  : null}\n              </S.FormContainer>\n            </S.ModalBody>\n          </ModalBody>\n          <ModalFooter isFullScreen={isMobile}>\n            <S.FooterButtons>\n              <Button tertiary size=\"large\" grow onClick={onClose}>\n                {t('noumena.file_manager.upload_modal.cancel')}\n              </Button>\n              <Button\n                primary\n                size=\"large\"\n                grow\n                disabled={!isValid || !uploadedFile}\n                type=\"submit\"\n                loading={isSubmitting}\n              >\n                {t('noumena.file_manager.upload_modal.save')}\n              </Button>\n            </S.FooterButtons>\n          </ModalFooter>\n        </form>\n      </Modal>\n      <DiscardChangesModal\n        isOpen={showDiscardChangesModal}\n        handleClose={(isSuccess) =>\n          isSuccess ? closeModal() : setShowDiscardChangesModal(false)\n        }\n      />\n    </>\n  );\n};\n\nexport default FileUploadModal;\n","import styled from 'styled-components';\n\nconst ActionsButtonsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  gap: 16px;\n  margin-top: 16px;\n`;\n\nexport default {\n  ActionsButtonsContainer,\n};\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Modal } from '@/components/ExtendedModal/Modal';\nimport { Stack } from '@/layout';\nimport { Button } from '@/components/Button';\nimport { TSpan } from '@/components/Typography';\nimport { useError, useToast } from '@/hooks';\nimport S from './styles';\nimport { useFileManagerElementContext } from '../../elements/FileManagerElement/providers/FileManagerElementProvider';\n\ntype FileManagerDeleteModalProps = {\n  isOpenModal: boolean;\n  fileId: string;\n  onClose: () => void;\n  onConfirm: () => void;\n};\nexport const FileManagerDeleteModal: React.FC<FileManagerDeleteModalProps> = ({\n  isOpenModal,\n  fileId,\n  onClose,\n  onConfirm,\n}) => {\n  const { deleteFile } = useFileManagerElementContext();\n  const { logError } = useError();\n  const [isDeleting, setIsDeleting] = useState(false);\n  const { t } = useTranslation();\n  const { addToast } = useToast();\n\n  const handleDelete = async () => {\n    setIsDeleting(true);\n    try {\n      await deleteFile(fileId);\n      addToast('primary', 'icon', t('noumena.file_manager.toast.file_deleted'));\n      onConfirm();\n    } catch (error) {\n      logError(error, 'deleteNoumFile', true);\n    } finally {\n      setIsDeleting(false);\n    }\n  };\n\n  return (\n    <Modal\n      isFullScreen={false}\n      open={isOpenModal}\n      testId=\"question_modal\"\n      onClose={onClose}\n      disableBackdropClick\n    >\n      <Stack\n        gap={16}\n        padding={14}\n        vertical\n        maxWidth={327}\n        align=\"center\"\n        justify=\"center\"\n      >\n        <TSpan\n          font=\"heading-s-bold\"\n          colorToken=\"--text-modal-header-neutral-default\"\n        >\n          {t('noumena.file_manager.delete_modal.title')}\n        </TSpan>\n        <TSpan\n          data-testid=\"confirm_text\"\n          font=\"body-l\"\n          textAlign=\"center\"\n          colorToken=\"--text-modal-neutral-default\"\n        >\n          {t('noumena.file_manager.delete_modal.description')}\n        </TSpan>\n\n        <S.ActionsButtonsContainer>\n          <Button\n            primary\n            size=\"full\"\n            testId=\"confirm_btn\"\n            intent=\"negative\"\n            grow\n            loading={isDeleting}\n            onClick={handleDelete}\n          >\n            {t('noumena.file_manager.delete_modal.confirm_button')}\n          </Button>\n          <Button tertiary onClick={onClose} size=\"full\" testId=\"cancel_btn\">\n            {t('noumena.file_manager.delete_modal.cancel_button')}\n          </Button>\n        </S.ActionsButtonsContainer>\n      </Stack>\n    </Modal>\n  );\n};\n","import { Stack } from '@/layout';\nimport { SizedSkeleton } from '@/screens/Chamber/components/elements/SkeletonLoader/StyledSkeletons';\nimport {\n  StyledFlexColumn,\n  StyledFlexRow,\n  StyledFlexRowBordered,\n} from '@/screens/Chamber/components/elements/SkeletonLoader/styled';\n\nconst SkeletonLoaderFileManagerBody = () => (\n  <Stack vertical fullWidth gap={8}>\n    <StyledFlexRowBordered gap={12} fullWidth justify=\"space-between\">\n      <StyledFlexRow gap={16}>\n        <SizedSkeleton w={48} h={48} r={8} />\n        <StyledFlexColumn gap={8}>\n          <SizedSkeleton w={140} h={20} r={8} />\n          <SizedSkeleton w={140} h={16} r={8} />\n        </StyledFlexColumn>\n      </StyledFlexRow>\n      <SizedSkeleton w={24} h={24} r={8} />\n    </StyledFlexRowBordered>\n\n    <StyledFlexRowBordered gap={12} fullWidth justify=\"space-between\">\n      <StyledFlexRow gap={16}>\n        <SizedSkeleton w={48} h={48} r={8} />\n        <StyledFlexColumn gap={8}>\n          <SizedSkeleton w={140} h={20} r={8} />\n          <SizedSkeleton w={140} h={16} r={8} />\n        </StyledFlexColumn>\n      </StyledFlexRow>\n      <SizedSkeleton w={24} h={24} r={8} />\n    </StyledFlexRowBordered>\n  </Stack>\n);\n\nexport default SkeletonLoaderFileManagerBody;\n","import styled from 'styled-components';\nimport { TSpan } from '@/components/Typography';\n\nconst Container = styled.div`\n  padding: 0;\n  display: flex;\n  flex-direction: row;\n  border-radius: 0;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n  border-bottom: 1px solid var(--bg-separator-neutral-default);\n  padding-bottom: 8px;\n  min-width: 0;\n  overflow: hidden;\n`;\n\nconst TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-left: 16px;\n  min-width: 0;\n  flex-basis: 100%;\n`;\n\nconst IconsContainer = styled.div`\n  display: flex;\n`;\n\nconst FileIconContainer = styled.div`\n  border: 1px solid var(--border-file-unknown-default);\n  border-radius: 8px;\n  width: 46px;\n  height: 46px;\n  align-items: center;\n  justify-content: center;\n  display: flex;\n`;\n\nconst LeftWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  min-width: 0;\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst FileName = styled(TSpan)`\n  color: var(--text-card-header-neutral-highlighted);\n`;\n\nconst FileDescription = styled(TSpan)`\n  color: var(--text-tablecell-body-neutral-default);\n`;\n\nconst Image = styled.img`\n  width: 48px;\n  height: 48px;\n  border-radius: 8px;\n  object-fit: cover;\n`;\n\nconst PreviewVideo = styled.video`\n  border-radius: 8px;\n  width: 48px;\n  height: 48px;\n  object-fit: cover;\n`;\n\nconst SpinnerContainer = styled.div`\n  position: absolute;\n  left: 24px;\n  top: 50%;\n`;\n\nconst IconContainer = styled.div`\n  width: 48px;\n  height: 48px;\n  position: relative;\n`;\n\nexport default {\n  Container,\n  TextContainer,\n  IconsContainer,\n  LeftWrapper,\n  FileName,\n  FileDescription,\n  FileIconContainer,\n  Image,\n  PreviewVideo,\n  SpinnerContainer,\n  IconContainer,\n};\n","import { useState } from 'react';\nimport { delay } from 'lodash';\nimport { Icon } from '@/components/Icon';\nimport { Button } from '@/components/Button';\nimport { type NoumFile } from '@/apollo/generated/types';\nimport { Spinner } from '@/components/Spinner';\nimport S from './styles';\nimport FileManagerEllipsisMenu from '../FileManagerEllipsisMenu/FileManagerEllipsisMenu';\nimport { useFileManagerElementContext } from '../../providers/FileManagerElementProvider';\nimport {\n  getIconColorByExtension,\n  isImageType,\n  isSupportedMediaType,\n  isSupportedVideoType,\n} from '../../utils';\n\ntype FileListItemProps = {\n  file: NoumFile;\n};\n\nconst FileListItem = ({ file }: FileListItemProps) => {\n  const {\n    setShowEditFileModalId,\n    setShowDeleteFileModalId,\n    setShowFilePreviewModalId,\n    markNoumFileAsDownloaded,\n  } = useFileManagerElementContext();\n\n  const [isLoaded, setIsLoaded] = useState(\n    () => !isSupportedMediaType(file.extension ?? ''),\n  );\n\n  const onLoad = () => setIsLoaded(true);\n\n  return (\n    <S.Container>\n      <S.LeftWrapper onClick={() => setShowFilePreviewModalId(file._id)}>\n        <S.IconContainer>\n          {!isLoaded && (\n            <S.SpinnerContainer>\n              <Spinner zIndex={10} />\n            </S.SpinnerContainer>\n          )}\n          {isSupportedVideoType(file.extension ?? '') ? (\n            <S.PreviewVideo\n              data-testid=\"preivew-video\"\n              muted\n              onLoadedData={onLoad}\n              preload=\"metadata\"\n            >\n              <source src={file.fileUrl ?? ''} />\n            </S.PreviewVideo>\n          ) : isImageType(file.extension ?? '') ? (\n            <S.Image src={file.fileUrl ?? ''} onLoad={onLoad} />\n          ) : (\n            <S.FileIconContainer>\n              <Icon\n                name=\"file_m\"\n                size={24}\n                color={getIconColorByExtension(file.extension ?? '')}\n              />\n            </S.FileIconContainer>\n          )}\n        </S.IconContainer>\n\n        <S.TextContainer>\n          <S.FileName\n            overflow=\"ellipsis\"\n            font=\"body-m\"\n          >{`${file.name}.${file.extension}`}</S.FileName>\n          <S.FileDescription overflow=\"ellipsis\" font=\"footnote\">\n            {file.description}\n          </S.FileDescription>\n        </S.TextContainer>\n      </S.LeftWrapper>\n      <S.IconsContainer>\n        <a\n          href={file.fileUrl ?? ''}\n          onClick={() => delay(() => markNoumFileAsDownloaded(file._id), 150)}\n          download\n          rel=\"noreferrer\"\n        >\n          <Button\n            size=\"small\"\n            tertiary\n            icon={\n              <Icon\n                name=\"download_m\"\n                size={20}\n                color=\"--button-card-neutral-default\"\n              />\n            }\n            neutral\n          />\n        </a>\n\n        <FileManagerEllipsisMenu\n          onDelete={() => setShowDeleteFileModalId(file._id)}\n          onEdit={() => setShowEditFileModalId(file._id)}\n          onPreview={() => setShowFilePreviewModalId(file._id)}\n          fileOwnerId={file.owner?._id}\n        />\n      </S.IconsContainer>\n    </S.Container>\n  );\n};\n\nexport default FileListItem;\n","import styled from 'styled-components';\nimport { mediaSizes } from '@/constants/devices';\nimport { TSpan } from '@/components/Typography';\nimport { Stack } from '@/layout';\n\nconst Container = styled.div<{ fullWidth: boolean }>`\n  width: 100%;\n  display: grid;\n  column-gap: 8px;\n  grid-template-columns: ${({ fullWidth }) => (fullWidth ? '1fr' : '1fr 1fr')};\n  position: relative;\n\n  @media (max-width: ${mediaSizes.MOBILE_L_MAX}) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst ListWrapper = styled(Stack)`\n  width: 100%;\n  min-height: 140px;\n`;\n\nconst EmptyState = styled(Stack).attrs({\n  align: 'center',\n  vertical: true,\n  fullWidth: true,\n})``;\n\nconst EmptyStateText = styled(TSpan)`\n  color: var(--text-card-neutral-default);\n  padding-top: 16px;\n`;\n\nconst EmptyStateContainer = styled(Stack).attrs({\n  vertical: true,\n})`\n  width: 100%;\n  align-self: center;\n  gap: 16px;\n`;\n\nexport default {\n  Container,\n  EmptyState,\n  EmptyStateText,\n  EmptyStateContainer,\n  ListWrapper,\n};\n","import { Button } from '@/components/Button';\nimport { Icon } from '@/components/Icon';\nimport { Stack } from '@/layout';\nimport { useTranslation } from 'react-i18next';\nimport { useFileManagerElementContext } from '../../providers/FileManagerElementProvider';\nimport S from './styles';\n\ntype EmptyStateProps = {\n  isSeachResult?: boolean;\n};\n\nconst EmptyState: React.FC<EmptyStateProps> = ({ isSeachResult }) => {\n  const { t } = useTranslation();\n  const { setShowAddFileModal, isEditing } = useFileManagerElementContext();\n\n  return (\n    <S.EmptyStateContainer>\n      {isEditing ? (\n        <S.EmptyState>\n          <Icon\n            name=\"file_m\"\n            size={64}\n            color=\"--icon-card-placeholder-neutral-default\"\n          />\n          <S.EmptyStateText>\n            {t('noumena.file_manager.edit_mode.empty_state_message')}\n          </S.EmptyStateText>\n        </S.EmptyState>\n      ) : (\n        <>\n          <S.EmptyState>\n            <Icon\n              name=\"file_m\"\n              size={64}\n              color=\"--icon-card-placeholder-neutral-default\"\n            />\n            <S.EmptyStateText>\n              {t('noumena.file_manager.empty_state_message')}\n            </S.EmptyStateText>\n          </S.EmptyState>\n          {!isSeachResult && (\n            <Stack fullWidth justify=\"center\">\n              <Button\n                data-testid=\"add-button\"\n                onClick={() => setShowAddFileModal(true)}\n                size=\"small\"\n                secondary\n              >\n                {t('noumena.file_manager.button.add_a_file')}\n              </Button>\n            </Stack>\n          )}\n        </>\n      )}\n    </S.EmptyStateContainer>\n  );\n};\n\nexport default EmptyState;\n","import { useLaunchDarkly } from '@/hooks';\nimport { NetworkStatus } from '@apollo/client';\nimport SkeletonLoaderFileManagerBody from '../../../SkeletonLoader/SkeletonLoaderFileManagerBody';\nimport { useFileManagerElementContext } from '../../providers/FileManagerElementProvider';\nimport FileListItem from '../FileListItem';\nimport EmptyState from './EmptyState';\nimport S from './styles';\n\ntype FileListProps = {\n  maxFilesToDisplay?: number;\n};\n\nconst FileList: React.FC<FileListProps> = ({ maxFilesToDisplay }) => {\n  const {\n    flags: { noumEditor2 },\n  } = useLaunchDarkly();\n  const { isCollapse, files, networkStatus, hasFiles, searchQuery } =\n    useFileManagerElementContext();\n\n  return (\n    <S.ListWrapper>\n      {!hasFiles ? (\n        networkStatus === NetworkStatus.ready ? (\n          <EmptyState isSeachResult={!!searchQuery} />\n        ) : (\n          <SkeletonLoaderFileManagerBody />\n        )\n      ) : (\n        <S.Container fullWidth={files.length === 1 || noumEditor2}>\n          {files\n            .slice(0, maxFilesToDisplay || files.length)\n            .map((file, index) =>\n              // render only 2 items when file manager element is collapsed\n              isCollapse && index >= 2 ? null : (\n                <FileListItem key={file._id} file={file} />\n              ),\n            )}\n        </S.Container>\n      )}\n    </S.ListWrapper>\n  );\n};\n\nexport default FileList;\n","import { debounce } from 'lodash';\nimport { useLayoutEffect, useMemo, useRef } from 'react';\n\nexport default function useDebouncedCallback<\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  T extends (...args: any[]) => any,\n>(callback: T, delay: number) {\n  const callbackRef = useRef<T>(callback);\n\n  useLayoutEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  return useMemo(() => debounce(callbackRef.current, delay), [delay]);\n}\n","import { TextField } from '@/components/TextField';\nimport styled from 'styled-components';\n\nconst SearchField = styled(TextField)`\n  svg path {\n    fill: var(--icon-input-neutral-default);\n  }\n`;\n\nexport default { SearchField };\n","import { Icon } from '@/components/Icon';\nimport useDebouncedCallback from '@/hooks/useDebouncedCallback';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFileManagerElementContext } from '../../providers/FileManagerElementProvider';\n\nimport S from './styles';\n\ntype FileManagerHeaderProps = {};\n\nexport const FileManagerSearch: React.FC<FileManagerHeaderProps> = () => {\n  const { t } = useTranslation();\n  const { setSearchQuery, searchQuery } = useFileManagerElementContext();\n\n  const debouncedChangeHandler = useDebouncedCallback(setSearchQuery, 500);\n\n  return (\n    <S.SearchField\n      fullWidth\n      inputSize=\"small\"\n      placeholder={t('noumena.file_manager.search')}\n      leftIcon={\n        <Icon name=\"search_m\" size={24} color=\"--icon-input-neutral-default\" />\n      }\n      rightIcon={\n        searchQuery && (\n          <Icon\n            onClick={() => setSearchQuery('')}\n            name=\"clear_m\"\n            size={24}\n            color=\"--icon-input-neutral-default\"\n          />\n        )\n      }\n      rightIconColor=\"var(--icon-input-brand-primary-default)\"\n      value={searchQuery || ''}\n      onChange={(event) => debouncedChangeHandler(event.currentTarget.value)}\n      data-testid=\"global-search-input\"\n    />\n  );\n};\n","import { NoumFilesFilterType } from '@/apollo/generated/types';\nimport { BasicChipsTabsForm } from '@/components';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFileManagerElementContext } from '../providers/FileManagerElementProvider';\n\nexport const FileManagerTabs: React.FC = () => {\n  const { t } = useTranslation();\n\n  const { filterType, setFilterType } = useFileManagerElementContext();\n\n  return (\n    <BasicChipsTabsForm\n      onChange={setFilterType}\n      inputList={[\n        {\n          id: NoumFilesFilterType.All,\n          name: 'all',\n          text: t('noumena.file_manager.tabs.all'),\n          labelSize: 'medium',\n        },\n        {\n          id: NoumFilesFilterType.UploadedByMe,\n          name: 'uploadedByMe',\n          text: t('noumena.file_manager.tabs.uploadedByMe'),\n          labelSize: 'medium',\n        },\n      ]}\n      selectedId={filterType}\n      mode=\"isUnderline\"\n      tabWidth=\"120px\"\n      tabCSS={{\n        maxHeight: 35,\n      }}\n      isWithoutImage\n      isMobile={false}\n      fontSize=\"--font-button-small-size\"\n    />\n  );\n};\n","import {\n  Modal,\n  ModalBody,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { useBreakpoints } from '@/hooks';\nimport { Stack } from '@/layout';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport FileList from '../../elements/FileManagerElement/components/FileList';\nimport { FileManagerSearch } from '../../elements/FileManagerElement/components/FileManagerSearch/FileManagerSearch';\nimport { FileManagerTabs } from '../../elements/FileManagerElement/components/FileManagerTabs';\n\ntype FileManagerShowAllModalProps = {\n  isOpenModal: boolean;\n  onClose: () => void;\n};\nexport const FileManagerShowAllModal: React.FC<\n  FileManagerShowAllModalProps\n> = ({ isOpenModal, onClose }) => {\n  const { t } = useTranslation();\n  const { isDesktop, isMobile } = useBreakpoints();\n\n  return (\n    <Modal\n      isFullScreen={!isDesktop}\n      open={isOpenModal}\n      testId=\"file-manager-show-all-modal\"\n      onClose={onClose}\n      disableBackdropClick\n      size={ModalSize.XL}\n      enableCloseButton\n    >\n      <ModalHeader>\n        {t('noumena.file_manager.modal.all_files.title')}\n      </ModalHeader>\n      <Stack fullWidth vertical>\n        <Stack fullWidth padding={isMobile ? '0 16px' : undefined}>\n          <FileManagerSearch />\n        </Stack>\n\n        <FileManagerTabs />\n      </Stack>\n\n      <ModalBody style={{ padding: `0px !important;` }}>\n        <Stack vertical gap={16} fullWidth padding=\"16px 0 0\">\n          <FileList />\n        </Stack>\n      </ModalBody>\n    </Modal>\n  );\n};\n","import { Card } from '@/components/Card';\nimport { useBreakpoints } from '@/hooks/useBreakpoints';\nimport SkeletonLoaderElementHeader from '@/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderElementHeader';\nimport {\n  StyledFlexColumn,\n  StyledFlexRow,\n} from '@/screens/Chamber/components/elements/SkeletonLoader/styled';\nimport SkeletonLoaderFileManagerBody from './SkeletonLoaderFileManagerBody';\n\nconst SkeletonLoaderFileManagerElement = () => {\n  const { isMobile } = useBreakpoints();\n\n  return (\n    <Card>\n      <StyledFlexColumn gap={21} justify=\"baseline\" align=\"flex-start\">\n        <SkeletonLoaderElementHeader />\n        {isMobile ? (\n          <StyledFlexColumn\n            fullWidth\n            align=\"flex-start\"\n            justify=\"flex-start\"\n            gap={16}\n          >\n            <SkeletonLoaderFileManagerBody />\n          </StyledFlexColumn>\n        ) : (\n          <StyledFlexRow\n            fullWidth\n            align=\"flex-start\"\n            justify=\"flex-start\"\n            gap={16}\n          >\n            <SkeletonLoaderFileManagerBody />\n          </StyledFlexRow>\n        )}\n      </StyledFlexColumn>\n    </Card>\n  );\n};\n\nexport default SkeletonLoaderFileManagerElement;\n","import styled from 'styled-components';\nimport { Button } from '@/components/Button';\nimport { Stack } from '@/layout';\n\nexport const Container = styled(Stack)`\n  padding: 0;\n  border-radius: 0;\n  gap: 32px;\n`;\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n`;\n\nexport const AddButton = styled(Button)`\n  padding: 8px;\n`;\n\nexport const HeaderRightWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  width: 100%;\n  justify-content: flex-end;\n`;\n","import { Button } from '@/components/Button';\nimport { Icon } from '@/components/Icon';\nimport { useNoumElement } from '@/features/noums/contexts/NoumElementContext';\nimport { useBreakpoints } from '@/hooks';\nimport { ViewMode } from '@/screens/Chamber/components/ElementWrapper/ViewMode';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { NetworkStatus } from '@apollo/client';\nimport { useFileManagerElementContext } from '../../providers/FileManagerElementProvider';\nimport { FileManagerSearch } from '../FileManagerSearch/FileManagerSearch';\nimport { AddButton, Container, HeaderRightWrapper } from './styles';\n\ntype FileManagerHeaderProps = {};\n\nconst FileManagerHeader: React.FC<FileManagerHeaderProps> = () => {\n  const { t } = useTranslation();\n  const { isMobile } = useBreakpoints();\n  const {\n    setShowAddFileModal,\n    isCollapse,\n    setIsCollapse,\n    spaceId,\n    element,\n    currentTitle,\n    files,\n    hasFiles,\n    isEditing,\n    searchQuery,\n    networkStatus,\n  } = useFileManagerElementContext();\n\n  const { isNoumEditor2 } = useNoumElement();\n\n  const handleClickSeeAll = () => {\n    setIsCollapse(false);\n  };\n\n  const showSearch =\n    !isCollapse &&\n    (hasFiles || !!searchQuery || networkStatus === NetworkStatus.setVariables);\n\n  const totalCount = files.length;\n  const showAddButton = !isEditing && (hasFiles || !!searchQuery);\n\n  return (\n    <Container>\n      <ViewMode\n        spaceId={spaceId}\n        element={element}\n        currentTitle={currentTitle}\n        isCollapse={isCollapse}\n        setIsCollapse={setIsCollapse}\n        fullWidth={!isNoumEditor2 || !isMobile}\n      />\n      <HeaderRightWrapper>\n        {showSearch ? <FileManagerSearch /> : null}\n        {isCollapse && totalCount > 2 && (\n          <Button onClick={handleClickSeeAll} textOnly>\n            {t('noumena.file_manager.header.see_all', { count: totalCount })}\n          </Button>\n        )}\n        {showAddButton && (\n          <AddButton\n            data-testid=\"add-button\"\n            onClick={() => setShowAddFileModal(true)}\n            size=\"small\"\n            primary={!isNoumEditor2}\n            secondary={isNoumEditor2}\n            icon={\n              <Icon\n                name=\"add_s\"\n                size={16}\n                color={\n                  isNoumEditor2\n                    ? '--icon-button-brand-secondary-default'\n                    : '--icon-button-neutral-alt-default'\n                }\n              />\n            }\n          />\n        )}\n      </HeaderRightWrapper>\n    </Container>\n  );\n};\n\nexport default FileManagerHeader;\n","import { Card } from '@/components/Card';\nimport { TSpan } from '@/components/Typography';\nimport { devices } from '@/constants/devices';\nimport styled from 'styled-components';\n\nconst ViewModeWrapper = styled(Card)`\n  width: 100%;\n  box-sizing: border-box;\n  border-radius: 0;\n  position: relative;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  @media ${devices.LAPTOP} {\n    border-radius: 16px;\n    padding: 24px;\n  }\n  @media ${devices.TABLET} {\n    border-radius: 16px;\n  }\n`;\n\nconst EmptyState = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst EmptyStateText = styled(TSpan)`\n  color: var(--text-card-neutral-default);\n  padding-top: 16px;\n`;\n\nexport default {\n  ViewModeWrapper,\n  EmptyState,\n  EmptyStateText,\n};\n","import { Button } from '@/components/Button';\nimport { Icon } from '@/components/Icon';\nimport { useNoumElement } from '@/features/noums/contexts/NoumElementContext';\nimport { Stack } from '@/layout';\nimport { NetworkStatus } from '@apollo/client';\nimport { type FC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useFileManagerElementContext } from '../../providers/FileManagerElementProvider';\nimport FileList from '../FileList';\nimport { FileManagerTabs } from '../FileManagerTabs';\n\nconst FileManagerBody: FC = () => {\n  const { t } = useTranslation();\n  const {\n    isCollapse,\n    networkStatus,\n    setShowAllFilesModal,\n    hasFiles,\n    files,\n    searchQuery,\n  } = useFileManagerElementContext();\n\n  const { isNoumEditor2 } = useNoumElement();\n\n  return (\n    <>\n      {!isCollapse &&\n      (hasFiles ||\n        networkStatus === NetworkStatus.setVariables ||\n        (!hasFiles && !!searchQuery)) ? (\n        <FileManagerTabs />\n      ) : null}\n\n      <FileList maxFilesToDisplay={isNoumEditor2 ? 5 : undefined} />\n\n      {files.length > 5 && isNoumEditor2 && (\n        <Stack fullWidth justify=\"center\">\n          <Button\n            textOnly\n            rightIcon={\n              <Icon\n                name=\"chevron_small_right_m\"\n                size={24}\n                color=\"--icon-tablecell-neutral-default\"\n              />\n            }\n            onClick={() => setShowAllFilesModal(true)}\n          >\n            {t('noumena.file_manager.button.all_files')}\n          </Button>\n        </Stack>\n      )}\n    </>\n  );\n};\nexport default FileManagerBody;\n","import { NetworkStatus } from '@apollo/client';\nimport FilePreviewModal from '@/screens/Chamber/components/modals/FilePreviewModal';\nimport FileUploadModal from '@/screens/Chamber/components/modals/FileUploadModal';\nimport FileManagerDeleteModal from '@/screens/Chamber/components/modals/FileManagerDeleteModal';\nimport FileManagerShowAllModal from '@/screens/Chamber/components/modals/FileManagerShowAllModal';\nimport SkeletonLoaderFileManagerElement from '../../../SkeletonLoader/SkeletonLoaderFileManagerElement';\nimport { useFileManagerElementContext } from '../../providers/FileManagerElementProvider';\nimport FileManagerHeader from '../FileManagerHeader';\nimport S from './styles';\nimport FileManagerBody from '../FileManagerBody';\n\nconst FileManagerViewMode = () => {\n  const {\n    showAddFileModal,\n    setShowAddFileModal,\n    showEditFileModalId,\n    setShowEditFileModalId,\n    showDeleteFileModalId,\n    setShowDeleteFileModalId,\n    files,\n    showFilePreviewModalId,\n    setShowFilePreviewModalId,\n    loading,\n    networkStatus,\n    showAllFilesModal,\n    hasFiles,\n    setShowAllFilesModal,\n  } = useFileManagerElementContext();\n\n  if (loading && !hasFiles && networkStatus !== NetworkStatus.setVariables)\n    return <SkeletonLoaderFileManagerElement />;\n\n  return (\n    <>\n      <S.ViewModeWrapper>\n        <FileManagerHeader />\n        <FileManagerBody />\n      </S.ViewModeWrapper>\n      {!!showFilePreviewModalId && (\n        <FilePreviewModal\n          isOpen={!!showFilePreviewModalId}\n          handleClose={() => setShowFilePreviewModalId(null)}\n          file={files.find(({ _id }) => showFilePreviewModalId === _id)}\n        />\n      )}\n\n      {showAddFileModal && (\n        <FileUploadModal\n          isOpen={showAddFileModal}\n          handleClose={() => {\n            setShowAddFileModal(false);\n          }}\n        />\n      )}\n\n      {!!showEditFileModalId && (\n        <FileUploadModal\n          isOpen={!!showEditFileModalId}\n          file={files.find(({ _id }) => _id === showEditFileModalId)}\n          handleClose={() => {\n            setShowEditFileModalId(null);\n          }}\n        />\n      )}\n\n      {!!showDeleteFileModalId && (\n        <FileManagerDeleteModal\n          isOpenModal={!!showDeleteFileModalId}\n          onClose={() => setShowDeleteFileModalId(null)}\n          onConfirm={() => {\n            setShowDeleteFileModalId(null);\n            setShowFilePreviewModalId(null);\n          }}\n          fileId={showDeleteFileModalId}\n        />\n      )}\n      {showAllFilesModal && (\n        <FileManagerShowAllModal\n          isOpenModal={showAllFilesModal}\n          onClose={() => setShowAllFilesModal(false)}\n        />\n      )}\n    </>\n  );\n};\nexport default FileManagerViewMode;\n","import { useTranslation } from 'react-i18next';\nimport { ElementWrapper } from '@/screens/Chamber/components/ElementWrapper';\nimport { TSpan } from '@/components/Typography';\nimport { Stack } from '@/layout';\nimport { useSkeletonIsLoadingContext } from '@/components/SkeletonLoader/SkeletonLoaderProvider';\nimport { Icon } from '@/components/Icon';\nimport { useLaunchDarkly } from '@/hooks';\nimport FileManagerViewMode from './components/FileManagerViewMode';\nimport { type FileManagerElementProps } from './types';\nimport { FileManagerElementProvider } from './providers/FileManagerElementProvider';\nimport SkeletonLoaderFileManagerElement from '../SkeletonLoader/SkeletonLoaderFileManagerElement';\n\nconst FileManagerElement = (props: FileManagerElementProps) => {\n  const {\n    flags: { noumEditor2 },\n  } = useLaunchDarkly();\n  const { t } = useTranslation();\n  const { isLoading } = useSkeletonIsLoadingContext();\n  if (isLoading) return <SkeletonLoaderFileManagerElement />;\n\n  const { isEditing } = props;\n\n  if (isEditing && !noumEditor2)\n    return (\n      <ElementWrapper {...props}>\n        {!props.isCustomPreview ? (\n          <Stack justify=\"center\" vertical align=\"center\" gap={16}>\n            <Icon\n              name=\"file_m\"\n              size={64}\n              color=\"--icon-card-placeholder-neutral-default\"\n            />\n            <TSpan font=\"body-m\" colorToken=\"--text-card-neutral-default\">\n              {t('noumena.file_manager.edit_mode_message')}\n            </TSpan>\n          </Stack>\n        ) : (\n          <></>\n        )}\n      </ElementWrapper>\n    );\n\n  return (\n    <FileManagerElementProvider {...props}>\n      <FileManagerViewMode />\n    </FileManagerElementProvider>\n  );\n};\nexport default FileManagerElement;\n","import Skeleton from 'react-loading-skeleton';\nimport { Card } from '@/components/Card';\nimport SkeletonLoaderElementHeader from '@/screens/Chamber/components/elements/SkeletonLoader/SkeletonLoaderElementHeader';\nimport { StyledFlexColumn } from '@/screens/Chamber/components/elements/SkeletonLoader/styled';\n\nconst SkeletonLoaderContractManagerElement = () => (\n  <Card>\n    <StyledFlexColumn gap={16} align=\"stretch\">\n      <SkeletonLoaderElementHeader />\n      <Skeleton height={20} borderRadius={8} />\n      <Skeleton height={20} borderRadius={8} />\n      <Skeleton height={20} borderRadius={8} />\n      <Skeleton height={20} borderRadius={8} />\n      <Skeleton height={20} borderRadius={8} />\n    </StyledFlexColumn>\n  </Card>\n);\n\nexport default SkeletonLoaderContractManagerElement;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 0;\n  display: flex;\n  flex-direction: row;\n  border-radius: 0;\n  justify-content: space-between;\n`;\n\nexport const HeaderRightWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n`;\n","import { ButtonMenu } from '@/components/ContextMenu';\nimport { Icon } from '@/components/Icon';\nimport { ViewMode } from '@/screens/Chamber/components/ElementWrapper/ViewMode';\nimport { useNoumElement } from '@/features/noums/contexts/NoumElementContext';\nimport { Container, HeaderRightWrapper } from './styles';\nimport { type ContractManagerHeaderProps } from '../../../types';\n\nfunction ContractManagerHeader({\n  setIsCollapse,\n  spaceId,\n  element,\n  currentTitle,\n  isOwner,\n  handleNewContract,\n  handleNewStatementOfWork,\n  isEditing,\n}: ContractManagerHeaderProps) {\n  const { isNoumEditor2 } = useNoumElement();\n\n  return (\n    <Container>\n      <ViewMode\n        spaceId={spaceId}\n        element={element}\n        currentTitle={currentTitle}\n        isCollapse={false}\n        setIsCollapse={setIsCollapse}\n        isCollapseDisabled={true}\n      />\n      <HeaderRightWrapper>\n        {(isOwner || isEditing) && (\n          <ButtonMenu\n            primary={!isNoumEditor2}\n            secondary={isNoumEditor2}\n            icon={<Icon name=\"add_s\" size={16} />}\n            size=\"small\"\n            disabled={isEditing}\n            onClick={(value) => {\n              switch (value) {\n                case 'new_contract':\n                  return handleNewContract();\n                case 'new_sow':\n                  return handleNewStatementOfWork();\n                default:\n                  return null;\n              }\n            }}\n            menuOptions={[\n              {\n                type: 'value',\n                key: 'new_contract',\n                label: 'New Contract',\n                value: 'new_contract',\n                icon: <Icon name=\"add_m\" size={16} />,\n              },\n              {\n                type: 'value',\n                key: 'new_sow',\n                label: 'New Statement of Work (SOW)',\n                value: 'new_sow',\n                icon: <Icon name=\"add_m\" size={16} />,\n              },\n            ]}\n          />\n        )}\n      </HeaderRightWrapper>\n    </Container>\n  );\n}\n\nexport default ContractManagerHeader;\n","import styled from 'styled-components';\nimport { TSpan } from '@/components/Typography';\nimport { Stack } from '@/layout';\n\nconst EmptyState = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst EmptyStateText = styled(TSpan)`\n  color: var(--text-card-neutral-default);\n  padding-top: 16px;\n`;\n\nconst EmptyStateButtons = styled(Stack).attrs(() => ({\n  gap: 12,\n  align: 'center',\n}))`\n  padding-top: 16px;\n`;\n\nexport default {\n  EmptyState,\n  EmptyStateText,\n  EmptyStateButtons,\n};\n","import { useTranslation } from 'react-i18next';\nimport { Button } from '@/components/Button';\nimport { Icon } from '@/components/Icon';\nimport S from './styles';\nimport { type EmptyElementProps } from '../../../types';\n\nexport function EmptyElement({\n  isOwner,\n  handleNewContract,\n  handleNewStatementOfWork,\n}: EmptyElementProps) {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <S.EmptyState>\n        <Icon\n          name=\"contract_m\"\n          size={64}\n          color=\"--icon-card-placeholder-neutral-default\"\n        />\n        <S.EmptyStateText>\n          {t('noumena.noum_contract_manager.empty_state_message.contract')}\n        </S.EmptyStateText>\n\n        {isOwner && (\n          <S.EmptyStateButtons>\n            <Button\n              primary\n              size=\"small\"\n              leftIcon={<Icon name=\"plus_m\" size={24} />}\n              onClick={handleNewContract}\n            >\n              {t('noumena.noum_contract_manager.new_contract')}\n            </Button>\n            <Button\n              secondary\n              size=\"small\"\n              leftIcon={<Icon name=\"plus_m\" size={24} />}\n              onClick={handleNewStatementOfWork}\n            >\n              {t('noumena.noum_contract_manager.new_statement_of_work')}\n            </Button>\n          </S.EmptyStateButtons>\n        )}\n      </S.EmptyState>\n    </>\n  );\n}\n","import styled, { css } from 'styled-components';\nimport { devices } from '@/constants/devices';\nimport { Card } from '@/components/Card';\n\nexport const ViewModeWrapper = styled(Card)<{ isEditing?: boolean }>`\n  box-sizing: border-box;\n  border-radius: 0;\n  position: relative;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  overflow: visible;\n\n  @media ${devices.LAPTOP} {\n    border-radius: 16px;\n    padding: 24px;\n  }\n  @media ${devices.TABLET} {\n    border-radius: 16px;\n  }\n\n  ${({ isEditing }) =>\n    isEditing &&\n    css`\n      & * {\n        pointer-events: none;\n      }\n    `}\n`;\n","import {\n  type ContractBasic,\n  type StatementOfWorkBasic,\n  type DocumentType,\n} from '@/features/contracts/types';\nimport {\n  type ElementOutput,\n  type ContractListingPov,\n} from '@/apollo/generated/types';\nimport {\n  type GetContractsQuery,\n  type GetStatementsOfWorkQuery,\n} from '@/apollo/graphql';\nimport { type NoumLayoutViewMode } from '@/features/conversation/types';\nimport { type ElementWrapperProps } from '../../ElementWrapper';\n\nexport type ContractManagerElementProps = ElementWrapperProps;\n\nexport type EmptyElementProps = {\n  isOwner?: boolean;\n  handleNewContract: () => void;\n  handleNewStatementOfWork: () => void;\n};\n// TODO: Remove once BE implements their own.\nexport enum NoumDocumentStatus {\n  All = 'All',\n  Drafts = 'Drafts',\n  Sent = 'Sent',\n  Signed = 'Signed',\n}\n\nexport type Filters = {\n  type: DocumentType;\n  status: NoumDocumentStatus;\n  listPerspective: ContractListingPov;\n};\n\nexport type FilterType = {\n  filterType?: DocumentType;\n  isOwner?: boolean;\n  isEmpty?: boolean;\n};\n\nexport type ContractManagerProp = {\n  isOwner: boolean | undefined;\n  spaceId: string;\n  ROWS_PER_PAGE?: number;\n} & FilterType;\n\nexport type ContractManagerViewProp = {\n  element: ElementOutput;\n  currentTitle?: string;\n  isEditing: boolean;\n} & ContractManagerProp;\n\nexport type FiltersProps = {\n  filters: Filters;\n  setFilters: (newFilters: Filters) => void;\n} & FilterType;\n\nexport type ContractManagerHeaderProps = {\n  setIsCollapse: (value: boolean) => void;\n  handleNewContract: () => void;\n  handleNewStatementOfWork: () => void;\n} & ContractManagerViewProp;\n\nexport type ContractViewAllModalProp = {\n  isOpen: boolean;\n  onClose: () => void;\n  handleNewContract: () => void;\n  handleNavigateToContractManager: () => void;\n} & ContractManagerProp;\n\nexport type BodyViewModeProps = {\n  isLoading: boolean;\n  isContract: boolean;\n  contracts: GetContractsQuery['getContractList']['data'];\n  statementsOfWork: GetStatementsOfWorkQuery['getAllSOW']['data'];\n  handleNavigateToContract: (item: ContractBasic) => void;\n  handleNavigateToStatementOfWork: (item: StatementOfWorkBasic) => void;\n  rowsPerPage?: number;\n  layoutMode: NoumLayoutViewMode;\n};\n\nexport type InfiniteState =\n  | 'loading'\n  | 'hasNextPage'\n  | 'end'\n  | 'end-with-force';\n","import styled from 'styled-components';\n\nexport const TypeContainer = styled.div<{ iswrapped: boolean }>`\n  width: 100%;\n  max-width: ${({ iswrapped }) => (iswrapped ? '100%' : '255px')};\n`;\n","import { Controller, useFormContext } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\nimport BasicChipsTabsForm from '@/components/Tabs/TabsForm';\nimport { useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport { DocumentTypeFilterField } from '@/features/contracts/components/DocumentTypeFilterField/DocumentTypeFilterField';\nimport { Stack } from '@/layout';\nimport { useLaunchDarkly } from '@/hooks';\nimport { type InputListTypes } from '@/components/Tabs/types';\nimport {\n  type Filters,\n  NoumDocumentStatus,\n  type FilterType,\n} from '../../../types';\nimport { TypeContainer } from './styles';\n\nexport const InputFilters = ({ filterType, isOwner, isEmpty }: FilterType) => {\n  const { t } = useTranslation();\n  const {\n    flags: { noumEditor2 },\n  } = useLaunchDarkly();\n  const wrapperRef = useRef<HTMLDivElement>(null);\n  const { control, setValue } = useFormContext<Filters>();\n  const [isWrap, setIsWrap] = useState(false);\n\n  useLayoutEffect(() => {\n    if (noumEditor2) {\n      setTimeout(() => {\n        setIsWrap(\n          wrapperRef.current ? wrapperRef.current.clientWidth < 650 : false,\n        );\n      }, 200);\n    }\n  }, [noumEditor2]);\n\n  useEffect(() => {\n    if (filterType) setValue('type', filterType);\n  }, [filterType, setValue]);\n\n  const inputList = useMemo(() => {\n    const list = [\n      {\n        id: NoumDocumentStatus.All,\n        name: 'all',\n        text: t('noumena.noum.contract_manager.tabs.all'),\n        labelSize: 'auto' as InputListTypes['labelSize'],\n      },\n      {\n        id: NoumDocumentStatus.Sent,\n        name: 'sent',\n        text: t('noumena.noum.contract_manager.tabs.sent'),\n        labelSize: 'auto' as InputListTypes['labelSize'],\n      },\n      {\n        id: NoumDocumentStatus.Signed,\n        name: 'signed',\n        text: t('noumena.noum.contract_manager.tabs.signed'),\n        labelSize: 'auto' as InputListTypes['labelSize'],\n      },\n    ];\n    if (isOwner) {\n      const ownerTab = {\n        id: NoumDocumentStatus.Drafts,\n        name: 'drafts',\n        text: t('noumena.noum.contract_manager.tabs.drafts'),\n        labelSize: 'auto' as InputListTypes['labelSize'],\n      };\n      list.splice(2, 0, ownerTab);\n    }\n    return list;\n  }, [isOwner, t]);\n\n  return (\n    <Stack\n      ref={wrapperRef}\n      align=\"center\"\n      justify=\"space-between\"\n      wrap={noumEditor2 && isWrap ? 'reverse' : 'unset'}\n      gap=\"12px\"\n      fullWidth\n    >\n      {!isEmpty && (\n        <Controller<Filters>\n          name=\"status\"\n          control={control}\n          render={({ field: { value, onChange } }) => (\n            <BasicChipsTabsForm\n              tabWidth=\"46px\"\n              onChange={(tab) => onChange(tab as Filters['status'])}\n              inputList={inputList}\n              selectedId={value}\n              mode=\"isUnderline\"\n              isWithoutImage\n              isMobile={false}\n              fontSize=\"--font-button-small-size\"\n            />\n          )}\n        />\n      )}\n      <TypeContainer iswrapped={isWrap || !!isEmpty}>\n        <Controller\n          name=\"type\"\n          render={({ field: { value, onChange } }) => (\n            <DocumentTypeFilterField value={value} onChange={onChange} />\n          )}\n        />\n      </TypeContainer>\n    </Stack>\n  );\n};\nexport default InputFilters;\n","import { DataGrid } from '@/components/DataGrid';\nimport { ListPOV } from '@/screens/Contracts/ContractManager/types';\nimport { type FiltersProps, type Filters } from '../../../types';\nimport { InputFilters } from '../InputFilters';\n\nconst FiltersViewMode = ({\n  filterType,\n  filters,\n  setFilters,\n  isEmpty,\n}: FiltersProps) => (\n  <DataGrid.Filters<Filters> defaultValues={filters} onSubmit={setFilters}>\n    <InputFilters\n      filterType={filterType}\n      isOwner={filters.listPerspective === ListPOV.Owner}\n      isEmpty={isEmpty}\n    />\n  </DataGrid.Filters>\n);\n\nexport default FiltersViewMode;\n","import {\n  type ContractFilter,\n  ContractStatus,\n  type GetAllSowFilter,\n  SowStatus,\n} from '@/apollo/generated/types';\nimport { type Filters, NoumDocumentStatus } from '../types';\n\nfunction mapNoumDocumentStatusToContractStatus(\n  filterValue: NoumDocumentStatus,\n): ContractStatus | null {\n  switch (filterValue) {\n    case NoumDocumentStatus.Drafts:\n      return ContractStatus.Draft;\n    case NoumDocumentStatus.Sent:\n      return ContractStatus.Issued;\n    case NoumDocumentStatus.Signed:\n      return ContractStatus.Signed;\n    default:\n      return null;\n  }\n}\n\nfunction mapNoumDocumentStatusToSowStatus(\n  filterValue: NoumDocumentStatus,\n): SowStatus | null {\n  switch (filterValue) {\n    case NoumDocumentStatus.Drafts:\n      return SowStatus.Draft;\n    case NoumDocumentStatus.Sent:\n      return SowStatus.Issued;\n    case NoumDocumentStatus.Signed:\n      return SowStatus.Signed;\n    default:\n      return null;\n  }\n}\n\nfunction toContractsList(noumId: string, filters: Filters): ContractFilter {\n  const status = mapNoumDocumentStatusToContractStatus(filters.status);\n\n  return {\n    noumIds: [noumId],\n    status: status ? [status] : null,\n  };\n}\n\nfunction toStatementsOfWorkList(\n  noumId: string,\n  filters: Filters,\n): GetAllSowFilter {\n  const status = mapNoumDocumentStatusToSowStatus(filters.status);\n\n  return {\n    noumIds: [noumId],\n    status: status ? [status] : null,\n  };\n}\n\nexport const ContractElementMapper = {\n  mapNoumDocumentStatusToContractStatus,\n  mapNoumDocumentStatusToSowStatus,\n  toContractsList,\n  toStatementsOfWorkList,\n};\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { ContractToolRoutes } from '@/features/contracts/utils/routes';\n\nimport { ContractListingPov } from '@/apollo/generated/types';\nimport { useContractPermissions } from '@/features/contracts/hooks/contractPermissions';\nimport { useStatementOfWorkPermissions } from '@/features/contracts/hooks/statementOfWorkPermissions';\nimport {\n  type ContractBasic,\n  DocumentType,\n  type StatementOfWorkBasic,\n} from '@/features/contracts/types';\nimport { useNavigateWithOrigin } from '@/hooks/navigation';\nimport {\n  type GetContractsQuery,\n  type GetStatementsOfWorkQuery,\n  useGetContractsQuery,\n  useGetStatementsOfWorkQuery,\n} from '@/apollo/graphql';\nimport { cleanList } from '@/utils/list';\nimport {\n  NoumDocumentStatus,\n  type Filters,\n  type ContractManagerProp,\n  type InfiniteState,\n} from './types';\nimport { ContractElementMapper } from './utils/contractElementMapper';\n\nexport const useContractManager = ({\n  isOwner,\n  spaceId,\n  ROWS_PER_PAGE = 5,\n}: ContractManagerProp) => {\n  const navigate = useNavigate();\n  const { navigateAndSetOrigin } = useNavigateWithOrigin();\n  const [isCollapse, setIsCollapse] = useState(true);\n  const [contracts, setContracts] =\n    useState<GetContractsQuery['getContractList']['data']>();\n  const [statementsOfWork, setStatementsOfWork] =\n    useState<GetStatementsOfWorkQuery['getAllSOW']['data']>();\n  const [sowInfiniteState, setSowInfiniteState] =\n    useState<InfiniteState>('hasNextPage');\n  const [contractInfiniteState, setContractInfiniteState] =\n    useState<InfiniteState>('hasNextPage');\n\n  const [filters, setFilters] = useState<Filters>({\n    type: DocumentType.Contract,\n    status: NoumDocumentStatus.All,\n    listPerspective: isOwner\n      ? ContractListingPov.Owner\n      : ContractListingPov.CounterParty,\n  });\n\n  const ContractPermissions = useContractPermissions();\n  const StatementOfWorkPermissions = useStatementOfWorkPermissions();\n\n  const {\n    data: contractsData,\n    loading: contractsLoading,\n    fetchMore: contractsFetchMore,\n  } = useGetContractsQuery({\n    fetchPolicy: 'cache-and-network',\n    variables: {\n      viewingAs: filters.listPerspective,\n      filter: ContractElementMapper.toContractsList(spaceId, filters),\n      limit: ROWS_PER_PAGE,\n      offset: 0,\n    },\n    skip: !spaceId,\n    onCompleted(data) {\n      if (\n        data.getContractList?.data &&\n        data.getContractList.data.length < ROWS_PER_PAGE\n      ) {\n        setContractInfiniteState('end');\n      }\n    },\n  });\n\n  const {\n    data: sowData,\n    loading: sowLoading,\n    fetchMore: sowFetchMore,\n  } = useGetStatementsOfWorkQuery({\n    fetchPolicy: 'cache-and-network',\n    variables: {\n      viewingAs: filters.listPerspective,\n      filter: ContractElementMapper.toStatementsOfWorkList(spaceId, filters),\n      limit: ROWS_PER_PAGE,\n      offset: 0,\n    },\n    skip: !spaceId,\n    onCompleted(data) {\n      if (data.getAllSOW?.data && data.getAllSOW.data.length < ROWS_PER_PAGE) {\n        setSowInfiniteState('end');\n      }\n    },\n  });\n\n  useEffect(() => {\n    setContracts(cleanList(contractsData?.getContractList.data));\n  }, [contractsData?.getContractList.data]);\n\n  useEffect(() => {\n    setStatementsOfWork(cleanList(sowData?.getAllSOW.data));\n  }, [sowData?.getAllSOW.data]);\n\n  const fetchMoreContacts = useCallback(async () => {\n    const result = await contractsFetchMore({\n      variables: {\n        limit: ROWS_PER_PAGE,\n        offset: contracts?.length || 0,\n      },\n    });\n    const data = result.data.getContractList.data || [];\n    if ((data.length || 0) < ROWS_PER_PAGE) setContractInfiniteState('end');\n    const mergeData = [...(contracts || []), ...data];\n    setContracts(cleanList(mergeData));\n  }, [ROWS_PER_PAGE, contracts, contractsFetchMore]);\n\n  const fetchMoreSow = useCallback(async () => {\n    const result = await sowFetchMore({\n      variables: {\n        limit: ROWS_PER_PAGE,\n        offset: statementsOfWork?.length || 0,\n      },\n    });\n    const data = result.data.getAllSOW.data || [];\n    if ((data.length || 0) < ROWS_PER_PAGE) setSowInfiniteState('end');\n    const mergeData = [...(statementsOfWork || []), ...data];\n    setStatementsOfWork(cleanList(mergeData));\n  }, [ROWS_PER_PAGE, sowFetchMore, statementsOfWork]);\n\n  const onFetchMore =\n    filters.type === DocumentType.Contract ? fetchMoreContacts : fetchMoreSow;\n  const infiniteState =\n    filters.type === DocumentType.Contract\n      ? contractInfiniteState\n      : sowInfiniteState;\n\n  const isLoading = sowLoading || contractsLoading;\n\n  const hasNoDocuments =\n    filters.status === NoumDocumentStatus.All &&\n    !isLoading &&\n    contracts?.length === 0 &&\n    statementsOfWork?.length === 0;\n\n  const value = useMemo(\n    () => ({\n      filters,\n      contracts,\n      setFilters,\n      isCollapse,\n      setIsCollapse,\n      hasNoDocuments,\n      statementsOfWork,\n      onFetchMore,\n      infiniteState,\n      isLoading,\n      handleNewContract: () => {\n        navigateAndSetOrigin(\n          ContractToolRoutes.createContract({ noumId: spaceId }),\n        );\n      },\n      handleNewStatementOfWork: () => {\n        navigateAndSetOrigin(\n          ContractToolRoutes.createStatementOfWork({ noumId: spaceId }),\n        );\n      },\n      handleNavigateToContract: (item: ContractBasic) => {\n        if (filters.listPerspective === ContractListingPov.CounterParty) {\n          navigateAndSetOrigin(\n            ContractToolRoutes.viewContract({ id: item._id }),\n          );\n          return;\n        }\n\n        navigateAndSetOrigin(\n          ContractPermissions.canEdit(item)\n            ? ContractToolRoutes.editContract({ id: item._id })\n            : ContractToolRoutes.viewContract({ id: item._id }),\n        );\n      },\n      handleNavigateToStatementOfWork: (item: StatementOfWorkBasic) => {\n        if (filters.listPerspective === ContractListingPov.CounterParty) {\n          navigateAndSetOrigin(\n            ContractToolRoutes.viewStatementOfWork({ id: item._id }),\n          );\n          return;\n        }\n\n        navigateAndSetOrigin(\n          StatementOfWorkPermissions.canEdit(item)\n            ? ContractToolRoutes.editStatementOfWork({ id: item._id })\n            : ContractToolRoutes.viewStatementOfWork({ id: item._id }),\n        );\n      },\n      handleNavigateToContractManager: () => {\n        const status =\n          filters.type === DocumentType.Contract\n            ? ContractElementMapper.mapNoumDocumentStatusToContractStatus(\n                filters.status,\n              )\n            : ContractElementMapper.mapNoumDocumentStatusToSowStatus(\n                filters.status,\n              );\n\n        navigate(\n          ContractToolRoutes.contractManager({\n            noumId: spaceId,\n            type: filters.type,\n            perspective: filters.listPerspective,\n            status: status ?? undefined,\n          }),\n        );\n      },\n    }),\n    [\n      onFetchMore,\n      infiniteState,\n      ContractPermissions,\n      StatementOfWorkPermissions,\n      contracts,\n      isLoading,\n      filters,\n      hasNoDocuments,\n      isCollapse,\n      navigate,\n      navigateAndSetOrigin,\n      spaceId,\n      statementsOfWork,\n    ],\n  );\n  return { ...value };\n};\n","import { Stack } from '@/layout';\nimport styled from 'styled-components';\n\nexport const FilterContainer = styled.div`\n  padding: 0 14px;\n`;\n\nexport const CustomHeadContainer = styled(Stack)<{ isTablet: boolean }>`\n  position: absolute;\n  min-height: 40px;\n  padding: 0 14px;\n  z-index: 9;\n  ${({ isTablet }) =>\n    isTablet\n      ? 'justify-content: end; flex-direction: row-reverse'\n      : 'justify-content: space-between; padding-right: 102px'};\n`;\n","import { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DataGrid } from '@/components/DataGrid';\nimport { type TableColumn } from '@/components/DataGrid/Table/Table';\nimport { TSpan } from '@/components/Typography';\nimport { DocumentStatusTag } from '@/features/contracts/components/DocumentStatusTag/DocumentStatusTag';\nimport { DocumentTypeTag } from '@/features/contracts/components/DocumentTypeTag/DocumentTypeTag';\nimport { type ContractBasic, DocumentType } from '@/features/contracts/types';\nimport { ContactDetailsUtils } from '@/features/noumContacts/utils/contactDetails';\nimport { ApiPayloadParser } from '@/utils/api/payloadParser';\nimport { formatDateString } from '@/utils/getTimeStampForDisplaying';\n\ninterface ContractsTableProps {\n  data: ContractBasic[];\n  rowsPerPage: number;\n  loading: boolean;\n  navigateToContract(item: ContractBasic): void;\n}\n\nexport function ContractsTable({\n  data,\n  rowsPerPage,\n  loading,\n  navigateToContract,\n}: ContractsTableProps) {\n  const { t } = useTranslation();\n\n  const columns = useMemo<TableColumn<ContractBasic>[]>(\n    () => [\n      {\n        id: 'title',\n        title: t('noumena.contracts.title'),\n        renderValue: (item) => (\n          <>\n            <DocumentTypeTag\n              type={DocumentType.Contract}\n              style={{ marginRight: 8 }}\n            />\n            <TSpan font=\"footnote-bold\" color=\"--text-card-neutral-highlighted\">\n              {item.title}\n            </TSpan>\n          </>\n        ),\n        wordWrap: false,\n      },\n      {\n        id: 'status',\n        title: t('noumena.contracts.status'),\n        renderValue: (item) => (\n          <DocumentStatusTag\n            status={item.status}\n            size=\"small\"\n            contentFont=\"footnote-bold\"\n          />\n        ),\n        width: '10%',\n      },\n      {\n        id: 'buyer',\n        title: t('noumena.contracts.buyer'),\n        renderValue: (item) =>\n          item.buyer\n            ? ContactDetailsUtils.formatCompanyAndName(item.buyer)\n            : '',\n        width: '20%',\n        wordWrap: false,\n      },\n      {\n        id: 'serviceProvider',\n        title: t('noumena.contracts.service_provider'),\n        renderValue: (item) =>\n          item.seller\n            ? ContactDetailsUtils.formatCompanyAndName(item.seller)\n            : '',\n        width: '20%',\n        wordWrap: false,\n      },\n      {\n        id: 'effectiveDate',\n        title: t('noumena.contracts.effective_date'),\n        renderValue: (item) =>\n          item.effectiveDate\n            ? formatDateString(\n                ApiPayloadParser.parseDateString(item.effectiveDate),\n              )\n            : '--',\n        width: '15%',\n      },\n    ],\n    [t],\n  );\n\n  return (\n    <DataGrid.Table\n      loading={loading && !data.length}\n      data={data}\n      rowsPerPage={rowsPerPage}\n      noResultsMessageRowSpan={5}\n      columns={columns}\n      keyExtractor={(item) => item._id}\n      onRowClick={navigateToContract}\n    />\n  );\n}\n","import { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DataGrid } from '@/components/DataGrid';\nimport { type TableColumn } from '@/components/DataGrid/Table/Table';\nimport { TSpan } from '@/components/Typography';\nimport { DocumentStatusTag } from '@/features/contracts/components/DocumentStatusTag/DocumentStatusTag';\nimport { DocumentTypeTag } from '@/features/contracts/components/DocumentTypeTag/DocumentTypeTag';\nimport {\n  DocumentType,\n  type StatementOfWorkBasic,\n} from '@/features/contracts/types';\nimport { ContactDetailsUtils } from '@/features/noumContacts/utils/contactDetails';\nimport { ApiPayloadParser } from '@/utils/api/payloadParser';\nimport { formatDateString } from '@/utils/getTimeStampForDisplaying';\n\ninterface StatementsOfWorkTableProps {\n  data: StatementOfWorkBasic[];\n  rowsPerPage: number;\n  loading: boolean;\n  navigateToStatementOfWork(item: StatementOfWorkBasic): void;\n}\n\nexport function StatementsOfWorkTable({\n  data,\n  rowsPerPage,\n  loading,\n  navigateToStatementOfWork,\n}: StatementsOfWorkTableProps) {\n  const { t } = useTranslation();\n\n  const columns = useMemo<TableColumn<StatementOfWorkBasic>[]>(\n    () => [\n      {\n        id: 'title',\n        title: t('noumena.contracts.title'),\n        renderValue: (item) => (\n          <>\n            <DocumentTypeTag\n              type={DocumentType.Sow}\n              style={{ marginRight: 8 }}\n            />\n            <TSpan font=\"footnote-bold\" color=\"--text-card-neutral-highlighted\">\n              {item.title}\n            </TSpan>\n          </>\n        ),\n        wordWrap: false,\n      },\n      {\n        id: 'status',\n        title: t('noumena.contracts.status'),\n        renderValue: (item) => (\n          <DocumentStatusTag\n            status={item.status}\n            size=\"small\"\n            contentFont=\"footnote-bold\"\n          />\n        ),\n        width: '10%',\n      },\n      {\n        id: 'buyer',\n        title: t('noumena.contracts.buyer'),\n        renderValue: (item) =>\n          item.linkedContract?.buyer\n            ? ContactDetailsUtils.formatCompanyAndName(\n                item.linkedContract.buyer,\n              )\n            : '',\n        width: '20%',\n        wordWrap: false,\n      },\n      {\n        id: 'serviceProvider',\n        title: t('noumena.contracts.service_provider'),\n        renderValue: (item) =>\n          item.linkedContract?.seller\n            ? ContactDetailsUtils.formatCompanyAndName(\n                item.linkedContract.seller,\n              )\n            : '',\n        width: '20%',\n        wordWrap: false,\n      },\n      {\n        id: 'effectiveDate',\n        title: t('noumena.contracts.effective_date'),\n        renderValue: (item) =>\n          item.linkedContract?.effectiveDate\n            ? formatDateString(\n                ApiPayloadParser.parseDateString(\n                  item.linkedContract.effectiveDate,\n                ),\n              )\n            : '--',\n        width: '15%',\n      },\n    ],\n    [t],\n  );\n\n  return (\n    <DataGrid.Table\n      data={data}\n      loading={loading && !data.length}\n      rowsPerPage={rowsPerPage}\n      noResultsMessageRowSpan={5}\n      columns={columns}\n      keyExtractor={(item) => item._id}\n      onRowClick={navigateToStatementOfWork}\n    />\n  );\n}\n","import { TSpan } from '@/components';\nimport { ButtonLink } from '@/components/Link';\nimport { Stack } from '@/layout';\nimport styled from 'styled-components';\n\nexport const KeyText = styled(TSpan).attrs({\n  colorToken: '--text-card-neutral-default',\n  font: 'footnote',\n})``;\n\nexport const ValueText = styled(ButtonLink).attrs({\n  colorToken: '--text-card-neutral-highlighted',\n  font: 'footnote',\n})``;\n\nexport const ItemRow = styled(Stack).attrs({\n  justify: 'space-between',\n  fullWidth: true,\n})``;\n","import { DataGrid } from '@/components/DataGrid';\nimport { DocumentStatusTag } from '@/features/contracts/components/DocumentStatusTag/DocumentStatusTag';\nimport { DocumentTypeTag } from '@/features/contracts/components/DocumentTypeTag/DocumentTypeTag';\nimport { type ContractBasic, DocumentType } from '@/features/contracts/types';\nimport { Stack } from '@/layout';\nimport { formatDateString } from '@/utils/getTimeStampForDisplaying';\nimport { ApiPayloadParser } from '@/utils/api/payloadParser';\nimport { ButtonLink } from '@/components/Link';\nimport { useTranslation } from 'react-i18next';\nimport * as S from './styles';\n\ninterface ContractsCollapsibleListProps {\n  data: ContractBasic[];\n  rowsPerPage: number;\n  loading: boolean;\n  navigateToContract(item: ContractBasic): void;\n}\n\nexport function ContractsCollapsibleList({\n  data,\n  loading,\n  rowsPerPage,\n  navigateToContract,\n}: ContractsCollapsibleListProps) {\n  const { t } = useTranslation();\n\n  return (\n    <DataGrid.CollapsibleList\n      data={data}\n      loading={loading}\n      keyExtractor={(item) => item._id}\n      rowsPerPage={rowsPerPage}\n      enableRowSelection={false}\n      renderLeft={(item) => (\n        <>\n          <DocumentTypeTag\n            type={DocumentType.Contract}\n            style={{ marginRight: 8 }}\n          />\n          <ButtonLink\n            font=\"footnote-bold\"\n            colorToken=\"--text-card-neutral-highlighted\"\n            onClick={() => navigateToContract(item)}\n          >\n            {item.title}\n          </ButtonLink>\n          <DocumentStatusTag\n            status={item.status}\n            size=\"small\"\n            contentFont=\"footnote-bold\"\n          />\n        </>\n      )}\n      renderRight={() => <></>}\n      renderContent={(item) => (\n        <Stack gap={8} vertical fullWidth padding=\"16px 0\">\n          <S.ItemRow>\n            <S.KeyText>{t('noumena.contracts.buyer')}</S.KeyText>\n            <S.ValueText onClick={() => navigateToContract(item)}>\n              {item.buyer?.displayName}\n            </S.ValueText>\n          </S.ItemRow>\n          <S.ItemRow>\n            <S.KeyText>{t('noumena.contracts.service_provider')}</S.KeyText>\n            <S.ValueText onClick={() => navigateToContract(item)}>\n              {item.seller?.displayName}\n            </S.ValueText>\n          </S.ItemRow>\n          <S.ItemRow>\n            <S.KeyText>{t('noumena.contracts.effective_date')}</S.KeyText>\n            <S.ValueText onClick={() => navigateToContract(item)}>\n              {item.effectiveDate\n                ? formatDateString(\n                    ApiPayloadParser.parseDateString(item.effectiveDate),\n                  )\n                : '--'}\n            </S.ValueText>\n          </S.ItemRow>\n        </Stack>\n      )}\n    />\n  );\n}\n","import { TSpan } from '@/components';\nimport { ButtonLink } from '@/components/Link';\nimport { Stack } from '@/layout';\nimport styled from 'styled-components';\n\nexport const KeyText = styled(TSpan).attrs({\n  colorToken: '--text-card-neutral-default',\n  font: 'footnote',\n})``;\n\nexport const ValueText = styled(ButtonLink).attrs({\n  colorToken: '--text-card-neutral-highlighted',\n  font: 'footnote',\n})``;\n\nexport const ItemRow = styled(Stack).attrs({\n  justify: 'space-between',\n  fullWidth: true,\n})``;\n","import { DataGrid } from '@/components/DataGrid';\nimport { DocumentStatusTag } from '@/features/contracts/components/DocumentStatusTag/DocumentStatusTag';\nimport { DocumentTypeTag } from '@/features/contracts/components/DocumentTypeTag/DocumentTypeTag';\nimport {\n  DocumentType,\n  type StatementOfWorkBasic,\n} from '@/features/contracts/types';\nimport { Stack } from '@/layout';\nimport { formatDateString } from '@/utils/getTimeStampForDisplaying';\nimport { ApiPayloadParser } from '@/utils/api/payloadParser';\nimport { ButtonLink } from '@/components/Link';\nimport { ContractUtils } from '@/features/contracts/utils/contract';\nimport { useTranslation } from 'react-i18next';\nimport * as S from './styles';\n\ninterface StatementsOfWorkCollapsibleListProps {\n  data: StatementOfWorkBasic[];\n  rowsPerPage: number;\n  loading: boolean;\n  navigateToStatementOfWork(item: StatementOfWorkBasic): void;\n}\n\nexport function StatementsOfWorkCollapsibleList({\n  data,\n  loading,\n  rowsPerPage,\n  navigateToStatementOfWork,\n}: StatementsOfWorkCollapsibleListProps) {\n  const { t } = useTranslation();\n\n  return (\n    <DataGrid.CollapsibleList\n      data={data}\n      loading={loading}\n      keyExtractor={(item) => item._id}\n      rowsPerPage={rowsPerPage}\n      enableRowSelection={false}\n      renderLeft={(item) => (\n        <>\n          <DocumentTypeTag\n            type={DocumentType.Contract}\n            style={{ marginRight: 8 }}\n          />\n          <ButtonLink\n            font=\"footnote-bold\"\n            colorToken=\"--text-card-neutral-highlighted\"\n            onClick={() => navigateToStatementOfWork(item)}\n          >\n            {item.title}\n          </ButtonLink>\n          <DocumentStatusTag\n            status={item.status}\n            size=\"small\"\n            contentFont=\"footnote-bold\"\n          />\n        </>\n      )}\n      renderRight={() => <></>}\n      renderContent={(item) => (\n        <Stack gap={8} vertical fullWidth padding=\"16px 0\">\n          <S.ItemRow>\n            <S.KeyText>{t('noumena.contracts.contract')}</S.KeyText>\n            <S.ValueText onClick={() => navigateToStatementOfWork(item)}>\n              {ContractUtils.formatDocumentNameWithNumber(item.linkedContract)}\n            </S.ValueText>\n          </S.ItemRow>\n          <S.ItemRow>\n            <S.KeyText>{t('noumena.contracts.buyer')}</S.KeyText>\n            <S.ValueText onClick={() => navigateToStatementOfWork(item)}>\n              {item.linkedContract?.buyer?.displayName}\n            </S.ValueText>\n          </S.ItemRow>\n          <S.ItemRow>\n            <S.KeyText>{t('noumena.contracts.service_provider')}</S.KeyText>\n            <S.ValueText onClick={() => navigateToStatementOfWork(item)}>\n              {item.linkedContract?.seller?.displayName}\n            </S.ValueText>\n          </S.ItemRow>\n          <S.ItemRow>\n            <S.KeyText>{t('noumena.contracts.effective_date')}</S.KeyText>\n            <S.ValueText onClick={() => navigateToStatementOfWork(item)}>\n              {item.linkedContract?.effectiveDate\n                ? formatDateString(\n                    ApiPayloadParser.parseDateString(\n                      item.linkedContract?.effectiveDate,\n                    ),\n                  )\n                : '--'}\n            </S.ValueText>\n          </S.ItemRow>\n        </Stack>\n      )}\n    />\n  );\n}\n","import { NoumLayoutViewMode } from '@/features/conversation/types';\nimport { type BodyViewModeProps } from '../../../types';\nimport { ContractsTable } from '../ContractsTable/ContractsTable';\nimport { StatementsOfWorkTable } from '../StatementsOfWorkTable/StatementsOfWorkTable';\nimport { ContractsCollapsibleList } from '../ContractsTable/ContractsCollapsibleList';\nimport { StatementsOfWorkCollapsibleList } from '../StatementsOfWorkTable/StatementsOfWorkCollapsibleList';\n\nfunction BodyViewMode({\n  isLoading,\n  isContract,\n  contracts,\n  statementsOfWork,\n  handleNavigateToContract,\n  handleNavigateToStatementOfWork,\n  rowsPerPage = 5,\n  layoutMode,\n}: BodyViewModeProps) {\n  if (layoutMode === NoumLayoutViewMode.NOUMLAYOUTSMALL) {\n    return isContract && contracts ? (\n      <ContractsCollapsibleList\n        data={contracts}\n        loading={isLoading}\n        rowsPerPage={rowsPerPage}\n        navigateToContract={handleNavigateToContract}\n      />\n    ) : statementsOfWork ? (\n      <StatementsOfWorkCollapsibleList\n        data={statementsOfWork}\n        loading={isLoading}\n        rowsPerPage={rowsPerPage}\n        navigateToStatementOfWork={handleNavigateToStatementOfWork}\n      />\n    ) : (\n      <></>\n    );\n  }\n\n  return isContract && contracts ? (\n    <ContractsTable\n      data={contracts}\n      loading={isLoading}\n      rowsPerPage={rowsPerPage}\n      navigateToContract={handleNavigateToContract}\n    />\n  ) : statementsOfWork ? (\n    <StatementsOfWorkTable\n      data={statementsOfWork}\n      loading={isLoading}\n      rowsPerPage={rowsPerPage}\n      navigateToStatementOfWork={handleNavigateToStatementOfWork}\n    />\n  ) : (\n    <></>\n  );\n}\nexport default BodyViewMode;\n","import { memo, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { DocumentType } from '@/features/contracts/types';\nimport { Button } from '@/components/Button';\nimport { Icon } from '@/components/Icon';\nimport { breakpoints } from '@/constants/devices';\nimport { useWindowDimensions } from '@/hooks';\nimport { Spacer } from '@/layout';\nimport { Infinite } from '@/components/Infinite';\nimport { NoumLayoutViewMode } from '@/features/conversation/types';\nimport FiltersViewMode from './Filters';\nimport { useContractManager } from '../../../useContractManager';\nimport { type ContractViewAllModalProp } from '../../../types';\nimport { CustomHeadContainer, FilterContainer } from './styles';\nimport BodyViewMode from './Body';\n\nexport const ContractViewAllModal = memo(\n  ({\n    isOpen,\n    onClose,\n    isOwner,\n    spaceId,\n    filterType,\n    ROWS_PER_PAGE = 10,\n    handleNewContract,\n  }: ContractViewAllModalProp) => {\n    const { t } = useTranslation();\n    const { width } = useWindowDimensions();\n    const isTablet = width < breakpoints.LAPTOP;\n    const {\n      filters,\n      setFilters,\n      handleNavigateToStatementOfWork,\n      handleNavigateToContractManager,\n      handleNavigateToContract,\n      statementsOfWork,\n      contracts,\n      isLoading,\n      infiniteState,\n      onFetchMore,\n    } = useContractManager({ isOwner, spaceId, ROWS_PER_PAGE, filterType });\n\n    useEffect(() => {\n      if (isOpen && filterType)\n        setFilters((current) => ({ ...current, type: filterType }));\n    }, [filterType, isOpen, setFilters]);\n\n    return (\n      <Modal\n        open={isOpen}\n        onClose={onClose}\n        enableCloseButton\n        size={ModalSize.XL}\n        testId=\"testTellUsYourStoryModal\"\n        isFullScreen={isTablet}\n        disableBackdropClick\n        style={{ maxHeight: 700 }}\n        customCloseButton={\n          <>\n            <CustomHeadContainer\n              isTablet={isTablet}\n              gap={16}\n              align=\"center\"\n              fullWidth\n            >\n              <Button\n                secondary\n                textOnly\n                size=\"small\"\n                leftIcon={<Icon name=\"add_m\" size={24} />}\n                onClick={handleNewContract}\n              >\n                {t('noumena.noum_contract_manager.new_contract')}\n              </Button>\n              <Button\n                secondary\n                textOnly\n                size=\"small\"\n                onClick={handleNavigateToContractManager}\n              >\n                {t('noumena.noum_contract_manager.manage')}\n              </Button>\n            </CustomHeadContainer>\n            <ModalCloseButton isFullScreen={isTablet} onClose={onClose} />\n          </>\n        }\n      >\n        <ModalHeader isFullScreen={isTablet} justifyContent=\"flex-start\">\n          {t('noumena.chambers.toolbox.element.contracts')}\n        </ModalHeader>\n        <FilterContainer>\n          <FiltersViewMode\n            filterType={filterType}\n            filters={filters}\n            setFilters={setFilters}\n          />\n        </FilterContainer>\n        <Spacer height={16} />\n        <ModalBody isFullScreen={isTablet} mobileFlex>\n          <Infinite\n            onFetchMore={onFetchMore}\n            status={infiniteState}\n            scrollbarWidth={0}\n            width=\"100%\"\n          >\n            <BodyViewMode\n              layoutMode={NoumLayoutViewMode.NOUMLAYOUTBIG}\n              isLoading={isLoading}\n              handleNavigateToStatementOfWork={handleNavigateToStatementOfWork}\n              handleNavigateToContract={handleNavigateToContract}\n              isContract={filters.type === DocumentType.Contract}\n              contracts={contracts}\n              rowsPerPage={ROWS_PER_PAGE}\n              statementsOfWork={statementsOfWork}\n            />\n          </Infinite>\n        </ModalBody>\n      </Modal>\n    );\n  },\n);\n","import { useState } from 'react';\nimport { t } from 'i18next';\nimport { Button } from '@/components/Button';\nimport { DataGrid } from '@/components/DataGrid';\nimport { Stack } from '@/layout';\nimport { DocumentType } from '@/features/contracts/types';\nimport { useLaunchDarkly } from '@/hooks';\nimport { useElementLayoutMode } from '@/features/noums/hooks/noums';\nimport { NoumLayoutViewMode } from '@/features/conversation/types';\nimport { type ContractManagerViewProp } from '../../../types';\nimport ContractManagerHeader from '../ContractManagerHeader';\nimport { EmptyElement } from '../EmptyElement/EmptyElement';\nimport { ViewModeWrapper } from '../ViewModeWrapper/ViewModeWrapper';\nimport { ContractViewAllModal } from './Modal';\nimport FiltersViewMode from './Filters';\nimport BodyViewMode from './Body';\nimport { useContractManager } from '../../../useContractManager';\n\nfunction ContractManagerViewMode({\n  isOwner,\n  spaceId,\n  element,\n  currentTitle,\n  isEditing,\n}: ContractManagerViewProp) {\n  const isOwnerRights = !!(isOwner || isEditing);\n  const layoutMode = useElementLayoutMode() ?? NoumLayoutViewMode.NOUMLAYOUTBIG;\n\n  const {\n    filters,\n    setFilters,\n    handleNavigateToContractManager,\n    handleNavigateToStatementOfWork,\n    handleNavigateToContract,\n    handleNewStatementOfWork,\n    handleNewContract,\n    hasNoDocuments,\n    statementsOfWork,\n    contracts,\n    isLoading,\n    setIsCollapse,\n  } = useContractManager({ isOwner: isOwnerRights, spaceId });\n\n  const {\n    flags: { noumEditor2 },\n  } = useLaunchDarkly();\n\n  const headerProps = {\n    element,\n    currentTitle,\n    isOwner,\n    handleNewContract,\n    handleNewStatementOfWork,\n    setIsCollapse,\n    spaceId,\n    isEditing: isEditing && noumEditor2,\n  };\n\n  const [isViewAll, setViewAll] = useState(false);\n\n  const handleViewAll = () => {\n    if (noumEditor2) {\n      setViewAll((pre) => !pre);\n    } else {\n      handleNavigateToContractManager();\n    }\n  };\n\n  if (hasNoDocuments) {\n    return (\n      <ViewModeWrapper>\n        <ContractManagerHeader {...headerProps} />\n        {isOwnerRights && (\n          <DataGrid.Provider data={[]}>\n            <FiltersViewMode\n              isEmpty\n              filters={filters}\n              setFilters={setFilters}\n            />\n          </DataGrid.Provider>\n        )}\n        <EmptyElement\n          isOwner={isOwner}\n          handleNewContract={handleNewContract}\n          handleNewStatementOfWork={handleNewStatementOfWork}\n        />\n      </ViewModeWrapper>\n    );\n  }\n\n  return (\n    <ViewModeWrapper isEditing={isEditing}>\n      <ContractManagerHeader {...headerProps} />\n      <DataGrid.Provider data={[]}>\n        <Stack gap={16} align=\"center\" vertical fullWidth>\n          <FiltersViewMode filters={filters} setFilters={setFilters} />\n          <BodyViewMode\n            layoutMode={layoutMode}\n            isLoading={isLoading}\n            handleNavigateToStatementOfWork={handleNavigateToStatementOfWork}\n            handleNavigateToContract={handleNavigateToContract}\n            isContract={filters.type === DocumentType.Contract}\n            contracts={contracts}\n            statementsOfWork={statementsOfWork}\n          />\n          <Button\n            size=\"full_small\"\n            disabled={isEditing}\n            textOnly\n            primary\n            onClick={handleViewAll}\n          >\n            {t('noumena.contracts.see_all')}\n          </Button>\n        </Stack>\n        <ContractViewAllModal\n          isOpen={isViewAll}\n          onClose={handleViewAll}\n          isOwner={isOwner}\n          spaceId={spaceId}\n          filterType={filters.type}\n          handleNewContract={handleNewContract}\n          handleNavigateToContractManager={handleNavigateToContractManager}\n        />\n      </DataGrid.Provider>\n    </ViewModeWrapper>\n  );\n}\nexport default ContractManagerViewMode;\n","import { useTranslation } from 'react-i18next';\nimport { Icon } from '@/components/Icon';\nimport { useSkeletonIsLoadingContext } from '@/components/SkeletonLoader/SkeletonLoaderProvider';\nimport { TSpan } from '@/components/Typography';\nimport { Stack } from '@/layout';\nimport { ElementWrapper } from '@/screens/Chamber/components/ElementWrapper';\nimport { useLaunchDarkly } from '@/hooks';\nimport SkeletonLoaderContractManagerElement from '../SkeletonLoader/SkeletonLoaderContractManagerElement';\nimport ContractManagerViewMode from './components/Shared/ContractManagerViewMode';\nimport { type ContractManagerElementProps } from './types';\n\nconst ContractManagerElement = (props: ContractManagerElementProps) => {\n  const { isEditing } = props;\n\n  const { t } = useTranslation();\n  const { isLoading } = useSkeletonIsLoadingContext();\n  const {\n    flags: { noumEditor2 },\n  } = useLaunchDarkly();\n\n  if (isLoading) return <SkeletonLoaderContractManagerElement />;\n\n  if (isEditing && !noumEditor2)\n    return (\n      <ElementWrapper {...props}>\n        {!props.isCustomPreview ? (\n          <Stack justify=\"center\" vertical align=\"center\" gap={16}>\n            <Icon\n              name=\"contract_m\"\n              size={64}\n              color=\"--icon-card-placeholder-neutral-default\"\n            />\n            <TSpan font=\"body-m\" colorToken=\"--text-card-neutral-default\">\n              {t('noumena.contract_manager.edit_mode_message')}\n            </TSpan>\n          </Stack>\n        ) : (\n          <></>\n        )}\n      </ElementWrapper>\n    );\n\n  return (\n    <ContractManagerViewMode\n      isOwner={props.isOwner}\n      spaceId={props.spaceId}\n      currentTitle={props.currentTitle}\n      element={props.element}\n      isEditing={isEditing!}\n    />\n  );\n};\nexport default ContractManagerElement;\n","import {\n  type FC,\n  memo,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { t } from 'i18next';\nimport ImageElement from '@/screens/Chamber/components/elements/ImageElement';\nimport VideoElement from '@/screens/Chamber/components/elements/VideoElement';\nimport {\n  type ElementInput,\n  ElementStatusEnum,\n  ElementTypeEnum,\n  SpaceTypeEnum,\n} from '@/apollo/generated/types';\nimport { ElementUtils } from '@/utils/element';\nimport { HomeChambers } from '@/features/homeNoums/components/HomeChambers';\nimport { CalendarElement } from '@/screens/Chamber/components/elements/CalendarEvent/CalendarElement/CalendarElement';\nimport { useEditChamberState } from '@/screens/Chamber/EditChamber/provider';\nimport BusinessBrief from '@/screens/Chamber/components/elements/BusinessBrief/BusinessBrief';\nimport { useNoumContext } from '@/screens/Chamber/ViewChamber/ChamberProvider';\nimport TextElement from '@/screens/Chamber/components/elements/TextElement';\nimport MessageElementV2 from '@/screens/Chamber/components/elements/MessageElementV2';\nimport WalletElement from '@/screens/Chamber/components/elements/WalletElement';\nimport QuickQuestionsElement from '@/screens/Chamber/components/elements/QuickQuestionsElement';\nimport PostElement from '@/screens/Chamber/components/elements/PostElement';\nimport { useLaunchDarkly } from '@/hooks/launchDarkly';\nimport { DisablePublishOrDraftContext } from '@/providers';\nimport SkeletonLoaderProvider, {\n  useSkeletonIsLoadingContext,\n} from '@/components/SkeletonLoader/SkeletonLoaderProvider';\nimport { useAuth } from '@/features/auth/contexts';\nimport { NoumElementProvider } from '@/features/noums/contexts/NoumElementContext';\nimport { useUpdateElementHelper } from '@/features/noums/hooks/spaceQuery';\nimport NetworkElement from '../elements/NetworkElement';\nimport SkillElement from '../elements/SkillElement';\nimport {\n  type ElementProps,\n  type HomeChambersElementsProps,\n  type HomeChambersEnum,\n  type TitleProps,\n  type TypeEnum,\n  type ChangeMeta,\n} from './types';\nimport FileManagerElement from '../elements/FileManagerElement';\nimport ContractManagerElement from '../elements/ContractManagerElement';\n\nconst homeChambersElements: HomeChambersElementsProps = {\n  [ElementTypeEnum.PublicationDesignPatterns]: {\n    image: 'bulb_m',\n    text: 'No Publications, Designs or Patents Added Yet',\n    buttonText: 'Add New',\n  },\n  [ElementTypeEnum.EducationTraining]: {\n    image: 'education_m',\n    text: 'No Education Added Yet',\n    buttonText: 'Add Education',\n  },\n  [ElementTypeEnum.AchievementAward]: {\n    image: 'avard_m',\n    text: 'No Achievements Added Yet',\n    buttonText: 'Add Achievement',\n  },\n  [ElementTypeEnum.PersonalInterest]: {\n    image: 'interest_m',\n    text: 'No Personal Interests Added Yet',\n    buttonText: 'Add New',\n  },\n  [ElementTypeEnum.SocialInterest]: {\n    image: 'heart_m',\n    text: 'No Social Interests Added Yet',\n    buttonText: 'Add New',\n  },\n  [ElementTypeEnum.ProjectWorkExperience]: {\n    image: 'briefcase_m',\n    text: 'No Experience Added Yet',\n    buttonText: 'Add Experience',\n  },\n};\n\nconst sectionTitle: TitleProps = {\n  [ElementTypeEnum.Image]: t('noumena.chambers.toolbox.element.image'),\n  [ElementTypeEnum.Text]: t('noumena.chambers.toolbox.element.text'),\n  [ElementTypeEnum.Video]: t('noumena.chambers.toolbox.element.video'),\n  [ElementTypeEnum.QuickQuestions]: t(\n    'noumena.chambers.toolbox.element.quick_questions',\n  ),\n};\n\nexport const Element: FC<ElementProps> = memo((props) => {\n  const { flags } = useLaunchDarkly();\n  const { user } = useAuth();\n  const {\n    id: spaceId,\n    space,\n    updateToolMutation,\n    noumSidePanelId,\n  } = useEditChamberState();\n  const {\n    isMasterNoum,\n    isConnected,\n    space: viewModeSpaceInfo,\n  } = useNoumContext();\n\n  const { setDisableUpdate } = useContext(DisablePublishOrDraftContext);\n  const { updateElementHelper, loading: updateElementLoader } =\n    useUpdateElementHelper();\n  useEffect(() => {\n    setDisableUpdate(updateElementLoader);\n  }, [setDisableUpdate, updateElementLoader]);\n\n  const { element, isEditing, hideContent, isHighlight, columnWidth } = props;\n  const isOwner = isEditing\n    ? space?.uid?._id === user?._id\n    : viewModeSpaceInfo?.uid?._id === user?._id;\n  const [bodyContent, setBodyContent] = useState<string | undefined>(\n    ElementUtils.getBodyContent(\n      element,\n      !isEditing && element.status === 'PUBLISHED',\n      undefined,\n      !flags.noumEditor2 &&\n        isEditing &&\n        (element.elementType === ElementTypeEnum.Video ||\n          element.elementType === ElementTypeEnum.Image),\n    ) || undefined,\n  );\n\n  const headerContent = useMemo(() => {\n    const type = element?.elementType || '';\n    switch (type) {\n      case ElementTypeEnum.Message:\n        return t('noumena.chambers.toolbox.element.message');\n      case ElementTypeEnum.Text:\n        return (\n          ElementUtils.getHeaderContent(element, !isEditing) ||\n          t('noumena.chambers.toolbox.element.text')\n        );\n      case ElementTypeEnum.Wallet:\n        return t(`noumena.chambers.toolbox.element.wallet`, {\n          name: isEditing\n            ? `${space?.name || ''} ${'Wallet'} `\n            : `${viewModeSpaceInfo?.name} ${'Wallet'}`,\n        });\n      case ElementTypeEnum.Userposts:\n        return t('noumena.chambers.toolbox.element.posts');\n      case ElementTypeEnum.Calendar:\n        return t('noumena.chambers.toolbox.element.calendar');\n      case ElementTypeEnum.Usernetwork:\n        return t('noumena.chambers.toolbox.element.usernetwork');\n      case ElementTypeEnum.Skills:\n        return t('noumena.homenoum.skills.title');\n      case ElementTypeEnum.FilesManager:\n        return t('noumena.chambers.toolbox.element.file');\n      case ElementTypeEnum.ContractManager:\n        return t('noumena.chambers.toolbox.element.contracts');\n      default:\n        return (\n          ElementUtils.getHeaderContent(element, !isEditing) ||\n          (sectionTitle[type as TypeEnum] ?? element.elementType ?? 'UNKNOWN')\n        );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [element, isEditing]);\n\n  const getElementBodyContentJson = useCallback(\n    (meta?: ChangeMeta) => {\n      const json = {\n        ...ElementUtils.getBodyContentJson(element),\n        fileSize: meta?.fileSize,\n        fileName: meta?.fileName,\n        ...(meta?.type === 'video' && {\n          thumbnail: meta.thumbnail,\n          videoURL: meta.videoURL,\n        }),\n      };\n\n      if (Object.keys(json).length === 0) {\n        return null;\n      }\n\n      return json;\n    },\n    [element],\n  );\n  const handleContentChange = useCallback(\n    (value?: string, meta?: ChangeMeta) => {\n      setBodyContent(value);\n      const input: ElementInput = {\n        elementId: element._id,\n        bodyContent: value,\n        bodyContentJson: getElementBodyContentJson(meta),\n        headerContent: ElementUtils.getHeaderContent(element),\n        position: ElementUtils.getPosition(element),\n        status: ElementStatusEnum.Unsaved,\n      };\n      if (spaceId) {\n        if (flags.noumEditor2 && ElementUtils.isMediaElement(element)) {\n          updateToolMutation?.(input);\n        } else updateElementHelper(spaceId, input);\n      }\n    },\n    [\n      element,\n      flags.noumEditor2,\n      getElementBodyContentJson,\n      spaceId,\n      updateElementHelper,\n      updateToolMutation,\n    ],\n  );\n\n  const handleNetworkChange = useCallback(\n    (networkDetails: object) => {\n      const input: ElementInput = {\n        elementId: element._id,\n        bodyContent: JSON.stringify(networkDetails),\n        headerContent: ElementUtils.getHeaderContent(element),\n        position: ElementUtils.getPosition(element),\n        status: ElementStatusEnum.Unsaved,\n      };\n      if (spaceId) {\n        updateElementHelper(spaceId, input);\n      }\n    },\n    [element, spaceId, updateElementHelper],\n  );\n\n  const content = useMemo(() => {\n    switch (element.elementType) {\n      case ElementTypeEnum.Text:\n        if (!isEditing && (!bodyContent || bodyContent === '<p><br></p>'))\n          return null;\n        return (\n          <TextElement\n            {...props}\n            currentTitle={headerContent}\n            hideContent={hideContent}\n            isBorder={false}\n            isEditing={isEditing}\n            textEditor={{\n              initialValue: bodyContent,\n              onContentChange: (next) => {\n                if (next.isChanged) {\n                  handleContentChange(next.value, { type: 'text' });\n                }\n              },\n              editEnabled: isEditing,\n              showToolbar:\n                !flags.noumEditor2 ||\n                (flags.noumEditor2 && noumSidePanelId === element._id),\n            }}\n          />\n        );\n      case ElementTypeEnum.Userposts:\n        return (\n          <PostElement\n            {...props}\n            currentTitle={headerContent}\n            hideContent={hideContent}\n            isBorder={false}\n            isEditing={isEditing}\n          />\n        );\n      case ElementTypeEnum.Message:\n        return isMasterNoum || isOwner || isConnected || isEditing ? (\n          <MessageElementV2 {...props} currentTitle={headerContent} />\n        ) : null;\n      case ElementTypeEnum.Wallet:\n        return (\n          <WalletElement\n            id={element._id || ''}\n            {...props}\n            currentTitle={headerContent}\n            isOwner={isOwner}\n          />\n        );\n      case ElementTypeEnum.QuickQuestions:\n        return (\n          <QuickQuestionsElement\n            isOwner={isOwner}\n            {...props}\n            currentTitle={headerContent}\n          />\n        );\n      case ElementTypeEnum.Calendar:\n        return flags.noumsSocialHall ? (\n          <CalendarElement\n            {...props}\n            isOwner={isOwner}\n            currentTitle={headerContent}\n          />\n        ) : null;\n      case ElementTypeEnum.BusinessBrief:\n        return (\n          <BusinessBrief\n            wrapperProps={{ ...props }}\n            currentTitle={headerContent}\n            isBorder={false}\n            spaceId={spaceId}\n            elementId={element._id}\n            elementPosition={ElementUtils.getPosition(element)}\n            isEditing={isEditing}\n            textEditor={{\n              initialValue: bodyContent,\n              onContentChange: (next) => {\n                if (next.isChanged) {\n                  handleContentChange(next.value, { type: 'text' });\n                }\n              },\n              editEnabled: isEditing,\n            }}\n            basicToolbar={\n              space?.type !== SpaceTypeEnum.Home &&\n              space?.type !== SpaceTypeEnum.Project\n            }\n          />\n        );\n      case ElementTypeEnum.Image:\n        return (\n          <ImageElement\n            {...props}\n            isActiveTool={\n              props.isNoumEditor2 && noumSidePanelId === element._id\n            }\n            currentTitle={headerContent}\n            hideContent={hideContent}\n            url={bodyContent}\n            onContentChange={handleContentChange}\n          />\n        );\n      case ElementTypeEnum.Video:\n        return (\n          <VideoElement\n            {...props}\n            currentTitle={headerContent}\n            hideContent={hideContent}\n            url={bodyContent}\n            onContentChange={handleContentChange}\n          />\n        );\n      case ElementTypeEnum.Usernetwork:\n        return (\n          <NetworkElement\n            {...props}\n            currentTitle={headerContent}\n            hideContent={hideContent}\n            body={bodyContent}\n            onContentChange={handleNetworkChange}\n            element={element}\n          />\n        );\n      case ElementTypeEnum.Skills:\n        return (\n          <SkillElement\n            {...props}\n            currentTitle={headerContent}\n            isOwner\n            isBorder={false}\n          />\n        );\n      case ElementTypeEnum.FilesManager:\n        return flags.filesManager ? (\n          <FileManagerElement\n            {...props}\n            currentTitle={headerContent}\n            isOwner={isOwner}\n            isBorder={false}\n            connectionRole={viewModeSpaceInfo?.connectionRole}\n          />\n        ) : null;\n      case ElementTypeEnum.ContractManager:\n        return flags.contractTool ? (\n          <ContractManagerElement\n            {...props}\n            currentTitle={headerContent}\n            isOwner={isOwner}\n            isBorder={false}\n            connectionRole={viewModeSpaceInfo?.connectionRole}\n          />\n        ) : null;\n      default:\n        return (\n          <TextElement\n            {...props}\n            currentTitle={headerContent}\n            textEditor={{\n              initialValue: bodyContent,\n              onContentChange: (next) => {\n                if (next.isChanged) {\n                  handleContentChange(next.value, { type: 'text' });\n                }\n              },\n              editEnabled: isEditing,\n            }}\n          />\n        );\n    }\n  }, [\n    bodyContent,\n    element,\n    flags.contractTool,\n    flags.filesManager,\n    flags.noumEditor2,\n    flags.noumsSocialHall,\n    handleContentChange,\n    handleNetworkChange,\n    headerContent,\n    hideContent,\n    isConnected,\n    isEditing,\n    isMasterNoum,\n    isOwner,\n    noumSidePanelId,\n    props,\n    space?.type,\n    spaceId,\n    viewModeSpaceInfo?.connectionRole,\n  ]);\n\n  const homeChambersObject =\n    element.elementType &&\n    homeChambersElements[element.elementType as HomeChambersEnum];\n  const { isLoading } = useSkeletonIsLoadingContext();\n\n  if (!homeChambersObject || isLoading)\n    return (\n      <SkeletonLoaderProvider isLoading={isLoading}>\n        <NoumElementProvider\n          columnWidth={columnWidth}\n          isEditing={isEditing ?? false}\n          isNoumEditor2={flags.noumEditor2}\n        >\n          {content}\n        </NoumElementProvider>\n      </SkeletonLoaderProvider>\n    );\n\n  return (\n    <HomeChambers\n      isHighlight={isHighlight}\n      image={homeChambersObject.image}\n      text={homeChambersObject.text}\n      buttonText={homeChambersObject.buttonText}\n      elementType={element.elementType as HomeChambersEnum}\n      isEditing={isEditing}\n      wrapperProps={{ ...props }}\n      currentTitle={headerContent}\n      isBorder={false}\n      spaceId={spaceId}\n      elementId={element._id}\n      position={ElementUtils.getPosition(element)}\n      hideContent={hideContent}\n      bodyContentJson={\n        isEditing\n          ? ElementUtils.getBodyContentJson(element)\n          : ElementUtils.getBodyContentJson(element, true)\n      }\n      columnWidth={columnWidth}\n    />\n  );\n});\n\nexport default Element;\n"],"names":["useUserLiveEventDetails","chamberId","isAnotherEventLive","setIsAnotherEventLive","useState","eventScheduledIn60Mins","setEventScheduledIn60Mins","setLiveEventDetails","useCallback","allEvents","EventUtils","getParticipatedLiveEvents","getEventInNext60Minutes","eventsParticipated","useEventsParticipatedLazyQuery","refetchWritePolicy","fetchPolicy","variables","onCompleted","attending","hosted","data","useGetEventsQuery","skip","limit","offset","sortOrder","SortOrder","Asc","getEvents","length","useAddSectionsHelper","addToast","useToast","addSections","loading","useCreateNoumLayoutSectionMutation","addSectionsHelper","input","spaceId","isSuccess","update","cache","createNoumLayoutSection","id","editorV2Enabled","status","NoumLayoutStatusFilter","Unpublished","cacheResult","readQuery","query","GetSpaceByIdDocument","getSpaceById","spaceData","cloneSpaceData","cloneDeep","layout","NoumLayoutStatus","Unsaved","sections","reduce","acc","obj","position","cloneObj","push","splice","writeQuery","error","message","Error","Sentry","tags","section","NoumElementProvider","children","columnWidth","isNoumEditor2","isEditing","value","useMemo","jsx","NoumElementContext","EventFilterDropDown","activeFilter","onChange","Stack","Dropdown","eventFiltersDropDown","targetProps","targetRef","toggle","EventFilterDropdownButton","TSpan","filter","item","key","label","Icon","useReference","experienceId","setExperienceId","referenceId","setReferenceId","referenceCapacity","referenceCapacityLoading","useGetNoumReferenceCapacityQuery","askForNoumReferenceMutation","submitLoading","useAskForNoumReferenceMutation","addManualReferenceForNoumMutation","addManualLoading","useAddManualReferenceForNoumMutation","updateNoumReferenceStatusMutation","updateStatusLoading","useUpdateNoumReferenceStatusMutation","discardNoumReferenceMutation","discardLoading","useDiscardNoumReferenceMutation","updateNoumReferenceMutation","updateLoading","useUpdateNoumReferenceMutation","fetchMoreReferences","infiniteState","refetchReferences","references","referenceData","fetching","useGetNoumReferences","NoumReferenceStatus","Accepted","Pending","capacityOptions","getNoumReferenceCapacity","map","type","capitalize","replaceAll","handleAddReferenceManually","payload","response","reference","addManualReferenceForNoum","t","handleAskForNoumReference","askForNoumReference","onSubmitManualReference","onSubmitAskForReference","updateNoumReferenceStatus","then","approveReference","rejectReference","Rejected","discardReference","discardNoumReference","updateReference","updateNoumReference","DiscardExperienceModal","isOpen","onClose","handleCloseExperienceModal","handleDeleteOption","useTranslation","handleUpdateOptions","jsxs","Modal","ModalSize","S","ModalHeader","S.ModalDescription","textAlign","ModalFooter","Button","AddManualReference","referenceLoading","width","useWindowDimensions","isDesktop","breakpoints","TABLET_L","isMobile","MOBILE_MAX","setMediaUploading","media","setMedia","mediaDetail","setMediaDetail","name","size","reset","control","setValue","handleSubmit","handleFormSubmit","formState","isValid","useForm","defaultValues","providerName","referenceText","resolver","yupResolver","addManualReferenceSchema","mode","reValidateMode","handleClose","useEffect","handleSetMediaDetails","e","getFileType","Number","Math","round","toPrecision","handleSetMediaUploading","uploading","undefined","enforceLeft","transparentModalCloseButton","defaultBtnForMobile","ModalBody","Spacer","Controller","field","onBlur","fieldState","TextField","padding","inputProps","inputRef","getCapacityLabelFromValue","TextArea","ReferenceMedia","UploadMedia","mediaTypes","AskForReference","providerEmail","askForReferenceSchema","HomeChambers","image","text","buttonText","elementType","isBorder","wrapperProps","bodyContentJson","elementId","hideContent","isHighlight","showExperienceModal","handleOpenExperienceModal","isAddedOption","arrayOfOption","handleAddOption","handleMoveTopOption","handleMoveDownOption","title","defaultData","setDefaultData","showReferenceModal","handleCloseAddReferenceModal","handleOpenAddReferenceModal","updateElementLoader","useHomeChambers","elementPosition","referenceFetching","flags","noumEditor2","useLaunchDarkly","showDiscardExperienceModal","setShowDiscardExperienceModal","selectedOption","setSelectedOption","showAll","setShowAll","handleSelectOption","option","toggleShowDiscardExperienceModal","Fragment","ElementWrapper","HomeChamberOptions","HomeNoumAddContianer","StackWrapper","stopPropagation","IconWrapper","HomeChambersWrapper","ImageWrapper","StyledText","ButtonWrapper","DiscardExperience","AddExperience","ViewExperience","body","ButtonLink","font","colorToken","buttonProps","S.ButtonLink","useSubWalletAccounts","walletStatus","isUnregistered","useAuth","refetch","useGetSubWalletBalanceQuery","ElementStatusEnum","Published","subWalletData","subWalletBalance","getSubWalletBalance","amount","NoumEditorUserActions","connectionStatus","projectType","mainSpaceId","noumType","isOwner","setConnectionStatus","space","onHandleConnection","loadingConnectionStatus","userActionMode","loadingSpace","onRefetchSpaceById","isConnected","useNoumContext","isUnregisteredUserConnected","setIsUnregisterUserConneccted","requestConnectionHelper","connectionLoading","useRequestConnectionHelper","windowSize","MOBILE_L","onForegroundMessage","usePushNotification","inLoadingState","spaceCanBeConnected","enableAds","allowUserToAutoConnect","pnId","ConnectionRequestTypeEnum","Approved","Declined","category","RiseNoumUserApplyButton","SpaceTypeEnum","Home","ProjectChamberType","Secret","NoumUserFollow","uid","_id","NoumSendMessage","UserActionMode","handleConnection","NoumUserConnection","handleRequest","NoumRequestConnection","RiseApplication","RiseApplicationActions","NoumEditorOwnerActions","onEdit","navigate","useNavigate","handleUnlinkNoumRef","useRef","isActive","isUserActive","isArchived","editDisabled","modalType","openModal","closeModal","useModalManager","paymentSubscriptions","invoiceTool","contractTool","elementPermission","noumLinkData","getLinkData","loadingLinked","useGetNoumByLinkContext","getNoumLink","getNoumLinkByNoumId","isNoumLinked","link","changeProjectChamberStatusHelper","useChangeProjectChamberStatusHelper","checkChamberCanBeUnArchived","useCheckChamberCanBeUnArchived","handleUnarchive","SpaceStatusEnum","handleSelectDropdown","selectedDropdown","linkedNoumsCount","current","toggleUnlinkMultipleNoum","toggleUnlinkConfirmationOpen","pathname","search","ContractToolRoutes","createContract","noumId","createStatementOfWork","handleGoToLinkNoum","ROUTES","LINK_NOUM","ellipsisMenuOptions","compact","icon","linkNo","intent","PlusMenuOptions","RowContainer","NoumActionButton","SetupNoumModal","ChamberUnarchiveModal","EllipsisWrapper","EllipsisMenu","v","LinkNoum","HandleUnlinkNoum","ManageMembersModal","NoumEditorViewModeActions","isMasterNoum","useBreakpoints","isRestrictionModalOpen","setRestrictionModalOpen","LAPTOP","uri","EDIT_HOME_NOUM","ActionsWrapper","Skeleton","NoumEditRestrictionModal","bordered","css","StyledFlexRow","styled","div","gap","justify","align","fullWidth","StyledFlexRowBordered","StyledFlexColumn","ProfileSummaryDescription","span","ProfileSummaryContainer","sizes","TABLET","ProfileSummaryLocation","bodyTypography","bodyMediumBold","ProfileSummaryHead","bodyMedium","StyledCard","Card","ProfileSummaryDataContainer","FavouriteIcon","TagSection","ProfileSummaryNameAndFavouritesContainer","ProfileSummaryName","headingTypography","headingMediumBold","disabled","CompletenessWrapper","NoumHeaderAdditionalDetails","mediaSizesForNoumLayout","LAPTOP_S_MIN","isEdit","img","ProfileSummaryEdit","CQTokenContainer","props","GrayBox","isVisitor","order","TokenBoxTitle","CQBoxTitle","GrayBoxValue","CQFooterBox","HelperTextWrapper","WarningTextWrapper","PrivacyDropdownSelectedValue","RightIcon","CQBoxVisitor","NoumStatusIcon","NoumEditorHead","isCoverPhoto","NoumEditorEdit","ProfilePictureHeader","NoumsMemberButton","enableClick","FavWrapper","NoumEditorStyledCard","TagWrapper","TagInComplete","badgeCountTypography","badgeCount","InCompleteIconContainer","TooltipWrapper","isLeft","systemInfoSmallTypography","systemInfoSmall","InfoStackWrapper","isSummaryDescription","OwnedWrapper","NoumAuthorizationContext","createContext","role","permissions","useNoumAuthorizationContext","context","useContext","defaultNoumRoleNames","PermissibleElementType","Calendar","FileManager","Image","InvoiceTool","Messages","Payment","Posts","QuickQuestions","Text","Video","ContractTool","SizedSkeleton","w","h","r","maxWidth","height","borderRadius","lineHeight","StyledSkeleton","SkeletonLoaderAvatar","SkeletonLoaderPost","SkeletonLoaderPostII","SkeletonLoaderImageInline","SkeletonLoaderParagraph","RiseApplicationStepTranslationKey","IDENTITY","NATIVE","FINANCIAL","BUSINESS","PRINCIPLES_YOU","ESSAYS","RiseApplicationProvider","canSubmit","setCanSubmit","checked","setChecked","principlesYou","essays","applicationId","resultJson","questions","parentNoumId","useRiseQuestions","useGetNoumClassByNoumIdQuery","businessFinancialProjectionStatus","BusinessPlanStatus","identityStatus","nativeStatus","financialCreditStatus","financialCashflowStatus","principleYouStatus","identityCompletion","nativeCompletion","financialCompletion","businessCompletion","principlesYouCompletion","enableApplicationSubmission","noOfEssays","isClassDeleted","getNoumClassByNoumId","isDeleted","essayQuestionAnswered","some","essayKey","answer","String","replace","isStepCompleted","step","refresh","RiseApplicationContext","MAX_BIO_LENGTH","ageGroups","freelancingExperience","formValues","user","firstName","lastName","username","bio","ageGroup","min","max","profile","profilePicture","location","userProfileInputSchema","yup","string","required","test","TWO_LETTERED_NAME_REGEX","matches","NAME_REGEX","USER_NAME_REGEX","locationContext","suggestions","options","locationSuggestions","PersonalDetails","handleSuccess","gqlCQData","cqData","useGetCqDataLazyQuery","submitCqFormMutation","useSubmitCqFormMutation","handleSave","useUpdateProfileHelper","masterId","refetchUserData","isIdentityFormSubmitted","setIsIdentityFormSubmitted","identityForm","setIdentityForm","refetchSpaceById","useEditChamberState","updateLoader","setUpdateLoader","initialValues","setInitialValues","setAgeGroup","freelancingExp","setFreelancingExp","searchOptions","setOptions","isLaptop","existingIdentityForm","capitalquotient","getCQDetails","forms","find","form","formId","Boolean","apiAgeGroup","apiFreelancingExperience","homeNoumAboutMeProfilePicHelper","useHomeNoumAboutMeHelper","register","trigger","getValues","errors","handleChangeProfileImage","imageURL","handleChange","handleOptionChange","ageGroupOptions","ageGroupData","array","split","parseInt","handleOptionChangeForFreelancing","freelancingExperienceOptions","freelancingExperienceData","handleDeleteImage","onSubmit","dataToSubmit","_a","profilePicSuccess","formCopy","Array","isArray","details","submitted","indexOfProfilePicture","findIndex","ans","qid","description","newData","values","setTextFieldValue","handleLocationSelect","isFormChanged","isEqual","Spinner","PersonalDetailsWrapper","ProfileWrapper","UploadPhoto","ProfileImage","EditableAvatar","LeftContent","TextWrapper","AboutTextWrapper","Content","SearchSelectAPI","SaveButtonWrap","PersonalDetailsModal","memo","XL","HomeNoumCQToken","deviceType","useDeviceType","openTokenModal","setOpenTokenModal","cqURl","process","generateOneTimeTokenMutation","useGenerateOneTimeTokenMutation","setIsOpen","updatePrivacyMutation","useUpdatePrivacyMutation","useCQ","useGetTokenQuery","DeviceTypeEnum","MOBILE","showSingleItemOnly","cqInHomeNoumsProfile","privacy","setPrivacy","visibility","charAt","toUpperCase","slice","info","getSpaceByType","token","count","handleNavigation","res","onError","networkError","graphQLErrors","err","trackEvent","UUID","generateOneTimeToken","formedUrl","open","updatePrivacy","display","flexDirection","alignSelf","TokenModal","score","mobileSize","Favourite","isFavouriteNoum","isFavourited","markAsFavourite","favouriteLoading","useFavouriteNoumMutation","markAsUnFavourite","unFavouriteLoading","useUnfavouriteNoumMutation","handleError","markType","handleMarkAsFavourite","result","updateQuery","GetSpaceForViewDocument","favouriteNoum","handleMarkAsUnFavourite","unfavouriteNoum","ProfileSummaryOld","forwardRef","lastUpdated","followers","ownerName","ownerImageURL","ownerTitle","ownerBio","isSecretNoum","isUpdateMode","noumValidity","isPublished","ref","isRenewModalOpen","setIsRenewModalOpen","editSpace","isEditOpen","toggleEditOpen","useToggle","summaryDescription","chamberTitle","chamberType","toLocaleLowerCase","summaryData","profileImage","categoryId","aboutToExpireInfo","showLabel","days","expiredInfo","validityDate","toggleRenewModal","previous","imageAvatar","riseAvatar","isRiseApplication","Avatar","Tag","color","getColorByNoumType","bgColor","getBgColorByNoumType","secondary","postProcess","day","showGracePeriodLabel","date","format","Date","toLowerCase","userStatus","UserStatus","Active","percentCompleted","ChamberCompleteness","ProjectCreate","RenewNoumModal","chember","noumTransactionFeeId","PROFLE_SIZE","XXXXL","XXXL","XXL","XVL","L","M","PROFILE_RADIUS","PROFILE_EDIT_BUTTON","PROFILE_EDIT_ICON","PROFILE_EDIT_ICON_RADIUS","PROFILE_EDIT_ICON_POSITION","bannerEditOptions","labelColor","StyledAvatarContainer","isBanner","radius","opacity","isCoverUrl","StyledButton","overridedIcon","ProfileBannerImage","BannerDescription","DropDownBannerbutton","isFocused","DropDownItems","ProfileSize","BannerEditButton","onClick","buttonSize","iconSize","ProfileBanner","url","fileSize","maximumFileSize","editable","isUploadComplete","isUploadStarted","customWidth","customHeight","customBorderRadius","onClear","setisFocused","containerRef","useClickOutside","isUploading","handleClick","event","preventDefault","isValidFileSize","ProfileBannerEditable","defaultImagePlaceHolder","onContentChange","onlyEditable","Upload","imageTypes","triggerElRef","rest","onClickHandler","onCloseHandler","attrs","Privacy","PUBLIC","PRIVATE","RISE_CATEGORY_NAME","NoumBio","ownedBy","Trans","strong","NoumMembersInformation","connectedMembersCount","followersCount","spaceFollowersCount","isFollowing","refetchConnectedMembers","refetchFollowersCount","lastUpdatedConnectionId","eventMeta","networkStatus","useEvents","preventGetEvents","tokenData","tokenRefetch","loadingTokenData","defaultTab","setDefaultTab","dashboardType","setDashboardType","invitedNoumId","setInvitedNoumId","isOpenInviteModal","setOpenInviteModal","isQuickOpenInviteModal","setQuickOpenInviteModal","isModalOpen","toggleModalOpen","noumDashboardMetrics","isClickableConnections","isInviteBox","Public","requestedConnection","refetchRequestConnection","loadingRequestConnection","useRequestedConnections","requestFrom","ConnectionRequestStatus","Invited","receivedConnections","refetchReceivedConnection","loadingReceivedConnection","useReceivedConnections","handleClickConnections","ConnectionDetailModalTabEnum","Connections","NoumDashboradTypeEnum","connections","NoumDashboardMetricsModalTabEnum","Statistics","totalCount","connectionDetailsLoading","useConnectionDetailsHelper","ProjectSpaces","connectedProjectsCount","userNoumsCount","loadingUserNoums","OwnedNoums","linkedNoums","isLinked","isSummaryDescrisption","showFollowers","showCompleteness","requestConnectionCount","receivedConnectionCount","receivedConnectionRequest","refetchReceivedRequests","x","connectionId","rewardInfoCount","toLocaleString","Followers","Noums","NetworkStatus","ready","hostedEventsCount","ConnectionDetailsModal","NoumDashboardMetricsModal","ConnectionInviteModal","ChamberVisibilityInviteModal","RequestsAndInvitesModal","NoumDescription","isTablet","wordBreak","CQToken","isCQComplete","rightIcon","Radiobox","NoumTagsDetail","memberData","noumMember","MemberRoleTag","cqURL","cqPrinciplesYou","RISE_CQ_STEPS","showCheckbox","RISE_CQ_STEPS_TAB_FIRST_ROW","RISE_CQ_STEPS_TAB_SECOND_ROW","RiseApplicationStep","stepCompleted","canEdit","identityStepCompleted","refreshApplication","onCheckBoxClicked","generateTokenForCQ","useGenerateTokenForCQ","contextData","onCloseClick","isStepEssay","isStepPrinciplesYou","EVENTS","RISE","APPLICATION_STEP","PRINCIPLES_YOU_CLICKED","onStepClick","source","handleEssay","check","handleCheck","RiseStep","onRiseStepClick","marginRight","Checkbox","RiseIFrameContainer","RiseIframe","RiseApplicationSteps","useRiseApplicationContext","showSteps","ApplicationResultStatus","Inprogress","ApplicationResultStatusAdmin","RiseApplicationInfoText","RiseStepWrapper","`RiseApplicationSteps-RiseApplicationStep-${step}`","RiseStepWrapperTablet","TabletWrapper","RiseApplicationStatus","ProfileSummaryNew","coverURL","isCustomPreview","memberId","useNoumMemberQuery","noumSpace","refetchNoumView","refetchEditNoum","handleRefetchSpace","useGetCqDataQuery","cqDataDetail","profileURL","updateProjectChamberHelper","isCoverLoader","useUpdateProjectChamberHelper","setProfileImage","ChamberDefaultImag","coverImage","setCoverImage","hasInvitation","profileImageURL","isPrivate","handleChangeCoverImage","coverImageURL","headerBackgroundUrl","handleInvitation","NoumInvitedConnection","handleWaitInvitation","NoumWaitInvitation","ProfileSummary","noumCustomPreivewV2","NoumByLinkProvider","NoumSectionContainer","isEmptySection","isBackground","mediaSizes","MOBILE_L_MAX","getTemplateColumns","noumSectionType","NoumLayoutSectionType","TwoColumnsRightWider","TwoColumnsLeftWider","TwoEqualColumns","ThreeEqualColumns","SingleColumn_700Px","NoumSectionLayout","sectionAlign","NoumLayoutSectionVerticalAlignType","Top","Bottom","isSmallerThanLaptop","Column","Container","SectionLayoutItem","layoutSectionType","columnsArray","handleSelectSectionType","sum","a","b","abs","weight","uuidv4","columnsLayout","SingleColumn","column","EmptySections","SectionTemplates","SectionLayoutPickerWrapper","TabContent","SectionLayoutPicker","setIsPopover","setIsLoading","selectedId","setSelectedId","sectionType","tabComponent","sectionTemplate","EmptyNoumContainer","EmptyNoumState","isPopover","PopoverWrapper","prv","elementTitle","ElementTypeEnum","Message","ProjectWorkExperience","EducationTraining","AchievementAward","PublicationDesignPatterns","PersonalInterest","SocialInterest","BusinessBrief","Connection","ContractManager","FilesManager","Skills","Usernetwork","Userposts","Wallet","Instagram","Invitation","Profile","Events","elementDescription","elementDeleteModalDescription","InsertDirection","Above","Below","ToolbuttonEdge","bothTop","bothBottom","topLeft","topRight","nonRemovableTool","SKILLS","USERNETWORK","HoverWrapperElements","ChildWrapper","isSectionBackground","isColumnBackground","isDragging","ToolContainer","isTool","LAPTOP_M_MIN","LAPTOP_L_MIN","ToolNameContainer","PlusWrapper","isBottom","StackElements","HoverWrapperContainer","isChild","isElementDragging","isHoverNotActive","isMoveTool","WrapperIcon","isEdge","p","ControlPanelIcon","cursorAllowed","hoverColor","SectionToolsList","ul","DeleteDescriptionContainer","Typography","bodyLarge","DeleteDescription","StyledPopoverWrapper","ReferenceContainer","Arrow","PopoverContainer","CloseButtonWrapper","CloseButton","renderTargetContent","renderPopoverContent","placement","offsetX","offsetY","excludes","referenceElement","setReferenceElement","popperElement","setPopperElement","arrowElement","setArrowElement","styles","attributes","usePopper","strategy","modifiers","element","popper","arrow","AddSectionComponentWrapper","CenterIcon","Tabs","labelSize","group","allToolsInToolBox","allowedNoumTypes","toolTipText","allToolsInToolBoxV2","NoumWalletCreateModal","noumWalletCreated","setNoumWalletCreated","handleDelete","handleWalletElementCreation","handleSelectElementType","handleCreateWallet","ModalComponent.Modal","ModalComponent","ModalComponent.ModalHeader","ModalComponent.ModalBody","ModalComponent.ModalFooter","ToolboxWrapper","ToolboxLoader","ToolboxTabs","ToolboxTabContentWrapper","ToolboxItemsRow","ToolboxItemWrapper","ToolboxItemTextContainer","ToolboxItemText","isDisabled","overflow","ToolboxItemComingSoonText","ToolTip","top","childIndex","SubWalletDisabledToolTip","DropZone","DropZoneColumn","DNDContainer","bodyXLargeBold","DraggingElement","DNDElementContainer","insertDirection","DroppableElement","placeholderProps","dragY","dragHeight","isSkillOrNetwork","NonIntrectiveOverlay","ColumnContainer","EditColumnContainer","SkeletonLoaderElementHeader","SkeletonLoaderImageElement","IMAGE_VALID_EXTENSIONS","VIDEO_VALID_EXTENSIONS","IMAGE_ACCEPTED_FORMATS","join","VIDEO_ACCEPTED_FORMATS","IMAGE_FILE_MAX_SIZE","VIDEO_FILE_MAX_SIZE","DEFAULT_FILE_MAX_SIZE","getValidFormats","accept","formats","extensions","maxFileSize","defaultFootNote","EditUploadingContainer","VerticalCenterWrapper","ProgressBarWrapper","ProgressErrorWrapper","EditPreUploadContainer","isDraggingOver","EditPreUpload","acceptedFormats","link1","EditUploading","imageReady","uploadPercentage","fileName","fileSizeConverter","cursor","onTryAgain","ProgressBar","ImageView","meta","ImageEditor","fileType","isActiveTool","isLoading","useSkeletonIsLoadingContext","collapseContextData","ElementWrapperContext","isView","ElementUtils","getPublished","getUnpublished","imageUrl","getBodyContent","editViewCP","selectedCustomPreviewTab","CustomPreviewTabEnum","Preview","isCollapse","ImageElement","videoReady","fileExtension","getFileExtension","mimeType","getVideoMimeType","VideoView","VideoEditor","videoTypes","videoUrl","VideoElement","EditModeWrapper","devices","ViewModeWrapper","ViewModeChildrenWrapper","ViewModeHeaderWrapper","CollapseButton","headingXSmallBold","ViewModeHeaderTitleWrapper","SubHeaderWrapper","noScrollBar","visible","CalendarElementEditMode","usePaginatedEvents","currentPage","setCurrentPage","events","eventsProps","onChangePage","page","paginatedEvents","useScrollToLocation","confirmScroll","scrolledRef","hash","useLocation","hashRef","scrollIntoElement","useScrollIntoElement","SkeletonLoaderHeaderSubElement","SkeletonLoaderCalendarElement","pageSize","StartNowEventWarningModal","withRecurringEvent","onContinueClick","onEventAccepted","onEventDeclined","onGoLive","onAccept","onDecline","onAttending","onNotAttending","onAttend","localDateTime","getLocalTime","dateTime","eventDate","diffSeconds","useEventTimeSlot","startTimestamp","getTime","durationInSeconds","duration","Timer","EventItem","placeHolderdata","EventsStatus","GoLive","eventStatusUpdatedAt","socialHall","userId","middleName","isInstantEvent","currentUser","eventId","userRole","UserRole","Participant","invitation","CalendarElementViewModeSubHeader","onFilterChange","EventFilter","CalendarPlaceHolder","isNoumLayoutSmallViewMode","AllCalendarModal","spaceType","eventsCount","onChangeFilter","onJoinEvent","fetchMoreEvents","onCopyLink","refetchEvents","attendeesRef","onViewAttendees","isHost","handleJoinEvent","onGoLiveEvent","closeModalHanlder","canFetchMore","Infinite","getBottomStatusFromQuery","currentCount","scrollbarWidth","EventListEmptyScreen","callback","CreateEditEventModal","Project","EventAttendeesModal","CalendarNoEventsWrapper","NoEventsIconWrapper","AddNewEventButton","OwnerEventsListCollapsedWrapper","GuestEventsListCollapsedWrapper","OwnerEventsListCollapsedItem","active","GuestEventsListCollapsedItem","EventCategory","EventCount","EventHelper","EventsListExpandedWrapper","isEventBottomBorder","GuestEventsHeaderTitle","EventDateWrapper","GuestEventMonth","GuestEventDate","GuestEventTitle","GuestEventTime","GuestEventBodyWrapper","GuestEventBody","LoadingContainer","CalendarGuestEventsListCollapsed","eventHost","masterNoumId","onEditEvent","host","getLocalTimeFormatted","returnFormat","EventItemButtons","CalendarEventsListExpanded","openDetailModal","setOpenDetailModal","handleSeeMore","EventDetailModal","CalendarElementGuestView","isCollapsed","onRefetchEvents","onJoin","noEventMessage","all","EventsFilter","Attending","Hosting","Expired","Upcoming","CalendarNoEvents","onAddEvent","includes","CalendarOwnerEventsListCollapsed","acceptedEventsCount","getSingularPluralKey","pendingEventsCount","CalendarElementOwnerView","activeViewMode","onFilterChanged","onChangeViewMode","showFilters","showOwnerCollapsedTabs","allEventsCount","showNoEvents","AddEventButton","handleDropdownClick","isNoumEditor","shInstantEvent","addEventDropdownOptions","CalendarElementViewModeHeader","currentTitle","onToggleCollapse","showAddEventBtn","useCalendar","childrenRef","setIsCollapsed","viewMode","setViewMode","childrenHeight","setChildrenHeight","useResizeObserver","scrollHeight","clientHeight","CalendarElementViewMode","isStartNowModalOpen","toggleStartNowModalOpen","isStartNowWarningModalOpen","toggleStartNowWarningModalOpen","isAllEventsModalOpen","toggleAllEventsModalOpen","useElementLayoutMode","NoumLayoutViewMode","NOUMLAYOUTSMALL","handleGlobalEventUpdates","addEventListener","GLOBAL_EVENT_CREATION","removeEventListener","f","showPagination","DropdownKey","START_NOW","SCHEDULE","onStartNowEventWarningModalContinueClick","setVariables","ev","Pagination","OnDemandEventModal","CalendarElement","SkeletonLoaderBusinessBriefElement","ContentContainer","textEditor","basicToolbar","lastRerenderEvent","firstRender","initialValue","setInitialValue","textAreaValue","setTextAreaValue","internalRenderEvent","setInternalRenderEvent","updateTextAreaValue","setDisableUpdate","DisablePublishOrDraftContext","updateElementHelper","useUpdateElementHelper","additionalOptions","next","isChanged","clone","bodyContent","bodyContentType","BodyContentEnum","Json","RichTextEditor","SkeletonLoaderTextElement","TextElement","SkeletonLoaderMessageElement","filterOptions","ConversationType","PROJECT_OWNER","PROJECT_OWNER_OTHERS","FilterDropDown","isNewConversation","isOthersConversations","setIsOthersConversations","MessageElementContext","setActiveConversationSid","ActiveConversationContext","selectedValue","selectValue","onSelect","minHeight","_","DropdownItemLayout","DropDownLabel","SpinnerContainer","ChatListWrapper","ChatListContent","isFlex","SeeAllMessages","SeeAllButton","useConversationType","setConversationType","conversationType","HOME_OWNER","HOME_USER","PROJECT_USER","useChatList","useNoumElement","privateConversation","conversations","unreadCount","onFetchMore","ConversationHooks","useConversationsList","hasPrivateConversation","paginating","fetchMore","hasMore","infiniteStatus","isHomeUserConversation","allConversations","cleanList","cids","c","__typename","cid","showExampleConversation","setIsNewConversation","setIsCollapse","noumLayoutViewMode","activeConversationSid","countConversationToShow","ViewMode","DEFAULT","showSlicedConversations","cidsToRender","leftChannels","handleItemClick","sid","useLayoutEffect","CREAT_CONVERSATION_WITH_HOME_OWNER","firstConversation","ChatListModal","index","ChatItem","`ChatListModal-ChatItem-${cid}`","ChatFooter","isNoumLayoutCompactViewMode","showFilterButton","onSeeAllClick","FULLCHAT","useNoumAuthorization","hasDefaultRole","roleName","isDefault","hasCustomRole","hasPermission","level","permissionName","permission","permissionIDs","hasElementPermission","NoumRolePermissionLevel","Element","hasNoumPermission","noumPermission","Noum","Wrapper","NOUMLAYOUTCOMPACT","ChatHeader","hasCreateConversationPermission","isCollapseDisabled","isShowFilter","isShowAddButton","UserUtil","isInactive","collapseHandler","backHandler","onAddNewConversationHandle","ChatItemExample","exampleConversation","exampleMessages","useExampleConversation","ChatItemView","placeholder","CollapsedChatItem","isMarginRight","users","unread","useConversationUnreadMessageCount","participants","participant","mapToUserData","S.ChatAvatarWrapper","ChatItemAvatar","S.BadgeWrapper","Badge","HomeOwnerChatItem","ConversationViewContext","setSelectedUsers","NewConversationContext","avatarUrl","getProfilePicture","userFullName","renderFullName","FULLCONVERSATION","ChatItemWrapper","AvatarWrapper","TitleTSPan","ConversationEmptyState","ChatList","chatListDivRef","newMsgSpanRef","conversation","`ChatList-ChatItem-${cid}`","NewChatItem","MessageListWrapper","StartConversationMessage","MessageInputWrapper","ConversationExampleBody","justifyContent","MessageItem","ConversationBody","ecLoading","selectedUsers","isConversationCreatable","createNewConversation","createHomeNoumNewConversation","useConversation","useConversationDetails","sendMessage","sendFile","messages","useConversationMessages","isShowMessageList","isShowMessageStartLabel","isShownMessageInput","handleSendMessage","files","convo","chunkStringWithoutWordBreaking","forEach","msg","file","MessageList","MessageInput","NewConversationUserSelector","setSearch","hasCreateGroupPermission","useAllUsersWithOwnerQuery","PAGE_BIG_SIZE","PAGE_SIZE","activeUserOnly","UserRelationType","Connected","includeNonMembers","includeNoumOwner","ownerID","allUsers","uniqBy","messageUserPickerRef","onLoadMore","_users","onCancel","cancel","useImperativeHandle","CustomOptionsContent","MessageUserPicker","ButtonView","ProfileInfo","HomeOwnerConversationProfile","subTitle","ConversationHeader","addNewConversationRef","exampleUser","NewHomeConversationUserSelector","ConversationProfileView","ConversationProfile","ModalBodyStyled","S$9","ConversationModal","fullScreenStyle","noumLayoutSmallStyle","noumLayoutCompactStyle","noumLayoutBigStyle","MainWrapper","NOUMLAYOUTBIG","ConversationWrapper","ConversationLoadingWrapper","rgba","cssVar","HeaderWrapper","isElement","BodyWrapper","headerHeight","footerHeight","InfoWrapper","ViewModeLayout","headRef1","headRef2","footerRef","headHeights","isCreatingNewConversation","ElementHeader","MessageElementViewMode","MessageElementEditMode","MessageElement","queryClient","useQueryClient","clear","ConversationViewProvider","MessageElementProvider","TwilioClientProvider","ActiveConversationProvider","NewConversationProvider","MessageElementV2","WalletViewMode","FULLDATA","WalletElementContext","WalletElementProvider","changeViewMode","useWalletElement","paddingForNoumEditor","customScrollBar","WrapperChildContainer","WrapperRecentTransactions","hidden","TransactionHeading","TransactionListsContainer","LinkButton","WalletElementEditMode","tempStatus","convertToCurrency","currency","Draft","SkeletonLoaderWalletElement","border","ProfileWarpper","TransactionDetails","AccountName","Account","TransactionAmout","isTransactionWithOwnAccounts","AmountWrapper","TransactionWindow","setPage","useGetConnectedChamberPaymentsQuery","endDate","toISOString","startDate","accountId","connectedNoumWalletId","accountType","PaymentAccountTypeEnum","SubWallet","getConnectedChamberPayments","onPageChange","val","groupedByDay","groupBy","DateFormaterStringInput","createdAt","Object","keys","Styles.Container","Styles.DateContainer","getUTCFullYear","transaction","mainWallet","fontWeight","sourceDetail","maskNumber","accountName","destinationDetail","formatTimeAMPM","paymentDate","transactionReason","isEmpty","HeaderButtonsWrapper","isFullHeader","ParentWrapper","IconForButton","iconName","isShow","WalletHeader","subWalletId","payeeGneration","setPayeeGeneration","createCustomerUnverifiedMutation","createCustomerLoading","unverifedCustomerError","useCreateCustomerUnverifiedMutation","createCustomerPayeeMutation","useCreateCustomerPayeeMutation","gqlPayee","useGetCustomerPayeeListLazyQuery","gqlAccList","useGetAccountsLazyQuery","checkUserStatus","checkingStatus","useGetWalletLazyQuery","checkSourceDestinationWalletIsValid","walletExistsLoading","useCheckWalletExistDetailLazyQuery","checkNonNoumenaDestinationWallet","nonNoumenaDestinationWalletLoading","useCheckWalletExistsLazyQuery","checkSourceWallet","createCustomer","getWalletBalance","EWalletStatus","CUSTOMER_NOT_CREATED","state","setState","TransactionModalType","PAY","defaultFrom","defaultTo","useParams","gqlGetSubWalletBalance","useGetSubWalletBalanceLazyQuery","canPaymentBeMadeToConnectedNoums","targetUserId","checkWalletExists","target","sourceUserId","checkWalletExistDetail","sourceWallet","targetWallet","handlePaymentForOwner","transactionType","noumenaStatus","NoumenaStatus","APPROVED","handlePayeeGeneration","Promise","self","connectedUserSubwalletData","getCustomerPayeeList","payee","masterWalletId","createCustomerPayee","defaultPayeeID","isSubWalletDeleteModal","setIsSubWalletDeleteModal","showNonZeroWalletModal","setShowNonZeroWalletModal","handleCloseSubWalletModal","handleCloseNonZeroWalletModal","walletTitleMaxWidth","breakpointsForNoumLayoutColumn","BIG_700PX","walletTitleMaxWidthForEditor1","TRANSFER","TransactionModal","walletPayee","CloseWallet","NonZeroWalletModal","TransactionContent","TransactionCard","hideTo","str","hours","getHours","minutes","getMinutes","ampm","newminutes","strTime","contentMaxWidth","Separator","WalletElementViewMode","setFilter","showConnectedNoumtransactions","setShowConnectedNoumtransactions","refreshBalance","favouriteConnected","connectionRole","connectedNoumSubWallet","favouriteConnectedBalance","connectedChamberPaymentsData","refreshConnectedUserTransactionList","connectedNoumTransactions","transactionData","refreshTransactionList","useTransactions","closeTransactionWindowForConnectedNoum","WalletElement","QuickQuestionsElementContext","QuickQuestionsElementProvider","useQuickQuestionsElementContext","QuickQuestionsWrapperTestId","NoQuestionsAddedYetTextTestId","NoQuestionsIconTestId","AddFirstQuestionButtonTestId","QuickQuestionsCollapseButtonTestId","QuickQuestionsEditWrapperTestId","QuickQuestionsElementHeader","openAddQuestionModal","isAllowed","openQuestionCount","onCollapseButtonClick","StyledTabWrapper","EditElement","question","handleChangeTitle","handleChangeDate","DatePicker","from","to","subDays","useAddQuestionHelper","resetData","createQuestion","useCreateQuestionMutation","handleSaveChanges","questionImage","expiryDate","toDateString","AddQuestion","setQuestion","setUrl","setDate","setDateMethod","elementSchema","ContentWrapper","isMyAnswer","TipWrapper","AnswerElementType","MY_ANSWERS","MY_TIPS","ALL_ANSWERS_MODAL","TipsSection","isChecking","setIsChecking","tips","showTipButton","onTip","onShowAllTips","hasTips","hasMyTip","tip","tipBy","i18nKey","tipAmount","sumBy","CurrencyEnum","Usd","handleTip","TipAmount","Answer","isClosedQuestion","webTips","fullName","createdDateAtTime","isAvatar","isAllAnswersModal","distanceDate","isVisitableOtherProfile","onClickUser","goToUserProfile","tipDetails","AllAnswerModal","openTransactionModal","setOpenTransactionModal","answers","setAnswers","isClosed","endOfYesterday","useGetQuestionAnswersQuery","questionId","sortList","getQuestionAnswers","handleInitTip","success","alert","TIP","useAddAnswerHelper","addAnswerMutation","useAddAnswerMutation","addAnswer","answerBody","StyledTSpan","ActionButtonContainer","QuestionModal","isOpenModal","isClosedModal","onConfirm","handleConfirm","useEllipsisMenuHelper","deleteQuestionMutation","loadingDelete","useDeleteQuestionMutation","closeQuestionMutation","loadingUpdate","useUpdateQuestionMutation","deleteQuestion","closeQuestion","getDate","isQuestionOwner","menuOptions","setIsCloseModal","onMenuOptionSelect","SubConatiner","vertical","hasBackground","hasBorderRadius","hasPadding","QuestionBodyWrapper","AvatarContainer","SendButton","StyleImage","StyledTextArea","EllipsisButton","isAbsolute","AnswerCount","isSpinner","StyledForm","ClosesText","NUM_ANSWERS_SHOWN_PER_QUESTION","questionStatus","QuestionStatusEnum","Closed","Answered","Tipped","QuestionAnswer","selectedTab","questionerNoumId","closesDate","questionBody","questionImageURL","answerCount","hasOwnAnswer","answersWithTip","numMoreAnswers","chamber","_item","hasAnswers","shouldShowAnswerField","setIsMobile","isOpenAnswerModal","setIsOpenAnswerModal","setAnswer","allAnswer","MobileWidth","divWidth","checkOne","checkTwo","checkThree","handleShowMoreTips","answerData","showAnswers","margin","numTips","useGetQuickQuestionHelper","counts","setCounts","closeQuestionCount","answeredQuestionCount","tippedQuestionCount","totalQuestionCount","sort","operator","SortOperator","Desc","useGetQuestionsForSpaceQuery","close","answered","tipped","TextPadding","QuickQuestionsBodyWrapper","SpinnerWrapper","QuestionWrapper","TabWrapper","questionsMockData","getQuestionsForSpace","profilePictureThumbnail","updatedAt","NoQuestions","QuickQuestionsElementViewMode","isAddModalOpen","setIsAddModalOpen","setOffset","setSelectedTab","isShowPlaceholder","availableTabOptions","availableTabs","onTabChange","closeAddModal","dataQuestions","BasicChipsTabsForm","QuickQuestionsElementEditMode","QuickQuestionsElement","SkeletonLoaderPostElement","FilterButton","SortWrap","flexColumn","VisibilitySection","FullButton","EmptyButton","SearchSection","allOption","FilterPost","setShowFilter","setPostFilter","authors","usePostElement","keyword","setKeyword","debouncedKeyword","useDebounce","isOrderOpen","setIsOrderOpen","isVisibilityOpen","setVisibilityOpen","setOrder","setVisibility","PostVisibility","author","setAuthor","onSelectOrder","op","onSelectMember","found","onSelectAuthor","orderValue","OrderOptions","od","toString","visibilityValue","capitalizeAllWord","authorValue","getFullName","searchedAuthors","trimAndLowerString","authorOptions","handleInputAuthor","applyFilters","tmpFilter","resetFilters","findAuthor","au","enforceRight","MOBILE_M","VisibilityOptions","VisibilityoptionsRenderer","AuthorOptionsRenderer","PostHeader","showFilter","ViewModeNoumEditor","AllTab","Chips","UserFrame","flexRow","UserItem","MoreText","TO_SHOW","AuthorsList","selectedUid","remainCount","lastUrls","tmp","urls","handleSelect","DiagonalAvatar3","noPostData","postStatus","PostStatus","rawJSON","blocks","depth","entityRanges","inlineStyleRanges","entityMap","EXAMPLE_POST_ID","PostBody","setShowCreate","showCreate","refetchPosts","posts","isSpaceOwner","toggleShowAll","recentPost","getUserPermission","usePermissions","isCreatable","initialSliceItems","postData","CreateSection","CreatePost","PostItem","AllPosts","post","NoPostsContainer","NoPosts","PostViewMode","PostElement","spaceView","PostElementProvider","networks","NetworkElementContext","NetworkElementProvider","socialLinks","useNetworkElement","SkeletonLoaderNetworkElement","NetworkHeader","borderBox","TextWrap","NetworkItem","handle","getSocialHandleFromLink","makeViableLink","regProtocal","getIconFromName","lower","getSocialNameFromLink","Body","NetworkViewMode","profileNetworks","noumNetworks","userNetworks","jsonBody","network","JSON","parse","makeSocialLink","NetworkEditItem","_name","lowerName","parsedLink","parseAndSanitizeOpenLink","timeout","networkDetails","socialSites","github","linkedin","behance","twitter","instagram","medium","dribbble","www1","www2","www3","NetworkEditMode","bodyContentString","jBody","parsedBodyContent","getHandle","social","handleUpdate","clearTimeout","setTimeout","NetworkElement","SearchSkill","searchRef","debouncedSearch","onInputChange","clearSelection","focus","filteredOptions","regex","RegExp","trim","match","mergeRefs","ClearIconWrapper","SkillListContainer","SkillItem","ChipWrapper","ChipsSection","CollapseWrap","selectedSkills","MySkillsWrap","SkillsEditElement","selectSkill","categories","getCategoryBadgeCount","isCategoryOpen","toggleOpenCategory","collapseAll","collapseStatus","useSkills","isSelected","skill","renderAccordionChildren","skills","renderCategory","Accordion","SkeletonLoaderSkillElement","SkillsViewElement","SkillElement","getIconColorByExtension","ext","isSupportedVideoType","extension","isSafari","isImageType","isSupportedMediaType","FilePreviewWrapper","TABLET_MAX","PreviewVideo","video","PreviewNotAvailableContainer","PreviewNotAvailableText","S$8","pdfjs","workerSrc","window","origin","FilePreview","windowHeight","isLoaded","setIsLoaded","previewHeight","onLoad","fileUrl","Document","Page","FileManagerElementContext","FileManagerElementProvider","showAddFileModal","setShowAddFileModal","showAllFilesModal","setShowAllFilesModal","showDeleteFileModalId","setShowDeleteFileModalId","showEditFileModalId","setShowEditFileModalId","showFilePreviewModalId","setShowFilePreviewModalId","filterType","setFilterType","NoumFilesFilterType","All","searchQuery","setSearchQuery","useNoumFilesQuery","filesManagerElementId","addNoumFileMutation","useAddNoumFileMutation","updateNoumFileMutation","useUpdateNoumFileMutation","deleteNoumFileMutation","useDeleteNoumFileMutation","markNoumFileAsDownloadedMutation","useMarkNoumFileAsDownloadedMutation","addFile","addNoumFile","updateFile","updateNoumFile","deleteFile","fileId","deleteNoumFile","markNoumFileAsDownloaded","noumFiles","hasFiles","useFileManagerElementContext","FileManagerEllipsisMenu","onDelete","onPreview","fileOwnerId","isFileOwner","arr","handleOnClick","FileInfoWrapper","LabelText","ValueText","DescriptionWrapper","TableRowItem","FooterButtons","ButtonsWrapper","ModalBodyInnerWrapper","S$7","FilePreviewModal","modalWidth","useModalWidth","activeTab","setActiveTab","owner","DownloadButton","flexGrow","textDecoration","delay","tab","alignItems","bytesToMegabytes","uploadedAt","downloadsCount","visibilityRoles","DiscardChangesModal","FormContainer","CheckBoxWrapper","CheckBoxLabel","VisibleForLabel","UploadedItem","UploadedItemLeftWrapper","UploadedItemIconContainer","UploadedItemTextContainer","UploadedItemFileName","UploadedItemSizeText","UploadingText","S$6","FileUploadModal","uploadedFile","setUploadedFile","setIsUploading","showDiscardChangesModal","setShowDiscardChangesModal","addSuccessIconToast","isEditMode","uploadError","setUploadError","handleClearMedia","isDirty","substring","lastIndexOf","isSubmitting","visibleFor","schema","submit","onUploadChange","handleCheckboxChange","currentRoles","shouldValidate","shouldDirty","renderCheckbox","allTypes","NoumFileRole","Guest","Favorite","ActionsButtonsContainer","S$5","FileManagerDeleteModal","logError","useError","isDeleting","setIsDeleting","SkeletonLoaderFileManagerBody","TextContainer","IconsContainer","FileIconContainer","LeftWrapper","FileName","FileDescription","IconContainer","S$4","FileListItem","ListWrapper","EmptyState","EmptyStateText","EmptyStateContainer","S$3","isSeachResult","FileList","maxFilesToDisplay","useDebouncedCallback","callbackRef","debounce","SearchField","S$2","FileManagerSearch","debouncedChangeHandler","currentTarget","FileManagerTabs","UploadedByMe","maxHeight","FileManagerShowAllModal","SkeletonLoaderFileManagerElement","AddButton","HeaderRightWrapper","FileManagerHeader","handleClickSeeAll","showSearch","showAddButton","S$1","FileManagerBody","FileManagerViewMode","FileManagerElement","SkeletonLoaderContractManagerElement","ContractManagerHeader","handleNewContract","handleNewStatementOfWork","ButtonMenu","EmptyStateButtons","EmptyElement","NoumDocumentStatus","Drafts","Sent","Signed","TypeContainer","iswrapped","InputFilters","wrapperRef","useFormContext","isWrap","setIsWrap","clientWidth","inputList","list","ownerTab","DocumentTypeFilterField","FiltersViewMode","filters","setFilters","DataGrid","listPerspective","ListPOV","Owner","mapNoumDocumentStatusToContractStatus","filterValue","ContractStatus","Issued","mapNoumDocumentStatusToSowStatus","SowStatus","toContractsList","noumIds","toStatementsOfWorkList","ContractElementMapper","useContractManager","ROWS_PER_PAGE","navigateAndSetOrigin","useNavigateWithOrigin","contracts","setContracts","statementsOfWork","setStatementsOfWork","sowInfiniteState","setSowInfiniteState","contractInfiniteState","setContractInfiniteState","DocumentType","Contract","ContractListingPov","CounterParty","ContractPermissions","useContractPermissions","StatementOfWorkPermissions","useStatementOfWorkPermissions","contractsData","contractsLoading","contractsFetchMore","useGetContractsQuery","viewingAs","getContractList","sowData","sowLoading","sowFetchMore","useGetStatementsOfWorkQuery","getAllSOW","fetchMoreContacts","mergeData","fetchMoreSow","hasNoDocuments","handleNavigateToContract","viewContract","editContract","handleNavigateToStatementOfWork","viewStatementOfWork","editStatementOfWork","handleNavigateToContractManager","contractManager","perspective","FilterContainer","CustomHeadContainer","ContractsTable","rowsPerPage","navigateToContract","columns","renderValue","DocumentTypeTag","wordWrap","DocumentStatusTag","buyer","ContactDetailsUtils","formatCompanyAndName","seller","effectiveDate","formatDateString","ApiPayloadParser","parseDateString","StatementsOfWorkTable","navigateToStatementOfWork","Sow","linkedContract","KeyText","ItemRow","ContractsCollapsibleList","S.ItemRow","S.KeyText","S.ValueText","displayName","StatementsOfWorkCollapsibleList","ContractUtils","formatDocumentNameWithNumber","BodyViewMode","isContract","layoutMode","ContractViewAllModal","ModalCloseButton","ContractManagerViewMode","isOwnerRights","headerProps","isViewAll","setViewAll","handleViewAll","pre","ContractManagerElement","homeChambersElements","sectionTitle","updateToolMutation","noumSidePanelId","viewModeSpaceInfo","setBodyContent","headerContent","getHeaderContent","getElementBodyContentJson","json","getBodyContentJson","thumbnail","videoURL","handleContentChange","getPosition","isMediaElement","handleNetworkChange","stringify","content","editEnabled","showToolbar","noumsSocialHall","filesManager","homeChambersObject","SkeletonLoaderProvider"],"mappings":"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"}