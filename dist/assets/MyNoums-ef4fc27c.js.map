{"version":3,"file":"MyNoums-ef4fc27c.js","sources":["../../src/screens/Plan/styles.tsx","../../src/screens/Plan/TextGenerator.tsx","../../src/screens/Plan/NoumCard.tsx","../../src/screens/Plan/MyNoums.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Card } from '@/components/Card';\nimport { mediaSizes } from '@/constants/devices';\n\nexport const MainLayoutWrapper = styled(Card)<{ isSmallScreen: boolean }>`\n  padding: ${(props) => (props.isSmallScreen ? '16px' : '24px')};\n  width: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  @media (max-width: ${mediaSizes.MOBILE_XL_MAX}) {\n    border-radius: 0px;\n  }\n  @media (max-width: ${mediaSizes.TABLET_MAX}) {\n    gap: 16px;\n  }\n`;\n\nexport const SideLayoutWrapper = styled(Card)`\n  width: 496px;\n  //   height: 300px;\n  display: flex;\n  padding: 24px;\n  flex-direction: column;\n  gap: 24px;\n  @media (max-width: ${mediaSizes.TABLET_MAX}) {\n    display: none;\n  }\n`;\n\nexport const PlanHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px;\n  gap: 16px;\n  flex: none;\n  align-self: stretch;\n  box-sizing: border-box;\n  flex-grow: 0;\n  width: auto;\n  height: 40px;\n  box-sizing: border-box;\n`;\nexport const PlanTopWrapper = styled.div<{ isMobile: boolean }>`\n  display: flex;\n  flex-direction: ${(props) => (props.isMobile ? 'column' : 'row')};\n  align-items: flex-start;\n  box-sizing: border-box;\n  padding: 0px;\n  gap: 16px;\n  flex: none;\n  align-self: stretch;\n  width: 100%;\n  height: auto;\n`;\n\nexport const PlanInfoTile = styled.div<{ width: string }>`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 24px;\n  gap: 16px;\n  box-sizing: border-box;\n  width: ${({ width }) => width};\n  height: auto;\n  border: 1px solid var(--border-card-neutral-highlighted);\n  border-radius: 16px;\n  flex: none;\n  flex-grow: 1;\n  background: #ffffff;\n`;\n\nexport const ActivePlans = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 0px;\n  gap: 8px;\n  width: auto;\n  height: auto;\n  flex: none;\n  align-self: stretch;\n  flex-grow: 0;\n`;\n\nexport const ActivePlanBox = styled.div<{ height?: string }>`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 16px;\n  gap: 16px;\n  flex: none;\n  align-self: stretch;\n  flex-grow: 0;\n  width: auto;\n  height: ${({ height }) => height || '100%'};\n  border-radius: 16px;\n  border: 1px solid var(--border-card-neutral-highlighted);\n  background: #ffffff;\n`;\n\nexport const TextRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0px;\n  gap: 8px;\n  flex: none;\n  align-self: stretch;\n  flex-grow: 0;\n  width: auto;\n  height: 24px;\n`;\n\nexport const TextColumn = styled.div<{ width?: string; height: string }>`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 0px;\n  flex: none;\n  flex-grow: 0;\n  width: ${({ width }) => width || 'auto'};\n  height: ${({ height }) => height};\n`;\n\nexport const PlanMetaData = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  padding: 0px;\n  gap: 16px;\n  width: auto;\n  height: 41px;\n  flex: none;\n  align-self: stretch;\n  flex-grow: 0;\n`;\n\nexport const MainContent = styled.div<{ isMobile?: boolean }>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  padding: 0px;\n  gap: 16px;\n  flex: none;\n  flex-grow: 1;\n  width: ${(props) => (props.isMobile ? '100%' : 'auto')};\n  height: 100%;\n`;\n\nexport const PlanFees = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 0px;\n  width: 128px;\n  height: 41px;\n  flex: none;\n  flex-grow: 0;\n`;\n\nexport const PlanFeesMobile = styled.div`\n  padding-top: 16px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0px;\n  gap: 4px;\n  flex: none;\n  flex-grow: 0;\n  height: 19px;\n`;\n\nexport const PlanNoumInfo = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0px;\n  gap: 8px;\n  flex: none;\n  flex-grow: 0;\n  width: 128px;\n  height: 41px;\n`;\n\nexport const NoumHeader = styled.div<{ height: string | undefined }>`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0px;\n  gap: 16px;\n  width: auto;\n  height: ${(props) => (props.height ? props.height : '30px')};\n  box-sizing: border-box;\n  flex: none;\n  align-self: stretch;\n  flex-grow: 0;\n  justify-content: space-between;\n`;\n\nexport const NoumFooter = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0px;\n  gap: 16px;\n  width: auto;\n  height: 30px;\n  box-sizing: border-box;\n  margin: auto;\n`;\n\nexport const EmptyNoumData = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0px;\n  gap: 16px;\n  width: auto;\n  height: 134px;\n  flex: none;\n  align-self: stretch;\n  flex-grow: 0;\n`;\n\nexport const NoumCardWrapper = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 16px;\n  gap: 12px;\n  width: auto;\n  height: 75px;\n  flex: none;\n  align-self: stretch;\n  flex-grow: 0;\n  border-radius: 16px;\n  border: 1px solid var(--border-card-neutral-highlighted);\n`;\n\nexport const NoumWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 0px;\n  gap: 8px;\n  flex: none;\n  align-self: stretch;\n  flex-grow: 0;\n`;\n\nexport const ProfileWarpper = styled.div`\n  width: 40px;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  align-self: center;\n`;\n\nexport const Profile = styled.img<{ isExpired?: boolean }>`\n  height: 40px;\n  width: 40px;\n  ${({ isExpired }) =>\n    isExpired &&\n    'filter: grayscale(100%); -webkit-filter: grayscale(100%); opacity:0.4;'}\n`;\n\nexport const NoumMetaData = styled.div<{ width?: string }>`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 0px;\n  flex: none;\n  flex-grow: 1;\n  width: ${(props) => (props.width ? props.width : '277px')};\n  height: auto;\n`;\n\nexport const ExpiryDateSection = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0px;\n  gap: 4px;\n  height: 19px;\n  flex: none;\n  flex-grow: 0;\n`;\n\nexport const ErrorMessage = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0px;\n  gap: 4px;\n  height: 19px;\n  flex: none;\n  flex-grow: 0;\n`;\n\nexport const ErrorBoxCol = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ErrorBoxRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 4px;\n`;\n","import { memo } from 'react';\nimport { t } from 'i18next';\nimport { TSpan } from '@/components/Typography';\nimport { Icon } from '@/components/Icon';\nimport { useDeviceType, DeviceTypeEnum } from '@/hooks';\nimport Tooltip from '@/components/Tooltip';\nimport { useBreakpoints } from '@/hooks/useBreakpoints';\nimport { ExpiryDateSection } from './styles';\nimport { type TextGeneratorType } from './types';\n\nconst TextGenerator = memo(\n  ({\n    iconColor,\n    textColor,\n    expiryDate,\n    daysLeft,\n    isGracePeriod,\n    isExpired,\n    showClockIcon,\n  }: TextGeneratorType) => {\n    const deviceType = useDeviceType();\n    const { isMobile } = useBreakpoints();\n    return (\n      <ExpiryDateSection>\n        {showClockIcon && !isGracePeriod && (\n          <Icon name=\"time_m\" size={18} color={iconColor} />\n        )}\n        {showClockIcon && isGracePeriod && (\n          <Tooltip top={33} left={isMobile ? -53 : 10} iconColor={iconColor}>\n            <div style={{ width: isMobile ? '300px' : '345px' }}>\n              <TSpan\n                colorToken=\"--text-tooltip-neutral-alt-default\"\n                font=\"footnote\"\n              >\n                {t('noumena.money.subscription.noum.grace.period.tooltip.text')}\n              </TSpan>\n            </div>\n          </Tooltip>\n        )}\n        <TSpan font=\"footnote\" colorToken={textColor}>\n          {isGracePeriod\n            ? 'Grace period'\n            : isExpired\n            ? t('noumena.money.myplans.expired')\n            : t('noumena.money.myplans.expires')}\n        </TSpan>\n        {!isGracePeriod && (\n          <TSpan font=\"footnote-bold\" colorToken={textColor}>\n            {expiryDate}\n          </TSpan>\n        )}\n        {((daysLeft < 30 && daysLeft > 0) || isGracePeriod) &&\n          deviceType !== DeviceTypeEnum.MOBILE && (\n            <TSpan font=\"footnote-bold\" colorToken={textColor}>\n              (\n              {isGracePeriod\n                ? Math.abs(Math.abs(daysLeft) - 10)\n                : Math.abs(daysLeft)}{' '}\n              days left)\n            </TSpan>\n          )}\n      </ExpiryDateSection>\n    );\n  },\n);\n\nexport default TextGenerator;\n","import { memo, useCallback, useState } from 'react';\nimport { t } from 'i18next';\nimport { TSpan } from '@/components/Typography';\nimport { Button } from '@/components/Button';\nimport mainWallet from '@/assets/images/main-wallet.svg';\nimport { DeviceTypeEnum, useDeviceType, useToast } from '@/hooks';\nimport { Status_Noum } from '@/apollo/generated/types';\nimport {\n  NoumCardWrapper,\n  NoumMetaData,\n  Profile,\n  ProfileWarpper,\n  ExpiryDateSection,\n} from './styles';\nimport { type NoumDataType, Plans, SCREEN } from './types';\nimport TextGenerator from './TextGenerator';\nimport RenewNoumModal from './RenewNoumModal';\nimport { countDaysToExpire, DateFormatter } from './helper';\n\nconst NoumCard = memo((data: NoumDataType) => {\n  const [renewModalIsOpen, setRenewModdalIsOpen] = useState<boolean>(false);\n  const { addToast } = useToast();\n  const deviceType = useDeviceType();\n\n  const onRenewOpen = useCallback(() => {\n    setRenewModdalIsOpen(true);\n  }, []);\n\n  const onRenewClose = useCallback(() => {\n    setRenewModdalIsOpen(false);\n  }, []);\n\n  const checkSlotAllocation = useCallback(() => {\n    if (\n      data.launchFrom === SCREEN.PLAN_DETAILS &&\n      (data.subscriptionStatus === Plans.INACTIVE ||\n        data.subscriptionStatus === Plans.CANCELLED)\n    ) {\n      addToast(\n        'error',\n        'none',\n        `${t('noumena.toast_error.text')}: ${t(\n          'noumena.money.myplans.createNoum.expiredSubscription',\n        )}`,\n      );\n    } else if (data.status === Status_Noum.Suspended) {\n      addToast(\n        'error',\n        'none',\n        `${t('noumena.toast_error.text')}: ${t(\n          'noumena.money.myplans.createNoum.suspenededNoum',\n        )}`,\n      );\n    } else {\n      onRenewOpen();\n    }\n  }, [\n    addToast,\n    data.launchFrom,\n    data.status,\n    data.subscriptionStatus,\n    onRenewOpen,\n  ]);\n\n  return (\n    <NoumCardWrapper>\n      <ProfileWarpper>\n        <Profile\n          src={\n            data?.chamber_id?.profileImage === null\n              ? mainWallet\n              : data?.chamber_id?.profileImage\n          }\n          alt=\"profile\"\n          isExpired={data.status === Status_Noum.Archived}\n        />\n      </ProfileWarpper>\n      <NoumMetaData\n        width={\n          deviceType === DeviceTypeEnum.MOBILE\n            ? '158px'\n            : deviceType === DeviceTypeEnum.TABLET\n            ? '500px'\n            : undefined\n        }\n      >\n        <TSpan\n          font=\"body-l-bold\"\n          colorToken={\n            data.status === Status_Noum.Archived\n              ? '--text-card-header-neutral-default'\n              : '--text-card-header-neutral-highlighted'\n          }\n        >\n          {data?.chamber_id?.name}\n        </TSpan>\n        <ExpiryDateSection>\n          <TextGenerator\n            isExpired={\n              data.status === Status_Noum.Archived ||\n              data.status === Status_Noum.Suspended\n            }\n            daysLeft={Number(countDaysToExpire(data?.valid_till))}\n            isGracePeriod={data.status === Status_Noum.Delinquent}\n            expiryDate={DateFormatter(data?.valid_till)}\n            showClockIcon={\n              data.status === Status_Noum.Archived ||\n              data.status === Status_Noum.Delinquent ||\n              data.status === Status_Noum.Suspended ||\n              (Number(countDaysToExpire(data?.valid_till)) < 31 &&\n                Number(countDaysToExpire(data?.valid_till)) > 0)\n            }\n            iconColor={\n              data.status === Status_Noum.Archived\n                ? '--icon-card-danger-primary-default'\n                : data.status === Status_Noum.Delinquent\n                ? '--icon-card-brand-primary-default'\n                : '--icon-card-neutral-highlighted'\n            }\n            textColor={\n              data.status === Status_Noum.Delinquent\n                ? '--text-card-brand-primary-default'\n                : data.status === Status_Noum.Archived\n                ? '--text-card-danger-primary-default'\n                : Number(countDaysToExpire(data?.valid_till)) < 30\n                ? '--text-card-header-neutral-highlighted'\n                : '--text-card-header-neutral-default'\n            }\n          />\n        </ExpiryDateSection>\n      </NoumMetaData>\n\n      {data.status === Status_Noum.Archived ||\n      data.status === Status_Noum.Delinquent ||\n      Number(countDaysToExpire(data?.valid_till)) < 30 ? (\n        <Button\n          size=\"small\"\n          primary\n          style={{ width: '75px' }}\n          onClick={() => checkSlotAllocation()}\n        >\n          {t('noumena.money.myplans.renew')}\n        </Button>\n      ) : (\n        <Button\n          size=\"small\"\n          secondary\n          style={{ width: '75px' }}\n          onClick={() => checkSlotAllocation()}\n        >\n          {t('noumena.money.myplans.renew')}\n        </Button>\n      )}\n      {renewModalIsOpen && (\n        <RenewNoumModal\n          open={renewModalIsOpen}\n          onClose={() => onRenewClose()}\n          chamber_id={data?.chamber_id}\n          launchFrom={data.launchFrom}\n          itemType={data.itemType}\n          noum_transaction_fee_id={data.noum_transaction_fee_id}\n          noumExpiryDate={data?.valid_till}\n        />\n      )}\n    </NoumCardWrapper>\n  );\n});\n\nexport default NoumCard;\n","import { memo, useCallback, useState } from 'react';\nimport Skeleton from 'react-loading-skeleton';\nimport { t } from 'i18next';\nimport { useLocation, useNavigate } from 'react-router';\nimport { TSpan } from '@/components/Typography';\nimport { Icon } from '@/components/Icon';\nimport { Button } from '@/components/Button';\nimport { useToast } from '@/hooks/toast';\nimport { useNoumTransactions } from '@/features/money/hooks';\nimport {\n  type NoumTransactionDetailInputType,\n  Subscription_Plan_Type,\n} from '@/apollo/generated/types';\nimport NoumCard from './NoumCard';\nimport { type MyNoumProps, Plans, SCREEN } from './types';\nimport { NoumHeader, EmptyNoumData, NoumFooter, NoumWrapper } from './styles';\nimport ProjectCreate from '../Chamber/components/modals/ProjectCreate';\n\nconst MyNoums = memo(\n  ({\n    launchFrom,\n    subscription_id,\n    itemType,\n    subscriptionStatus,\n  }: MyNoumProps) => {\n    const [noumModalIsOpen, setNoumModdalIsOpen] = useState<boolean>(false);\n    const { addToast } = useToast();\n    const { pathname } = useLocation();\n    const navigate = useNavigate();\n\n    const requestParameter = () => {\n      let parameter: NoumTransactionDetailInputType = {};\n      if (launchFrom === SCREEN.PLAN_DETAILS) {\n        if (itemType === Subscription_Plan_Type.Charge) {\n          parameter = { plan_type: Subscription_Plan_Type.Charge };\n        } else {\n          parameter = { subscription_id };\n        }\n      }\n\n      return parameter;\n    };\n\n    const { noumData, loading } = useNoumTransactions(requestParameter());\n\n    const onNoumModalOpen = useCallback(() => {\n      setNoumModdalIsOpen(true);\n    }, []);\n\n    const onNoumModalClose = useCallback(() => {\n      setNoumModdalIsOpen(false);\n    }, []);\n\n    const checkSlotAllocation = useCallback(() => {\n      if (\n        launchFrom === SCREEN.PLAN_DETAILS &&\n        (subscriptionStatus === Plans.INACTIVE ||\n          subscriptionStatus === Plans.CANCELLED)\n      ) {\n        addToast(\n          'error',\n          'none',\n          `${t('noumena.toast_error.text')}: ${t(\n            'noumena.money.myplans.createNoum.expiredSubscription',\n          )}`,\n        );\n      } else {\n        onNoumModalOpen();\n      }\n    }, [addToast, launchFrom, onNoumModalOpen, subscriptionStatus]);\n\n    const onCreateSuccess = useCallback(\n      (id: string) => {\n        navigate(`/noum/${id}/edit`, { state: { prevPath: pathname } });\n      },\n      [navigate, pathname],\n    );\n\n    return (\n      <>\n        <NoumHeader height={noumData.length > 0 ? '40px' : undefined}>\n          <TSpan\n            font=\"heading-xs-bold\"\n            colorToken=\"--text-card-neutral-highlighted\"\n          >\n            {' '}\n            {t('noumena.money.myplans.mynoums')}\n          </TSpan>\n          {noumData.length > 0 && (\n            <Button\n              size=\"small\"\n              tertiary\n              leftIcon={\n                <Icon\n                  name=\"add_m\"\n                  color=\"--icon-button-neutral-default\"\n                  size={24}\n                />\n              }\n              style={{ width: '172px' }}\n              onClick={() => checkSlotAllocation()}\n            >\n              {t('noumena.money.myplans.addnewnoum')}\n            </Button>\n          )}\n        </NoumHeader>\n        {loading && (\n          <>\n            <div style={{ width: '100%' }}>\n              <Skeleton count={4} borderRadius={16} height={75} />\n            </div>\n          </>\n        )}\n        {noumData.length <= 0 && !loading && (\n          <EmptyNoumData>\n            <Icon\n              name=\"social_hall_m\"\n              size={96}\n              color=\"--bg-card-neutral-alt-default\"\n            />\n            <TSpan\n              font=\"body-m\"\n              colorToken=\"--text-placeholder-neutral-default\"\n            >\n              {t('noumena.money.myplans.nonoumdata')}\n            </TSpan>\n          </EmptyNoumData>\n        )}\n        {noumData.length > 0 && (\n          <NoumWrapper>\n            {noumData.map((data) => (\n              <NoumCard\n                key={data?.chamber_id?._id || ''}\n                uid={data?.uid}\n                noum_transaction_fee_id={data?.noum_transaction_fee_id}\n                chamber_id={data?.chamber_id}\n                valid_till={data?.valid_till}\n                status={data?.status}\n                per_item_fee={data?.per_item_fee}\n                percent_fee={data?.percent_fee}\n                launchFrom={launchFrom}\n                itemType={itemType}\n                subscriptionStatus={subscriptionStatus}\n              />\n            ))}\n          </NoumWrapper>\n        )}\n        {noumData.length <= 0 && !loading && (\n          <NoumFooter>\n            {' '}\n            <Button\n              size=\"small\"\n              secondary\n              style={{ width: '178px' }}\n              onClick={() => checkSlotAllocation()}\n            >\n              {t('noumena.money.myplans.addFirstNoum')}\n            </Button>\n          </NoumFooter>\n        )}\n        {noumModalIsOpen && (\n          <ProjectCreate\n            isOpen={noumModalIsOpen}\n            handleClose={() => onNoumModalClose()}\n            handleSuccess={onCreateSuccess}\n          />\n        )}\n      </>\n    );\n  },\n);\n\nexport default MyNoums;\n"],"names":["MainLayoutWrapper","styled","Card","props","isSmallScreen","mediaSizes","MOBILE_XL_MAX","TABLET_MAX","SideLayoutWrapper","PlanHeader","div","PlanTopWrapper","isMobile","PlanInfoTile","width","ActivePlans","ActivePlanBox","height","TextRow","TextColumn","PlanMetaData","MainContent","PlanFees","PlanFeesMobile","PlanNoumInfo","NoumHeader","NoumFooter","EmptyNoumData","NoumCardWrapper","NoumWrapper","ProfileWarpper","Profile","img","isExpired","NoumMetaData","ExpiryDateSection","ErrorMessage","ErrorBoxCol","ErrorBoxRow","TextGenerator","memo","iconColor","textColor","expiryDate","daysLeft","isGracePeriod","showClockIcon","deviceType","useDeviceType","useBreakpoints","jsxs","jsx","Icon","Tooltip","TSpan","t","DeviceTypeEnum","MOBILE","Math","abs","NoumCard","data","renewModalIsOpen","setRenewModdalIsOpen","useState","addToast","useToast","onRenewOpen","useCallback","onRenewClose","checkSlotAllocation","launchFrom","SCREEN","PLAN_DETAILS","subscriptionStatus","Plans","INACTIVE","CANCELLED","status","Status_Noum","Suspended","chamber_id","profileImage","mainWallet","Archived","TABLET","undefined","name","Number","countDaysToExpire","valid_till","Delinquent","DateFormatter","Button","RenewNoumModal","itemType","noum_transaction_fee_id","MyNoums","subscription_id","noumModalIsOpen","setNoumModdalIsOpen","pathname","useLocation","navigate","useNavigate","requestParameter","parameter","Subscription_Plan_Type","Charge","plan_type","noumData","loading","useNoumTransactions","onNoumModalOpen","onNoumModalClose","onCreateSuccess","id","state","prevPath","Fragment","length","Skeleton","map","uid","per_item_fee","percent_fee","_id","ProjectCreate"],"mappings":"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"}