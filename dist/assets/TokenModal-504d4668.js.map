{"version":3,"file":"TokenModal-504d4668.js","sources":["../../src/features/money/hooks/useCQ.ts","../../src/screens/Money/Payments/Tokens/styles.ts","../../src/screens/Money/Payments/Tokens/TokenModal.tsx"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useCapitalquotientLazyQuery } from '@/apollo/graphql/queries/getCQDetails.generated';\nimport { useGetNoumenaScoreByNoumIdLazyQuery } from '@/apollo/graphql/queries/getNoumenaScoreByNoumId.generated';\n\nexport const useCQ = (spaceId?: string, isVisitor?: boolean) => {\n  const [state, setState] = useState<{\n    fetching: boolean;\n    status: string;\n    visibility: string;\n    score: string;\n    noumId: string | null | undefined;\n  }>({ fetching: true, status: '', visibility: '', score: '', noumId: '' });\n\n  const { t } = useTranslation();\n  const [gqlCQDetails] = useCapitalquotientLazyQuery();\n  const [getCapitalQuotientByNoum] = useGetNoumenaScoreByNoumIdLazyQuery();\n\n  const fetchData = useCallback(async () => {\n    const newState = { ...state };\n    newState.fetching = false;\n    if (isVisitor && spaceId) {\n      const visitorCqData = await getCapitalQuotientByNoum({\n        variables: { noumId: spaceId },\n      });\n      newState.noumId =\n        visitorCqData?.data?.capitalquotient?.getNoumenaScoreByNoumId?.noumId;\n      newState.visibility =\n        visitorCqData?.data?.capitalquotient?.getNoumenaScoreByNoumId\n          ?.capitalQuotient === null\n          ? 'Private'\n          : 'Public';\n      newState.score =\n        visitorCqData?.data?.capitalquotient?.getNoumenaScoreByNoumId\n          ?.capitalQuotient || '';\n    } else {\n      const res = await gqlCQDetails({});\n      newState.status = generateText(\n        res.data?.capitalquotient?.getNoumenaScore?.status,\n      );\n      newState.noumId =\n        (res?.data?.getSpaceByType &&\n          res?.data.getSpaceByType.length &&\n          res?.data.getSpaceByType[0]?._id) ||\n        '';\n      newState.visibility = convertText(\n        res.data?.capitalquotient?.getNoumenaScore?.visibility,\n      );\n      newState.score =\n        res?.data?.capitalquotient?.getNoumenaScore?.capitalQuotient || '';\n    }\n    setState(newState);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [gqlCQDetails]);\n\n  const generateText = (str: string | null | undefined) => {\n    if (!str) return '';\n    if (str === 'IN_COMPLETE') {\n      return t(`noumena.money.cq.incomplete`);\n    }\n    return t(`noumena.money.cq.complete`);\n  };\n\n  const convertText = (str: string | null | undefined) => {\n    if (!str) return '';\n    if (str === 'PRIVATE') {\n      return t(`noumena.money.cq.private`);\n    }\n    return t(`noumena.money.cq.public`);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  return { cqData: state };\n};\n","import styled from 'styled-components';\nimport { sizes } from '@/constants/devices';\nimport { ModalHeader } from '@/components/ExtendedModal';\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 454px;\n  position: relative;\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    width: 100%;\n  }\n`;\n\nexport const BalanceWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  text-align: center;\n  align-items: center;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  align-self: flex-start;\n`;\nexport const Close = styled.div`\n  position: absolute;\n  left: calc(50% + 200px);\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    left: calc(50% + 130px);\n  }\n`;\n\nexport const StyledModalHeader = styled(ModalHeader)`\n  padding-bottom: unset;\n`;\n\nexport const TransactionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  max-height: 500px;\n  width: 100%;\n  overflow: auto;\n`;\nexport const WalletContainer = styled.div`\n  border-bottom: 1px solid var(--bg-separator-neutral-default);\n  padding: 20px 16px 20px;\n  flex-direction: column;\n  flex-grow: 1;\n`;\nexport const DateContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  flex-grow: 1;\n  margin-left: 16px;\n`;\nexport const LeftItem = styled.div``;\n\nexport const RightItem = styled.div`\n  margin-left: auto;\n  margin-right: 16px;\n`;\nexport const Profile = styled.img`\n  height: 40px;\n  width: 40px;\n  margin-right: 16px;\n  border-radius: 10px;\n`;\nexport const ProfileWarpper = styled.div`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import { useTranslation } from 'react-i18next';\nimport { useMemo } from 'react';\nimport { isEmpty, groupBy } from 'lodash';\nimport { Modal, ModalBody, ModalSize } from '@/components/ExtendedModal';\nimport { TSpan } from '@/components/Typography';\nimport { useGetTokenTransactionQuery } from '@/apollo/graphql';\nimport mainWallet from '@/assets/images/main-wallet.svg';\nimport { formatDateString } from '@/utils/getTimeStampForDisplaying';\nimport { Button } from '@/components/Button';\nimport { DeviceTypeEnum, useDeviceType, useWindowDimensions } from '@/hooks';\nimport * as Styles from './styles';\n\nconst TokenModal = (props: { open: boolean; onClose: Function }) => {\n  const deviceType = useDeviceType();\n  const { t } = useTranslation();\n  const { data, loading } = useGetTokenTransactionQuery();\n  const { height } = useWindowDimensions();\n  const isMobile = deviceType === DeviceTypeEnum.MOBILE;\n  const info = useMemo(() => {\n    if (data?.getSpaceByType && data?.getSpaceByType[0]) {\n      return data?.getSpaceByType[0];\n    }\n    return {\n      token: {\n        count: 0,\n      },\n      tokenTransaction: {\n        data: [],\n      },\n    };\n  }, [data]);\n\n  const groupedByDay = groupBy(info.tokenTransaction?.data, (item) =>\n    formatDateString(new Date(item?.createdAt)),\n  );\n\n  return (\n    <Modal\n      size={ModalSize.L}\n      disableBackdropClick\n      disableEscapeKeyDown\n      enableCloseButton\n      onClose={() => props.onClose()}\n      open={props.open}\n    >\n      {loading ? (\n        <>\n          <ModalBody align=\"center\">\n            <Button loading neutral />\n          </ModalBody>\n        </>\n      ) : (\n        <>\n          <Styles.BalanceWrapper>\n            <TSpan font=\"body-xl\" colorToken=\"--text-card-neutral-default\">\n              {t(`noumena.money.tokenHeader`)}\n            </TSpan>\n            <TSpan\n              font=\"heading-xxl\"\n              textAlign=\"center\"\n              colorToken=\"--text-card-header-neutral-highlighted\"\n            >\n              {info.token?.count}\n            </TSpan>\n          </Styles.BalanceWrapper>\n          {!isEmpty(groupedByDay) && (\n            <ModalBody\n              style={{ display: 'block' }}\n              align=\"center\"\n              minHeight={isMobile ? height - 106 : 'auto'}\n            >\n              {Object.keys(groupedByDay).map((key: string) => (\n                <div key={key}>\n                  <Styles.Container>\n                    <Styles.DateContainer>\n                      <TSpan\n                        font=\"body-m-bold\"\n                        colorToken=\"--text-card-header-neutral-default\"\n                      >\n                        {key}\n                      </TSpan>\n                    </Styles.DateContainer>\n                  </Styles.Container>\n                  {groupedByDay[key].length > 0 &&\n                    groupedByDay[key as string].map((transaction) => (\n                      <Styles.WalletContainer key={transaction?.createdAt}>\n                        <Styles.Container>\n                          <Styles.LeftItem>\n                            <Styles.ProfileWarpper>\n                              <Styles.Profile src={mainWallet} alt=\"profile\" />\n                              <Styles.TextContainer>\n                                <TSpan\n                                  font=\"body-l-bold\"\n                                  colorToken=\"--text-tablecell-header-neutral-highlighted\"\n                                >\n                                  {t('noumena.default.brand_name')}\n                                </TSpan>\n                                <TSpan\n                                  font=\"body-m\"\n                                  colorToken=\"--text-tablecell-body-neutral-default\"\n                                >\n                                  {transaction?.message}\n                                </TSpan>\n                              </Styles.TextContainer>\n                            </Styles.ProfileWarpper>\n                          </Styles.LeftItem>\n                          <Styles.RightItem>\n                            {(transaction?.count || 0) >= 0 ? (\n                              <TSpan\n                                font=\"body-xl-bold\"\n                                colorToken=\"--text-tablecell-success-primary-default\"\n                              >\n                                + {transaction?.count}\n                              </TSpan>\n                            ) : (\n                              <TSpan\n                                font=\"body-xl-bold\"\n                                colorToken=\"--text-tablecell-danger-primary-default\"\n                              >\n                                {transaction?.count}\n                              </TSpan>\n                            )}\n                          </Styles.RightItem>\n                        </Styles.Container>\n                      </Styles.WalletContainer>\n                    ))}\n                </div>\n              ))}\n            </ModalBody>\n          )}\n          {isEmpty(groupedByDay) && (\n            <ModalBody align=\"center\">\n              <TSpan\n                font=\"body-l\"\n                textAlign=\"center\"\n                colorToken=\"--text-modal-neutral-default\"\n              >\n                {t('noumena.money.noTransactions')}\n              </TSpan>\n            </ModalBody>\n          )}\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default TokenModal;\n"],"names":["useCQ","spaceId","isVisitor","state","setState","useState","fetching","status","visibility","score","noumId","t","useTranslation","gqlCQDetails","useCapitalquotientLazyQuery","getCapitalQuotientByNoum","useGetNoumenaScoreByNoumIdLazyQuery","fetchData","useCallback","newState","visitorCqData","variables","data","capitalquotient","getNoumenaScoreByNoumId","capitalQuotient","res","generateText","getNoumenaScore","getSpaceByType","length","_id","convertText","str","useEffect","cqData","styled","div","sizes","MOBILE_MAX","BalanceWrapper","Container","ModalHeader","WalletContainer","DateContainer","LeftItem","RightItem","Profile","img","ProfileWarpper","TextContainer","TokenModal","props","deviceType","useDeviceType","loading","useGetTokenTransactionQuery","height","useWindowDimensions","isMobile","DeviceTypeEnum","MOBILE","info","useMemo","token","count","tokenTransaction","groupedByDay","groupBy","item","formatDateString","Date","createdAt","Modal","ModalSize","L","onClose","open","jsx","ModalBody","Button","jsxs","Fragment","Styles.BalanceWrapper","TSpan","isEmpty","display","Object","keys","map","key","Styles.Container","Styles.DateContainer","transaction","Styles.WalletContainer","Styles.LeftItem","Styles.ProfileWarpper","Styles.Profile","mainWallet","Styles.TextContainer","message","Styles.RightItem"],"mappings":"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"}