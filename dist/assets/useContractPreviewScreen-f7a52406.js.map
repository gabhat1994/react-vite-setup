{"version":3,"file":"useContractPreviewScreen-f7a52406.js","sources":["../../src/features/contracts/components/AttachedFile/AttachedFileListItem.tsx","../../src/features/contracts/components/AttachedFile/AttachedFileListSkeleton.tsx","../../src/features/contracts/components/ContactSummary/styles.ts","../../src/features/contracts/components/ContactSummary/ContactSummary.tsx","../../src/features/contracts/components/LegalRegionDisplay/LegalRegionDisplay.tsx","../../src/features/contracts/components/ContractPreview/styles.ts","../../src/features/contracts/components/ContractPreview/ContractPreview.tsx","../../src/features/contracts/hooks/contractPreviewValidation.ts","../../src/features/contracts/hooks/contractSigning.ts","../../src/screens/Contracts/ContractPreview/useContractPreviewScreen.ts"],"sourcesContent":["import { Icon } from '@/components/Icon';\nimport { type IconProps } from '@/components/Icon/Icon';\nimport { TSpan } from '@/components/Typography';\nimport { Stack } from '@/layout';\n\ninterface AttachedFileListItemProps {\n  title: string;\n  iconName?: IconProps['name'];\n}\n\nexport function AttachedFileListItem({\n  title,\n  iconName = 'file_m',\n}: AttachedFileListItemProps) {\n  return (\n    <Stack gap={12} align=\"center\">\n      <Icon name={iconName} size={24} />\n\n      <TSpan font=\"body-m-bold\">{title}</TSpan>\n    </Stack>\n  );\n}\n","import Skeleton from 'react-loading-skeleton';\nimport { Stack } from '@/layout';\n\nexport function AttachedFileListSkeleton({ rows }: { rows: number }) {\n  return (\n    <Stack gap={12} vertical align=\"stretch\">\n      {Array.from({ length: rows }).map((_, index) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <Skeleton key={index} width=\"100%\" height={24} />\n      ))}\n    </Stack>\n  );\n}\n","import styled from 'styled-components';\nimport { TSpan } from '@/components/Typography';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: max-content auto;\n  grid-template-rows: auto;\n  grid-template-areas:\n    'contact contact'\n    'account-label account-value'\n    'billing-label billing-value';\n  gap: 8px 32px;\n`;\n\nconst Label = styled(TSpan).attrs(() => ({\n  font: 'body-m',\n  colorToken: '--text-card-neutral-default',\n}))``;\nconst Value = styled(TSpan).attrs(() => ({\n  font: 'body-m',\n  colorToken: '--text-card-neutral-highlighted',\n}))``;\n\nconst Contact = styled.div`\n  grid-area: contact;\n`;\n\nconst AccountLabel = styled(Label)`\n  grid-area: account-label;\n`;\nconst AccountValue = styled(Value)`\n  grid-area: account-value;\n`;\nconst BillingLabel = styled(Label)`\n  grid-area: billing-label;\n`;\nconst BillingValue = styled(Value)`\n  grid-area: billing-value;\n`;\n\nexport default {\n  Wrapper,\n  Contact,\n  AccountLabel,\n  AccountValue,\n  BillingLabel,\n  BillingValue,\n};\n","import { ContactDetailsUtils } from '@/features/noumContacts/utils/contactDetails';\nimport { getCountryByCode } from '@/utils/country';\nimport { type ContactSummaryFragment } from '../../types';\nimport { EntityDisplay } from '../EntityDisplay/EntityDisplay';\nimport S from './styles';\n\ninterface ContactSummaryProps {\n  contact: ContactSummaryFragment;\n}\n\nexport function ContactSummary({ contact }: ContactSummaryProps) {\n  return (\n    <S.Wrapper>\n      <S.Contact>\n        <EntityDisplay\n          name={contact.displayName}\n          avatarUrl={\n            contact.userId.profile?.profilePictureThumbnail ?? undefined\n          }\n        />\n      </S.Contact>\n\n      <S.AccountLabel>Account Information</S.AccountLabel>\n      <S.AccountValue>\n        {contact.displayName}\n        <br />\n        {ContactDetailsUtils.formatCompanyAndTitle(contact)}\n        <br />\n        {contact.userId.email}\n      </S.AccountValue>\n\n      <S.BillingLabel>Billing Details</S.BillingLabel>\n      <S.BillingValue>\n        {contact.apartmentNo} {contact.street}\n        <br />\n        {contact.city}\n        <br />\n        {contact.state}, {contact.zipCode}\n        <br />\n        {getCountryByCode(contact.country)?.name ?? '--'}\n      </S.BillingValue>\n    </S.Wrapper>\n  );\n}\n","import { Flag } from '@/components/Flag';\nimport { type FlagProps } from '@/components/Flag/Flag';\nimport { TSpan } from '@/components/Typography';\nimport { Stack } from '@/layout';\nimport { LegalRegionService } from '../../services/LegalRegionService';\n\ninterface LegalRegionDisplayProps {\n  country: string | null | undefined;\n  region: string | null | undefined;\n}\nexport function LegalRegionDisplay({\n  country,\n  region,\n}: LegalRegionDisplayProps) {\n  if (!country || !LegalRegionService.isValidCountryCode(country)) {\n    return <>--</>;\n  }\n\n  const formattedLegalRegion = LegalRegionService.formatLegalRegion(\n    country,\n    region ?? null,\n  );\n\n  return (\n    <Stack gap={8} align=\"center\">\n      <Flag flag={`flag_${country}` as FlagProps['flag']} size={24} />\n      <TSpan font=\"body-m\">{formattedLegalRegion}</TSpan>\n    </Stack>\n  );\n}\n","import styled from 'styled-components';\nimport { Card as OriginalCard } from '@/components/Card';\nimport { Separator as OriginalSeparator } from '@/components/Separator/Separator';\nimport { TSpan } from '@/components/Typography';\n\nconst Card = styled(OriginalCard)`\n  padding: 24px;\n`;\n\nconst Separator = styled(OriginalSeparator)`\n  width: 100%;\n  margin: 0;\n`;\n\nconst PDFPreview = styled.div`\n  width: 100%;\n  height: 300px;\n  background-color: var(--text-tab-basic-neutral-disabled);\n  border-radius: 8px;\n`;\n\nconst NoSOWsValue = styled(TSpan).attrs(() => ({\n  font: 'body-m',\n  colorToken: '--text-card-neutral-default',\n}))`\n  margin-left: 12px;\n`;\n\nconst SowButtonLink = styled.div`\n  cursor: pointer;\n`;\n\nexport default {\n  Card,\n  Separator,\n  PDFPreview,\n  NoSOWsValue,\n  SowButtonLink,\n};\n","import { useTranslation } from 'react-i18next';\nimport { Infobox } from '@/components/Infobox';\nimport { TSpan } from '@/components/Typography';\nimport { Stack, StackItem } from '@/layout';\nimport { ApiPayloadParser } from '@/utils/api/payloadParser';\nimport { formatDateString } from '@/utils/getTimeStampForDisplaying';\nimport { RouterLink } from '@/components/Link';\nimport { useContractPermissions } from '../../hooks/contractPermissions';\nimport { useContractPreviewFormContext } from '../../hooks/contractPreviewForm';\nimport {\n  type Contract,\n  DocumentType,\n  type StatementOfWorkBasic,\n} from '../../types';\nimport { ContractUtils } from '../../utils/contract';\nimport { AgreementCheckbox } from '../AgreementCheckbox/AgreementCheckbox';\nimport { AttachedFileListItem } from '../AttachedFile/AttachedFileListItem';\nimport { AttachedFileListSkeleton } from '../AttachedFile/AttachedFileListSkeleton';\nimport { ContactSummary } from '../ContactSummary/ContactSummary';\nimport { DocumentStatusTag } from '../DocumentStatusTag/DocumentStatusTag';\nimport { EntityDisplay } from '../EntityDisplay/EntityDisplay';\nimport { LegalRegionDisplay } from '../LegalRegionDisplay/LegalRegionDisplay';\nimport { LabelValue } from '../LabelValue/LabelValue';\nimport { Section } from '../Section/Section';\nimport S from './styles';\nimport { ContractToolRoutes } from '../../utils/routes';\nimport { DocumentTimeline } from '../DocumentTimeline/DocumentTimeline';\n\ninterface ContractPreviewProps {\n  contract: Contract;\n  linkedSows: StatementOfWorkBasic[];\n  isLoadingLinkedSows: boolean;\n  onLinkedSowClick?: Function;\n}\n\nexport function ContractPreview({\n  contract,\n  linkedSows,\n  isLoadingLinkedSows,\n  onLinkedSowClick,\n}: ContractPreviewProps) {\n  const { t } = useTranslation();\n\n  const ContractPermissions = useContractPermissions();\n\n  const {\n    formState: { isValid, isSubmitted },\n  } = useContractPreviewFormContext();\n\n  const hasAgreementsError = isSubmitted && !isValid;\n\n  const canSign = ContractPermissions.canSign(contract);\n\n  return (\n    <Stack gap={24} vertical align=\"stretch\">\n      <S.Card>\n        <Section\n          title={\n            <>\n              <TSpan font=\"heading-xs-bold\">{contract.title}</TSpan>\n              <DocumentStatusTag status={contract.status} />\n            </>\n          }\n          titleSideAddon={\n            <TSpan font=\"body-m\" colorToken=\"--text-card-neutral-disabled\">\n              ID:{' '}\n              {ContractUtils.formatDocumentNumber(contract.contractNumber ?? 0)}\n            </TSpan>\n          }\n        >\n          <Stack gap={24}>\n            <LabelValue\n              label=\"Effective Date\"\n              value={\n                contract.effectiveDate\n                  ? formatDateString(\n                      ApiPayloadParser.parseDateString(contract.effectiveDate),\n                    )\n                  : '--'\n              }\n            />\n            <LabelValue\n              label=\"Termination Notice\"\n              value={\n                contract.terminationNoticeInDays\n                  ? t('noumena.n_days', {\n                      count: contract.terminationNoticeInDays,\n                      postProcess: 'interval',\n                    })\n                  : '--'\n              }\n            />\n            <LabelValue\n              label=\"Governing Law\"\n              value={\n                <LegalRegionDisplay\n                  country={contract.legalJurisdiction?.country}\n                  region={contract.legalJurisdiction?.state}\n                />\n              }\n            />\n            <LabelValue\n              label=\"Arbitration\"\n              value={\n                <LegalRegionDisplay\n                  country={contract.arbitrationJurisdiction?.country}\n                  region={contract.arbitrationJurisdiction?.state}\n                />\n              }\n            />\n            <StackItem grow>\n              <LabelValue\n                label=\"Noum\"\n                value={\n                  <EntityDisplay\n                    name={contract.linkedNoum?.name ?? ''}\n                    avatarUrl={\n                      contract.linkedNoum?.profileImageThumbnail ?? undefined\n                    }\n                  />\n                }\n              />\n            </StackItem>\n          </Stack>\n        </Section>\n      </S.Card>\n      <S.Card>\n        <Stack gap={16} vertical align=\"stretch\">\n          <Stack align=\"stretch\">\n            <Section variant=\"sub-section\" title=\"Buyer\">\n              {contract.buyer ? (\n                <ContactSummary contact={contract.buyer} />\n              ) : (\n                '--'\n              )}\n            </Section>\n            <Section variant=\"sub-section\" title=\"Service Provider\">\n              {contract.seller ? (\n                <ContactSummary contact={contract.seller} />\n              ) : (\n                '--'\n              )}\n            </Section>\n          </Stack>\n          <S.Separator />\n          <Section variant=\"sub-section\" title=\"Statement of Work\">\n            <Stack vertical gap={8} align=\"stretch\">\n              {isLoadingLinkedSows ? (\n                <AttachedFileListSkeleton rows={3} />\n              ) : linkedSows.length > 0 ? (\n                linkedSows.map((statementOfWork) =>\n                  onLinkedSowClick ? (\n                    <S.SowButtonLink\n                      key={statementOfWork._id}\n                      role=\"button\"\n                      tabIndex={0}\n                      onKeyPress={() => {}}\n                      onClick={() => {\n                        onLinkedSowClick({\n                          contractId: undefined,\n                          sowId: statementOfWork._id,\n                        });\n                      }}\n                    >\n                      <AttachedFileListItem\n                        title={statementOfWork.title ?? '--'}\n                      />\n                    </S.SowButtonLink>\n                  ) : (\n                    <RouterLink\n                      key={statementOfWork._id}\n                      to={ContractToolRoutes.viewStatementOfWork({\n                        id: statementOfWork._id,\n                      })}\n                    >\n                      <AttachedFileListItem\n                        title={statementOfWork.title ?? '--'}\n                      />\n                    </RouterLink>\n                  ),\n                )\n              ) : (\n                <>\n                  <S.NoSOWsValue>None</S.NoSOWsValue>\n                  {ContractPermissions.isOwner(contract) && (\n                    <Infobox type=\"secondary\">\n                      {t('noumena.contract_preview.no_sows.infobox')}\n                    </Infobox>\n                  )}\n                </>\n              )}\n            </Stack>\n          </Section>\n        </Stack>\n      </S.Card>\n\n      {contract.timeline && (\n        <S.Card>\n          <Section title=\"Timeline\">\n            <DocumentTimeline\n              items={contract.timeline}\n              buyer={contract.buyer}\n              serviceProvider={contract.seller}\n              documentType={DocumentType.Contract}\n            />\n          </Section>\n        </S.Card>\n      )}\n\n      <S.Card hasError={hasAgreementsError} id=\"agreements\">\n        <Section title=\"Agreements\" hasSeparator>\n          <Stack gap={16} vertical align=\"stretch\">\n            <AgreementCheckbox\n              name=\"isAuthorized\"\n              label={t('noumena.contract_preview.agreements.is_authorized')}\n              disabled={!canSign}\n            />\n\n            <AgreementCheckbox\n              name=\"termsAndConditions\"\n              label={t(\n                'noumena.contract_preview.agreements.terms_and_conditions',\n              )}\n              disabled={!canSign}\n            />\n\n            <AgreementCheckbox\n              name=\"eSign\"\n              label={t('noumena.contract_preview.agreements.e_sign')}\n              disabled={!canSign}\n            />\n\n            {hasAgreementsError && (\n              <TSpan\n                font=\"body-m\"\n                colorToken=\"--bg-button-danger-primary-default\"\n              >\n                {t('noumena.contracts_document_preview.agreements.required')}\n              </TSpan>\n            )}\n          </Stack>\n        </Section>\n      </S.Card>\n    </Stack>\n  );\n}\n","import {\n  type ContractFragment,\n  type NoumContactBasicFragment,\n} from '@/apollo/graphql';\nimport useContactNoumConnection from '@/features/noumContacts/hooks/contactNoumConnection';\nimport { useContractPermissions } from './contractPermissions';\n\nexport function useContractPreviewValidation() {\n  const ContractPermissions = useContractPermissions();\n  const [checkConnectionWithSecretNoum] = useContactNoumConnection();\n\n  function isOwnerAParty(contract: ContractFragment) {\n    return (\n      ContractPermissions.isOwner(contract, contract.buyer?.userId._id) ||\n      ContractPermissions.isOwner(contract, contract.seller?.userId._id)\n    );\n  }\n\n  async function canReceiveDocument(\n    contract: ContractFragment,\n    party: NoumContactBasicFragment,\n  ) {\n    if (!contract.linkedNoum._id) {\n      return false;\n    }\n\n    // Owners can always receive and send documents\n    if (ContractPermissions.isOwner(contract, party.userId._id)) {\n      return true;\n    }\n\n    const { isSecretNoum, isConnected } = await checkConnectionWithSecretNoum(\n      contract.linkedNoum._id,\n      party._id,\n    );\n    if (isSecretNoum) {\n      return isConnected;\n    }\n\n    // The Noum is not secret, so anybody can receive the document.\n    return true;\n  }\n\n  return { canReceiveDocument, isOwnerAParty };\n}\n","import { type ApolloCache } from '@apollo/client';\nimport { useCallback } from 'react';\nimport {\n  type ContractFragment,\n  ContractFragmentDoc,\n  GetSingleContractDocument,\n  useRejectContractMutation,\n  useSendContractForSigningMutation,\n  useSignContractMutation,\n} from '@/apollo/graphql';\nimport { ContractStatus } from '../types';\n\nfunction updateContractStatusInCache(\n  cache: ApolloCache<unknown>,\n  contractId: string,\n  newStatus: ContractStatus,\n) {\n  cache.updateFragment<ContractFragment>(\n    {\n      fragment: ContractFragmentDoc,\n      fragmentName: 'Contract',\n      id: cache.identify({\n        __typename: 'Contract',\n        _id: contractId,\n      }),\n    },\n    (prevData) => {\n      if (!prevData) {\n        return null;\n      }\n\n      return {\n        ...prevData,\n        status: newStatus,\n      };\n    },\n  );\n}\n\ninterface UseContractSigningOptions {\n  id: string | undefined;\n}\n\nexport function useContractSigning({ id }: UseContractSigningOptions) {\n  const [sendForSigningMutation] = useSendContractForSigningMutation({\n    update(cache, result) {\n      if (!result.data?.sendDocumentForSigning || !id) {\n        return;\n      }\n\n      updateContractStatusInCache(cache, id, ContractStatus.Issued);\n    },\n    refetchQueries: [GetSingleContractDocument],\n  });\n\n  const [signMutation] = useSignContractMutation({\n    update(cache, result) {\n      if (!result.data?.signContract || !id) {\n        return;\n      }\n\n      updateContractStatusInCache(cache, id, ContractStatus.Signed);\n    },\n    refetchQueries: [GetSingleContractDocument],\n  });\n\n  const [rejectMutation] = useRejectContractMutation({\n    update(cache, result) {\n      if (!result.data?.rejectContract || !id) {\n        return;\n      }\n\n      updateContractStatusInCache(cache, id, ContractStatus.Draft);\n    },\n    refetchQueries: [GetSingleContractDocument],\n  });\n\n  const sendForSigning = useCallback(async () => {\n    if (!id) {\n      return;\n    }\n\n    const result = await sendForSigningMutation({ variables: { id } });\n    if (!result.data?.sendDocumentForSigning) {\n      throw new Error('Unable to send the document. Please try again later.');\n    }\n  }, [id, sendForSigningMutation]);\n\n  const sign = useCallback(async () => {\n    if (!id) {\n      return;\n    }\n\n    const result = await signMutation({ variables: { id } });\n    if (!result.data?.signContract) {\n      throw new Error('Unable to sign the document. Please try again later.');\n    }\n  }, [id, signMutation]);\n\n  const reject = useCallback(async () => {\n    if (!id) {\n      return;\n    }\n\n    const result = await rejectMutation({ variables: { id } });\n    if (!result.data?.rejectContract) {\n      throw new Error(\n        'Unable to decline the document. Please try again later.',\n      );\n    }\n  }, [id, rejectMutation]);\n\n  return {\n    sendForSigning,\n    sign,\n    reject,\n  };\n}\n","import { useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ContractSow, Parties } from '@/apollo/generated/types';\nimport {\n  useGetLinkedSoWsQuery,\n  useResendDocumentNotificationMutation,\n} from '@/apollo/graphql';\nimport { useContract } from '@/features/contracts/hooks/contract';\nimport { useContractPdfWithSignature } from '@/features/contracts/hooks/contractPdf';\nimport { useContractPermissions } from '@/features/contracts/hooks/contractPermissions';\nimport { useContractPreviewForm } from '@/features/contracts/hooks/contractPreviewForm';\nimport { useContractPreviewValidation } from '@/features/contracts/hooks/contractPreviewValidation';\nimport { useContractSigning } from '@/features/contracts/hooks/contractSigning';\nimport { useDocumentPreviewSignatureForm } from '@/features/contracts/hooks/documentPreviewSignatureForm';\nimport { useModalManager } from '@/hooks/modal/useModalManager';\nimport { useToast } from '@/hooks/toast';\nimport { cleanList } from '@/utils/list';\nimport { UserUtil } from '@/utils/user';\n\ntype PreviewStep = 'Summary' | 'ConfirmSignature';\n\ntype ModalType = 'secretNoumAlert';\n\ninterface UseContractPreviewScreenOptions {\n  id?: string;\n}\n\nexport function useContractPreviewScreen({\n  id,\n}: UseContractPreviewScreenOptions) {\n  const [previewStep, setPreviewStep] = useState<PreviewStep>('Summary');\n\n  const { t } = useTranslation();\n  const { addSuccessIconToast, addErrorToast, addPrimaryIconToast } =\n    useToast();\n  const ContractPermissions = useContractPermissions();\n  const ContractPreviewValidation = useContractPreviewValidation();\n\n  const { modalType, openModal, closeModal, contextData } = useModalManager<\n    ModalType,\n    { isUnauthenticated: boolean }\n  >();\n\n  const {\n    contract,\n    isLoading: isSummaryLoading,\n    deleteContract,\n  } = useContract({ id });\n\n  const linkedSowsQuery = useGetLinkedSoWsQuery({\n    variables: {\n      contractId: id!,\n    },\n    skip: !id,\n  });\n\n  const linkedSows = useMemo(\n    () => cleanList(linkedSowsQuery.data?.getLinkedSOWs.data),\n    [linkedSowsQuery.data?.getLinkedSOWs],\n  );\n\n  const pdfWithSignature = useContractPdfWithSignature({\n    id,\n    contract,\n  });\n\n  const signing = useContractSigning({ id });\n\n  const summaryForm = useContractPreviewForm({\n    defaultValues: {\n      eSign: false,\n      isAuthorized: false,\n      termsAndConditions: false,\n    },\n  });\n\n  const signatureForm = useDocumentPreviewSignatureForm({\n    defaultValues: {\n      documentContentsChecked: false,\n      validSignature: false,\n    },\n  });\n\n  const [resendDocumentNotification] = useResendDocumentNotificationMutation();\n\n  const handleSummarySubmit = async () => {\n    if (!contract?.buyer || !contract.seller || !contract?.linkedNoum._id) {\n      return;\n    }\n\n    if (!ContractPreviewValidation.isOwnerAParty(contract)) {\n      addErrorToast(\n        'To share the contract, you need to be one of the contracting parties.',\n      );\n      return;\n    }\n\n    if (\n      !(await ContractPreviewValidation.canReceiveDocument(\n        contract,\n        contract.buyer,\n      ))\n    ) {\n      openModal('secretNoumAlert', {\n        isUnauthenticated: UserUtil.isUnauthenticated(contract.buyer.userId),\n      });\n      return;\n    }\n\n    if (\n      !(await ContractPreviewValidation.canReceiveDocument(\n        contract,\n        contract.seller,\n      ))\n    ) {\n      openModal('secretNoumAlert', {\n        isUnauthenticated: UserUtil.isUnauthenticated(contract.seller.userId),\n      });\n      return;\n    }\n\n    setPreviewStep('ConfirmSignature');\n  };\n\n  const handleSignatureSubmit = async () => {\n    if (!contract) {\n      return;\n    }\n\n    try {\n      if (ContractPermissions.isOwner(contract)) {\n        await signing.sendForSigning();\n        addSuccessIconToast(\n          t('noumena.contract_preview.toast.sent_for_signing'),\n        );\n      } else {\n        await signing.sign();\n        addSuccessIconToast(t('noumena.contract_preview.toast.signed'));\n      }\n      setPreviewStep('Summary');\n    } catch (err) {\n      if (err instanceof Error) {\n        addErrorToast(err.message);\n      }\n    }\n  };\n\n  const handleDeclineContract = async () => {\n    try {\n      await signing.reject();\n      addSuccessIconToast(t('noumena.contract_preview.toast.declined'));\n      setPreviewStep('Summary');\n    } catch (err) {\n      if (err instanceof Error) {\n        addErrorToast(err.message);\n      }\n    }\n  };\n\n  const handleDeleteContract = async () => {\n    try {\n      await deleteContract(id);\n      addSuccessIconToast(t('noumena.contract_preview.toast.draft_deleted'));\n    } catch (err) {\n      if (err instanceof Error) {\n        addErrorToast(err.message);\n      }\n    }\n  };\n\n  const handleDuplicate = async () => {\n    addPrimaryIconToast('QA Note: Duplicating is not implemented yet.');\n  };\n\n  const handleResend = async () => {\n    if (!id) {\n      return;\n    }\n\n    try {\n      await resendDocumentNotification({\n        variables: {\n          documentId: id,\n          type: ContractSow.Contract,\n          sendTo: [Parties.CounterParty],\n        },\n      });\n      addSuccessIconToast(t('noumena.contract_preview.toast.resent'));\n    } catch (err) {\n      if (err instanceof Error) {\n        addErrorToast(err.message);\n      }\n    }\n  };\n\n  return {\n    summary: {\n      isLoading: isSummaryLoading,\n      form: summaryForm,\n      onSubmit: handleSummarySubmit,\n    },\n    signature: {\n      isLoading: pdfWithSignature.loading,\n      pdfWithSignature: pdfWithSignature.pdfData ?? undefined,\n      form: signatureForm,\n      onSubmit: handleSignatureSubmit,\n    },\n    linkedSows: {\n      data: linkedSows,\n      loading: linkedSowsQuery.loading,\n    },\n    contract,\n    previewStep,\n    changeStep: setPreviewStep,\n    deleteContract: handleDeleteContract,\n    declineContract: handleDeclineContract,\n    duplicateContract: handleDuplicate,\n    resendContract: handleResend,\n    modalType,\n    openModal,\n    closeModal,\n    contextData,\n  };\n}\n"],"names":["AttachedFileListItem","title","iconName","Stack","jsx","Icon","TSpan","AttachedFileListSkeleton","rows","Array","from","length","map","_","index","Skeleton","`Skeleton-${index}`","Wrapper","styled","div","Label","attrs","font","colorToken","Value","Contact","AccountLabel","AccountValue","BillingLabel","BillingValue","S$1","ContactSummary","contact","jsxs","S","EntityDisplay","displayName","userId","profile","profilePictureThumbnail","undefined","ContactDetailsUtils","formatCompanyAndTitle","email","apartmentNo","street","city","state","zipCode","getCountryByCode","country","name","LegalRegionDisplay","region","LegalRegionService","formattedLegalRegion","Flag","Card","OriginalCard","Separator","OriginalSeparator","PDFPreview","NoSOWsValue","SowButtonLink","ContractPreview","contract","linkedSows","isLoadingLinkedSows","onLinkedSowClick","t","useTranslation","ContractPermissions","useContractPermissions","formState","isValid","isSubmitted","useContractPreviewFormContext","hasAgreementsError","canSign","Section","Fragment","DocumentStatusTag","status","ContractUtils","formatDocumentNumber","contractNumber","LabelValue","effectiveDate","formatDateString","ApiPayloadParser","parseDateString","terminationNoticeInDays","count","postProcess","legalJurisdiction","arbitrationJurisdiction","StackItem","linkedNoum","profileImageThumbnail","buyer","seller","statementOfWork","contractId","sowId","_id","RouterLink","ContractToolRoutes","viewStatementOfWork","id","isOwner","Infobox","timeline","DocumentTimeline","DocumentType","Contract","AgreementCheckbox","useContractPreviewValidation","checkConnectionWithSecretNoum","useContactNoumConnection","isOwnerAParty","canReceiveDocument","party","isSecretNoum","isConnected","updateContractStatusInCache","cache","newStatus","updateFragment","fragment","ContractFragmentDoc","fragmentName","identify","__typename","prevData","useContractSigning","sendForSigningMutation","useSendContractForSigningMutation","update","result","data","sendDocumentForSigning","ContractStatus","Issued","refetchQueries","GetSingleContractDocument","signMutation","useSignContractMutation","signContract","Signed","rejectMutation","useRejectContractMutation","rejectContract","Draft","sendForSigning","useCallback","variables","Error","sign","reject","useContractPreviewScreen","previewStep","setPreviewStep","useState","addSuccessIconToast","addErrorToast","addPrimaryIconToast","useToast","ContractPreviewValidation","modalType","openModal","closeModal","contextData","useModalManager","isLoading","isSummaryLoading","deleteContract","useContract","linkedSowsQuery","useGetLinkedSoWsQuery","skip","useMemo","cleanList","getLinkedSOWs","pdfWithSignature","useContractPdfWithSignature","signing","summaryForm","useContractPreviewForm","defaultValues","eSign","isAuthorized","termsAndConditions","signatureForm","useDocumentPreviewSignatureForm","documentContentsChecked","validSignature","resendDocumentNotification","useResendDocumentNotificationMutation","handleSummarySubmit","isUnauthenticated","UserUtil","handleSignatureSubmit","err","message","handleDeclineContract","handleDeleteContract","handleDuplicate","handleResend","documentId","type","ContractSow","sendTo","Parties","CounterParty","summary","form","onSubmit","signature","loading","pdfData","changeStep","declineContract","duplicateContract","resendContract"],"mappings":"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"}