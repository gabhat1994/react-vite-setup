{"version":3,"file":"Pagination-43542d57.js","sources":["../../src/hooks/usePagination.ts","../../src/components/Pagination/styles.ts","../../src/components/Pagination/Pagination.tsx"],"sourcesContent":["import { useMemo } from 'react';\n\ninterface IUsePagination {\n  totalCount: number;\n  pageSize: number;\n  siblingCount: number;\n  currentPage: number;\n  breakLabel?: string;\n}\n\nconst range = (start: number, end: number): number[] => {\n  const length = end - start + 1;\n  /**\n   * Create an array of certain length and set the elements within it from start value to end value.\n   */\n  return Array.from({ length }, (_, idx) => idx + start);\n};\n\nexport const usePagination = ({\n  totalCount,\n  pageSize,\n  siblingCount,\n  currentPage,\n  breakLabel = '...',\n}: IUsePagination): (string | number)[] => {\n  const paginationRange: (string | number)[] = useMemo(() => {\n    if (currentPage === 0) return [];\n\n    let result: (string | number)[] = [];\n\n    const totalPageCount = Math.ceil(totalCount / (pageSize || 1));\n\n    /**\n     * Pages count is determined as siblingCount + firstPage + lastPage + currentPage + 2 * DOTS\n     */\n    const totalPageNumbers = siblingCount + 5;\n\n    /**\n     * Calculate left and right sibling index and make sure they are within range 1 and totalPageCount\n     */\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\n    const rightSiblingIndex = Math.min(\n      currentPage + siblingCount,\n      totalPageCount,\n    );\n\n    /**\n     * We do not show dots just when there is just one page number to be inserted between the extremes of sibling and the page limits i.e 1 and totalPageCount. Hence we are using leftSiblingIndex > 2 and rightSiblingIndex < totalPageCount - 2\n     */\n    const shouldShowLeftDots = leftSiblingIndex > 2;\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\n\n    const firstPageIndex = 1;\n    const lastPageIndex = totalPageCount;\n\n    /**\n     * Case 1:\n     * If the number of pages is less than the page numbers we want to show in our paginationComponent, we return the range [1..totalPageCount]\n     */\n    if (totalPageNumbers >= totalPageCount) {\n      result = range(1, totalPageCount);\n    } else if (!shouldShowLeftDots && shouldShowRightDots) {\n      /**\n       * Case 2: No left dots to show, but rights dots to be shown\n       */\n      const leftItemCount = 3 + 2 * siblingCount;\n      const leftRange = range(1, leftItemCount);\n\n      result = [...leftRange, breakLabel, totalPageCount];\n    } else if (shouldShowLeftDots && !shouldShowRightDots) {\n      /**\n       * Case 3: No right dots to show, but left dots to be shown\n       */\n      const rightItemCount = 3 + 2 * siblingCount;\n      const rightRange = range(\n        totalPageCount - rightItemCount + 1,\n        totalPageCount,\n      );\n      result = [firstPageIndex, breakLabel, ...rightRange];\n    } else if (shouldShowLeftDots && shouldShowRightDots) {\n      /**\n       * Case 4: Both left and right dots to be shown\n       */\n      const middleRange = range(leftSiblingIndex, rightSiblingIndex);\n      result = [\n        firstPageIndex,\n        breakLabel,\n        ...middleRange,\n        breakLabel,\n        lastPageIndex,\n      ];\n    }\n\n    return result;\n  }, [totalCount, pageSize, siblingCount, currentPage, breakLabel]);\n\n  return paginationRange;\n};\n","import styled from 'styled-components';\n\nimport { Button } from '@/components/Button';\n\nexport const PaginationContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n`;\n\nconst PaginationButton = styled(Button)<{\n  active?: boolean;\n  disabled?: boolean;\n}>`\n  width: 32px;\n  height: 32px;\n  max-width: 32px;\n  min-width: 32px;\n  min-height: 32px;\n  max-height: 32px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background-color: ${({ active }) =>\n      active\n        ? `var(--bg-pagination-brand-secondary-default)`\n        : `var(--bg-pagination-neutral-hover)`};\n  }\n\n  span {\n    color: ${({ disabled }) =>\n      disabled\n        ? `var(--icon-button-neutral-disabled) !important`\n        : `var(--text-pagination-brand-primary-default) !important`};\n    font-size: var(--font-footnote-regular-size) !important;\n    line-height: var(--font-footnote-regular-lineheight) !important;\n    font-family: var(--font-footnote-bold-font) !important;\n    font-weight: var(--font-footnote-bold-weight) !important;\n  }\n`;\n\nexport const PageButton = styled(PaginationButton)<{\n  active?: boolean;\n  disabled?: boolean;\n}>`\n  border-width: 1px;\n  border-style: solid;\n  border-color: ${({ active }) =>\n    active ? 'transparent' : 'var(--border-pagination-neutral-default)'};\n  background-color: ${({ active }) =>\n    active\n      ? 'var(--bg-pagination-brand-secondary-default)'\n      : 'var(--bg-pagination-neutral-alt-default)'};\n`;\n\nexport const JumpButton = styled(PaginationButton)<{ disabled?: boolean }>`\n  &:active {\n    background-color: transparent !important;\n  }\n  &:disabled {\n    background-color: transparent !important;\n  }\n  &:hover {\n    background-color: transparent !important;\n  }\n\n  svg path {\n    fill: ${({ disabled }) =>\n      disabled\n        ? `var(--icon-pagination-neutral-disabled) !important`\n        : `var(--icon-pagination-brand-primary-default) !important`};\n  }\n`;\n","import React, { useMemo } from 'react';\nimport generate from 'uniqid';\n\nimport { usePagination } from '@/hooks/usePagination';\nimport { Icon } from '@/components/Icon';\nimport { type PaginationProps } from './types';\nimport { PaginationContainer, PageButton, JumpButton } from './styles';\n\nexport const Pagination = React.forwardRef<HTMLDivElement, PaginationProps>(\n  (\n    {\n      totalCount,\n      currentPage = 1,\n      pageSize = 10,\n      breakLabel = '...',\n      disabled = false,\n      siblingCount = 1,\n      nextPageButton,\n      prevPageButton,\n      renderOnOnePageCount = false,\n      testId,\n      onPageChange,\n    },\n    ref,\n  ) => {\n    const paginationRange = usePagination({\n      currentPage,\n      totalCount,\n      siblingCount,\n      pageSize,\n      breakLabel,\n    });\n\n    const totalPages = useMemo(\n      () => Math.ceil(totalCount / (pageSize || 1)),\n      [pageSize, totalCount],\n    );\n\n    const lastPage = useMemo(\n      () =>\n        paginationRange.length > 1\n          ? paginationRange[paginationRange.length - 1]\n          : totalPages,\n      [paginationRange, totalPages],\n    );\n\n    const onNext = () => {\n      if (onPageChange) onPageChange(Math.min(currentPage + 1, totalPages));\n    };\n\n    const onPrevious = () => {\n      if (onPageChange) onPageChange(Math.max(currentPage - 1, 1));\n    };\n\n    if (!paginationRange.length) return null;\n    if (paginationRange.length < 2 && !renderOnOnePageCount) return null;\n\n    return (\n      <PaginationContainer data-testid={testId || 'pagination'} ref={ref}>\n        {prevPageButton || (\n          <JumpButton\n            testId=\"page-prev-button\"\n            textOnly\n            disabled={disabled || currentPage === 1}\n            onClick={onPrevious}\n          >\n            <Icon\n              name=\"chevron_small_left_m\"\n              size={24}\n              color={\n                disabled || currentPage === 1\n                  ? '--icon-button-neutral-disabled'\n                  : '--icon-button-brand-primary-default'\n              }\n            />\n          </JumpButton>\n        )}\n        {paginationRange.map((page: string | number) => {\n          if (page === breakLabel) {\n            return (\n              <PageButton\n                key={`page-btn-break-${generate()}`}\n                testId=\"page-button\"\n                size=\"small\"\n                active={false}\n                disabled={disabled}\n              >\n                {page}\n              </PageButton>\n            );\n          }\n\n          return (\n            <PageButton\n              key={`page-btn-${page}`}\n              testId=\"page-button\"\n              size=\"small\"\n              secondary={currentPage === +page}\n              active={currentPage === +page}\n              disabled={disabled}\n              onClick={() => onPageChange && onPageChange(+page)}\n            >\n              {page}\n            </PageButton>\n          );\n        })}\n        {nextPageButton || (\n          <JumpButton\n            testId=\"page-next-button\"\n            textOnly\n            disabled={disabled || currentPage === lastPage}\n            onClick={onNext}\n          >\n            <Icon\n              name=\"chevron_small_right_m\"\n              size={24}\n              color={\n                disabled || currentPage === lastPage\n                  ? '--icon-button-neutral-disabled'\n                  : '--icon-button-brand-primary-default'\n              }\n            />\n          </JumpButton>\n        )}\n      </PaginationContainer>\n    );\n  },\n);\n"],"names":["range","start","end","length","Array","from","_","idx","usePagination","totalCount","pageSize","siblingCount","currentPage","breakLabel","useMemo","result","totalPageCount","Math","ceil","totalPageNumbers","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftItemCount","rightItemCount","rightRange","middleRange","PaginationContainer","styled","div","PaginationButton","Button","active","disabled","PageButton","JumpButton","Pagination","React","forwardRef","nextPageButton","prevPageButton","renderOnOnePageCount","testId","onPageChange","ref","paginationRange","totalPages","lastPage","onNext","onPrevious","jsx","Icon","map","page","generate"],"mappings":"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"}