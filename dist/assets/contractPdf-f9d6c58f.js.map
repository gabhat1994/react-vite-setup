{"version":3,"file":"contractPdf-f9d6c58f.js","sources":["../../src/features/contracts/hooks/contractPdf.ts"],"sourcesContent":["import { NetworkStatus } from '@apollo/client';\nimport { useCallback } from 'react';\nimport {\n  type ContractFragment,\n  ContractFragmentDoc,\n  useGetContractPdfLazyQuery,\n  useGetContractPdfQuery,\n  useGetContractPdfWithSignatureQuery,\n  useSendContractForSigningMutation,\n} from '@/apollo/graphql';\nimport { base64ToDataString } from '@/utils/base64ToBlob';\nimport { downloadFileFromUrl } from '@/utils/file';\nimport { useToast } from '@/hooks';\nimport { ContractStatus } from '../types';\nimport { useContractSigningParty } from './contractSigningParty';\n\ninterface UseContractPdfOptions {\n  id?: string;\n}\n\nexport function useContractPdf({ id }: UseContractPdfOptions) {\n  const { data, networkStatus, refetch } = useGetContractPdfQuery({\n    fetchPolicy: 'cache-and-network',\n    notifyOnNetworkStatusChange: true,\n    variables: {\n      id: id!,\n    },\n    skip: !id,\n  });\n\n  const base64 = data?.getSingleContract?.contractPDF?.base64;\n  const pdfData = base64 ? base64ToDataString(base64, 'application/pdf') : null;\n\n  return {\n    pdfData,\n    loading: [NetworkStatus.loading, NetworkStatus.refetch].includes(\n      networkStatus,\n    ),\n    refetch,\n  };\n}\n\nexport function useDownloadContractPdfLazy() {\n  const { addPrimaryIconToast } = useToast();\n\n  const [getContractPdf] = useGetContractPdfLazyQuery({\n    fetchPolicy: 'network-only',\n  });\n\n  const downloadContractPdf = useCallback(\n    async (contractId: string, fileName: string) => {\n      addPrimaryIconToast('PDF download will begin shortly.');\n\n      const { data } = await getContractPdf({ variables: { id: contractId } });\n      const base64 = data?.getSingleContract?.contractPDF?.base64;\n\n      if (!base64) {\n        return;\n      }\n\n      await downloadFileFromUrl(\n        base64ToDataString(base64, 'application/pdf'),\n        'application/pdf',\n        fileName,\n      );\n    },\n    [addPrimaryIconToast, getContractPdf],\n  );\n\n  return downloadContractPdf;\n}\n\ninterface UseContractPdfWithSignatureOptions {\n  id?: string;\n  contract?: ContractFragment | null;\n}\n\nexport function useContractPdfWithSignature({\n  id,\n  contract,\n}: UseContractPdfWithSignatureOptions) {\n  const { signee } = useContractSigningParty(contract ?? null);\n\n  const { data, networkStatus } = useGetContractPdfWithSignatureQuery({\n    fetchPolicy: 'cache-and-network',\n    variables: {\n      id: id!,\n      contactId: signee?._id ?? '',\n    },\n    skip: !id || !contract || !signee,\n  });\n\n  const [sendForSigningMutation] = useSendContractForSigningMutation({\n    update(cache, result) {\n      if (!result.data?.sendDocumentForSigning || !id) {\n        return;\n      }\n\n      cache.updateFragment<ContractFragment>(\n        {\n          fragment: ContractFragmentDoc,\n          fragmentName: 'Contract',\n          id: cache.identify({\n            __typename: 'Contract',\n            _id: id,\n          }),\n        },\n        (prevData) => {\n          if (!prevData) {\n            return null;\n          }\n\n          return {\n            ...prevData,\n            status: ContractStatus.Issued,\n          };\n        },\n      );\n    },\n  });\n\n  const sendForSigning = useCallback(async () => {\n    if (!id) {\n      return false;\n    }\n\n    const result = await sendForSigningMutation({ variables: { id } });\n    return result.data?.sendDocumentForSigning ?? false;\n  }, [id, sendForSigningMutation]);\n\n  const base64 = data?.previewWithSign?.base64;\n  const pdfData = base64 ? base64ToDataString(base64, 'application/pdf') : null;\n\n  return {\n    pdfData,\n    loading: [NetworkStatus.loading, NetworkStatus.refetch].includes(\n      networkStatus,\n    ),\n    sendForSigning,\n  };\n}\n"],"names":["useContractPdf","id","data","networkStatus","refetch","useGetContractPdfQuery","fetchPolicy","notifyOnNetworkStatusChange","variables","skip","base64","getSingleContract","contractPDF","pdfData","base64ToDataString","loading","NetworkStatus","includes","useDownloadContractPdfLazy","addPrimaryIconToast","useToast","getContractPdf","useGetContractPdfLazyQuery","downloadContractPdf","useCallback","contractId","fileName","downloadFileFromUrl","useContractPdfWithSignature","contract","signee","useContractSigningParty","useGetContractPdfWithSignatureQuery","contactId","_id","sendForSigningMutation","useSendContractForSigningMutation","update","cache","result","sendDocumentForSigning","updateFragment","fragment","ContractFragmentDoc","fragmentName","identify","__typename","prevData","status","ContractStatus","Issued","sendForSigning","previewWithSign"],"mappings":"iMAoBO,SAASA,EAAe,CAAEC,GAAAA,CAA0B,EAAG,SACtD,KAAA,CAAEC,KAAAA,EAAMC,cAAAA,EAAeC,QAAAA,GAAYC,EAAuB,CAC9DC,YAAa,oBACbC,4BAA6B,GAC7BC,UAAW,CACTP,GAAAA,CACF,EACAQ,KAAM,CAACR,CAAAA,CACR,EAEKS,GAASR,GAAAA,EAAAA,GAAAA,YAAAA,EAAMS,oBAANT,YAAAA,EAAyBU,cAAzBV,YAAAA,EAAsCQ,OAG9C,MAAA,CACLG,QAHcH,EAASI,EAAmBJ,EAAQ,iBAAiB,EAAI,KAIvEK,QAAS,CAACC,EAAcD,QAASC,EAAcZ,OAAO,EAAEa,SACtDd,CAAa,EAEfC,QAAAA,CAAAA,CAEJ,CAEO,SAASc,GAA6B,CACrC,KAAA,CAAEC,oBAAAA,GAAwBC,EAAU,EAEpC,CAACC,CAAc,EAAIC,EAA2B,CAClDhB,YAAa,cAAA,CACd,EAsBMiB,OApBqBC,EAAAA,YAC1B,MAAOC,EAAoBC,IAAqB,SAC9CP,EAAoB,kCAAkC,EAEhD,KAAA,CAAEjB,KAAAA,CAAK,EAAI,MAAMmB,EAAe,CAAEb,UAAW,CAAEP,GAAIwB,CAAW,CAAA,CAAG,EACjEf,GAASR,GAAAA,EAAAA,GAAAA,YAAAA,EAAMS,oBAANT,YAAAA,EAAyBU,cAAzBV,YAAAA,EAAsCQ,OAEhDA,GAIL,MAAMiB,EACJb,EAAmBJ,EAAQ,iBAAiB,EAC5C,kBACAgB,CAAQ,CAAA,EAGZ,CAACP,EAAqBE,CAAc,CAAC,CAIzC,CAOO,SAASO,EAA4B,CAC1C3B,GAAAA,EACA4B,SAAAA,CACkC,EAAG,OAC/B,KAAA,CAAEC,OAAAA,CAAAA,EAAWC,EAAwBF,GAAY,IAAI,EAErD,CAAE3B,KAAAA,EAAMC,cAAAA,GAAkB6B,EAAoC,CAClE1B,YAAa,oBACbE,UAAW,CACTP,GAAAA,EACAgC,WAAWH,GAAAA,YAAAA,EAAQI,MAAO,EAC5B,EACAzB,KAAM,CAACR,GAAM,CAAC4B,GAAY,CAACC,CAAAA,CAC5B,EAEK,CAACK,CAAsB,EAAIC,EAAkC,CACjEC,OAAOC,EAAOC,EAAQ,OAChB,GAACA,EAAAA,EAAOrC,OAAPqC,MAAAA,EAAaC,yBAA0B,CAACvC,GAI7CqC,EAAMG,eACJ,CACEC,SAAUC,EACVC,aAAc,WACd3C,GAAIqC,EAAMO,SAAS,CACjBC,WAAY,WACZZ,IAAKjC,CAAAA,CACN,GAEW8C,GACPA,EAIE,CACL,GAAGA,EACHC,OAAQC,EAAeC,MAAAA,EALhB,IAOV,CAEL,CAAA,CACD,EAEKC,EAAiB3B,EAAAA,YAAY,SAAY,OAC7C,OAAKvB,IAKEsC,GADQ,MAAMJ,EAAuB,CAAE3B,UAAW,CAAEP,GAAAA,CAAG,CAAA,CAAG,GACnDC,OAAPqC,YAAAA,EAAaC,yBAA0B,GAJrC,EAIqC,EAC7C,CAACvC,EAAIkC,CAAsB,CAAC,EAEzBzB,GAASR,EAAAA,GAAAA,YAAAA,EAAMkD,kBAANlD,YAAAA,EAAuBQ,OAG/B,MAAA,CACLG,QAHcH,EAASI,EAAmBJ,EAAQ,iBAAiB,EAAI,KAIvEK,QAAS,CAACC,EAAcD,QAASC,EAAcZ,OAAO,EAAEa,SACtDd,CAAa,EAEfgD,eAAAA,CAAAA,CAEJ"}