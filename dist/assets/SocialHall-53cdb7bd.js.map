{"version":3,"file":"SocialHall-53cdb7bd.js","sources":["../../src/features/events/hooks/gql/useGetEventByIdCache.ts","../../src/features/events/hooks/gql/useUpdateGetEventByIdCache.ts","../../src/features/socialHall/components/EventModals/EventModal/EventModal.tsx","../../src/features/socialHall/components/AttendeeInCall/AttendeeInCall.tsx","../../src/features/socialHall/components/BottomBar/BottomBar.tsx","../../src/features/socialHall/components/BrowserSupport/BrowserSupport.tsx","../../src/features/socialHall/components/ChangeGroupName/ChangeGroupName.tsx","../../src/features/socialHall/components/ControlPanel/ChatControl.tsx","../../src/features/socialHall/components/MediaSettingModal/MediaVirtualBackgroundOption.tsx","../../src/features/socialHall/components/MediaSettingModal/MediaSettingOption.tsx","../../src/features/socialHall/components/MediaSettingModal/MediaSettingModal.tsx","../../src/features/socialHall/components/ControlPanel/MediaSettingControl.tsx","../../src/features/socialHall/components/ControlPanel/MemberControl.tsx","../../src/features/socialHall/components/ControlPanel/VideoControl.tsx","../../src/features/socialHall/components/ControlPanel/MuteControl.tsx","../../src/features/socialHall/components/EventModals/HandsUpModal/HandsUpModal.tsx","../../src/features/socialHall/components/ControlPanel/RaiseHandControl.tsx","../../src/features/socialHall/components/ControlPanel/ScreenSharingControl.tsx","../../src/features/socialHall/components/MediaPermissionNotification/MediaPermissionNotification.tsx","../../src/features/socialHall/components/ControlPanel/CopyLinkControl.tsx","../../src/features/socialHall/components/ControlPanel/ControlPanel.tsx","../../src/hooks/useEmoticons.ts","../../src/features/socialHall/components/SocialHallChat/MessageList.tsx","../../src/features/socialHall/components/SocialHallChat/SocialHallChat.tsx","../../src/features/socialHall/components/EventModals/MainEventNotification/MainEventNotification.tsx","../../src/features/socialHall/components/ControllerGroup/ControlGroupMainEventNotification.tsx","../../src/features/socialHall/components/MiniPlayerAndNotification/KnockNotification/KnockNotification.tsx","../../src/features/socialHall/components/SpeakerViewCarousel/SpeakerViewCarousel.tsx","../../src/features/socialHall/components/SpeakerView/SpeakerView.tsx","../../src/features/socialHall/components/SocialHallMembers/types.ts","../../src/features/socialHall/components/SocialHallMembers/helper.ts","../../src/features/socialHall/components/SocialHallMembers/SideBarUserItem/SideBarUserListItem.tsx","../../src/features/socialHall/components/SocialHallMembers/SocialHallMembers.tsx","../../src/features/socialHall/components/ScreenShare/ScreenShare.tsx","../../src/features/socialHall/components/Header/LayoutToggle.tsx","../../src/features/socialHall/components/Header/HeaderCountDownModal.tsx","../../src/features/socialHall/components/Header/MoreOptionsBottomSheet.tsx","../../src/features/socialHall/components/Header/LayoutSwitchBottomSheet.tsx","../../src/features/socialHall/components/Header/HeaderBottomSheet.tsx","../../src/features/socialHall/components/Header/ToggleBuzzRoomBtn.tsx","../../src/features/socialHall/components/Header/helper.ts","../../src/features/socialHall/components/Header/EventTag.tsx","../../src/features/socialHall/components/Header/GroupName.tsx","../../src/features/socialHall/components/Header/HeaderTimer.tsx","../../src/features/socialHall/components/Header/SwitchCamera.tsx","../../src/features/socialHall/components/Header/AttendeeHeader.tsx","../../src/features/socialHall/components/Header/AttendeeHeaderOld.tsx","../../src/features/socialHall/components/Header/HeaderDropDownMenu.tsx","../../src/features/socialHall/components/Header/HostHeader.tsx","../../src/features/socialHall/components/Header/HostHeaderOld.tsx","../../src/features/socialHall/components/Header/index.tsx","../../src/features/socialHall/components/EventRoom/EventRoom.tsx","../../src/features/socialHall/components/ControllerGroup/ControllerGroup.tsx","../../src/features/socialHall/components/RaiseHandsSideBar/SideBarUserItem/SideBarUserListItem.tsx","../../src/features/socialHall/components/RaiseHandsSideBar/RaiseHandsSideBar.tsx","../../src/features/socialHall/components/EventRoom/EventRoomOld.tsx","../../src/features/socialHall/components/EventRoom/index.tsx","../../src/features/socialHall/components/InitialSettings/MediaDropdown.tsx","../../src/features/socialHall/components/InitialSettings/Equalizer.tsx","../../src/features/socialHall/components/InitialSettings/AvailableMediaSelection.tsx","../../src/features/socialHall/components/InitialSettings/MediaContent.tsx","../../src/features/socialHall/components/InitialSettings/MediaControlButton.tsx","../../src/features/socialHall/components/InitialSettings/UserProfilePicture.tsx","../../src/features/socialHall/components/InitialSettings/helper.ts","../../src/features/socialHall/components/InitialSettings/InitialSettings.tsx","../../src/features/socialHall/components/MiniPlayerAndNotification/MiniPlayer/MiniPlayer.tsx","../../src/features/socialHall/components/EventModals/KnockMessageSelectModal/KnockMessageSelectModal.tsx","../../src/features/socialHall/components/ProfilePopup/GroupProfilePopup.tsx","../../src/features/socialHall/components/ProfilePopup/UserProfilePopup.tsx","../../src/features/socialHall/components/MiniPlayerAndNotification/MiniPlayerAndNotification.tsx","../../src/features/socialHall/components/SideBar/UserListItem/SideBarUserListItem.tsx","../../src/features/socialHall/components/SideBar/GroupListItem/SideBarGroupListItem.tsx","../../src/features/socialHall/components/SideBar/SideBar.tsx","../../src/features/socialHall/components/UserInitialization/UserInitialization.tsx","../../src/features/socialHall/components/Visualization/helpers/socialHallNavigation.ts","../../src/features/socialHall/components/Visualization/SocialHallViz.tsx","../../src/features/socialHall/components/WaitingForHost/WaitingForHost.tsx","../../src/features/socialHall/hooks/useTimer.ts","../../src/features/socialHall/hooks/useCountdown.ts","../../src/features/socialHall/hooks/useRefreshKnocks.ts","../../src/features/socialHall/hooks/useKnockUser.tsx","../../src/features/socialHall/hooks/subscription/useKnockSubscription.ts","../../src/features/socialHall/hooks/subscription/useAgoraSubscriptionHandler.ts","../../src/features/socialHall/hooks/useSpeakerView.ts","../../src/features/socialHall/hooks/useHeaderTimer.ts","../../src/features/socialHall/hooks/useUserOffline.ts","../../src/features/socialHall/hooks/useSocialHallData.ts","../../src/features/socialHall/hooks/useMediaDeviceUpdated.ts","../../src/features/socialHall/hooks/useMediaPermissionPopup.ts","../../src/features/socialHall/hooks/useSocialHallUsersAndGroupsData.ts","../../src/features/socialHall/hooks/useCheckIfEventHasSocialHallAttendees.ts","../../src/layout/SocialHallLayout/styles.ts","../../src/layout/SocialHallLayout/SocialHallLayout.tsx","../../src/layout/SocialHallLayout/SocialHallLayoutOld.tsx","../../src/layout/SocialHallLayout/index.tsx","../../src/screens/SocialHall/styles.ts","../../src/screens/SocialHall/SocialHall.tsx","../../src/screens/SocialHall/index.tsx"],"sourcesContent":["import { useApolloClient } from '@apollo/client';\nimport {\n  type EventFragment,\n  GetEventByIdDocument,\n  type GetEventByIdQuery,\n} from '@/apollo/graphql';\nimport { useSocialHallEventContext } from '@/providers/SocialHallEventProvider';\n\nexport const useGetEventByIdCache = () => {\n  const client = useApolloClient();\n  const { eventDetails } = useSocialHallEventContext();\n\n  const updateCache = (data: Partial<EventFragment>) => {\n    const options = {\n      query: GetEventByIdDocument,\n      variables: {\n        id: eventDetails?._id!,\n      },\n    };\n    const { getEventById } = client.readQuery(options) as GetEventByIdQuery;\n    client.writeQuery({\n      ...options,\n      data: {\n        getEventById: {\n          ...getEventById,\n          ...data,\n        },\n      },\n    });\n  };\n\n  return [updateCache];\n};\n\nexport default useGetEventByIdCache;\n","import { useCallback } from 'react';\nimport { type EventsStatus } from '@/apollo/generated/types';\nimport { useGetEventByIdCache } from './useGetEventByIdCache';\n\nexport const useUpdateGetEventByIdCache = () => {\n  const [updateCache] = useGetEventByIdCache();\n\n  const updateEventStatus = useCallback(\n    (status: EventsStatus) => {\n      updateCache({\n        status,\n        eventStatusUpdatedAt: new Date(),\n      });\n    },\n    [updateCache],\n  );\n\n  return {\n    updateEventStatus,\n  };\n};\n","import { useEffect, useState } from 'react';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { TSpan } from '@/components/Typography';\nimport { Button } from '@/components/Button';\nimport { Spacer } from '@/layout';\nimport { type EventModalProps } from './types';\n\nexport const EventModal = ({\n  isOpen,\n  onClose,\n  onConfirm,\n  title,\n  description,\n  confirmButton,\n  cancelButton,\n  countDown,\n  remainTime,\n  isConfirmButtonPrimary,\n  onCloseModal,\n}: EventModalProps) => {\n  const [remainSecond, setRemainSecond] = useState(3);\n\n  useEffect(() => {\n    if (countDown) {\n      setRemainSecond(Math.floor(remainTime! / 1000));\n      if (Math.ceil(remainTime! / 1000) === 1) {\n        onClose();\n      }\n    }\n  }, [onClose, countDown, remainTime]);\n  return (\n    <Modal\n      open={isOpen}\n      size={ModalSize.S}\n      onClose={onCloseModal}\n      testId=\"default-event-modal\"\n      disableBackdropClick\n    >\n      <ModalHeader>{title}</ModalHeader>\n      {countDown && <ModalHeader>{` ${remainSecond}...`}</ModalHeader>}\n      <ModalBody style={{ alignItems: 'center' }}>\n        <TSpan\n          font=\"body-l\"\n          textAlign=\"center\"\n          colorToken=\"--text-modal-neutral-default\"\n          data-testid=\"event-confirmation-modal-description\"\n        >\n          {description}\n        </TSpan>\n      </ModalBody>\n      <Spacer height={16} />\n      <ModalFooter\n        isFullScreen={false}\n        gap={16}\n        flexDirection=\"column\"\n        marginTop={12}\n      >\n        {confirmButton && (\n          <Button\n            primary={isConfirmButtonPrimary}\n            intent={isConfirmButtonPrimary ? undefined : 'negative'}\n            size=\"full\"\n            onClick={onConfirm}\n            data-testid=\"confirm-button\"\n          >\n            {confirmButton}\n          </Button>\n        )}\n        {cancelButton && (\n          <Button\n            tertiary\n            intent=\"negative\"\n            size=\"full\"\n            onClick={onClose}\n            data-testid=\"cancel-button\"\n          >\n            {cancelButton}\n          </Button>\n        )}\n      </ModalFooter>\n    </Modal>\n  );\n};\n","import { useCallback, useMemo, useEffect, useState } from 'react';\nimport { t } from 'i18next';\nimport Lottie from 'lottie-react';\nimport equalizerAnimation from '@/assets/animations/Equalizer.json';\nimport { Avatar } from '@/components/Avatar/Avatar';\nimport { Dropdown, type DropdownTargetProps } from '@/components/Dropdown';\nimport {\n  ActionType,\n  MuteSpeakerType,\n  type UserOutput,\n} from '@/apollo/generated/types';\nimport { Icon } from '@/components/Icon';\nimport { type IconProps } from '@/components/Icon/Icon';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useToggle } from '@/hooks';\nimport {\n  useSocialHallCallContext,\n  useSocialHallContext,\n  useSocialHallEventContext,\n} from '@/providers';\nimport { EventCancelAttendeeModal } from '@/screens/Chamber/components/elements/CalendarEvent/modals/EventAttendeesModal/EventCancelAttendeeModal';\nimport { Spinner } from '@/components/Spinner';\nimport { AGORA_EVENT } from '@/constants/socialHall';\nimport { type UID } from '@/facade/agora';\nimport NonNMDefaultImage from '@/assets/images/non_noumena_member_profile_default.svg';\nimport { getFullName } from '@/utils/fullName';\nimport { useAttendeeManagement } from '@/features/socialHall/hooks';\nimport { kickUserModalData } from '../EventModals/EventModal';\nimport { type UserOptionMenuProps } from './types';\nimport {\n  audienceUserMenuOptions,\n  stageUserMenuOptions,\n  stageEventCoHostMenuOptions,\n  stageEventHostMenuOptions,\n  invitedUserMenuOptions,\n  prepostInstantEventAudience,\n} from './data';\nimport {\n  AttendeeWrapper,\n  AvatarMask,\n  AvatarWrapper,\n  BorderContainer,\n  EqualizerContainer,\n  Microphone,\n  NameSpan,\n  CenterIconContainer,\n  OptionMenuWrapper,\n  InvitedContainer,\n} from './styles';\n\nexport type IAttendeeInCall = UserOutput & {\n  isMuted?: boolean;\n  isInvited?: boolean;\n  isAudience?: boolean;\n};\n\nexport const AttendeeInCall = ({\n  _id: attendeeId,\n  isMuted,\n  isInvited,\n  profile,\n  chamber,\n  firstName,\n  middleName,\n  lastName,\n  isAudience,\n  userStatus,\n}: IAttendeeInCall) => {\n  const { user } = useAuth();\n  const [isOpen, toggleIsOpen] = useToggle();\n  const {\n    onBlockUser,\n    onViewAttendeeProfile,\n    onInviteAttendeeToStage,\n    onCancelInvitationToStage,\n    onRemoveSpeakerFromStage,\n    onMuteSpeakerOnStage,\n  } = useAttendeeManagement();\n  const { userActiveGroupData } = useSocialHallContext();\n  const { rtcEngine, raisedHandUsers, networkErrorUsers, agoraChannelUsers } =\n    useSocialHallCallContext();\n  const { eventDetails, eventOwner, isEventHost, isMainEvent } =\n    useSocialHallEventContext();\n\n  const [isActiveSpeaker, setIsActiveSpeaker] = useState(false);\n\n  const isNetworkError = useMemo(\n    () => networkErrorUsers.includes(attendeeId),\n    [networkErrorUsers, attendeeId],\n  );\n\n  const avatarImg = useMemo(() => {\n    if (userStatus === ActionType.Unregistered) return NonNMDefaultImage;\n    return profile?.profilePicture || '';\n  }, [userStatus, profile?.profilePicture]);\n\n  const isSpeakerOnline = useMemo(\n    () => agoraChannelUsers?.includes(attendeeId) || isAudience,\n    [agoraChannelUsers, attendeeId, isAudience],\n  );\n\n  const name = useMemo(\n    () => getFullName(firstName, middleName, lastName),\n    [firstName, lastName, middleName],\n  );\n\n  useEffect(() => {\n    rtcEngine?.on(\n      AGORA_EVENT.VOLUME_INDICATOR,\n      (volumes: Array<{ level: number; uid: UID }>) => {\n        volumes.forEach((volume) => {\n          const isSpeaker = volume.level > 5 && volume.uid === attendeeId;\n          setIsActiveSpeaker(isSpeaker);\n        });\n      },\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [rtcEngine]);\n\n  const userActiveSocialHallGroup = useMemo(\n    () => userActiveGroupData?.data?.userActiveSocialHallGroup,\n    [userActiveGroupData?.data],\n  );\n\n  const getMuteOptions = useCallback(\n    (options: UserOptionMenuProps[]) => {\n      if (isMuted) {\n        const opts = options.map((op) => {\n          if (op.key === 'mute_user') {\n            const newOption: UserOptionMenuProps = {\n              key: 'unmute_user',\n              label: 'unmute_user',\n              value: 'unmute_user',\n              iconName: 'mic_on_m',\n              labelColor: '--text-tablecell-header-neutral-highlighted',\n              type: 'value',\n            };\n            return newOption;\n          }\n          return op;\n        });\n        return opts;\n      }\n      return options;\n    },\n    [isMuted],\n  );\n\n  const selectableOptions = useMemo(() => {\n    let options;\n\n    if (eventDetails?.isInstantEvent) {\n      options = getMuteOptions(prepostInstantEventAudience);\n    } else if (eventOwner?._id === attendeeId) {\n      options = getMuteOptions(stageEventHostMenuOptions);\n    } else if (userActiveSocialHallGroup?.hosts?.includes(attendeeId)) {\n      options = getMuteOptions(stageEventCoHostMenuOptions);\n    } else if (userActiveSocialHallGroup?.speakers?.includes(attendeeId)) {\n      options = getMuteOptions(stageUserMenuOptions);\n    } else if (isInvited) {\n      options = invitedUserMenuOptions;\n    } else {\n      options = audienceUserMenuOptions;\n    }\n\n    const updatedOptions = options.map((option) => ({\n      ...option,\n      label: t(`noumena.social_hall.${option.label}`, { firstName }),\n      description:\n        option.label === 'cancel_invite_to_stage'\n          ? t('noumena.social_hall.cancel_invite_description', { firstName })\n          : '',\n      icon: (\n        <Icon\n          name={option.iconName as IconProps['name']}\n          color={option.labelColor}\n          size={24}\n        />\n      ),\n    }));\n    return updatedOptions;\n  }, [\n    eventOwner?._id,\n    attendeeId,\n    eventDetails?.isInstantEvent,\n    userActiveSocialHallGroup?.hosts,\n    userActiveSocialHallGroup?.speakers,\n    isInvited,\n    getMuteOptions,\n    firstName,\n  ]);\n\n  const handleSelectOptions = useCallback(\n    (option) => {\n      if (option.value === 'remove_from_event') {\n        toggleIsOpen();\n      }\n      if (option.value === 'see_home_noum') {\n        onViewAttendeeProfile(chamber?._id ?? '');\n      }\n      if (option.value === 'invite_to_stage') {\n        onInviteAttendeeToStage(attendeeId);\n      }\n      if (option.value === 'move_to_audience') {\n        onRemoveSpeakerFromStage(attendeeId);\n      }\n      if (option.value === 'cancel_invite_to_stage') {\n        onCancelInvitationToStage(attendeeId);\n      }\n      if (option.value === 'mute_user') {\n        onMuteSpeakerOnStage(\n          userActiveSocialHallGroup?._id,\n          attendeeId,\n          MuteSpeakerType.Mute,\n        );\n      }\n      if (option.value === 'unmute_user') {\n        onMuteSpeakerOnStage(\n          userActiveSocialHallGroup?._id,\n          attendeeId,\n          MuteSpeakerType.Unmute,\n        );\n      }\n    },\n    [\n      toggleIsOpen,\n      onViewAttendeeProfile,\n      chamber?._id,\n      onInviteAttendeeToStage,\n      attendeeId,\n      onRemoveSpeakerFromStage,\n      onCancelInvitationToStage,\n      onMuteSpeakerOnStage,\n      userActiveSocialHallGroup?._id,\n    ],\n  );\n\n  const handleKickUser = useCallback(() => {\n    onBlockUser(attendeeId, eventDetails?._id!, name ?? '', true);\n    toggleIsOpen();\n  }, [attendeeId, eventDetails?._id, name, onBlockUser, toggleIsOpen]);\n\n  const AttendeeContent = () => (\n    <>\n      <AvatarWrapper>\n        {raisedHandUsers.includes(attendeeId) && (\n          <>\n            <CenterIconContainer data-testid=\"raise_hand\">\n              <Icon imageIconName=\"raise_hand_m\" size={24} />\n            </CenterIconContainer>\n            <AvatarMask />\n          </>\n        )}\n        <Avatar url={avatarImg} size=\"XL\" disabled={isNetworkError} />\n        {isNetworkError && (\n          <>\n            <CenterIconContainer data-testid=\"low_connection\">\n              <Icon\n                name=\"low_connection_xs\"\n                color=\"--icon-call-ui-neutral-default\"\n                size={24}\n              />\n            </CenterIconContainer>\n            <AvatarMask isOffline />\n          </>\n        )}\n        {isInvited && (\n          <>\n            <InvitedContainer\n              font=\"footnote-bold\"\n              colorToken=\"--text-call-ui-brand-primary-default\"\n              data-testid=\"invited_user\"\n            >\n              {t('noumena.social_hall.invite_status.invited')}\n            </InvitedContainer>\n          </>\n        )}\n        {isMuted && (\n          <Microphone data-testid=\"muted_user\">\n            <Icon\n              name=\"mic_off_m\"\n              color=\"--icon-call-ui-neutral-default\"\n              size={16}\n            />\n          </Microphone>\n        )}\n        {isActiveSpeaker && !isMuted && !isNetworkError && !isAudience && (\n          <>\n            <EqualizerContainer data-testid=\"active_speaker\">\n              <Lottie\n                animationData={equalizerAnimation}\n                loop={true}\n                style={{ height: '16px' }}\n              />\n            </EqualizerContainer>\n            <BorderContainer />\n          </>\n        )}\n        {!isSpeakerOnline && (\n          <>\n            <CenterIconContainer data-testid=\"inactive_speaker\">\n              <Spinner />\n            </CenterIconContainer>\n            <AvatarMask />\n          </>\n        )}\n      </AvatarWrapper>\n      <NameSpan colorToken=\"--text-call-ui-neutral-default\">\n        {userActiveSocialHallGroup?.hosts?.includes(attendeeId) && (\n          <Icon\n            name=\"star_s\"\n            color=\"--icon-call-ui-neutral-default\"\n            size={12}\n          />\n        )}\n        {firstName}\n      </NameSpan>\n    </>\n  );\n\n  return (\n    <>\n      <OptionMenuWrapper data-testid=\"dropdown_wrapper\">\n        {attendeeId !== user?._id && isEventHost && isMainEvent ? (\n          <Dropdown\n            hideIcons={false}\n            closeOnSelect\n            placement=\"auto\"\n            onSelectOption={handleSelectOptions}\n            options={selectableOptions}\n            containerWidth=\"280px\"\n            usePortal={false}\n            calRefTop={false}\n            isAnimation={false}\n            usePopStyle={true}\n            minHeight={`${50 * selectableOptions.length}px`}\n            containerStyle={{\n              inset: '-60px auto auto 60px',\n              minWidth: 'max-content',\n            }}\n          >\n            {({\n              targetRef,\n              targetProps,\n              toggle,\n            }: DropdownTargetProps<HTMLDivElement>) => (\n              <AttendeeWrapper\n                data-testid=\"avatar_wrapper\"\n                ref={targetRef}\n                onClick={toggle}\n                {...targetProps}\n              >\n                <AttendeeContent />\n              </AttendeeWrapper>\n            )}\n          </Dropdown>\n        ) : (\n          <AttendeeWrapper data-testid=\"avatar_wrapper\">\n            <AttendeeContent />\n          </AttendeeWrapper>\n        )}\n      </OptionMenuWrapper>\n      <EventCancelAttendeeModal\n        isOpen={isOpen}\n        onClose={toggleIsOpen}\n        onConfirm={handleKickUser}\n        {...kickUserModalData(name)}\n      />\n    </>\n  );\n};\n\nexport default { AttendeeInCall };\n","import { useTranslation } from 'react-i18next';\nimport { Button } from '@/components/Button';\nimport { InlineAvatar } from '@/components/Avatar/Inline/Inline';\nimport * as S from './styles';\nimport { type BottomBarProp } from './types';\n\nexport const BottomBar = (props: BottomBarProp): JSX.Element => {\n  const { urls, onClickShowAll } = props;\n  const { t } = useTranslation();\n\n  return (\n    <S.Container>\n      <S.AvatarWrapper>\n        <InlineAvatar urls={urls.length ? urls.slice(0, 3) : []} size=\"XL\" />\n        {!!urls && (\n          <S.TotalUsers colorToken=\"--text-card-neutral-default\">\n            {t('noumena.social_hall.total_users', {\n              userCount: urls.length,\n            })}\n          </S.TotalUsers>\n        )}\n      </S.AvatarWrapper>\n      <Button secondary size=\"small\" onClick={onClickShowAll}>\n        {t('noumena.social_hall.show_all')}\n      </Button>\n    </S.Container>\n  );\n};\n","import { t } from 'i18next';\n\nimport { Spacer } from '@/layout';\nimport { Icon } from '@/components/Icon';\nimport { TSpan } from '@/components/Typography';\nimport { useSocialHallContext } from '@/providers';\nimport { Container, Content, IconContainer } from './styles';\n\nexport const BrowserSupport = () => {\n  const { setShowBrowserSupportBanner, showBrowserSupportBanner } =\n    useSocialHallContext();\n\n  return (\n    <Container isVisible={!!showBrowserSupportBanner}>\n      <Content>\n        <IconContainer>\n          <Icon\n            name=\"alert_xs\"\n            size={10}\n            color=\"--icon-button-neutral-alt-default\"\n          />\n        </IconContainer>\n        <Spacer width={8} />\n        <TSpan font=\"body-m\" colorToken=\"--text-infobox-neutral-default\">\n          {t('noumena.social_hall.browser_not_support')}\n        </TSpan>\n      </Content>\n      <Icon\n        name=\"close_m\"\n        size={16}\n        onClick={() => setShowBrowserSupportBanner(false)}\n        color=\"--icon-infobox-brand-primary-default\"\n      />\n    </Container>\n  );\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { t } from 'i18next';\nimport { Button } from '@/components/Button';\nimport { TextField } from '@/components/TextField';\nimport { useSocialHallContext, useSocialHallEventContext } from '@/providers';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { TSpan } from '@/components/Typography';\nimport { Spacer } from '@/layout';\nimport { useSocialHallData } from '@/features/socialHall/hooks';\nimport { type ChangeGroupNameProps } from './types';\n\nexport const ChangeGroupNameModal = ({\n  isOpen,\n  onClose,\n}: ChangeGroupNameProps) => {\n  const [groupName, setGroupName] = useState<string>('');\n  const { groupName: originalGroupName } = useSocialHallEventContext();\n  const { groupId } = useSocialHallContext();\n  const { handleChangeGroupName, isChangingGroupName } = useSocialHallData();\n\n  const handleCancel = useCallback(() => {\n    setGroupName('');\n    onClose();\n  }, [onClose]);\n\n  const onConfirm = useCallback(async () => {\n    const result = await handleChangeGroupName(groupId!, groupName);\n    if (result) {\n      handleCancel();\n    }\n  }, [groupId, groupName, handleChangeGroupName, handleCancel]);\n\n  const onChangeGroupName = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      if (!e.target.value.replace(/\\s/g, '')) {\n        setGroupName('');\n      } else {\n        setGroupName(e.target.value);\n      }\n    },\n    [],\n  );\n\n  useEffect(() => {\n    if (isOpen && originalGroupName) {\n      setGroupName(originalGroupName);\n    }\n  }, [isOpen, originalGroupName]);\n\n  return (\n    <Modal\n      data-testid=\"change-group-name-modal\"\n      open={isOpen}\n      onClose={handleCancel}\n      size={ModalSize.M}\n      enableCloseButton\n      disableBackdropClick\n    >\n      <ModalHeader>\n        {t('noumena.social_hall.change_group_name.title')}\n      </ModalHeader>\n      <ModalBody overflowY=\"initial\">\n        <TSpan\n          font=\"body-l\"\n          textAlign=\"center\"\n          colorToken=\"--text-body-neutral-default\"\n        >\n          {t('noumena.social_hall.change_group_name.description')}\n        </TSpan>\n        <Spacer height={16} />\n        <TextField\n          label={t('noumena.social_hall.change_group_name.label')}\n          value={groupName}\n          onChange={onChangeGroupName}\n          maxLength={50}\n          fullWidth\n          hideLengthHelperText\n        />\n      </ModalBody>\n      <ModalFooter gap={16}>\n        <Button\n          tertiary\n          intent=\"negative\"\n          size=\"full\"\n          onClick={handleCancel}\n          data-testid=\"cancel-button\"\n        >\n          {t('noumena.social_hall.change_group_name.cancel_btn')}\n        </Button>\n        <Button\n          primary\n          size=\"full\"\n          onClick={onConfirm}\n          data-testid=\"confirm-button\"\n          disabled={!groupName}\n          loading={isChangingGroupName}\n        >\n          {t('noumena.social_hall.change_group_name.confirm_btn')}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n","import { t } from 'i18next';\nimport { Icon } from '@/components/Icon';\nimport { BadgeContainer, BadgeNotification, ControlPanelIcon } from './styles';\n\ntype ChatControlProps = {\n  onToggleChat: () => void;\n  isNewMessage: boolean | undefined;\n  showChatPanel: boolean | undefined;\n};\n\nexport const ChatControl = ({\n  onToggleChat,\n  isNewMessage,\n  showChatPanel,\n}: ChatControlProps) => (\n  <ControlPanelIcon\n    cursorAllowed\n    onClick={onToggleChat}\n    data-title={t('noumena.social_hall.Control_panel.Chat')}\n  >\n    {!showChatPanel && isNewMessage && (\n      <BadgeContainer>\n        <BadgeNotification />\n      </BadgeContainer>\n    )}\n    <Icon\n      size={24}\n      name=\"message_outline_m\"\n      color=\"--icon-button-neutral-default\"\n    />\n  </ControlPanelIcon>\n);\n","import { Icon } from '@/components/Icon';\nimport { Checkbox } from '@/components/Checkbox';\nimport { SocialHallMediaUtils } from '@/utils/socialHallMedia';\nimport { SelectBoxContainer, SelectBoxText } from './styles';\nimport { type MediaVirtualBackground } from './types';\n\nexport const MediaVirtualBackgroundOption: React.FC<\n  {\n    selected: boolean;\n    onCheck: (options: MediaVirtualBackground | null) => void;\n  } & MediaVirtualBackground\n> = ({ label, onCheck, selected, ...props }) => {\n  const handleCheck = () => {\n    const value = !selected ? (props as MediaVirtualBackground) : null;\n    onCheck(value);\n  };\n\n  return (\n    <SelectBoxContainer>\n      <Checkbox\n        isChecked={selected}\n        icon={\n          selected ? (\n            <Icon\n              name=\"tick_m\"\n              size={24}\n              color=\"--icon-checkbox-neutral-alt-default\"\n            />\n          ) : undefined\n        }\n        onChange={() => handleCheck()}\n      />\n      <SelectBoxText font=\"body-l\">\n        {SocialHallMediaUtils.formatDeviceLabel(label)}\n      </SelectBoxText>\n    </SelectBoxContainer>\n  );\n};\n","import { Icon } from '@/components/Icon';\nimport { Radiobox } from '@/components/Radiobox';\nimport { SocialHallMediaUtils } from '@/utils/socialHallMedia';\nimport { type MediaDeviceLabel } from '@/screens/SocialHall/types';\nimport { SelectBoxContainer, SelectBoxText } from './styles';\n\nexport const MediaSettingOption: React.FC<{\n  selected: boolean;\n  device: MediaDeviceLabel;\n  onCheck: (id: string) => void;\n}> = ({ device: { deviceId, label }, onCheck, selected }) => (\n  <SelectBoxContainer>\n    <Radiobox\n      isChecked={selected}\n      icon={\n        selected ? (\n          <Icon\n            name=\"radio_btn_m\"\n            size={12}\n            color=\"--icon-radiobutton-brand-primary-default\"\n          />\n        ) : undefined\n      }\n      onChange={() => onCheck(deviceId)}\n    />\n    <SelectBoxText font=\"body-l\">\n      {SocialHallMediaUtils.formatDeviceLabel(label)}\n    </SelectBoxText>\n  </SelectBoxContainer>\n);\n\nexport default MediaSettingOption;\n","import { useCallback, useEffect, useState, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { TSpan } from '@/components/Typography';\nimport { Button } from '@/components/Button';\nimport { Spacer } from '@/layout';\nimport { SocialHallMediaUtils } from '@/utils/socialHallMedia';\nimport { type MediaDeviceLabel } from '@/screens/SocialHall/types';\nimport { useMediaDeviceUpdated } from '@/features/socialHall/hooks';\nimport { useSocialHallContext } from '@/providers/SocialHallProvider';\nimport { useSocialHallCallContext } from '@/providers/SocialHallCallProvider';\nimport { MediaVirtualBackgroundOption } from './MediaVirtualBackgroundOption';\nimport { MediaSettingOption } from './MediaSettingOption';\nimport { type MediaSettingProps, type MediaVirtualBackground } from './types';\nimport { MiniContainer, ModalSubHeading } from './styles';\n\nexport const MediaSettingModal: React.FC<MediaSettingProps> = ({\n  isOpen,\n  handleClose,\n}) => {\n  const { t } = useTranslation();\n  const {\n    deviceId,\n    setVirtualBackground,\n    virtualBackground,\n    videoPermissionState,\n    audioPermissionState,\n  } = useSocialHallContext();\n  const { onChangeDevice } = useSocialHallCallContext();\n  const [selectedCamera, setSelectedCamera] = useState('');\n  const [selectedVirtualBackground, setSelectVirtualBackground] =\n    useState<MediaVirtualBackground | null>(virtualBackground);\n  const [selectedMicrophone, setSelectedMicrophone] = useState('');\n  const [audioMediaDevices, setAudioMediaDevices] = useState<\n    MediaDeviceLabel[]\n  >([]);\n  const [videoMediaDevices, setVideoMediaDevices] = useState<\n    MediaDeviceLabel[]\n  >([]);\n\n  const handleAccept = useCallback(() => {\n    setVirtualBackground(selectedVirtualBackground);\n    onChangeDevice({\n      camera: selectedCamera ?? '',\n      microphone: selectedMicrophone ?? '',\n      speaker: deviceId?.speaker ?? '',\n    });\n    handleClose();\n  }, [\n    handleClose,\n    selectedCamera,\n    onChangeDevice,\n    deviceId?.speaker,\n    selectedMicrophone,\n    setVirtualBackground,\n    selectedVirtualBackground,\n  ]);\n\n  const handleSetMediaDevices = useCallback(async () => {\n    const inputDevices = await SocialHallMediaUtils.getAllConnectedMedia();\n\n    if (inputDevices?.audioDevices) {\n      setAudioMediaDevices(inputDevices.audioDevices);\n    }\n    if (inputDevices?.cameraDevices) {\n      setVideoMediaDevices(inputDevices.cameraDevices);\n    }\n  }, []);\n\n  const virtualBackgrounds = useMemo(\n    () => SocialHallMediaUtils.getAllVirtualBackground(),\n    [],\n  );\n\n  useEffect(() => {\n    if (isOpen && (videoPermissionState || audioPermissionState)) {\n      handleSetMediaDevices();\n    }\n  }, [\n    isOpen,\n    handleSetMediaDevices,\n    videoPermissionState,\n    audioPermissionState,\n  ]);\n\n  useEffect(() => {\n    if (deviceId?.camera !== selectedCamera) {\n      setSelectedCamera(deviceId?.camera ?? '');\n    }\n    if (deviceId?.microphone !== selectedMicrophone) {\n      setSelectedMicrophone(deviceId?.microphone ?? '');\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [deviceId]);\n\n  useMediaDeviceUpdated(handleSetMediaDevices);\n\n  return (\n    <Modal\n      testId=\"media-setting-modal\"\n      open={isOpen}\n      onClose={handleClose}\n      enableCloseButton\n      size={ModalSize.M}\n      disableBackdropClick\n    >\n      <ModalHeader>{t('noumena.settings')}</ModalHeader>\n      <ModalBody>\n        <MiniContainer>\n          <ModalSubHeading>\n            <TSpan font=\"body-m-bold\">\n              {t('noumena.social_hall.media_settings.select(microphone)')}\n            </TSpan>\n          </ModalSubHeading>\n          {audioMediaDevices.map((device) => (\n            <MediaSettingOption\n              device={device}\n              onCheck={setSelectedMicrophone}\n              key={device.deviceId}\n              selected={device.deviceId === selectedMicrophone}\n            />\n          ))}\n        </MiniContainer>\n        <Spacer height={18} />\n        <MiniContainer>\n          <ModalSubHeading>\n            <TSpan font=\"body-m-bold\">\n              {t('noumena.social_hall.media_settings.select(camera)')}\n            </TSpan>\n          </ModalSubHeading>\n          {videoMediaDevices.map((device) => (\n            <MediaSettingOption\n              device={device}\n              onCheck={setSelectedCamera}\n              key={device.deviceId}\n              selected={device.deviceId === selectedCamera}\n            />\n          ))}\n        </MiniContainer>\n        <Spacer height={18} />\n        <MiniContainer>\n          <ModalSubHeading>\n            <TSpan font=\"body-m-bold\">\n              {t(\n                'noumena.social_hall.media_settings.select(camera_background)',\n              )}\n            </TSpan>\n          </ModalSubHeading>\n          {virtualBackgrounds.map((background) => (\n            <MediaVirtualBackgroundOption\n              key={background.id}\n              onCheck={(bg) => setSelectVirtualBackground(bg)}\n              selected={selectedVirtualBackground?.id === background.id}\n              {...background}\n            />\n          ))}\n        </MiniContainer>\n      </ModalBody>\n      <ModalFooter>\n        <Button\n          data-testid=\"cancel_button\"\n          tertiary\n          size=\"full\"\n          onClick={handleAccept}\n        >\n          {t('noumena.socialhall.media_control_btn_ok')}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n","import { t } from 'i18next';\nimport { useCallback, useState } from 'react';\nimport { Icon } from '@/components/Icon';\nimport { MediaSettingModal } from '../MediaSettingModal';\n\nimport { ControlPanelIcon } from './styles';\n\nexport const MediaSettingControl = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const onToggleMediaSettingPopup = useCallback(() => {\n    setIsOpen((open) => !open);\n  }, []);\n\n  return (\n    <>\n      <ControlPanelIcon\n        cursorAllowed\n        onClick={onToggleMediaSettingPopup}\n        data-title={t('noumena.social_hall.Control_panel.settings')}\n      >\n        <Icon\n          size={24}\n          name=\"settings_m\"\n          color=\"--icon-button-neutral-default\"\n        />\n      </ControlPanelIcon>\n      <MediaSettingModal\n        isOpen={isOpen}\n        onAccept={onToggleMediaSettingPopup}\n        handleClose={onToggleMediaSettingPopup}\n      />\n    </>\n  );\n};\n","import { t } from 'i18next';\nimport { useEffect, useState } from 'react';\nimport { Icon } from '@/components/Icon';\nimport {\n  useSocialHallCallContext,\n  useSocialHallEventContext,\n} from '@/providers';\nimport { BadgeContainer, BadgeNotification, ControlPanelIcon } from './styles';\n\nexport const MemberControl = ({\n  onToggleMemberPanel,\n  showMembersPanel,\n}: {\n  showMembersPanel: boolean;\n  onToggleMemberPanel: () => void;\n}) => {\n  const { isEventHost, eventDetails } = useSocialHallEventContext();\n  const { raisedHandUsers } = useSocialHallCallContext();\n  const [showBadge, setShowBadge] = useState(false);\n  const [isNewMemberJoined, setIsNewMemberJoined] = useState(false);\n\n  const onToggleHandler = () => {\n    onToggleMemberPanel();\n    if (showMembersPanel) {\n      setIsNewMemberJoined(false);\n    }\n  };\n\n  useEffect(() => {\n    const hostBadgeLogic = !!raisedHandUsers.length && isEventHost;\n    setShowBadge(\n      (hostBadgeLogic || !isEventHost) &&\n        !eventDetails?.isInstantEvent &&\n        !showMembersPanel &&\n        isNewMemberJoined,\n    );\n  }, [\n    isNewMemberJoined,\n    raisedHandUsers,\n    isEventHost,\n    eventDetails?.isInstantEvent,\n    showMembersPanel,\n  ]);\n\n  return (\n    <ControlPanelIcon\n      cursorAllowed\n      onClick={onToggleHandler}\n      data-title={t('noumena.social_hall.Control_panel.Members')}\n    >\n      {showBadge && (\n        <BadgeContainer>\n          <BadgeNotification />\n        </BadgeContainer>\n      )}\n      <Icon size={24} name=\"groups_m\" color=\"--icon-button-neutral-default\" />\n    </ControlPanelIcon>\n  );\n};\n","import { useMemo } from 'react';\nimport { t } from 'i18next';\nimport { Icon } from '@/components/Icon';\nimport { Spinner } from '@/components/Spinner';\nimport { ControlPanelIcon, ErrorWrapper } from './styles';\nimport { type VideoControlProps } from './types';\n\nexport const VideoControl = ({\n  onToggle,\n  isCameraEnable,\n  isError = false,\n  isLoading = false,\n}: VideoControlProps) => {\n  const color = useMemo((): {\n    bgColor: string | undefined;\n    hoverColor: string | undefined;\n    iconColor: string;\n  } => {\n    if (isError) {\n      return {\n        bgColor: 'var(--bg-button-neutral-disabled)',\n        iconColor: '--icon-button-neutral-disabled',\n        hoverColor: 'var(--bg-button-neutral-disabled)',\n      };\n    }\n    if (!isCameraEnable && !isLoading) {\n      return {\n        bgColor: 'var(--bg-button-danger-secondary-default)',\n        iconColor: '--icon-button-danger-secondary-default',\n        hoverColor: 'var(--bg-button-danger-secondary-hover)',\n      };\n    }\n\n    return {\n      bgColor: undefined,\n      iconColor: '--icon-button-neutral-default',\n      hoverColor: undefined,\n    };\n  }, [isError, isCameraEnable, isLoading]);\n\n  const title = useMemo(() => {\n    if (isError) {\n      return t('noumena.social_hall.media_permission_more_info');\n    }\n    return isCameraEnable\n      ? t('noumena.social_hall.Control_panel.Camera_on')\n      : t('noumena.social_hall.Control_panel.Camera_off');\n  }, [isCameraEnable, isError]);\n\n  const onToggleHandler = () => {\n    if (!isLoading) {\n      onToggle();\n    }\n  };\n\n  return (\n    <ControlPanelIcon\n      cursorAllowed\n      onClick={() => onToggleHandler()}\n      data-title={title}\n      bgColor={color.bgColor}\n      hoverColor={color.hoverColor}\n    >\n      {isError && (\n        <ErrorWrapper>\n          <Icon\n            size={11}\n            name=\"alert_xs\"\n            color=\"--icon-badge-neutral-alt-default\"\n          />\n        </ErrorWrapper>\n      )}\n      {isLoading && <Spinner />}\n      {!isError && !isLoading && (\n        <Icon\n          size={24}\n          name={isCameraEnable ? 'webcam_on_m' : 'webcam_off_m'}\n          color={color.iconColor}\n        />\n      )}\n      {isError && (\n        <Icon size={24} name=\"webcam_off_m\" color={color.iconColor} />\n      )}\n    </ControlPanelIcon>\n  );\n};\n","import { useMemo } from 'react';\nimport { t } from 'i18next';\nimport { Icon } from '@/components/Icon';\nimport { Spinner } from '@/components/Spinner';\nimport { ControlPanelIcon, ErrorWrapper } from './styles';\nimport { type MuteControlProps } from './types';\n\nexport const MuteControl = ({\n  isMuted,\n  onToggle,\n  isError,\n  isLoading = false,\n}: MuteControlProps) => {\n  const color = useMemo((): {\n    bgColor: string | undefined;\n    hoverColor: string | undefined;\n    iconColor: string;\n  } => {\n    if (isError) {\n      return {\n        bgColor: 'var(--bg-button-neutral-disabled)',\n        iconColor: '--icon-button-neutral-disabled',\n        hoverColor: 'var(--bg-button-neutral-disabled)',\n      };\n    }\n    if (isMuted) {\n      return {\n        bgColor: 'var(--bg-button-danger-secondary-default)',\n        iconColor: '--icon-button-danger-secondary-default',\n        hoverColor: 'var(--bg-button-danger-secondary-hover)',\n      };\n    }\n\n    return {\n      bgColor: undefined,\n      iconColor: '--icon-button-neutral-default',\n      hoverColor: undefined,\n    };\n  }, [isError, isMuted]);\n\n  const title = useMemo(() => {\n    if (isError) {\n      return t('noumena.social_hall.media_permission_more_info');\n    }\n    return !isMuted\n      ? t('noumena.social_hall.Control_panel.Mic_on')\n      : t('noumena.social_hall.Control_panel.Mic_off');\n  }, [isMuted, isError]);\n\n  return (\n    <ControlPanelIcon\n      cursorAllowed\n      onClick={() => onToggle()}\n      data-title={title}\n      bgColor={color.bgColor}\n      hoverColor={color.hoverColor}\n    >\n      {isError && (\n        <ErrorWrapper>\n          <Icon\n            size={11}\n            name=\"alert_xs\"\n            color=\"--icon-badge-neutral-alt-default\"\n          />\n        </ErrorWrapper>\n      )}\n      {isLoading && <Spinner />}\n      {!isError && !isLoading && (\n        <Icon\n          size={24}\n          name={!isMuted ? 'mic_on_m' : 'mic_off_m'}\n          color={color.iconColor}\n        />\n      )}\n      {isError && <Icon size={24} name=\"mic_off_m\" color={color.iconColor} />}\n    </ControlPanelIcon>\n  );\n};\n","import { t } from 'i18next';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { TSpan } from '@/components/Typography';\nimport { Spacer } from '@/layout';\nimport { Button } from '@/components/Button';\nimport { Icon } from '@/components/Icon';\nimport { HandIconWrapper } from './styles';\nimport { type HandsUpModalProps } from './types';\n\nexport const HandsUpModal = ({\n  isOpen,\n  onClose,\n  onConfirm,\n}: HandsUpModalProps) => (\n  <Modal\n    open={isOpen}\n    testId=\"hands-up-modal\"\n    size={ModalSize.S}\n    disableBackdropClick\n  >\n    <HandIconWrapper>\n      <Icon imageIconName=\"raise_hand_m\" size={48} />\n    </HandIconWrapper>\n    <ModalHeader flexDirection=\"column\">\n      {t('noumena.social_hall.hands_up.modal.title')}\n    </ModalHeader>\n    <ModalBody>\n      <TSpan\n        font=\"body-l\"\n        textAlign=\"center\"\n        colorToken=\"--text-modal-neutral-default\"\n        data-testid=\"event-confirmation-modal-description\"\n      >\n        {t('noumena.social_hall.hands_up.modal.description')}\n      </TSpan>\n    </ModalBody>\n    <Spacer height={16} />\n    <ModalFooter gap={16} flexDirection=\"column\" marginTop={12}>\n      <Button\n        primary\n        size=\"full\"\n        onClick={onConfirm}\n        data-testid=\"confirm-button\"\n      >\n        {t('noumena.social_hall.hands_up.modal.btn_confirm')}\n      </Button>\n      <Button\n        tertiary\n        intent=\"negative\"\n        size=\"full\"\n        onClick={onClose}\n        data-testid=\"cancel-button\"\n      >\n        {t('noumena.social_hall.hands_up.modal.btn_cancel')}\n      </Button>\n    </ModalFooter>\n  </Modal>\n);\n","import { t } from 'i18next';\nimport { useMemo } from 'react';\nimport { useToggle, useWindowDimensions } from '@/hooks';\nimport { breakpoints } from '@/constants/devices';\nimport { Icon } from '@/components/Icon';\nimport { useSocialHallCallContext } from '@/providers';\nimport { HandsUpModal } from '../EventModals/HandsUpModal';\nimport { ControlPanelIcon } from './styles';\n\nexport const RaiseHandControl = () => {\n  const { width } = useWindowDimensions();\n  const [isOpen, toggle] = useToggle(false);\n  const isMobile = useMemo(() => width < breakpoints.MOBILE_MAX, [width]);\n  const { showRaiseHand, onToggleRaiseHand } = useSocialHallCallContext();\n\n  return (\n    <>\n      <ControlPanelIcon\n        cursorAllowed\n        onClick={onToggleRaiseHand}\n        bgColor={\n          showRaiseHand\n            ? isMobile\n              ? 'var(--bg-button-brand-secondary-default)'\n              : 'var(--bg-button-brand-primary-default)'\n            : undefined\n        }\n        data-title={\n          showRaiseHand\n            ? t('noumena.social_hall.Control_panel.hand_rasied')\n            : t('noumena.social_hall.Control_panel.raise_hand')\n        }\n        hoverColor={\n          showRaiseHand ? 'var(--bg-button-brand-primary-hover)' : undefined\n        }\n      >\n        <Icon size={24} imageIconName=\"raise_hand_m\" />\n      </ControlPanelIcon>\n      <HandsUpModal\n        isOpen={isOpen}\n        onClose={toggle}\n        onConfirm={onToggleRaiseHand}\n      />\n    </>\n  );\n};\n","import { t } from 'i18next';\nimport { useCallback, useMemo } from 'react';\nimport { Icon } from '@/components/Icon';\nimport { useSocialHallCallContext } from '@/providers';\nimport { Spinner } from '@/components/Spinner';\nimport { ControlPanelIcon } from './styles';\n\nexport const ScreenSharingControl = () => {\n  const {\n    isShareScreen,\n    onToggleScreenSharing,\n    isRemoteScreenSharing,\n    screenSharingLocalUserFeed,\n  } = useSocialHallCallContext();\n\n  const isLoading = useMemo(\n    () => !screenSharingLocalUserFeed && isShareScreen,\n    [screenSharingLocalUserFeed, isShareScreen],\n  );\n\n  const isScreenSharing = useMemo(\n    () => !isShareScreen && isRemoteScreenSharing,\n    [isShareScreen, isRemoteScreenSharing],\n  );\n\n  const onToggleScreenSharingHandler = useCallback(() => {\n    if (!isScreenSharing) {\n      onToggleScreenSharing();\n    }\n  }, [onToggleScreenSharing, isScreenSharing]);\n\n  return (\n    <ControlPanelIcon\n      cursorAllowed={!isScreenSharing}\n      onClick={onToggleScreenSharingHandler}\n      data-title={\n        isScreenSharing\n          ? t('noumena.social_hall.Control_panel.sharing_not_possible')\n          : isShareScreen\n          ? t('noumena.social_hall.Control_panel.stop_sharing')\n          : t('noumena.social_hall.Control_panel.share_screen')\n      }\n      hoverColor={\n        isScreenSharing ? 'var(--bg-button-neutral-disabled)' : undefined\n      }\n    >\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <Icon\n          size={24}\n          name={isShareScreen ? 'share_content_off_m' : 'share_content_m'}\n          color=\"--icon-button-neutral-default\"\n        />\n      )}\n    </ControlPanelIcon>\n  );\n};\n","import { useEffect, useMemo, useState } from 'react';\nimport { t } from 'i18next';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { TSpan } from '@/components/Typography';\nimport { Button } from '@/components/Button';\nimport { notificationModal } from './data';\n\ntype MediaPermissionNotificationProps = {\n  showAudioModal: boolean | null;\n  showVideoModal: boolean | null;\n  onTogglePopup: (type: 'audio' | 'video') => void;\n};\n\nexport const MediaPermissionNotification = ({\n  showAudioModal,\n  showVideoModal,\n  onTogglePopup,\n}: MediaPermissionNotificationProps) => {\n  const [showNotificationModal, setShowNotificationModal] = useState(false);\n\n  const showAudioPopup = useMemo(\n    () => showAudioModal !== null && showAudioModal,\n    [showAudioModal],\n  );\n  const showVideoPopup = useMemo(\n    () => showVideoModal !== null && showVideoModal,\n    [showVideoModal],\n  );\n\n  useEffect(() => {\n    const show = showAudioPopup || showVideoPopup;\n    setShowNotificationModal(show);\n  }, [showAudioPopup, showVideoPopup]);\n\n  const { heading, body } = useMemo(() => {\n    if (showAudioPopup && showVideoPopup) {\n      return notificationModal.cameraMicNotFound;\n    }\n    if (showAudioPopup) {\n      return notificationModal.micNotFound;\n    }\n    if (showVideoPopup) {\n      return notificationModal.cameraNotFound;\n    }\n    return { heading: '', body: '' };\n  }, [showAudioPopup, showVideoPopup]);\n\n  const onClose = () => {\n    setShowNotificationModal(false);\n    if (showAudioModal) {\n      onTogglePopup('audio');\n    }\n    if (showVideoModal) {\n      onTogglePopup('video');\n    }\n  };\n\n  return (\n    <Modal\n      isFullScreen={false}\n      testId=\"testElementDelete\"\n      open={showNotificationModal}\n      onClose={onClose}\n      size={ModalSize.S}\n      disableBackdropClick\n    >\n      <ModalHeader>{heading}</ModalHeader>\n      <ModalBody align=\"center\">\n        <TSpan\n          data-testid=\"bodyElementDelete\"\n          font=\"body-l\"\n          colorToken=\"--text-modal-neutral-default\"\n          textAlign=\"center\"\n        >\n          {body}\n        </TSpan>\n      </ModalBody>\n      <ModalFooter flexDirection=\"column\" marginTop={12} gap={16}>\n        <Button\n          data-testid=\"cancelElementDelete\"\n          tertiary\n          size=\"full\"\n          onClick={() => onClose()}\n        >\n          {t(`noumena.social_hall.hardware_testing_modal_close`)}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n","import { t } from 'i18next';\nimport { useToast } from '@/hooks';\nimport { Icon } from '@/components/Icon';\nimport { ControlPanelIcon } from './styles';\n\nexport const CopyLinkControl = () => {\n  const { addToast } = useToast();\n\n  const onCopyLink = () => {\n    const socialHallLink = window.location.href;\n    navigator.clipboard.writeText(socialHallLink);\n    addToast('primary', 'none', `${t('noumena.event.link.copied')}`);\n  };\n\n  return (\n    <ControlPanelIcon\n      cursorAllowed\n      onClick={() => onCopyLink()}\n      data-title={t('noumena.social_hall.copy_link')}\n    >\n      <Icon name=\"link_m\" size={20} color=\"--icon-button-neutral-default\" />\n    </ControlPanelIcon>\n  );\n};\n","import { t } from 'i18next';\nimport { useNavigate } from 'react-router';\nimport { useCallback, useMemo, useState } from 'react';\nimport { Icon } from '@/components/Icon';\nimport { breakpoints } from '@/constants/devices';\nimport ROUTES from '@/constants/routes';\nimport { EventsStatus } from '@/apollo/generated/types';\nimport { TSpan } from '@/components/Typography';\nimport { SubscriptionType } from '@/screens/SocialHall/types';\nimport {\n  useCameraPermissionListener,\n  useMicrophonePermissionListener,\n  useMediaPermissionPopup,\n  useCheckIfEventHasSocialHallAttendees,\n} from '@/features/socialHall/hooks';\nimport { useError } from '@/hooks/useError';\nimport { useLaunchDarkly } from '@/hooks/launchDarkly';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useWindowDimensions } from '@/hooks/dimensions';\nimport {\n  useSocialHallContext,\n  useSocialHallCallContext,\n  useSocialHallEventContext,\n} from '@/providers';\nimport {\n  ControlPanelIcon,\n  ControlPanelWrapper,\n  ControlPanelMainContainer,\n} from './styles';\nimport {\n  attendeeLeaveEventModalData,\n  hostFinishInstantEventModalData,\n  hostFinishMainEventModalData,\n} from '../EventModals/EventModal/data';\nimport { EventModal } from '../EventModals/EventModal';\nimport { MuteControl } from './MuteControl';\nimport { VideoControl } from './VideoControl';\nimport { ScreenSharingControl } from './ScreenSharingControl';\nimport { RaiseHandControl } from './RaiseHandControl';\nimport { ChatControl } from './ChatControl';\nimport { type ControlPanelProps } from './types';\nimport { MemberControl } from './MemberControl';\nimport { MediaSettingControl } from './MediaSettingControl';\nimport { MediaPermissionNotification } from '../MediaPermissionNotification';\nimport { CopyLinkControl } from './CopyLinkControl';\n\nexport const ControlPanel = ({\n  onToggleChat,\n  onToggleMember,\n  isNewMessage,\n  showChatPanel,\n  isReconnecting,\n  showMembersPanel,\n}: ControlPanelProps) => {\n  const [hasVideoPermission] = useCameraPermissionListener();\n  const [hasAudioPermission] = useMicrophonePermissionListener();\n  const { onTogglePopup, showPermissionPopup } = useMediaPermissionPopup();\n\n  const navigate = useNavigate();\n  const { logError } = useError();\n  const { flags } = useLaunchDarkly();\n  const { isUnregistered } = useAuth();\n  const { width } = useWindowDimensions();\n  const [, setLoading] = useState(false);\n  const {\n    isMuted,\n    onLeaveCall,\n    toggleCamera,\n    toggleMuteCall,\n    isCameraEnable,\n    localVideoTrack,\n    onSendSubscriptionMessage,\n  } = useSocialHallCallContext();\n  const {\n    isMainEvent,\n    onUpdateEventStatus,\n    isEventHost,\n    isEventSpeaker,\n    isPreEvent,\n    isPostEvent,\n    eventDetails,\n  } = useSocialHallEventContext();\n  const isMobile = useMemo(() => width < breakpoints.MOBILE_MAX, [width]);\n  const {\n    socialHallAttendeesAndGroups,\n    activeSocialHallGroup,\n    setShowBuzzRoom,\n  } = useSocialHallContext();\n\n  const [showFinishModal, setShowFinishModal] = useState<boolean>(false);\n  const [showLeaveModal, setShowLeaveModal] = useState<boolean>(false);\n\n  const onLeaveQuietly = useCallback(() => {\n    try {\n      if (!eventDetails?._id) {\n        return;\n      }\n      if (!isEventHost) {\n        setShowLeaveModal(true);\n      } else {\n        setShowBuzzRoom(false);\n        onLeaveCall();\n      }\n    } catch (err) {\n      logError(err, '', false);\n    }\n  }, [isEventHost, logError, onLeaveCall, setShowBuzzRoom, eventDetails?._id]);\n\n  const onUpdateEvent = useCallback(\n    async (status: EventsStatus) => {\n      try {\n        setLoading(true);\n        await onUpdateEventStatus(status);\n      } catch (err) {\n        logError(err, '');\n      } finally {\n        setLoading(false);\n      }\n    },\n    [logError, onUpdateEventStatus],\n  );\n\n  const handleLeaveEvent = useCallback(async () => {\n    await onLeaveCall();\n    setShowLeaveModal(false);\n    navigate(isUnregistered ? ROUTES.GUEST_HOME : ROUTES.HOME_NOUM);\n  }, [navigate, isUnregistered, onLeaveCall]);\n\n  const onFinishEvent = useCallback(async () => {\n    setShowFinishModal(false);\n    onSendSubscriptionMessage({\n      type: SubscriptionType.UPDATE_EVENT_STATUS,\n      data: EventsStatus.Cancelled,\n    });\n    const status = eventDetails?.recurring\n      ? EventsStatus.Expired\n      : EventsStatus.Cancelled;\n    await onUpdateEvent(status);\n    await onLeaveCall();\n  }, [\n    onUpdateEvent,\n    onSendSubscriptionMessage,\n    eventDetails?.recurring,\n    onLeaveCall,\n  ]);\n\n  const isNotAMainEvent = useMemo(\n    () => isPostEvent || isPreEvent,\n    [isPostEvent, isPreEvent],\n  );\n\n  const isMainEventSpeaker = useMemo(\n    () => isMainEvent && (isEventHost || isEventSpeaker),\n    [isMainEvent, isEventHost, isEventSpeaker],\n  );\n\n  const isMainEventAudience = useMemo(\n    () => isMainEvent && !isEventHost && !isEventSpeaker,\n    [isMainEvent, isEventHost, isEventSpeaker],\n  );\n\n  const hasPublishingMediaPermission = useMemo(\n    () => isMainEventSpeaker || isNotAMainEvent,\n    [isMainEventSpeaker, isNotAMainEvent],\n  );\n\n  const isShowChatControl = useMemo(() => flags.socialHallMessaging, [flags]);\n\n  const isShowRaiseHandControl = useMemo(\n    () => isMainEventAudience || isNotAMainEvent,\n    [isMainEventAudience, isNotAMainEvent],\n  );\n\n  const showLeaveEventBtn = useMemo(\n    () => !isMainEvent && !isEventHost && !isMobile,\n    [isMainEvent, isEventHost, isMobile],\n  );\n\n  const showEndEventBtn = useMemo(\n    () =>\n      (isMainEvent || eventDetails?.isInstantEvent) &&\n      isEventHost &&\n      eventDetails?.isInstantEvent &&\n      !isMobile,\n    [isMainEvent, isEventHost, eventDetails?.isInstantEvent, isMobile],\n  );\n\n  const showMemberControl = useMemo(\n    () => isMainEvent || eventDetails?.isInstantEvent,\n    [isMainEvent, eventDetails?.isInstantEvent],\n  );\n\n  const hasSocialHallAttendees = useCheckIfEventHasSocialHallAttendees(\n    socialHallAttendeesAndGroups,\n    activeSocialHallGroup,\n  );\n\n  const endTheMainEventBtnLabel = useMemo(() => {\n    if (isMainEvent) {\n      return t('noumena.socialhall.end_the_main_event');\n    }\n    return t('noumena.socialhall.end_the_event');\n  }, [isMainEvent]);\n\n  const hostEndEventModalProps = useMemo(\n    () =>\n      isMainEvent\n        ? hostFinishMainEventModalData\n        : hostFinishInstantEventModalData,\n    [isMainEvent],\n  );\n\n  const onToggleMuteCall = () => {\n    if (hasAudioPermission) {\n      toggleMuteCall();\n    } else {\n      onTogglePopup('audio');\n    }\n  };\n\n  const onToggleCamera = () => {\n    if (hasVideoPermission) {\n      toggleCamera();\n    } else {\n      onTogglePopup('video');\n    }\n  };\n\n  return (\n    <>\n      <ControlPanelWrapper\n        data-testid=\"control_panel_wrapper\"\n        aria-disabled={isReconnecting}\n        disabled={isReconnecting}\n      >\n        {!isMobile && <MediaSettingControl />}\n        <ControlPanelMainContainer>\n          {hasPublishingMediaPermission && (\n            <>\n              <MuteControl\n                isMuted={isMuted}\n                onToggle={onToggleMuteCall}\n                isError={!hasAudioPermission}\n              />\n              <VideoControl\n                onToggle={onToggleCamera}\n                isError={!hasVideoPermission}\n                isCameraEnable={isCameraEnable}\n                isLoading={\n                  isCameraEnable &&\n                  localVideoTrack?.isPlaying === undefined &&\n                  !!hasVideoPermission\n                }\n              />\n              {!isMobile && <ScreenSharingControl />}\n            </>\n          )}\n\n          {isShowRaiseHandControl && <RaiseHandControl />}\n          {isShowChatControl && !hasSocialHallAttendees && (\n            <ChatControl\n              onToggleChat={onToggleChat}\n              isNewMessage={isNewMessage}\n              showChatPanel={showChatPanel}\n            />\n          )}\n          {showMemberControl && (\n            <MemberControl\n              onToggleMemberPanel={onToggleMember}\n              showMembersPanel={showMembersPanel}\n            />\n          )}\n          <CopyLinkControl />\n        </ControlPanelMainContainer>\n\n        {showLeaveEventBtn && (\n          <ControlPanelIcon\n            onClick={onLeaveQuietly}\n            cursorAllowed\n            bgColor=\"var(--bg-button-danger-primary-default)\"\n            hoverColor=\"var(--bg-button-danger-primary-hover)\"\n            data-title={t('noumena.social_hall.Control_panel.leave')}\n          >\n            <Icon\n              size={24}\n              name={eventDetails?._id ? 'logout_m' : 'spinner_m'}\n              color=\"--icon-button-neutral-alt-default\"\n            />\n          </ControlPanelIcon>\n        )}\n        {showEndEventBtn && (\n          <ControlPanelIcon\n            onClick={() => setShowFinishModal(true)}\n            cursorAllowed\n            bgColor=\"var(--bg-button-danger-primary-default)\"\n            hoverColor=\"var(--bg-button-danger-primary-hover)\"\n          >\n            <TSpan colorToken=\"--text-button-neutral-alt-default\">\n              {endTheMainEventBtnLabel}\n            </TSpan>\n          </ControlPanelIcon>\n        )}\n      </ControlPanelWrapper>\n      <EventModal\n        isOpen={showFinishModal}\n        onClose={() => setShowFinishModal(false)}\n        onConfirm={onFinishEvent}\n        {...hostEndEventModalProps}\n      />\n      <EventModal\n        isOpen={showLeaveModal}\n        onClose={() => setShowLeaveModal(false)}\n        onConfirm={handleLeaveEvent}\n        isConfirmButtonPrimary\n        {...attendeeLeaveEventModalData}\n      />\n      <MediaPermissionNotification\n        onTogglePopup={onTogglePopup}\n        showAudioModal={showPermissionPopup.audio}\n        showVideoModal={showPermissionPopup.video}\n      />\n    </>\n  );\n};\n","export const useEmoticons = (text: string) => {\n  const result = text\n    .replace(/,:\\)/gi, '\\u{1F605}')\n    .replace(/,:\\(/gi, '\\u{1F613}')\n    .replace(/:\\)/gi, '\\u{1F642}')\n    .replace(/:\\|/gi, '\\u{1F610}')\n    .replace(/;\\(/gi, '\\u{1F62D}')\n    .replace(/:,\\(|:'\\(/gi, '\\u{1F622}')\n    .replace(/>:\\(/gi, '\\u{1F620}')\n    .replace(/:P/g, '\\u{1F61B}')\n    .replace(/:\\$/gi, '\\u{1F612}')\n    .replace(/:@/gi, '\\u{1F621}')\n    .replace(/<3/gi, '❤️') // getting unexpeccted result with unicode\n    .replace(/<\\\\3|<\\/3/gi, '\\u{1F494}')\n    .replace(/;\\)/gi, '\\u{1F609}')\n    .replace(/:,\\)|:'\\)/gi, '\\u{1F602}')\n    .replace(/:O/gi, '\\u{1F62E}')\n    .replace(/:D/gi, '\\u{1F604}')\n    .replace(/:\\(/gi, '\\u{1F626}')\n    .replace(/B-\\)/gi, '\\u{1F60E}')\n    .replace(/\\(Y\\)|\\+1/gi, '\\u{1F44D}')\n    .replace(/-1/gi, '\\u{1F44E}')\n    .replace(/\\(N\\)|-1/gi, '\\u{1F44E}');\n  return result;\n};\n","import { type FC, useMemo } from 'react';\nimport { format } from 'date-fns';\nimport {\n  TextMessageBubble,\n  ImageMessageBubble,\n} from '@/features/conversation/components/MessageBubbles';\nimport { MessageType, type SocialHallChat } from '@/screens/SocialHall/types';\nimport { useEmoticons } from '@/hooks/useEmoticons';\nimport {\n  MessageListWrapper,\n  NotificationMessage,\n  NotificationTime,\n} from './styles';\n\nexport type MessageListProps = {\n  messages: SocialHallChat[];\n};\n\nexport const MessageItem: FC<{ message: SocialHallChat }> = ({\n  message: { message, profileUrl, messageType, align, ...props },\n}) => {\n  const updateMessageWithEmoji = useEmoticons(\n    messageType === MessageType.TEXT ? (message as string) : '',\n  );\n  const bubbleProps = useMemo(\n    () => ({\n      message,\n      showAvatar: true,\n      userAvatar: profileUrl,\n      maxWidth: '100%',\n      ...props,\n    }),\n    [message, profileUrl, props],\n  );\n  if (messageType === MessageType.IMAGE) {\n    return <ImageMessageBubble {...bubbleProps} showStatus={false} />;\n  }\n\n  if (messageType === MessageType.NOTIFICATION) {\n    return (\n      <>\n        <NotificationMessage\n          dangerouslySetInnerHTML={{ __html: message.toString() }}\n        />\n        <NotificationTime>{format(new Date(), 'hh:mm a')}</NotificationTime>\n      </>\n    );\n  }\n\n  const newProps = {\n    ...bubbleProps,\n    message: updateMessageWithEmoji ?? (message as string),\n  };\n  return <TextMessageBubble {...newProps} showStatus={false} />;\n};\n\nexport const MessageList = ({ messages }: MessageListProps) => (\n  <MessageListWrapper>\n    {messages.map((message) => (\n      <MessageItem key={message._id} message={message} />\n    ))}\n  </MessageListWrapper>\n);\n","import { useEffect, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Icon } from '@/components/Icon';\nimport { useLaunchDarkly, useWindowDimensions } from '@/hooks';\nimport { breakpoints } from '@/constants/devices';\n\nimport { TSpan } from '@/components/Typography';\nimport { useSocialHallCallContext } from '@/providers';\nimport { MessageInput } from '@/features/conversation/components/MessageInput';\nimport {\n  ChatWrapper,\n  ChatHeader,\n  TitleSpan,\n  MessageInputWrapper,\n  MessageListWrapper,\n  CloseButton,\n  NoMessageWrapper,\n} from './styles';\nimport { MessageList } from './MessageList';\n\nexport type SocialHallChatProps = {\n  show: boolean;\n  disabled: boolean;\n  onClose: () => void;\n};\n\nexport const SocialHallChat = ({\n  onClose,\n  show,\n  disabled,\n}: SocialHallChatProps) => {\n  const { t } = useTranslation();\n  const { width } = useWindowDimensions();\n  const { messages, onSendMessage } = useSocialHallCallContext();\n  const isTablet = width < breakpoints.LAPTOP;\n  const messageScrollRef = useRef<HTMLDivElement>(null);\n  const {\n    flags: { socialHallVideoCall },\n  } = useLaunchDarkly();\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (messageScrollRef.current && show) {\n        messageScrollRef.current.scrollTo({\n          top: messageScrollRef.current.scrollHeight,\n          behavior: 'smooth',\n        });\n      }\n    }, 200);\n  }, [messages, show]);\n\n  const handleSendMessage = (message: string, files: File[]) => {\n    const isFile = files.length > 0;\n    if (isFile && message) {\n      files.forEach((file, index) =>\n        onSendMessage(index === 0 ? message : '', file),\n      );\n    } else if (isFile) {\n      files.forEach((file) => onSendMessage('', file));\n    } else {\n      onSendMessage(message);\n    }\n  };\n\n  return (\n    <ChatWrapper show={show}>\n      <ChatHeader>\n        <TitleSpan colorToken=\"--text-appbar-neutral-default\">\n          {t('noumena.social_hall.chat')}\n        </TitleSpan>\n        {isTablet && !socialHallVideoCall && (\n          <CloseButton onClick={onClose}>\n            <Icon\n              color=\"--icon-card-neutral-highlighted\"\n              name=\"close_m\"\n              size={24}\n            />\n          </CloseButton>\n        )}\n        {socialHallVideoCall && (\n          <CloseButton\n            onClick={onClose}\n            socialHallVideoCall={socialHallVideoCall}\n          >\n            <Icon\n              color=\"--icon-card-neutral-highlighted\"\n              name=\"close_m\"\n              size={24}\n            />\n          </CloseButton>\n        )}\n      </ChatHeader>\n      <MessageListWrapper ref={messageScrollRef}>\n        {messages && messages.length ? (\n          <MessageList messages={messages} />\n        ) : (\n          <NoMessageWrapper>\n            <Icon\n              color=\"--icon-card-placeholder-neutral-default\"\n              name=\"message_outline_m\"\n              size={144}\n            />\n            <TSpan\n              colorToken=\"--text-placeholder-neutral-default\"\n              font=\"body-xl\"\n            >\n              {t('noumena.social_hall.chat.no_message')}\n            </TSpan>\n          </NoMessageWrapper>\n        )}\n      </MessageListWrapper>\n      <MessageInputWrapper disabled={disabled}>\n        <MessageInput\n          withLeftPadding\n          onSendMessage={handleSendMessage}\n          disabled={disabled}\n        />\n      </MessageInputWrapper>\n    </ChatWrapper>\n  );\n};\n","import { t } from 'i18next';\nimport { Trans } from 'react-i18next';\nimport { Button } from '@/components/Button';\nimport { TSpan } from '@/components/Typography';\nimport {\n  Wrapper,\n  ButtonWrapper,\n  Section,\n  IconWrapper,\n  DeclineButton,\n  IconChild,\n} from './styles';\nimport { type MainEventNotificationProps } from './types';\n\nexport const MainEventNotification = ({\n  isOpen,\n  onDecline,\n  onConfirm,\n  description,\n  icon,\n  showButtons,\n  showUserJoined,\n  showUserLeave,\n}: MainEventNotificationProps) => {\n  if (!isOpen) return null;\n  return (\n    <Wrapper\n      data-testid=\"main-event-notification\"\n      showUserJoined={showUserJoined}\n      showUserLeave={showUserLeave}\n    >\n      <Section>\n        {icon && (\n          <IconWrapper>\n            <IconChild>{icon}</IconChild>\n          </IconWrapper>\n        )}\n        <div>\n          <Trans\n            i18nKey={description}\n            components={{\n              span: (\n                <TSpan\n                  font=\"body-m-bold\"\n                  colorToken=\"--text-card-neutral-alt-default\"\n                />\n              ),\n            }}\n          />\n        </div>\n      </Section>\n      {showButtons && (\n        <ButtonWrapper>\n          <DeclineButton\n            size=\"small\"\n            primary\n            onClick={onDecline}\n            data-testid=\"decline-button\"\n          >\n            {t('noumena.chamber.decline_button')}\n          </DeclineButton>\n          <Button\n            secondary\n            size=\"small\"\n            onClick={onConfirm}\n            data-testid=\"confirm-button\"\n          >\n            {t('noumena.social_hall.join_as_speaker')}\n          </Button>\n        </ButtonWrapper>\n      )}\n    </Wrapper>\n  );\n};\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { t } from 'i18next';\nimport { Icon } from '@/components/Icon';\nimport {\n  useSocialHallCallContext,\n  useSocialHallContext,\n  useSocialHallEventContext,\n} from '@/providers';\nimport { MainEventSpeakerNotificationTimer } from '@/screens/SocialHall/const';\nimport { SpeakerInvitationType } from '@/apollo/generated/types';\nimport { Avatar } from '@/components/Avatar/Avatar';\nimport { UserUtil } from '@/utils/user';\nimport { useRaiseHandApi, useSpeakerApi } from '@/features/socialHall/hooks';\nimport { useAuth } from '@/features/auth/contexts';\nimport { ControlGroupNotificationWrapper, Wrapper } from './styles';\nimport { MainEventNotification } from '../EventModals/MainEventNotification/MainEventNotification';\n\nexport const ControlGroupMainEventNotification = () => {\n  const { user } = useAuth();\n  const { onAcceptSpeakerInvitation, onDeclineSpeakerInvitation } =\n    useSpeakerApi();\n  const { toggleRaisedHand } = useRaiseHandApi();\n  const { speakerInvitation, stageAttendees } = useSocialHallContext();\n  const {\n    joinLeaveMember,\n    showUserJoined,\n    showUserLeave,\n    setShowUserJoined,\n    setShowUserLeave,\n    joinedUsers,\n    isRaiseHandRejected,\n    resetMembersNotification,\n    showRaiseHand: isShowRaiseHand,\n  } = useSocialHallCallContext();\n  const { eventOwner } = useSocialHallEventContext();\n  const { speakerSubscription } = useSocialHallCallContext();\n  const [showMovedToAudienceNotification, setMovedToAudienceNotification] =\n    useState(false);\n  const [showHostInviteAsSpeaker, setShowHostInviteAsSpeaker] = useState(false);\n  const [showDeclineToStageNotification, setShowDeclineToStageNotification] =\n    useState(false);\n  const [showRaiseHandNotification, setShowRaiseHandNotification] =\n    useState(false);\n\n  const resetAll = useCallback(\n    (isShow?: boolean) => {\n      setShowRaiseHandNotification(false);\n      setMovedToAudienceNotification(\n        isShow === undefined ? showMovedToAudienceNotification : isShow,\n      );\n      setShowHostInviteAsSpeaker(\n        isShow === undefined ? showHostInviteAsSpeaker : isShow,\n      );\n      setShowDeclineToStageNotification(\n        isShow === undefined ? showDeclineToStageNotification : isShow,\n      );\n    },\n    [\n      showDeclineToStageNotification,\n      showHostInviteAsSpeaker,\n      showMovedToAudienceNotification,\n    ],\n  );\n\n  const resetUserJoinLeave = useCallback(\n    (isShow?: boolean) => {\n      resetMembersNotification();\n      setShowUserJoined(isShow === undefined ? showUserJoined : isShow);\n      setShowUserLeave(isShow === undefined ? showUserLeave : isShow);\n    },\n    [\n      resetMembersNotification,\n      setShowUserJoined,\n      setShowUserLeave,\n      showUserJoined,\n      showUserLeave,\n    ],\n  );\n\n  const resetRaiseHandNotification = useCallback(() => {\n    setShowRaiseHandNotification(!!isShowRaiseHand);\n  }, [isShowRaiseHand]);\n\n  const removedBy = useMemo(\n    () =>\n      stageAttendees?.find(\n        (attendee) => attendee._id === speakerSubscription?.inviterId,\n      ),\n    [stageAttendees, speakerSubscription],\n  );\n\n  const onConfirmHandler = useCallback(() => {\n    onAcceptSpeakerInvitation();\n    // incase user has already raised hand then cancel it.\n    if (isShowRaiseHand) {\n      toggleRaisedHand(false, user?._id!);\n    }\n  }, [isShowRaiseHand, onAcceptSpeakerInvitation, toggleRaisedHand, user?._id]);\n\n  const onDeclineHandler = () => {\n    onDeclineSpeakerInvitation();\n    if (isShowRaiseHand) {\n      toggleRaisedHand(!isShowRaiseHand, user?._id!);\n    }\n  };\n\n  const showSpeakerRequestToJoinStage = useMemo(\n    () => !!speakerInvitation && speakerInvitation?.invitee?._id === user?._id,\n    [speakerInvitation, user?._id],\n  );\n\n  useEffect(() => {\n    resetAll();\n    resetRaiseHandNotification();\n    const timeout = setTimeout(() => {\n      resetAll(false);\n      resetUserJoinLeave(false);\n    }, MainEventSpeakerNotificationTimer);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [resetAll, resetUserJoinLeave, resetRaiseHandNotification]);\n\n  useEffect(() => {\n    if (\n      speakerSubscription?.actionType ===\n        SpeakerInvitationType.SpeakerRemoved &&\n      speakerSubscription?.inviteeId === user?._id\n    ) {\n      setMovedToAudienceNotification(true);\n    }\n  }, [speakerSubscription, user?._id]);\n\n  useEffect(() => {\n    if (speakerInvitation && speakerInvitation.inviter?._id === user?._id) {\n      setShowHostInviteAsSpeaker(true);\n    } else {\n      setShowHostInviteAsSpeaker(false);\n    }\n  }, [speakerInvitation, user?._id]);\n\n  useEffect(() => {\n    if (isRaiseHandRejected) {\n      setShowDeclineToStageNotification(true);\n    }\n  }, [isRaiseHandRejected]);\n\n  useEffect(() => {\n    if (isShowRaiseHand) {\n      setShowDeclineToStageNotification(false);\n    }\n  }, [isShowRaiseHand]);\n\n  return (\n    <ControlGroupNotificationWrapper>\n      {showRaiseHandNotification && (\n        <Wrapper>\n          <MainEventNotification\n            isOpen={true}\n            description={t('noumena.social_hall.main_event_raised_hand')}\n            icon={<Icon imageIconName=\"raise_hand_m\" size={22} />}\n          />\n        </Wrapper>\n      )}\n      {showSpeakerRequestToJoinStage && (\n        <Wrapper>\n          <MainEventNotification\n            isOpen={true}\n            onDecline={onDeclineHandler}\n            onConfirm={onConfirmHandler}\n            showButtons\n            description={t('noumena.social_hall.main_event_speaker_request', {\n              firstName: speakerInvitation?.inviter?.firstName,\n            })}\n            icon={\n              <Icon\n                name=\"mic_on_m\"\n                size={22}\n                color=\"--icon-card-placeholder-neutral-default\"\n              />\n            }\n          />\n        </Wrapper>\n      )}\n      {showHostInviteAsSpeaker && (\n        <Wrapper>\n          <MainEventNotification\n            isOpen={true}\n            description={t(\n              'noumena.social_hall.main_event_speaker_request_host',\n              {\n                firstName: speakerInvitation?.invitee?.firstName,\n              },\n            )}\n            icon={\n              <Avatar\n                url={\n                  UserUtil.getProfilePicture(speakerInvitation?.invitee) ?? ''\n                }\n              />\n            }\n          />\n        </Wrapper>\n      )}\n      {showUserJoined && (\n        <Wrapper>\n          <MainEventNotification\n            isOpen={true}\n            description={\n              joinedUsers.length > 1\n                ? t('noumena.socialhall.message.More_people_left_socialhall', {\n                    numberOfUser: joinedUsers.length,\n                  })\n                : t('noumena.socialhall.message.userJoined_socialhall', {\n                    firstName: joinLeaveMember?.firstName,\n                    lastName: joinLeaveMember?.lastName,\n                  })\n            }\n            showUserJoined={showUserJoined}\n          />\n        </Wrapper>\n      )}\n      {showUserLeave && (\n        <Wrapper>\n          <MainEventNotification\n            isOpen={true}\n            description={t('noumena.socialhall.message.userLeft_socialhall', {\n              firstName: joinLeaveMember?.firstName,\n              lastName: joinLeaveMember?.lastName,\n            })}\n            showUserLeave={showUserLeave}\n          />\n        </Wrapper>\n      )}\n      {showMovedToAudienceNotification ||\n        (showDeclineToStageNotification && (\n          <Wrapper>\n            <MainEventNotification\n              isOpen={true}\n              description={\n                showMovedToAudienceNotification\n                  ? t('noumena.social_hall.main_event_speaker_remove', {\n                      firstName: removedBy?.firstName,\n                    })\n                  : t('noumena.social_hall.main_event_speaker_decline', {\n                      firstName: eventOwner?.firstName,\n                    })\n              }\n              icon={\n                <Icon\n                  name=\"mic_off_m\"\n                  size={24}\n                  color=\"--icon-card-placeholder-neutral-default\"\n                />\n              }\n            />\n          </Wrapper>\n        ))}\n    </ControlGroupNotificationWrapper>\n  );\n};\n","import { useMemo, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Avatar } from '@/components/Avatar/Avatar';\n\nimport { notificationRemainTime } from '@/utils/date';\nimport { Icon } from '@/components/Icon';\nimport { KnockType } from '@/apollo/generated/types';\nimport { useKnockUser } from '@/features/socialHall/hooks';\nimport { Button } from '@/components/Button';\nimport { knockTimer } from '@/screens/SocialHall/const';\nimport { InlineAvatar } from '@/components/Avatar/Inline/Inline';\nimport { UserUtil } from '@/utils/user';\nimport { useSocialHallContext } from '@/providers/SocialHallProvider';\nimport { useSocialHallEventContext } from '@/providers/SocialHallEventProvider';\nimport { useSocialHallCallContext } from '@/providers/SocialHallCallProvider';\nimport {\n  KnockingSpan,\n  NameSpan,\n  NotificationWrapper,\n  TextWrapper,\n  ButtonWrapper,\n  MainWrapper,\n  MessageSpan,\n} from './styles';\nimport { type KnockNotificationProps } from '../types';\n\nexport const KnockNotification = ({\n  isSingle,\n  notification,\n  timer = knockTimer,\n  isHostJoined,\n}: KnockNotificationProps) => {\n  const { t } = useTranslation();\n  const { socialHallAttendee, showBuzzRoom } = useSocialHallContext();\n  const { eventOwner } = useSocialHallEventContext();\n  const { setMessages } = useSocialHallCallContext();\n  const [remainTime, setRemainTime] = useState(timer);\n  const {\n    declineKnock,\n    acceptKnock,\n    acceptLoading,\n    declineLoading,\n    cancelKnock,\n  } = useKnockUser();\n\n  const avatarUrls = useMemo(\n    () =>\n      notification?.groupInfo?.users?.map(\n        (user) => user?.profile?.profilePictureThumbnail || '',\n      ),\n    [notification],\n  );\n\n  const acceptKnockHandler = () => {\n    acceptKnock(notification?._id!);\n    if (!showBuzzRoom) {\n      setMessages([]);\n    }\n  };\n\n  useEffect(() => {\n    const myInterval = setInterval(() => {\n      if (remainTime > 0) {\n        setRemainTime(remainTime - 1000);\n      }\n      if (remainTime === 0) {\n        clearInterval(myInterval);\n        cancelKnock(notification?._id!);\n        declineKnock(notification?._id!);\n      }\n    }, 1000);\n\n    return () => {\n      clearInterval(myInterval);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [remainTime]);\n\n  let Com = null;\n\n  // host has joined the room without knocking\n  if (isHostJoined) {\n    Com = (\n      <NotificationWrapper\n        key={notification?._id}\n        isBordered={!isSingle}\n        data-testid=\"outgoing_notification_wrapper\"\n      >\n        <MainWrapper>\n          <Avatar url={UserUtil.getProfilePicture(eventOwner) || ''} />\n          <TextWrapper>\n            <KnockingSpan colorToken=\"--text-card-neutral-default\">\n              <NameSpan colorToken=\"--text-card-neutral-highlighted\">{`${\n                eventOwner?.firstName\n              }(${t('noumena.social_hall.host')}) `}</NameSpan>\n              {t('noumena.social_hall.has_joined')}\n            </KnockingSpan>\n          </TextWrapper>\n        </MainWrapper>\n      </NotificationWrapper>\n    );\n  }\n\n  // component will render when user knock to remote user\n  if (\n    notification?.receiverUser ||\n    notification?.knockerUserId === socialHallAttendee?.attendeeId?._id\n  ) {\n    if (notification?.knockStatus === KnockType.Pending && !!remainTime) {\n      Com = (\n        <NotificationWrapper\n          key={notification?._id}\n          isBordered={!isSingle}\n          data-testid=\"outgoing_notification_wrapper\"\n        >\n          <MainWrapper>\n            <Avatar\n              url={UserUtil.getProfilePicture(notification?.knockerUser) ?? ''}\n            />\n            <TextWrapper>\n              <KnockingSpan colorToken=\"--text-card-neutral-default\">\n                <NameSpan colorToken=\"--text-card-neutral-highlighted\">\n                  {t('noumena.you')}\n                </NameSpan>\n                {t('noumena.social_hall.are_knocking')}\n              </KnockingSpan>\n              <KnockingSpan colorToken=\"--text-card-neutral-default\">\n                {notificationRemainTime(remainTime)}\n              </KnockingSpan>\n            </TextWrapper>\n            {notification?.receiverUser ? (\n              <Avatar\n                url={\n                  UserUtil.getProfilePicture(notification?.receiverUser) ?? ''\n                }\n                size=\"M\"\n              />\n            ) : (\n              <InlineAvatar\n                urls={avatarUrls || []}\n                borderedImage={true}\n                size=\"L\"\n              />\n            )}\n          </MainWrapper>\n          {notification.knockMessage && (\n            <MessageSpan colorToken=\"--text-card-neutral-highlighted\">\n              {notification.knockMessage}\n            </MessageSpan>\n          )}\n        </NotificationWrapper>\n      );\n    }\n\n    // component will render when user receive knock\n    if (notification?.knockStatus === KnockType.Declined) {\n      Com = (\n        <NotificationWrapper\n          key={notification?._id}\n          isBordered={!isSingle}\n          errorBorder\n          data-testid=\"outgoing_notification_declined_wrapper\"\n        >\n          <MainWrapper>\n            <Avatar\n              url={notification.receiverUser?.profile?.profilePicture || ''}\n            />\n            <TextWrapper>\n              <KnockingSpan colorToken=\"--text-card-neutral-default\">\n                <NameSpan colorToken=\"--text-card-neutral-highlighted\">\n                  {notification.receiverUser?.firstName}\n                </NameSpan>\n                {t('noumena.social_hall.declined_knock')}\n              </KnockingSpan>\n            </TextWrapper>\n            <Icon\n              name=\"info_m\"\n              size={24}\n              color=\"--icon-card-danger-primary-default\"\n            />\n          </MainWrapper>\n        </NotificationWrapper>\n      );\n    }\n  }\n  // Incase some else is knocking\n  else if (notification?.knockerUser?._id) {\n    Com = (\n      <NotificationWrapper\n        key={notification?._id}\n        isBordered={!isSingle}\n        data-testid=\"incoming_notification_wrapper\"\n      >\n        <MainWrapper>\n          <Avatar\n            url={notification?.knockerUser?.profile?.profilePicture || ''}\n          />\n          <TextWrapper>\n            <KnockingSpan colorToken=\"--text-card-neutral-default\">\n              <NameSpan colorToken=\"--text-card-neutral-highlighted\">\n                {notification?.knockerUser?.firstName}\n              </NameSpan>\n              {t('noumena.social_hall.is_knocking')}\n            </KnockingSpan>\n            <KnockingSpan colorToken=\"--text-card-neutral-default\">\n              {notification?.knockerUser?.title}\n            </KnockingSpan>\n          </TextWrapper>\n          <ButtonWrapper>\n            <Button\n              size=\"small\"\n              data-testid=\"close_button\"\n              onClick={() => declineKnock(notification?._id)}\n              icon={\n                <Icon\n                  name=\"close_m\"\n                  size={24}\n                  color=\"--icon-button-neutral-default\"\n                />\n              }\n              loading={declineLoading}\n            />\n            <Button\n              data-testid=\"accept_button\"\n              primary\n              size=\"small\"\n              onClick={() => acceptKnockHandler()}\n              icon={\n                <Icon\n                  name=\"tick_m\"\n                  size={24}\n                  color=\"--icon-button-neutral-alt-default\"\n                />\n              }\n              loading={acceptLoading}\n            />\n          </ButtonWrapper>\n        </MainWrapper>\n        {notification?.knockMessage && (\n          <MessageSpan colorToken=\"--text-card-neutral-highlighted\">\n            {notification?.knockMessage}\n          </MessageSpan>\n        )}\n      </NotificationWrapper>\n    );\n  }\n  return Com;\n};\n","import { useMemo } from 'react';\nimport { Carousel } from 'react-responsive-carousel';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\nimport { Icon } from '@/components/Icon';\nimport { type UserOutput } from '@/apollo/generated/types';\nimport { breakpoints } from '@/constants/devices';\nimport { useWindowDimensions } from '@/hooks/dimensions';\nimport { useVideoMasonryCarousel } from '@/features/socialHall/hooks';\nimport { useSocialHallCallContext } from '@/providers/SocialHallCallProvider';\nimport { MediaPreview } from '../MediaPreview';\nimport { type SpeakerViewCarouselProps } from './types';\nimport * as S from './styles';\n\nexport const SpeakerViewCarousel = ({\n  userFeeds,\n  speakerFeed,\n  maxVideoPerPage,\n  isMinimalView,\n  isFullScreen,\n}: SpeakerViewCarouselProps) => {\n  const { width } = useWindowDimensions();\n  const { isShareScreen, isRemoteScreenSharing } = useSocialHallCallContext();\n\n  const isScreenSharing = useMemo(\n    () => isShareScreen || isRemoteScreenSharing,\n    [isShareScreen, isRemoteScreenSharing],\n  );\n  const isTablet = useMemo(\n    () => width < breakpoints.LAPTOP_L && width > breakpoints.MOBILE_MAX,\n    [width],\n  );\n  const isMobile = useMemo(() => width < breakpoints.MOBILE_MAX, [width]);\n\n  const {\n    onPrev,\n    onNext,\n    currentPage,\n    isDisablePrev,\n    isDisableNext,\n    updateCurrentSlide,\n    CarouselItems,\n  } = useVideoMasonryCarousel({\n    maxVideoPerPage,\n    videoCount: userFeeds?.length!,\n    SpeakerItems: userFeeds,\n  });\n  return (\n    <S.SpeakerCarouselWrapper\n      gap={16}\n      align=\"center\"\n      isFullScreen={isFullScreen}\n    >\n      {CarouselItems.length < 2 ? null : (\n        <S.Steps\n          onClick={onPrev}\n          data-testid=\"previous\"\n          disabled={isDisablePrev}\n          size=\"small\"\n          icon={<Icon name=\"chevron_small_left_m\" size={24} />}\n        />\n      )}\n      <Carousel\n        emulateTouch\n        selectedItem={currentPage}\n        onChange={updateCurrentSlide}\n        showIndicators={false}\n        showThumbs={false}\n        showStatus={false}\n        showArrows={false}\n        width={isMobile ? 190 : isTablet ? 570 : 930}\n      >\n        {CarouselItems.map((item) => (\n          <S.GalleryViewBody key={item[0]._id}>\n            {item.map((attendee) => {\n              if (attendee._id === speakerFeed?._id && !isScreenSharing) {\n                return null;\n              }\n              return (\n                <S.HostItem key={attendee._id}>\n                  <MediaPreview\n                    key={attendee._id}\n                    isFullScreen={!!isFullScreen}\n                    isMinimalView={isMinimalView!}\n                    speakerCarouselPortal={!isFullScreen}\n                    {...(attendee as UserOutput)}\n                  />\n                </S.HostItem>\n              );\n            })}\n          </S.GalleryViewBody>\n        ))}\n      </Carousel>\n      {CarouselItems.length < 2 ? null : (\n        <S.Steps\n          onClick={onNext}\n          data-testid=\"next\"\n          size=\"small\"\n          disabled={isDisableNext}\n          icon={<Icon name=\"chevron_small_right_m\" size={24} />}\n        />\n      )}\n    </S.SpeakerCarouselWrapper>\n  );\n};\nexport default SpeakerViewCarousel;\n","import { useMemo } from 'react';\nimport { useWindowDimensions } from '@/hooks';\nimport { breakpoints } from '@/constants/devices';\nimport { useSocialHallCallContext } from '@/providers';\nimport { useSpeakerView } from '@/features/socialHall/hooks';\nimport { SpeakerViewCarousel } from '../SpeakerViewCarousel';\nimport { MediaPreview } from '../MediaPreview';\nimport {\n  PinedFrameWarpper,\n  SpeakerWarpper,\n  SpeakerWarpperChlid,\n} from './styles';\nimport { type SpeakerViewProps } from './types';\n\nexport const SpeakerView = (props: SpeakerViewProps) => {\n  const {\n    speakerFeed,\n    isMinimalView,\n    clientHeight,\n    clientWidth,\n    showChatPanel,\n    showMembersPanel,\n    isFullScreen,\n    userFeeds,\n  } = props;\n  const { width } = useWindowDimensions();\n  const isTablet = useMemo(\n    () => width < breakpoints.LAPTOP_L && width > breakpoints.MOBILE_MAX,\n    [width],\n  );\n  const isMobile = useMemo(() => width < breakpoints.MOBILE_MAX, [width]);\n  const { isShareScreen, isRemoteScreenSharing } = useSocialHallCallContext();\n\n  const isScreenSharing = useMemo(\n    () => isShareScreen || isRemoteScreenSharing,\n    [isShareScreen, isRemoteScreenSharing],\n  );\n\n  const { elemRef, maxHeight, dimension } = useSpeakerView({\n    clientHeight,\n    clientWidth,\n    showChatPanel,\n    showMembersPanel,\n  });\n\n  const isSingleAttendee = useMemo(\n    () => userFeeds && userFeeds?.length === 1,\n    [userFeeds],\n  );\n\n  const maxMinWidth = useMemo(\n    () => (isSingleAttendee ? dimension.width : dimension.width - 115),\n    [dimension.width, isSingleAttendee],\n  );\n\n  const maxMinHeight = useMemo(\n    () => (isSingleAttendee ? dimension.height : dimension.height - 115),\n    [dimension.height, isSingleAttendee],\n  );\n\n  return (\n    <SpeakerWarpper isFullScreen={isFullScreen}>\n      {speakerFeed?._id && !isScreenSharing && (\n        <SpeakerWarpperChlid\n          ref={elemRef}\n          style={{\n            maxHeight,\n            minWidth: clientWidth - 368,\n          }}\n        >\n          <PinedFrameWarpper\n            style={{\n              maxWidth: maxMinWidth,\n              maxHeight: maxMinHeight,\n              minWidth: maxMinWidth,\n              minHeight: maxMinHeight,\n            }}\n          >\n            {speakerFeed?._id && (\n              <MediaPreview\n                key={speakerFeed?._id}\n                isFullScreen={!!isFullScreen}\n                isMinimalView={isMinimalView!}\n                speakerCarouselPortal={false}\n                {...speakerFeed}\n              />\n            )}\n          </PinedFrameWarpper>\n        </SpeakerWarpperChlid>\n      )}\n      {(!isSingleAttendee || isScreenSharing) && (\n        <SpeakerViewCarousel\n          {...props}\n          maxVideoPerPage={isMobile ? 1 : isTablet ? 3 : 5}\n        />\n      )}\n    </SpeakerWarpper>\n  );\n};\nexport default SpeakerView;\n","import { type UserOutput } from '@/apollo/generated/types';\n\ninterface SideBarUserItem extends UserOutput {\n  isMuted?: boolean;\n  isCameraEnable?: boolean;\n  invitationStatus?: string;\n}\n\nexport enum SideBarType {\n  ON_STAGE,\n  AUDIENCE,\n  RAISED_HAND,\n}\n\nexport type SideBarSection = {\n  header: string;\n  type: SideBarType;\n  data: UserOutput[];\n};\n\nexport type SideBarUserItemProps = {\n  isOffline: boolean;\n  user: SideBarUserItem;\n  sideBarType: SideBarType;\n  refetchAudience: () => void;\n  isInvited?: (attendeeId: string) => boolean;\n};\n\nexport type SocialHallMembersProps = {\n  onClose: () => void;\n  show: boolean;\n  onlineAttendees: UserOutput[];\n  isInvited?: (attendeeId: string) => boolean;\n};\n","import { t } from 'i18next';\nimport { type UserOutput } from '@/apollo/generated/types';\nimport { SideBarType, type SideBarSection } from './types';\n\nconst createSection = ({ header, type, data }: SideBarSection) => ({\n  header: t(header),\n  type,\n  data,\n});\n\nexport const createAudienceSection = (\n  attendees: UserOutput[],\n): SideBarSection =>\n  createSection({\n    header: 'noumena.social_hall.audience',\n    type: SideBarType.AUDIENCE,\n    data: attendees,\n  });\n\nexport const createStageSection = (attendees: UserOutput[]): SideBarSection =>\n  createSection({\n    header: 'noumena.social_hall.stage',\n    type: SideBarType.ON_STAGE,\n    data: attendees,\n  });\n\nexport const createRaisedHandSection = (\n  attendees: UserOutput[],\n): SideBarSection =>\n  createSection({\n    header: 'noumena.social_hall.raised_hands',\n    type: SideBarType.RAISED_HAND,\n    data: attendees,\n  });\n","import { useState, useCallback, useMemo } from 'react';\nimport { t } from 'i18next';\nimport { getFullName } from '@/utils/fullName';\nimport { Avatar } from '@/components/Avatar/Avatar';\nimport { Button } from '@/components/Button';\nimport { Icon } from '@/components/Icon';\nimport { useToggle, useWindowDimensions } from '@/hooks';\nimport {\n  useAttendeeManagement,\n  useMediaPreviewSettings,\n  useRaiseHandApi,\n} from '@/features/socialHall/hooks';\nimport { TSpan } from '@/components/Typography';\nimport {\n  useSocialHallCallContext,\n  useSocialHallContext,\n  useSocialHallEventContext,\n} from '@/providers';\nimport { Dropdown, type DropdownTargetProps } from '@/components/Dropdown';\nimport { EventCancelAttendeeModal } from '@/screens/Chamber/components/elements/CalendarEvent/modals/EventAttendeesModal/EventCancelAttendeeModal';\nimport { Stack } from '@/layout';\nimport { breakpoints } from '@/constants/devices';\nimport { UserRole } from '@/apollo/generated/types';\nimport { kickUserModalData } from '../../EventModals/EventModal';\nimport {\n  AvatarWrapper,\n  ButtonWrapper,\n  ItemWrapper,\n  NameSpan,\n  NameWrapper,\n  OfflineBadge,\n  OfflineWrapper,\n  StatusTag,\n  ThreeDotsIconWrapper,\n  TitleSpan,\n} from './styles';\nimport { SideBarType, type SideBarUserItemProps } from '../types';\n\nconst mobileDropdownStyles = {\n  backgroundColor: 'var(--bg-button-neutral-default)',\n  marginBottom: '16px',\n};\n\nexport const SideBarUserItem: React.FC<SideBarUserItemProps> = ({\n  user,\n  isInvited,\n  isOffline,\n  sideBarType,\n  refetchAudience,\n}) => {\n  const { onDeclineRaiseHand, onAcceptRaiseHand } = useRaiseHandApi();\n  const [declineLoading, setDeclineLoading] = useState(false);\n  const [acceptLoading, setAcceptLoading] = useState(false);\n  const [showBlockUserPopup, toggleBlockUserPopup] = useToggle();\n  const { onBlockUser } = useAttendeeManagement();\n  const { eventDetails } = useSocialHallEventContext();\n  const { mutedUsers } = useSocialHallCallContext();\n\n  const { isHost, speakerInvitation } = useSocialHallContext();\n  const { width } = useWindowDimensions();\n  const isMobile = useMemo(() => width <= breakpoints.MOBILE_MAX, [width]);\n\n  const fullName = useMemo(\n    () => getFullName(user?.firstName, user?.middleName, user?.lastName),\n    [user],\n  );\n\n  const { handleSelectOptions, selectableOptions } = useMediaPreviewSettings({\n    isInvited: isInvited?.(user._id),\n    isMuted: mutedUsers.includes(user._id),\n    invitationStatus: user.invitationStatus,\n    refetchAudience,\n    toggleBlockUserPopup,\n    ...user,\n  });\n\n  const handleKickUser = useCallback(() => {\n    onBlockUser(user._id, eventDetails?._id!, fullName, true);\n    toggleBlockUserPopup();\n  }, [\n    user._id,\n    eventDetails?._id,\n    fullName,\n    onBlockUser,\n    toggleBlockUserPopup,\n  ]);\n\n  const userType = useMemo(\n    () => ({\n      onStage: sideBarType === SideBarType.ON_STAGE,\n      isRaisedHand: sideBarType === SideBarType.RAISED_HAND,\n      isAudience: sideBarType === SideBarType.AUDIENCE,\n    }),\n    [sideBarType],\n  );\n  const invited = useMemo(\n    () => speakerInvitation?.invitee?._id === user._id,\n    [speakerInvitation?.invitee?._id, user._id],\n  );\n\n  const handleAccept = useCallback(async () => {\n    setAcceptLoading(true);\n    await onAcceptRaiseHand(user._id);\n    setAcceptLoading(false);\n  }, [onAcceptRaiseHand, user._id]);\n\n  const handleReject = useCallback(async () => {\n    setDeclineLoading(true);\n    await onDeclineRaiseHand(user._id);\n    setDeclineLoading(false);\n  }, [onDeclineRaiseHand, user._id]);\n\n  const usersRole = useMemo(\n    () =>\n      userType.onStage &&\n      user.getEventUserRole?.userRole === (UserRole.Host || UserRole.Cohost),\n    [user.getEventUserRole?.userRole, userType.onStage],\n  );\n\n  return (\n    <ItemWrapper>\n      <AvatarWrapper data-testid=\"avatar_wrapper\">\n        {isOffline && (\n          <OfflineWrapper>\n            <Icon imageIconName=\"low_connection_xs\" size={24} />\n          </OfflineWrapper>\n        )}\n        <Avatar url={user?.profile?.profilePicture || ''} />\n      </AvatarWrapper>\n      <NameWrapper>\n        <Stack gap={5} align=\"center\">\n          {usersRole && (\n            <Icon\n              color=\"--icon-call-ui-neutral-default\"\n              name=\"star_s\"\n              size={12}\n            />\n          )}\n          <NameSpan\n            colorToken=\"--text-tablecell-header-neutral-highlighted\"\n            font=\"body-m-bold\"\n          >\n            {fullName}\n          </NameSpan>\n        </Stack>\n        <TitleSpan\n          font=\"footnote\"\n          colorToken=\"--text-tablecell-body-neutral-default\"\n        >\n          {user.title}\n        </TitleSpan>\n      </NameWrapper>\n      {isOffline && (\n        <OfflineBadge>\n          <TSpan\n            font=\"body-s-bold\"\n            colorToken=\"--text-badge-danger-secondary-default\"\n          >\n            {t('noumena.social_hall.network.offline')}\n          </TSpan>\n        </OfflineBadge>\n      )}\n      <ButtonWrapper>\n        {userType.isAudience && isHost && invited && !isOffline && (\n          <StatusTag>\n            <TSpan\n              font=\"footnote-bold\"\n              colorToken=\"--text-call-ui-brand-primary-default\"\n            >\n              {t('noumena.social_hall.invite_status.invited')}\n            </TSpan>\n          </StatusTag>\n        )}\n        {userType.onStage && !isOffline && (\n          <>\n            <Icon\n              name={user.isMuted ? 'mic_off_m' : 'mic_on_m'}\n              size={24}\n              color=\"--icon-card-neutral-default\"\n            />\n            <Icon\n              color=\"--icon-card-neutral-default\"\n              name={user.isCameraEnable ? 'webcam_on_m' : 'webcam_off_m'}\n              size={24}\n            />\n          </>\n        )}\n        {userType.isRaisedHand && !isOffline && (\n          <>\n            <Button\n              data-testid=\"close_button\"\n              size=\"small\"\n              onClick={handleReject}\n              icon={\n                <Icon\n                  name=\"close_m\"\n                  size={24}\n                  color=\"--icon-button-neutral-default\"\n                />\n              }\n              loading={declineLoading}\n            />\n            <Button\n              data-testid=\"accept_button\"\n              primary\n              size=\"small\"\n              onClick={handleAccept}\n              icon={\n                <Icon\n                  name=\"tick_m\"\n                  size={24}\n                  color=\"--icon-button-neutral-alt-default\"\n                />\n              }\n              loading={acceptLoading}\n            />\n          </>\n        )}\n        {(userType.onStage || userType.isAudience) && isHost && (\n          <Dropdown\n            containerWidth=\"280px\"\n            containerHeight=\"fit-content\"\n            hideIcons={false}\n            closeOnSelect\n            onSelectOption={handleSelectOptions}\n            options={selectableOptions}\n            usePortal\n            isAnimation={false}\n            observerMinHeight=\"0\"\n            renderContainerFromBottom={isMobile}\n            dropdownItemStyle={isMobile ? mobileDropdownStyles : {}}\n          >\n            {({\n              targetRef,\n              targetProps,\n              toggle,\n            }: DropdownTargetProps<HTMLDivElement>) => (\n              <ThreeDotsIconWrapper\n                ref={targetRef}\n                onClick={toggle}\n                {...targetProps}\n              >\n                <Icon\n                  color=\"--icon-card-neutral-default\"\n                  name=\"more_m\"\n                  size={24}\n                />\n              </ThreeDotsIconWrapper>\n            )}\n          </Dropdown>\n        )}\n      </ButtonWrapper>\n      <EventCancelAttendeeModal\n        isOpen={showBlockUserPopup}\n        onClose={toggleBlockUserPopup}\n        onConfirm={handleKickUser}\n        {...kickUserModalData(fullName)}\n      />\n    </ItemWrapper>\n  );\n};\n","import React, { useCallback, useMemo, useRef, useState } from 'react';\nimport { first } from 'lodash';\n\nimport { t } from 'i18next';\nimport { Icon } from '@/components/Icon';\nimport {\n  useSocialHallCallContext,\n  useSocialHallContext,\n  useSocialHallEventContext,\n} from '@/providers';\nimport { TSpan } from '@/components/Typography';\nimport { useWindowDimensions } from '@/hooks';\nimport { cleanList } from '@/utils/list';\nimport { type UserOutput } from '@/apollo/generated/types';\nimport { Dropdown, type DropdownTargetProps } from '@/components/Dropdown';\nimport { breakpoints } from '@/constants/devices';\nimport { EventAttendeesModal } from '@/screens/Chamber/components/elements/CalendarEvent/modals/EventAttendeesModal';\nimport { useEventAttendees } from '@/features/events/hooks';\nimport { InviteAttendeeModal } from '../InviteAttendee';\nimport {\n  createAudienceSection,\n  createRaisedHandSection,\n  createStageSection,\n} from './helper';\nimport {\n  type SideBarSection,\n  type SideBarType,\n  type SocialHallMembersProps,\n} from './types';\nimport {\n  ListWrapper,\n  SideBarWrapper,\n  SideBarHeader,\n  SideBarHeaderWrapper,\n  IconButton,\n  SideBarActionHeader,\n} from './styles';\nimport { SideBarUserItem } from './SideBarUserItem/SideBarUserListItem';\nimport {\n  mobileDropdownStyles,\n  moreDropdownOptionAttendee,\n  moreDropdownOptionHost,\n} from './data';\n\nexport const SocialHallMembers = ({\n  onClose,\n  show,\n  isInvited,\n  onlineAttendees,\n}: SocialHallMembersProps) => {\n  const { width } = useWindowDimensions();\n  const isMobile = useMemo(() => width <= breakpoints.MOBILE_MAX, [width]);\n  const [showInviteModal, setShowInviteModal] = useState<boolean>(false);\n  const attendeesRef =\n    useRef<React.ElementRef<typeof EventAttendeesModal>>(null);\n  const {\n    isHost,\n    socialHallAttendeesAndGroups,\n    stageAttendees: stageUsers,\n    audienceAttendees: audience,\n  } = useSocialHallContext();\n\n  const { isEventHost, eventDetails } = useSocialHallEventContext();\n\n  const inviteUserToggle = () => setShowInviteModal((val) => !val);\n\n  const onViewAttendees = useCallback(() => {\n    attendeesRef.current?.open(eventDetails?._id ?? '', !!isEventHost);\n  }, [isEventHost, eventDetails]);\n\n  const { pendingAttendees: pAttendees, refetchAudience } = useEventAttendees({\n    eventId: eventDetails?._id || '',\n    isHost: Boolean(isHost),\n    shouldFetch: !!eventDetails?._id && isHost !== undefined,\n  });\n\n  const { raisedHandUsers, mutedUsers, camUsers, networkErrorUsers } =\n    useSocialHallCallContext();\n\n  const groupAttendees = useMemo(\n    () =>\n      first(\n        socialHallAttendeesAndGroups?.data?.socialHallGroups?.data,\n      )?.users?.filter((attendee) => raisedHandUsers?.includes(attendee?._id!)),\n    [raisedHandUsers, socialHallAttendeesAndGroups],\n  );\n\n  const stageAttendees = useMemo(() => {\n    const attendees = eventDetails?.isInstantEvent\n      ? onlineAttendees\n      : stageUsers;\n    return attendees?.map((item) => ({\n      ...item,\n      isMuted: mutedUsers.includes(item._id),\n      isCameraEnable: camUsers.includes(item._id),\n    }));\n  }, [\n    camUsers,\n    mutedUsers,\n    stageUsers,\n    onlineAttendees,\n    eventDetails?.isInstantEvent,\n  ]);\n\n  const pendingAttendees = useMemo(\n    () =>\n      cleanList(pAttendees).map((item) => ({\n        ...(item.userId as UserOutput),\n        invitationStatus: 'PENDING',\n      })),\n    [pAttendees],\n  );\n\n  const audienceAttendees = useMemo(\n    () => [...(audience || []), ...(pendingAttendees || [])],\n    [pendingAttendees, audience],\n  );\n\n  const HostAudienceAttendees = useMemo(\n    () =>\n      isHost && groupAttendees\n        ? audienceAttendees.filter(\n            (attendee) => !raisedHandUsers?.includes(attendee?._id!),\n          )\n        : audienceAttendees,\n    [audienceAttendees, groupAttendees, isHost, raisedHandUsers],\n  );\n\n  const totalMembers = useMemo(() => {\n    if (eventDetails?.isInstantEvent) {\n      return stageAttendees?.length || 0;\n    }\n    return (\n      (groupAttendees?.length || 0) +\n      (stageAttendees?.length || 0) +\n      (audienceAttendees?.length || 0)\n    );\n  }, [\n    groupAttendees?.length,\n    stageAttendees?.length,\n    audienceAttendees?.length,\n    eventDetails?.isInstantEvent,\n  ]);\n\n  const sideBarData = useMemo((): Array<SideBarSection> => {\n    const audiences = createAudienceSection(HostAudienceAttendees || []);\n    const stage = createStageSection(stageAttendees || []);\n    const raisedHand = isHost\n      ? createRaisedHandSection(groupAttendees as UserOutput[])\n      : undefined;\n    if (eventDetails?.isInstantEvent) {\n      return [stage];\n    }\n    const sections = [audiences, stage];\n    return raisedHand ? [raisedHand, ...sections] : sections;\n  }, [\n    HostAudienceAttendees,\n    groupAttendees,\n    isHost,\n    stageAttendees,\n    eventDetails?.isInstantEvent,\n  ]);\n\n  const handleSelectOptions = useCallback(\n    (option) => {\n      if (option.value === 'see_event_attendees') {\n        onViewAttendees();\n      } else if (option.value === 'invite_users') {\n        inviteUserToggle();\n      }\n    },\n    [onViewAttendees],\n  );\n\n  return (\n    <SideBarWrapper data-testid=\"side_bar_wrapper\" show={show}>\n      <SideBarActionHeader>\n        <IconButton>\n          <Icon\n            onClick={onClose}\n            color=\"--icon-button-brand-primary-default\"\n            name=\"close_m\"\n            size={24}\n          />\n        </IconButton>\n        <TSpan font=\"body-l\" colorToken=\"--text-appbar-neutral-default\">\n          {' '}\n          {`${t('noumena.social_hall.users')} (${totalMembers})`}\n        </TSpan>\n        <Dropdown\n          closeOnSelect\n          placement=\"bottom-end\"\n          isShowEmptyText={false}\n          onSelectOption={(option) => handleSelectOptions(option)}\n          options={\n            isEventHost ? moreDropdownOptionHost : moreDropdownOptionAttendee\n          }\n          containerWidth=\"197\"\n          padding=\"0\"\n          observerMinHeight=\"0\"\n          usePortal\n          renderContainerFromBottom={isMobile}\n          dropdownItemStyle={isMobile ? mobileDropdownStyles : {}}\n        >\n          {({\n            targetRef,\n            targetProps,\n            toggle,\n          }: DropdownTargetProps<HTMLDivElement>) => (\n            <IconButton\n              ref={targetRef}\n              onClick={toggle}\n              {...targetProps}\n              data-testid=\"three_dot_button\"\n            >\n              <Icon\n                color=\"--icon-button-neutral-default\"\n                name=\"more_m\"\n                size={24}\n              />\n            </IconButton>\n          )}\n        </Dropdown>\n      </SideBarActionHeader>\n      {sideBarData.map(({ data, header, type }) =>\n        data?.length ? (\n          <React.Fragment key={header}>\n            <SideBarHeaderWrapper>\n              <SideBarHeader\n                colorToken=\"--text-tablecell-body-neutral-default\"\n                font=\"footnote\"\n              >\n                {t(header)}\n              </SideBarHeader>\n            </SideBarHeaderWrapper>\n            <ListWrapper\n              data-testid=\"list_wrapper\"\n              isScrollable={data.length === 1}\n            >\n              {data.map((attendee) => (\n                <SideBarUserItem\n                  user={attendee!}\n                  key={attendee?._id}\n                  isInvited={isInvited}\n                  refetchAudience={refetchAudience}\n                  sideBarType={type as SideBarType}\n                  isOffline={networkErrorUsers.includes(attendee._id)}\n                />\n              ))}\n            </ListWrapper>\n          </React.Fragment>\n        ) : null,\n      )}\n      <EventAttendeesModal ref={attendeesRef} />\n      <InviteAttendeeModal\n        isOpen={showInviteModal}\n        handleClose={inviteUserToggle}\n        refetchAudience={refetchAudience}\n      />\n    </SideBarWrapper>\n  );\n};\n\nexport default SocialHallMembers;\n","import { useCallback, useMemo } from 'react';\nimport { t } from 'i18next';\nimport { Trans } from 'react-i18next';\nimport { Stack } from '@/layout';\nimport { Icon } from '@/components/Icon';\nimport { TSpan } from '@/components/Typography';\nimport { useSocialHallCallContext, useSocialHallContext } from '@/providers';\nimport { useSpeakerView } from '@/features/socialHall/hooks';\nimport { SocialHallUtils } from '@/utils/socialHall';\nimport { type ScreenShareProps } from './types';\nimport {\n  CloseFullScreenButton,\n  ControlIconWrapper,\n  FullScreenButton,\n  PinedFrame,\n  PinnedFrameWrapper,\n  ScreenShareWarpper,\n  ScreenSharingLabel,\n  StopSharing,\n} from './styles';\n\ninterface HTMLElement {\n  webkitRequestFullScreen?: () => Promise<void>;\n  mozRequestFullScreen?: () => Promise<void>;\n  msRequestFullscreen?: () => Promise<void>;\n  requestFullscreen?: () => Promise<void>;\n}\n\nexport const ScreenShare = ({\n  isFullScreen,\n  fullScreenElemId,\n  screenShareElemId,\n  clientHeight,\n  clientWidth,\n  showChatPanel,\n  showMembersPanel,\n}: ScreenShareProps) => {\n  const { activeSocialHallGroup, onCloseFullScreen } = useSocialHallContext();\n  const {\n    isShareScreen,\n    onToggleScreenSharing,\n    screenSharingLocalUserFeed,\n    screenSharingRemoteUserFeed,\n  } = useSocialHallCallContext();\n\n  const onClickShareScreen = useCallback(() => {\n    const el = document.getElementById(fullScreenElemId) as HTMLElement;\n    // Disable fullscreen mode for user who is sharing screen\n    if (screenSharingLocalUserFeed) {\n      return;\n    }\n\n    const rfs =\n      el?.requestFullscreen ||\n      el?.webkitRequestFullScreen ||\n      el?.mozRequestFullScreen ||\n      el?.msRequestFullscreen;\n    rfs?.call(el);\n  }, [screenSharingLocalUserFeed, fullScreenElemId]);\n\n  const onMaximizeScreenShare = useCallback(() => {\n    const el = document.getElementById(fullScreenElemId) as HTMLElement;\n    if (el?.requestFullscreen) {\n      el?.requestFullscreen();\n    }\n  }, [fullScreenElemId]);\n\n  const { elemRef, maxHeight, dimension } = useSpeakerView({\n    clientHeight,\n    clientWidth,\n    showChatPanel,\n    showMembersPanel,\n  });\n\n  const screenSharingUserName = useMemo(() => {\n    if (screenSharingRemoteUserFeed?.uid) {\n      const uid = SocialHallUtils.cleanScreenSharingUid(\n        screenSharingRemoteUserFeed?.uid,\n      );\n      return activeSocialHallGroup?.users?.find((user) => user?._id === uid)\n        ?.firstName;\n    }\n    return '';\n  }, [activeSocialHallGroup?.users, screenSharingRemoteUserFeed?.uid]);\n\n  const screenSharei18Key = useMemo(() => {\n    if (isShareScreen) {\n      return 'noumena.social_hall.screen_sharing_current_user';\n    }\n    return 'noumena.social_hall.screen_sharing_remote_user';\n  }, [isShareScreen]);\n\n  return (\n    <Stack vertical fullWidth align=\"center\">\n      <ScreenSharingLabel>\n        <Trans\n          i18nKey={screenSharei18Key}\n          values={{ firstName: screenSharingUserName }}\n          components={{\n            b: <b />,\n          }}\n        />\n      </ScreenSharingLabel>\n      <ScreenShareWarpper\n        ref={elemRef}\n        style={{\n          maxHeight: `${isFullScreen ? 'none' : maxHeight}`,\n          minWidth: `${!isFullScreen && clientWidth - 368}`,\n        }}\n      >\n        {isFullScreen && (\n          <CloseFullScreenButton onClick={onCloseFullScreen}>\n            <Icon\n              name=\"close_m\"\n              size={24}\n              color=\"--icon-button-neutral-alt-default\"\n            />\n          </CloseFullScreenButton>\n        )}\n        <PinnedFrameWrapper\n          isFullScreen={isFullScreen}\n          isShareUserFeed={!!screenSharingLocalUserFeed}\n          id=\"screenShareWrapper\"\n        >\n          <StopSharing\n            style={{\n              maxWidth: `${isFullScreen ? 'none' : dimension.width - 115}px`,\n              maxHeight: `${isFullScreen ? 'none' : dimension.height - 115}px`,\n              minWidth: `${isFullScreen ? 'none' : dimension.width - 115}px`,\n              minHeight: `${isFullScreen ? 'none' : dimension.height - 115}px`,\n            }}\n          >\n            <Stack vertical gap={8} align=\"center\">\n              <ControlIconWrapper\n                cursorAllowed\n                onClick={() => onToggleScreenSharing()}\n              >\n                <Icon\n                  name=\"share_content_off_m\"\n                  size={24}\n                  color=\"--icon-button-neutral-default\"\n                />\n              </ControlIconWrapper>\n              <TSpan font=\"body-m-bold\" colorToken=\"--color-base-gray-100\">\n                {t('noumena.social_hall.stop_sharing_screen')}\n              </TSpan>\n            </Stack>\n          </StopSharing>\n          <FullScreenButton\n            isShareUserFeed={!screenSharingLocalUserFeed && !isFullScreen}\n            onClick={onMaximizeScreenShare}\n          >\n            <Icon\n              name=\"fullscreen_xs\"\n              size={24}\n              color=\"--icon-call-ui-neutral-alt-default\"\n            />\n          </FullScreenButton>\n          <PinedFrame\n            isFullScreen={isFullScreen}\n            id={screenShareElemId}\n            onClick={onClickShareScreen}\n            style={{\n              maxWidth: `${\n                isFullScreen ? 'none' : `${dimension.width - 115}px`\n              }`,\n              maxHeight: `${\n                isFullScreen ? 'none' : `${dimension.height - 115}px`\n              }`,\n              minWidth: `${\n                isFullScreen ? 'none' : `${dimension.width - 115}px`\n              }`,\n              minHeight: `${\n                isFullScreen ? 'none' : `${dimension.height - 115}px`\n              }`,\n            }}\n          />\n        </PinnedFrameWrapper>\n      </ScreenShareWarpper>\n    </Stack>\n  );\n};\nexport default ScreenShare;\n","import { useCallback } from 'react';\nimport { Icon } from '@/components/Icon';\nimport { useWindowDimensions } from '@/hooks';\nimport { useSocialHallContext } from '@/providers';\nimport { breakpoints } from '@/constants/devices';\nimport { Button } from '@/components/Button';\nimport { RightWrapper } from './styles';\nimport { type LayoutToggleProps } from './types';\n\nconst LayoutToggle: React.FC<LayoutToggleProps> = ({ isScreenSharing }) => {\n  const { width } = useWindowDimensions();\n  const { showBuzzRoom, onSwitchLayout, isGridLayout } = useSocialHallContext();\n  const isMobile = width < breakpoints.TABLET;\n\n  const onSwitchLayoutHandler = useCallback(\n    (isGrid: boolean) => {\n      if (!isMobile) {\n        onSwitchLayout(isGrid);\n      }\n      // @to-do in-case of mobile we need to open a modal from which user will select\n    },\n    [isMobile, onSwitchLayout],\n  );\n\n  return (\n    <RightWrapper isBuzzRoom={showBuzzRoom}>\n      <Button\n        onClick={() => onSwitchLayoutHandler(true)}\n        size=\"small\"\n        disabled={isScreenSharing}\n        icon={\n          <Icon\n            color={\n              !isScreenSharing && isGridLayout\n                ? '--icon-tab-basic-brand-primary-default'\n                : '--icon-tab-basic-neutral-default'\n            }\n            name=\"video_grid_gallery_m\"\n            size={16}\n          />\n        }\n      />\n\n      {!isMobile && (\n        <Button\n          onClick={() => onSwitchLayoutHandler(false)}\n          size=\"small\"\n          disabled={isScreenSharing}\n          icon={\n            <Icon\n              color={\n                !isScreenSharing && !isGridLayout\n                  ? '--icon-tab-basic-brand-primary-default'\n                  : '--icon-tab-basic-neutral-default'\n              }\n              name=\"video_grid_speaker_m\"\n              size={16}\n            />\n          }\n        />\n      )}\n    </RightWrapper>\n  );\n};\n\nexport default LayoutToggle;\n","import { useEffect, useState } from 'react';\nimport { EventsStatus } from '@/apollo/generated/types';\nimport { useSocialHallEventContext } from '@/providers';\nimport { useHeaderTimer } from '@/features/socialHall/hooks';\nimport { countDownModalData, EventModal } from '../EventModals/EventModal';\n\nexport const HeaderCountDownModal = () => {\n  const { remainTime } = useHeaderTimer();\n  const [showCountDownModal, setShowCountDownModal] = useState<boolean>(false);\n  const { eventDetails } = useSocialHallEventContext();\n\n  useEffect(() => {\n    if (\n      eventDetails?.status === EventsStatus.PreLive &&\n      remainTime / 1000 < 4 &&\n      remainTime / 1000 > 3\n    ) {\n      setShowCountDownModal(true);\n    }\n  }, [eventDetails?.status, remainTime]);\n  return (\n    <EventModal\n      isOpen={showCountDownModal}\n      onClose={() => setShowCountDownModal(false)}\n      countDown={true}\n      remainTime={remainTime}\n      {...countDownModalData}\n    />\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BottomSheet } from '@/components/BottomSheet';\nimport { Button } from '@/components/Button';\nimport { Icon } from '@/components/Icon';\nimport { useSocialHallEventContext } from '@/providers';\nimport { type MoreOptionsBottomSheetProps } from './types';\nimport { SocialHallBottomSheetBody } from './styles';\n\nconst MoreOptionsBottomSheet: React.FC<MoreOptionsBottomSheetProps> = ({\n  isOpen,\n  onClose,\n  onSettingsClick,\n  onChangeRoomNameClick,\n}) => {\n  const { isMainEvent } = useSocialHallEventContext();\n  const { t } = useTranslation();\n\n  return (\n    <BottomSheet\n      enableCloseButton\n      open={isOpen}\n      onClose={onClose}\n      position=\"fixed\"\n    >\n      <SocialHallBottomSheetBody>\n        {!isMainEvent && (\n          <Button\n            icon={\n              <Icon\n                color=\"--text-button-neutral-default\"\n                name=\"edit_s\"\n                size={24}\n              />\n            }\n            size=\"full\"\n            onClick={onChangeRoomNameClick}\n          >\n            {t('noumena.social_hall.change_group_name')}\n          </Button>\n        )}\n        <Button\n          icon={\n            <Icon\n              color=\"--text-button-neutral-default\"\n              name=\"settings_m\"\n              size={24}\n            />\n          }\n          size=\"full\"\n          onClick={onSettingsClick}\n        >\n          {t('noumena.social_hall.settings')}\n        </Button>\n      </SocialHallBottomSheetBody>\n    </BottomSheet>\n  );\n};\n\nexport default MoreOptionsBottomSheet;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BottomSheet } from '@/components/BottomSheet';\nimport { Button } from '@/components/Button';\nimport { Icon } from '@/components/Icon';\nimport { SocialHallBottomSheetBody } from './styles';\nimport { type LayoutSwitchBottomSheetProps } from './types';\n\nconst LayoutSwitchBottomSheet: React.FC<LayoutSwitchBottomSheetProps> = ({\n  isOpen,\n  onClose,\n  onLayoutChange,\n}) => {\n  const { t } = useTranslation();\n\n  const onLayoutChangeClick = (isGrid: boolean) => {\n    onLayoutChange(isGrid);\n    onClose();\n  };\n\n  return (\n    <BottomSheet\n      enableCloseButton\n      open={isOpen}\n      onClose={onClose}\n      position=\"fixed\"\n    >\n      <SocialHallBottomSheetBody>\n        <Button\n          icon={\n            <Icon\n              color=\"--icon-tab-basic-neutral-default\"\n              name=\"video_grid_gallery_m\"\n              size={16}\n            />\n          }\n          size=\"full\"\n          onClick={() => onLayoutChangeClick(true)}\n        >\n          {t('noumena.social_hall.gallery_view')}\n        </Button>\n        <Button\n          icon={\n            <Icon\n              color=\"--icon-tab-basic-neutral-default\"\n              name=\"video_grid_speaker_m\"\n              size={16}\n            />\n          }\n          size=\"full\"\n          onClick={() => onLayoutChangeClick(false)}\n        >\n          {t('noumena.social_hall.speaker_view')}\n        </Button>\n      </SocialHallBottomSheetBody>\n    </BottomSheet>\n  );\n};\nexport default LayoutSwitchBottomSheet;\n","import { useCallback, useState } from 'react';\nimport { Icon } from '@/components/Icon';\nimport { breakpoints } from '@/constants/devices';\nimport { useWindowDimensions } from '@/hooks';\nimport { useSocialHallContext } from '@/providers';\nimport { Button } from '@/components/Button';\nimport { IconButton } from './styles';\nimport MoreOptionsBottomSheet from './MoreOptionsBottomSheet';\nimport LayoutSwitchBottomSheet from './LayoutSwitchBottomSheet';\nimport { MediaSettingModal } from '../MediaSettingModal';\nimport { type HeaderBottomSheetProps } from './types';\n\nconst HeaderBottomSheet = ({\n  onChangeGroupName,\n  isScreenSharing,\n}: HeaderBottomSheetProps) => {\n  const { width } = useWindowDimensions();\n  const { onSwitchLayout, isGridLayout, selectDefaultMediaInput } =\n    useSocialHallContext();\n  const isMobile = width < breakpoints.TABLET;\n  const [showMoreOptionsBottomSheet, setShowMoreOptionsBottomSheet] =\n    useState<boolean>(false);\n  const [isLayoutSwitchBottomSheetOpen, setIsLayoutSwitchBottomSheetOpen] =\n    useState(false);\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const onLayoutSwitchBottomSheetClose = () => {\n    setIsLayoutSwitchBottomSheetOpen(false);\n  };\n\n  const onLayoutSwitchBottomSheetLayoutChange = (isGrid: boolean) => {\n    setIsLayoutSwitchBottomSheetOpen(false);\n    onSwitchLayout(isGrid);\n  };\n\n  const onToggleMediaSettingPopup = useCallback(() => {\n    selectDefaultMediaInput();\n    setIsOpen((open) => !open);\n    setShowMoreOptionsBottomSheet(false);\n  }, [selectDefaultMediaInput]);\n\n  const onToggleChangeRoomNamePopup = useCallback(() => {\n    onChangeGroupName?.();\n    setShowMoreOptionsBottomSheet(false);\n  }, [onChangeGroupName]);\n\n  return isMobile ? (\n    <>\n      <Button\n        onClick={() => setIsLayoutSwitchBottomSheetOpen(true)}\n        size=\"small\"\n        disabled={isScreenSharing}\n        icon={\n          <Icon\n            color={\n              !isScreenSharing\n                ? '--icon-tab-basic-brand-primary-default'\n                : '--icon-tab-basic-neutral-default'\n            }\n            name={\n              isGridLayout ? 'video_grid_gallery_m' : 'video_grid_speaker_m'\n            }\n            size={16}\n          />\n        }\n      />\n      <IconButton onClick={() => setShowMoreOptionsBottomSheet(true)}>\n        <Icon\n          color=\"--icon-tab-basic-brand-neutral-default\"\n          name=\"more_m\"\n          size={24}\n        />\n      </IconButton>\n      <MoreOptionsBottomSheet\n        isOpen={showMoreOptionsBottomSheet}\n        onClose={() => setShowMoreOptionsBottomSheet(false)}\n        onSettingsClick={onToggleMediaSettingPopup}\n        onChangeRoomNameClick={onToggleChangeRoomNamePopup}\n      />\n      <LayoutSwitchBottomSheet\n        onClose={onLayoutSwitchBottomSheetClose}\n        isOpen={isLayoutSwitchBottomSheetOpen}\n        onLayoutChange={onLayoutSwitchBottomSheetLayoutChange}\n      />\n      <MediaSettingModal\n        isOpen={isOpen}\n        onAccept={onToggleMediaSettingPopup}\n        handleClose={onToggleMediaSettingPopup}\n      />\n    </>\n  ) : null;\n};\n\nexport default HeaderBottomSheet;\n","import { useMemo } from 'react';\nimport { useSocialHallContext, useSocialHallEventContext } from '@/providers';\nimport { Icon } from '@/components/Icon';\nimport { IconButton, LeftWrapper } from './styles';\n\nexport const ToggleBuzzRoomBtn = () => {\n  const { showBuzzRoom, setShowBuzzRoom } = useSocialHallContext();\n  const { isMainEvent, eventDetails } = useSocialHallEventContext();\n\n  const showBuzzRoomBtn = useMemo(\n    () => showBuzzRoom && !isMainEvent && !eventDetails?.isInstantEvent,\n    [showBuzzRoom, isMainEvent, eventDetails?.isInstantEvent],\n  );\n\n  return showBuzzRoomBtn ? (\n    <LeftWrapper data-testid=\"toggle_buzzroom_btn\">\n      <IconButton onClick={() => setShowBuzzRoom(false)}>\n        <Icon\n          color=\"--icon-button-neutral-default\"\n          name=\"chevron_small_down_m\"\n          size={24}\n        />\n      </IconButton>\n    </LeftWrapper>\n  ) : null;\n};\n","import { t } from 'i18next';\nimport { type Event, EventsStatus } from '@/apollo/generated/types';\n\nexport const getEventTagLabel = ({ isInstantEvent, status }: Event): string => {\n  let tag = '';\n  if (isInstantEvent) {\n    return tag;\n  }\n\n  if ([EventsStatus.PreEvent, EventsStatus.PreLive].includes(status!)) {\n    tag = t('noumena.social_hall.main_event');\n  }\n  if (status === EventsStatus.Live) {\n    tag = t('noumena.social_hall.main_event');\n  }\n  if (status === EventsStatus.PostEvent) {\n    tag = t('noumena.social_hall.post_event');\n  }\n\n  return tag;\n};\n","import { useMemo } from 'react';\nimport { useSocialHallEventContext } from '@/providers';\nimport { type Event } from '@/apollo/generated/types';\nimport { getEventTagLabel } from './helper';\nimport { TagSpan } from './styles';\n\nexport const EventTag = () => {\n  const { eventDetails } = useSocialHallEventContext();\n  const eventTag = useMemo(\n    () => getEventTagLabel(eventDetails as Event),\n    [eventDetails],\n  );\n  return eventTag ? (\n    <TagSpan\n      font=\"body-s-bold\"\n      colorToken=\"--text-tab-chips-brand-primary-selected\"\n    >\n      {eventTag}\n    </TagSpan>\n  ) : null;\n};\n","import { t } from 'i18next';\nimport { useMemo } from 'react';\nimport { Icon } from '@/components/Icon';\nimport { useSocialHallContext, useSocialHallEventContext } from '@/providers';\nimport { TitleSpan, TitleWrapper, TagTitleContainer } from './styles';\nimport { EventTag } from './EventTag';\n\ntype GroupNameProps = {\n  showMobileView: boolean;\n  onChangeGroupName?: () => void;\n};\n\nexport const GroupName = ({\n  onChangeGroupName,\n  showMobileView,\n}: GroupNameProps) => {\n  const { showBuzzRoom } = useSocialHallContext();\n  const { groupName, isMainEvent, eventDetails, isEventHost } =\n    useSocialHallEventContext();\n\n  const canEdit = useMemo((): boolean => {\n    if (\n      (!showBuzzRoom || isMainEvent || eventDetails?.isInstantEvent) &&\n      isEventHost\n    ) {\n      return false;\n    }\n    return true;\n  }, [eventDetails?.isInstantEvent, isMainEvent, showBuzzRoom, isEventHost]);\n\n  return showMobileView ? (\n    <TagTitleContainer>\n      <EventTag />\n      <TitleWrapper>\n        <TitleSpan font=\"body-xl-bold\" isGray={showBuzzRoom && !groupName}>\n          {groupName || t('noumena.social_hall.add_group_name')}\n        </TitleSpan>\n      </TitleWrapper>\n    </TagTitleContainer>\n  ) : (\n    <TagTitleContainer>\n      <EventTag />\n      <TitleWrapper>\n        <TitleSpan\n          font=\"body-xl-bold\"\n          isGray={showBuzzRoom && !groupName && !isMainEvent}\n        >\n          {groupName || t('noumena.social_hall.add_group_name')}\n        </TitleSpan>\n        {!canEdit && (\n          <Icon\n            onClick={onChangeGroupName}\n            color=\"--icon-card-neutral-default\"\n            name=\"edit_m\"\n            size={24}\n          />\n        )}\n      </TitleWrapper>\n    </TagTitleContainer>\n  );\n};\n","import { useSocialHallEventContext } from '@/providers';\nimport { EventsStatus } from '@/apollo/generated/types';\nimport { useHeaderTimer } from '@/features/socialHall/hooks';\nimport { CounterClockSpan } from './styles';\n\nexport const HeaderTimer = () => {\n  const { formattedTime } = useHeaderTimer();\n  const { isPostEvent, isEndedEvent, eventDetails } =\n    useSocialHallEventContext();\n\n  return !isPostEvent && !isEndedEvent ? (\n    <CounterClockSpan\n      font=\"systemInfo-m\"\n      isCountDown={\n        eventDetails?.status === EventsStatus.PreLive ||\n        eventDetails?.status === EventsStatus.PostEventEnded\n      }\n      data-testid=\"counter_clock\"\n    >\n      {formattedTime}\n    </CounterClockSpan>\n  ) : null;\n};\n","import { useEffect, useRef } from 'react';\nimport { Button } from '@/components/Button';\nimport { Icon } from '@/components/Icon';\nimport { breakpoints } from '@/constants/devices';\nimport { useWindowDimensions } from '@/hooks';\nimport { SocialHallMediaUtils } from '@/utils/socialHallMedia';\nimport { useSocialHallCallContext, useSocialHallContext } from '@/providers';\nimport { type MediaDeviceLabel } from '@/screens/SocialHall/types';\n\nexport const SwitchCamera = () => {\n  const { width } = useWindowDimensions();\n  const isMobile = width < breakpoints.TABLET;\n  const isTablet = width < breakpoints.TABLET_L;\n\n  const { deviceId } = useSocialHallContext();\n  const { onChangeDevice, isCameraEnable } = useSocialHallCallContext();\n  const inputDevices = useRef<MediaDeviceLabel[]>([]);\n\n  const onSwitchCamera = () => {\n    const unusedCamera = inputDevices.current?.find(\n      (camera) => camera.deviceId !== deviceId?.camera,\n    );\n    onChangeDevice({\n      ...deviceId!,\n      camera: unusedCamera?.deviceId ?? '',\n    });\n  };\n\n  useEffect(() => {\n    const updateInputDevices = async () => {\n      const cameras = (await SocialHallMediaUtils.getAllConnectedMedia())\n        .cameraDevices;\n      if (cameras) {\n        inputDevices.current = cameras;\n      }\n    };\n    updateInputDevices();\n  }, []);\n\n  return isMobile || isTablet ? (\n    <Button\n      size=\"small\"\n      onClick={() => onSwitchCamera()}\n      disabled={!isCameraEnable}\n      icon={<Icon name=\"flip_camera_m\" size={18} />}\n    />\n  ) : null;\n};\n","import { useCallback, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router';\nimport { Button } from '@/components/Button';\nimport { useWindowDimensions } from '@/hooks';\nimport { useAuth } from '@/features/auth/contexts';\nimport { breakpoints } from '@/constants/devices';\nimport {\n  useSocialHallCallContext,\n  useSocialHallContext,\n  useSocialHallEventContext,\n} from '@/providers';\nimport ROUTES from '@/constants/routes';\nimport {\n  MiddleWrapper,\n  MobileBuzzRoomMiddleWrapper,\n  RightWrapper,\n  Wrapper,\n} from './styles';\nimport {\n  type GroupNameWrapperProps,\n  type SocialHallHeaderProps,\n} from './types';\nimport LayoutToggle from './LayoutToggle';\nimport { EventModal } from '../EventModals/EventModal/EventModal';\nimport { attendeeLeaveEventModalData } from '../EventModals/EventModal/data';\nimport { HeaderCountDownModal } from './HeaderCountDownModal';\nimport HeaderBottomSheet from './HeaderBottomSheet';\nimport { ToggleBuzzRoomBtn } from './ToggleBuzzRoomBtn';\nimport { GroupName } from './GroupName';\nimport { HeaderTimer } from './HeaderTimer';\nimport { SwitchCamera } from './SwitchCamera';\n\nconst GroupNameWrapper = ({\n  children,\n  isBuzzRoom,\n  showMobileView,\n}: GroupNameWrapperProps) =>\n  showMobileView ? (\n    <MobileBuzzRoomMiddleWrapper>{children}</MobileBuzzRoomMiddleWrapper>\n  ) : (\n    <MiddleWrapper isBuzzRoom={isBuzzRoom}>{children}</MiddleWrapper>\n  );\n\nexport const AttendeeHeader = ({\n  onChangeGroupName,\n}: SocialHallHeaderProps) => {\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  const {\n    onLeaveCall,\n    isShareScreen,\n    isRemoteScreenSharing,\n    onExitSocialHallCall,\n  } = useSocialHallCallContext();\n  const [isLoadingLeaveCall, setIsLoadingLeaveCall] = useState(false);\n  const { showBuzzRoom, setShowBuzzRoom, setIsBlockNavigate } =\n    useSocialHallContext();\n\n  const { isMainEvent, eventDetails } = useSocialHallEventContext();\n\n  const { width } = useWindowDimensions();\n  const { isUnregistered } = useAuth();\n\n  const [showLeaveModal, setShowLeaveModal] = useState<boolean>(false);\n  const isMobile = width < breakpoints.TABLET;\n\n  const onLeaveQuietly = async () => {\n    if (isMainEvent || eventDetails?.isInstantEvent) {\n      setShowLeaveModal(true);\n    } else {\n      setIsLoadingLeaveCall(true);\n      onLeaveCall();\n      setIsLoadingLeaveCall(false);\n      setShowBuzzRoom(false);\n    }\n  };\n\n  const isScreenSharing = useMemo(\n    () => isShareScreen || isRemoteScreenSharing,\n    [isShareScreen, isRemoteScreenSharing],\n  );\n\n  const handleLeaveEvent = useCallback(async () => {\n    setShowLeaveModal(false);\n    setIsBlockNavigate(false);\n    await onExitSocialHallCall();\n    navigate(isUnregistered ? ROUTES.GUEST_HOME : ROUTES.HOME_NOUM);\n  }, [isUnregistered, navigate, setIsBlockNavigate, onExitSocialHallCall]);\n\n  const showMobileView = useMemo(\n    () => isMobile && showBuzzRoom,\n    [isMobile, showBuzzRoom],\n  );\n\n  return (\n    <Wrapper isRow={showBuzzRoom || isMainEvent} data-testid=\"attendee_header\">\n      <ToggleBuzzRoomBtn />\n      <GroupNameWrapper\n        showMobileView={showMobileView}\n        isBuzzRoom={showBuzzRoom}\n      >\n        <GroupName\n          onChangeGroupName={onChangeGroupName}\n          showMobileView={showMobileView}\n        />\n        <HeaderTimer />\n      </GroupNameWrapper>\n\n      <RightWrapper isBuzzRoom={showBuzzRoom}>\n        {showBuzzRoom && isMobile && (\n          <>\n            <Button\n              size=\"small\"\n              intent=\"negative\"\n              loading={isLoadingLeaveCall}\n              onClick={() => onLeaveQuietly()}\n              data-testid=\"leave_quietly_button\"\n            >\n              {t('noumena.social_hall.leave')}\n            </Button>\n          </>\n        )}\n        <SwitchCamera />\n        {showBuzzRoom && (\n          <>\n            {!isMobile && <LayoutToggle isScreenSharing={isScreenSharing} />}\n            <HeaderBottomSheet\n              onChangeGroupName={onChangeGroupName}\n              isScreenSharing={isScreenSharing}\n            />\n          </>\n        )}\n\n        {!showBuzzRoom && (\n          <Button\n            size={isMobile ? 'full_small' : 'small'}\n            intent=\"negative\"\n            onClick={() => setShowLeaveModal(true)}\n            data-testid=\"leave_event_button\"\n          >\n            {t('noumena.social_hall.leave_the_event')}\n          </Button>\n        )}\n      </RightWrapper>\n      <HeaderCountDownModal />\n      <EventModal\n        isOpen={showLeaveModal}\n        onClose={() => setShowLeaveModal(false)}\n        onConfirm={handleLeaveEvent}\n        isConfirmButtonPrimary\n        {...attendeeLeaveEventModalData}\n      />\n    </Wrapper>\n  );\n};\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router';\nimport { Button } from '@/components/Button';\nimport { Icon } from '@/components/Icon';\nimport { useWindowDimensions } from '@/hooks';\nimport { useAuth } from '@/features/auth/contexts';\nimport { breakpoints } from '@/constants/devices';\nimport { Dropdown, type DropdownTargetProps } from '@/components/Dropdown';\nimport { type IconProps } from '@/components/Icon/Icon';\nimport {\n  useSocialHallCallContext,\n  useSocialHallContext,\n  useSocialHallEventContext,\n} from '@/providers';\nimport { EventsStatus } from '@/apollo/generated/types';\nimport ROUTES from '@/constants/routes';\nimport { useHeaderTimer } from '@/features/socialHall/hooks';\nimport { EventModal } from '../EventModals/EventModal/EventModal';\nimport {\n  attendeeLeaveEventModalData,\n  countDownModalData,\n} from '../EventModals/EventModal/data';\nimport { attendeeBuzzMenuOptions, attendeeNotBuzzMenuOptions } from './data';\nimport { type SocialHallHeaderProps } from './types';\nimport {\n  CounterClockSpan,\n  IconButton,\n  MiddleWrapper,\n  MobileBuzzRoomMiddleWrapper,\n  RightWrapper,\n  TitleSpan,\n  TitleWrapper,\n  Wrapper,\n  DropdownWrapper,\n} from './styles';\nimport { EventTag } from './EventTag';\nimport { ToggleBuzzRoomBtn } from './ToggleBuzzRoomBtn';\n\nexport const AttendeeHeaderOld = ({\n  onViewAttendees,\n  onChangeGroupName,\n}: SocialHallHeaderProps) => {\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  const { onLeaveCall, onExitSocialHallCall } = useSocialHallCallContext();\n  const [isLoadingLeaveCall, setIsLoadingLeaveCall] = useState(false);\n  const { showBuzzRoom, setShowBuzzRoom, setIsBlockNavigate } =\n    useSocialHallContext();\n\n  const { isMainEvent, isPostEvent, isEndedEvent, eventDetails, groupName } =\n    useSocialHallEventContext();\n\n  const { formattedTime, remainTime } = useHeaderTimer();\n  const { width } = useWindowDimensions();\n  const { isUnregistered } = useAuth();\n\n  const [showLeaveModal, setShowLeaveModal] = useState<boolean>(false);\n  const [showCountDownModal, setShowCountDownModal] = useState<boolean>(false);\n  const isMobile = width < breakpoints.TABLET;\n\n  const selectableOptions = useMemo(() => {\n    const options =\n      showBuzzRoom && !isMainEvent\n        ? attendeeBuzzMenuOptions\n        : attendeeNotBuzzMenuOptions;\n    const updatedOptions = options.map((option) => ({\n      ...option,\n      icon: (\n        <Icon\n          name={option.iconName as IconProps['name']}\n          color={option.labelColor}\n          size={24}\n        />\n      ),\n    }));\n    return updatedOptions;\n  }, [showBuzzRoom, isMainEvent]);\n\n  const onLeaveQuietly = async () => {\n    if (isMainEvent) {\n      setShowLeaveModal(true);\n    } else {\n      setIsLoadingLeaveCall(true);\n      onLeaveCall();\n      setIsLoadingLeaveCall(false);\n      setShowBuzzRoom(false);\n    }\n  };\n\n  const handleSelectOptions = useCallback(\n    (option) => {\n      if (option.value === 'change_room_name') {\n        onChangeGroupName?.();\n      } else if (option.value === 'see_event_attendees') {\n        onViewAttendees?.();\n      }\n    },\n    [onChangeGroupName, onViewAttendees],\n  );\n\n  const handleLeaveEvent = useCallback(async () => {\n    setShowLeaveModal(false);\n    setIsBlockNavigate(false);\n    await onExitSocialHallCall();\n    navigate(isUnregistered ? ROUTES.GUEST_HOME : ROUTES.HOME_NOUM);\n  }, [onExitSocialHallCall, isUnregistered, navigate, setIsBlockNavigate]);\n\n  useEffect(() => {\n    if (\n      eventDetails?.status === EventsStatus.PreLive &&\n      remainTime / 1000 < 4 &&\n      remainTime / 1000 > 3\n    ) {\n      setShowCountDownModal(true);\n    }\n  }, [eventDetails?.status, remainTime]);\n\n  return (\n    <Wrapper isRow={showBuzzRoom || isMainEvent} data-testid=\"attendee_header\">\n      <ToggleBuzzRoomBtn />\n      {isMobile && showBuzzRoom ? (\n        <MobileBuzzRoomMiddleWrapper>\n          <EventTag />\n          <TitleWrapper>\n            <TitleSpan\n              font=\"body-xl-bold\"\n              colorToken={\n                showBuzzRoom && !groupName\n                  ? '--text-card-neutral-default'\n                  : '--text-appbar-neutral-default'\n              }\n            >\n              {groupName || t('noumena.social_hall.add_group_name')}\n            </TitleSpan>\n          </TitleWrapper>\n          {!isPostEvent && !isEndedEvent && (\n            <CounterClockSpan\n              font=\"systemInfo-m\"\n              colorToken={\n                eventDetails?.status === EventsStatus.PreLive ||\n                eventDetails?.status === EventsStatus.PostEventEnded\n                  ? '--text-timestamp-danger-primary-default'\n                  : '--text-timestamp-neutral-default'\n              }\n            >\n              {formattedTime}\n            </CounterClockSpan>\n          )}\n        </MobileBuzzRoomMiddleWrapper>\n      ) : (\n        <MiddleWrapper isBuzzRoom={showBuzzRoom}>\n          <TitleWrapper>\n            <EventTag />\n            <TitleSpan\n              font=\"body-xl-bold\"\n              colorToken={\n                showBuzzRoom && !groupName\n                  ? '--text-card-neutral-default'\n                  : '--text-appbar-neutral-default'\n              }\n            >\n              {showBuzzRoom && !isMainEvent\n                ? groupName || t('noumena.social_hall.add_group_name')\n                : eventDetails?.title}\n            </TitleSpan>\n          </TitleWrapper>\n          {!isPostEvent && !isEndedEvent && (\n            <CounterClockSpan\n              font=\"systemInfo-m\"\n              colorToken={\n                eventDetails?.status === EventsStatus.PreLive ||\n                eventDetails?.status === EventsStatus.PostEventEnded\n                  ? '--text-timestamp-danger-primary-default'\n                  : '--text-timestamp-neutral-default'\n              }\n              data-testid=\"counter_clock\"\n            >\n              {formattedTime}\n            </CounterClockSpan>\n          )}\n        </MiddleWrapper>\n      )}\n\n      <RightWrapper isBuzzRoom={showBuzzRoom}>\n        {showBuzzRoom ? (\n          <Button\n            size=\"small\"\n            secondary\n            loading={isLoadingLeaveCall}\n            onClick={() => onLeaveQuietly()}\n            leftIcon={<Icon imageIconName=\"leave_quietly\" size={24} />}\n            data-testid=\"leave_quietly_button\"\n          >\n            {t('noumena.social_hall.leave_quietly')}\n          </Button>\n        ) : (\n          <Button\n            size={isMobile ? 'full_small' : 'small'}\n            secondary\n            onClick={() => setShowLeaveModal(true)}\n            data-testid=\"leave_event_button\"\n          >\n            {t('noumena.social_hall.leave_the_event')}\n          </Button>\n        )}\n\n        <DropdownWrapper data-testid=\"dropdown_wrapper\">\n          <Dropdown\n            hideIcons={false}\n            closeOnSelect\n            placement=\"bottom-end\"\n            onSelectOption={(option) => handleSelectOptions(option)}\n            options={selectableOptions}\n            containerWidth=\"280px\"\n            usePortal={false}\n            calRefTop={false}\n            isAnimation={false}\n            usePopStyle={true}\n          >\n            {({\n              targetRef,\n              targetProps,\n              toggle,\n            }: DropdownTargetProps<HTMLDivElement>) => (\n              <IconButton\n                ref={targetRef}\n                onClick={toggle}\n                {...targetProps}\n                data-testid=\"three_dot_button\"\n              >\n                <Icon\n                  color=\"--icon-button-neutral-default\"\n                  name=\"more_m\"\n                  size={24}\n                />\n              </IconButton>\n            )}\n          </Dropdown>\n        </DropdownWrapper>\n      </RightWrapper>\n      <EventModal\n        isOpen={showCountDownModal}\n        onClose={() => setShowCountDownModal(false)}\n        countDown={true}\n        remainTime={remainTime}\n        {...countDownModalData}\n      />\n      <EventModal\n        isOpen={showLeaveModal}\n        onClose={() => setShowLeaveModal(false)}\n        onConfirm={handleLeaveEvent}\n        isConfirmButtonPrimary\n        {...attendeeLeaveEventModalData}\n      />\n    </Wrapper>\n  );\n};\n\nexport default AttendeeHeaderOld;\n","import {\n  Dropdown,\n  type DropdownTargetProps,\n  type DropdownItemType,\n  type DropdownValueType,\n} from '@/components/Dropdown';\nimport { Icon } from '@/components/Icon';\nimport { DropdownWrapper, IconButton } from './styles';\n\nexport const HeaderDropDownMenu = ({\n  options,\n  onSelectOption,\n}: {\n  onSelectOption: (item: DropdownValueType<string>) => void;\n  options: DropdownItemType<string>[];\n}) => (\n  <DropdownWrapper data-testid=\"dropdown_wrapper\">\n    <Dropdown\n      hideIcons={false}\n      closeOnSelect\n      placement=\"bottom-end\"\n      onSelectOption={(option) => onSelectOption(option)}\n      options={options}\n      containerWidth=\"280px\"\n      usePortal={false}\n      calRefTop={false}\n      isAnimation={false}\n      usePopStyle={true}\n    >\n      {({\n        targetRef,\n        targetProps,\n        toggle,\n      }: DropdownTargetProps<HTMLDivElement>) => (\n        <IconButton\n          ref={targetRef}\n          onClick={toggle}\n          {...targetProps}\n          data-testid=\"three_dot_button\"\n        >\n          <Icon color=\"--icon-button-neutral-default\" name=\"more_m\" size={24} />\n        </IconButton>\n      )}\n    </Dropdown>\n  </DropdownWrapper>\n);\n","import { useNavigate } from 'react-router';\nimport { useCallback, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from '@/components/Button';\nimport { Icon } from '@/components/Icon';\nimport { useWindowDimensions, useError } from '@/hooks';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useRefreshKnocks } from '@/features/socialHall/hooks';\nimport { breakpoints } from '@/constants/devices';\nimport { type IconProps } from '@/components/Icon/Icon';\nimport {\n  useSocialHallCallContext,\n  useSocialHallContext,\n  useSocialHallEventContext,\n} from '@/providers';\nimport { EventsStatus } from '@/apollo/generated/types';\nimport ROUTES from '@/constants/routes';\nimport { SubscriptionType } from '@/screens/SocialHall/types';\nimport {\n  MiddleWrapper,\n  MobileBuzzRoomMiddleWrapper,\n  RightWrapper,\n  Wrapper,\n} from './styles';\nimport {\n  type GroupNameWrapperProps,\n  type SocialHallHeaderProps,\n} from './types';\nimport {\n  hostNotBuzzMenuOption,\n  hostPostEventDesktopMenuOptions,\n  cohostNotBuzzMenuOption,\n} from './data';\nimport { EventModal } from '../EventModals/EventModal/EventModal';\nimport {\n  attendeeLeaveEventModalData,\n  cancelEventModalData,\n  endEventModalData,\n  hostFinishInstantEventModalData,\n  hostFinishMainEventModalData,\n} from '../EventModals/EventModal/data';\nimport LayoutToggle from './LayoutToggle';\nimport { HeaderCountDownModal } from './HeaderCountDownModal';\nimport { HeaderDropDownMenu } from './HeaderDropDownMenu';\nimport HeaderBottomSheet from './HeaderBottomSheet';\nimport { ToggleBuzzRoomBtn } from './ToggleBuzzRoomBtn';\nimport { HeaderTimer } from './HeaderTimer';\nimport { GroupName } from './GroupName';\nimport { SwitchCamera } from './SwitchCamera';\n\nconst GroupNameWrapper = ({\n  children,\n  isBuzzRoom,\n  showMobileView,\n}: GroupNameWrapperProps) =>\n  showMobileView ? (\n    <MobileBuzzRoomMiddleWrapper>{children}</MobileBuzzRoomMiddleWrapper>\n  ) : (\n    <MiddleWrapper isBuzzRoom={isBuzzRoom}>{children}</MiddleWrapper>\n  );\n\nexport const HostHeader = ({\n  onViewAttendees,\n  onInviteAttendees,\n  onChangeGroupName,\n}: SocialHallHeaderProps) => {\n  const { isUnregistered } = useAuth();\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { width } = useWindowDimensions();\n  const {\n    showRaiseHand,\n    isShareScreen,\n    onExitSocialHallCall,\n    isRemoteScreenSharing,\n    onSendSubscriptionMessage,\n  } = useSocialHallCallContext();\n  const { showBuzzRoom, setIsBlockNavigate } = useSocialHallContext();\n\n  const {\n    hostJoined,\n    eventDetails,\n    isMainEvent,\n    isPostEvent,\n    isEventOwner,\n    isEventHost,\n    onUpdateEventStatus,\n  } = useSocialHallEventContext();\n  const { logError } = useError();\n  const { userOwnKnocks, userActiveKnocks } = useRefreshKnocks();\n  const [loading, setLoading] = useState(false);\n  const [showCancelModal, setShowCancelModal] = useState<boolean>(false);\n  const [showFinishModal, setShowFinishModal] = useState<boolean>(false);\n  const [showEndModal, setShowEndModal] = useState<boolean>(false);\n  const [showLeaveModal, setShowLeaveModal] = useState<boolean>(false);\n  const isMobile = width < breakpoints.TABLET;\n\n  const isScreenSharing = useMemo(\n    () => isShareScreen || isRemoteScreenSharing,\n    [isShareScreen, isRemoteScreenSharing],\n  );\n\n  const isShowEndMainEventBtn = useMemo(\n    () =>\n      showBuzzRoom && isMobile && (isMainEvent || eventDetails?.isInstantEvent),\n    [showBuzzRoom, isMainEvent, isMobile, eventDetails?.isInstantEvent],\n  );\n  const isEndEvent = useMemo(\n    () =>\n      EventsStatus.PostEvent === eventDetails?.status ||\n      EventsStatus.PostEventEnded === eventDetails?.status,\n    [eventDetails?.status],\n  );\n\n  const initialNotifications = useMemo(\n    () => [...(userOwnKnocks?.data ?? []), ...(userActiveKnocks?.data ?? [])],\n    [userOwnKnocks?.data, userActiveKnocks?.data],\n  );\n\n  const selectableOptions = useMemo(() => {\n    let options = hostNotBuzzMenuOption;\n    if (!isEventOwner) {\n      options = cohostNotBuzzMenuOption;\n    }\n    if (isEndEvent) {\n      options = hostPostEventDesktopMenuOptions;\n    }\n\n    const updatedOptions = options?.map((option) => ({\n      ...option,\n      icon: (\n        <Icon\n          name={option.iconName as IconProps['name']}\n          color={option.labelColor}\n          size={24}\n        />\n      ),\n    }));\n    return updatedOptions;\n  }, [isEndEvent, isEventOwner]);\n\n  const onUpdateEvent = useCallback(\n    async (status: EventsStatus) => {\n      try {\n        setLoading(true);\n        await onUpdateEventStatus(status);\n      } catch (err) {\n        logError(err, '');\n      } finally {\n        setLoading(false);\n      }\n    },\n    [logError, onUpdateEventStatus],\n  );\n\n  const onStartMainEvent = useCallback(async () => {\n    await onUpdateEvent(EventsStatus.PreLive);\n  }, [onUpdateEvent]);\n\n  const leaveAndCancelEvent = useCallback(async () => {\n    setShowEndModal(false);\n    setShowCancelModal(false);\n    setIsBlockNavigate(false);\n    let status = eventDetails?.recurring\n      ? EventsStatus.Expired\n      : EventsStatus.Cancelled;\n    if (isPostEvent) {\n      status = EventsStatus.PostEventEnded;\n    }\n    await onUpdateEventStatus?.(status);\n  }, [\n    setIsBlockNavigate,\n    isPostEvent,\n    onUpdateEventStatus,\n    eventDetails?.recurring,\n  ]);\n\n  const handleLeaveEvent = useCallback(async () => {\n    setShowLeaveModal(false);\n    await onExitSocialHallCall();\n    navigate(isUnregistered ? ROUTES.GUEST_HOME : ROUTES.HOME_NOUM);\n  }, [onExitSocialHallCall, navigate, isUnregistered]);\n\n  const onFinishEvent = useCallback(async () => {\n    onSendSubscriptionMessage({\n      type: SubscriptionType.UPDATE_EVENT_STATUS,\n      data: EventsStatus.Cancelled,\n    });\n    setShowFinishModal(false);\n    // @TODO: for instant call event are canceled, but for Networking post event will start\n    await onUpdateEvent(EventsStatus.Cancelled);\n  }, [onUpdateEvent, onSendSubscriptionMessage]);\n\n  const handleSelectOptions = useCallback(\n    (option) => {\n      switch (option.value) {\n        case 'start_main_event':\n          onStartMainEvent();\n          break;\n        case 'invite_users':\n          onInviteAttendees?.();\n          break;\n        case 'leave_and_cancel_event':\n          setShowCancelModal(true);\n          break;\n        case 'see_event_attendees':\n          onViewAttendees?.();\n          break;\n        case 'leave_event':\n          setShowLeaveModal(true);\n          break;\n        case 'copy_the_event_link':\n          navigator.clipboard.writeText(`${window.location}` ?? '');\n          break;\n      }\n    },\n    [onStartMainEvent, onInviteAttendees, onViewAttendees],\n  );\n\n  const hostEndEventModalProps = useMemo(\n    () =>\n      isMainEvent\n        ? hostFinishMainEventModalData\n        : hostFinishInstantEventModalData,\n    [isMainEvent],\n  );\n\n  const showMobileView = useMemo(\n    () =>\n      isMobile &&\n      showBuzzRoom &&\n      !(initialNotifications.length > 0 || hostJoined) &&\n      !(isMainEvent && isEventHost && showRaiseHand),\n    [\n      isMobile,\n      showBuzzRoom,\n      initialNotifications.length,\n      hostJoined,\n      isMainEvent,\n      isEventHost,\n      showRaiseHand,\n    ],\n  );\n\n  return (\n    <Wrapper isRow={showBuzzRoom || isMainEvent} data-testid=\"host_header\">\n      <ToggleBuzzRoomBtn />\n      <GroupNameWrapper\n        showMobileView={showMobileView}\n        isBuzzRoom={showBuzzRoom}\n      >\n        <GroupName\n          onChangeGroupName={onChangeGroupName}\n          showMobileView={showMobileView}\n        />\n        <HeaderTimer />\n      </GroupNameWrapper>\n\n      <RightWrapper isBuzzRoom={showBuzzRoom}>\n        {eventDetails?.status === EventsStatus.PreEvent && !showBuzzRoom && (\n          <Button\n            size={isMobile ? 'full_small' : 'small'}\n            primary\n            loading={loading}\n            onClick={() => onStartMainEvent()}\n            leftIcon={\n              <Icon\n                color=\"--icon-button-neutral-alt-default\"\n                name=\"wave_left_m\"\n                size={24}\n              />\n            }\n            rightIcon={\n              <Icon\n                color=\"--icon-button-neutral-alt-default\"\n                name=\"wave_right_m\"\n                size={24}\n              />\n            }\n            data-testid=\"start_event_button\"\n          >\n            {t('noumena.social_hall.start_main_event')}\n          </Button>\n        )}\n\n        <SwitchCamera />\n\n        {showBuzzRoom && (\n          <>\n            {!isMobile && <LayoutToggle isScreenSharing={isScreenSharing} />}\n            <HeaderBottomSheet\n              onChangeGroupName={onChangeGroupName}\n              isScreenSharing={isScreenSharing}\n            />\n          </>\n        )}\n\n        {isShowEndMainEventBtn && (\n          <Button\n            size=\"small\"\n            intent=\"negative\"\n            loading={loading}\n            onClick={() => setShowFinishModal(true)}\n            data-testid=\"finish_main_event\"\n          >\n            {isMobile\n              ? t('noumena.socialhall.end_the_event')\n              : t('noumena.social_hall.finish_main_event')}\n          </Button>\n        )}\n\n        {isEndEvent && !showBuzzRoom && (\n          <Button\n            size=\"full_small\"\n            secondary\n            intent=\"negative\"\n            loading={loading}\n            onClick={() => setShowEndModal(true)}\n            data-testid=\"end_event\"\n          >\n            {t('noumena.social_hall.end_event')}\n          </Button>\n        )}\n\n        {!showBuzzRoom && (\n          <HeaderDropDownMenu\n            options={selectableOptions}\n            onSelectOption={handleSelectOptions}\n          />\n        )}\n      </RightWrapper>\n      {!eventDetails?.isInstantEvent && <HeaderCountDownModal />}\n      <EventModal\n        isOpen={showCancelModal}\n        onClose={() => setShowCancelModal(false)}\n        onConfirm={leaveAndCancelEvent}\n        {...cancelEventModalData}\n      />\n      <EventModal\n        isOpen={showFinishModal}\n        onClose={() => setShowFinishModal(false)}\n        onConfirm={onFinishEvent}\n        {...hostEndEventModalProps}\n      />\n      <EventModal\n        isOpen={showEndModal}\n        onClose={() => setShowEndModal(false)}\n        onConfirm={leaveAndCancelEvent}\n        {...endEventModalData}\n      />\n      <EventModal\n        isOpen={showLeaveModal}\n        onClose={() => setShowLeaveModal(false)}\n        onConfirm={handleLeaveEvent}\n        isConfirmButtonPrimary\n        {...attendeeLeaveEventModalData}\n      />\n    </Wrapper>\n  );\n};\n","import { useNavigate } from 'react-router';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from '@/components/Button';\nimport { Icon } from '@/components/Icon';\nimport { useWindowDimensions, useError } from '@/hooks';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useHeaderTimer, useRefreshKnocks } from '@/features/socialHall/hooks';\nimport { breakpoints } from '@/constants/devices';\nimport { Dropdown, type DropdownTargetProps } from '@/components/Dropdown';\nimport { type IconProps } from '@/components/Icon/Icon';\nimport {\n  useSocialHallCallContext,\n  useSocialHallContext,\n  useSocialHallEventContext,\n} from '@/providers';\nimport { EventsStatus } from '@/apollo/generated/types';\nimport ROUTES from '@/constants/routes';\nimport { EventModal } from '../EventModals/EventModal/EventModal';\nimport {\n  attendeeLeaveEventModalData,\n  cancelEventModalData,\n  countDownModalData,\n  endEventModalData,\n  hostFinishMainEventModalData,\n} from '../EventModals/EventModal/data';\nimport {\n  hostNotBuzzMenuOption,\n  hostBuzzMobileMenuOptions,\n  hostBuzzDesktopMenuOptions,\n  hostPostEventDesktopMenuOptions,\n  cohostNotBuzzMenuOption,\n} from './data';\nimport { type SocialHallHeaderProps } from './types';\nimport {\n  CounterClockSpan,\n  IconButton,\n  MiddleWrapper,\n  MobileBuzzRoomMiddleWrapper,\n  RightWrapper,\n  TitleSpan,\n  TitleWrapper,\n  Wrapper,\n  DropdownWrapper,\n} from './styles';\nimport { EventTag } from './EventTag';\nimport { ToggleBuzzRoomBtn } from './ToggleBuzzRoomBtn';\n\nexport const HostHeaderOld = ({\n  onViewAttendees,\n  onInviteAttendees,\n  onChangeGroupName,\n}: SocialHallHeaderProps) => {\n  const { isUnregistered } = useAuth();\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { width } = useWindowDimensions();\n  const { onLeaveCall, showRaiseHand, onExitSocialHallCall } =\n    useSocialHallCallContext();\n  const { showBuzzRoom, setShowBuzzRoom, setIsBlockNavigate } =\n    useSocialHallContext();\n\n  const {\n    groupName,\n    hostJoined,\n    onUpdateEventStatus,\n    eventDetails,\n    isMainEvent,\n    isPostEvent,\n    isEndedEvent,\n    isEventOwner,\n    isEventHost,\n    isPreEvent,\n  } = useSocialHallEventContext();\n  const { logError } = useError();\n  const { formattedTime, remainTime } = useHeaderTimer();\n  const { userOwnKnocks, userActiveKnocks } = useRefreshKnocks();\n  const [loading, setLoading] = useState(false);\n  const [isLoadingLeaveCall, setIsLoadingLeaveCall] = useState(false);\n  const [showCancelModal, setShowCancelModal] = useState<boolean>(false);\n  const [showFinishModal, setShowFinishModal] = useState<boolean>(false);\n  const [showEndModal, setShowEndModal] = useState<boolean>(false);\n  const [showLeaveModal, setShowLeaveModal] = useState<boolean>(false);\n  const [showCountDownModal, setShowCountDownModal] = useState<boolean>(false);\n  const isDesktop = width >= breakpoints.LAPTOP_L;\n  const isMobile = width < breakpoints.TABLET;\n\n  const onLeaveQuietly = useCallback(async () => {\n    try {\n      setIsLoadingLeaveCall(true);\n      setShowBuzzRoom(false);\n      await onLeaveCall();\n      setIsLoadingLeaveCall(false);\n    } catch (err) {\n      logError(err, '', false);\n    }\n  }, [logError, onLeaveCall, setShowBuzzRoom]);\n\n  const isEndMainEvent = useMemo(\n    () => showBuzzRoom && isMainEvent,\n    [showBuzzRoom, isMainEvent],\n  );\n  const isEndEvent = useMemo(\n    () =>\n      EventsStatus.PostEvent === eventDetails?.status ||\n      EventsStatus.PostEventEnded === eventDetails?.status,\n    [eventDetails?.status],\n  );\n\n  const initialNotifications = useMemo(\n    () => [...(userOwnKnocks?.data ?? []), ...(userActiveKnocks?.data ?? [])],\n    [userOwnKnocks?.data, userActiveKnocks?.data],\n  );\n\n  const selectableOptions = useMemo(() => {\n    let options = hostNotBuzzMenuOption;\n    if (!isEventOwner) {\n      options = cohostNotBuzzMenuOption;\n    }\n    if (isEndEvent) {\n      options = hostPostEventDesktopMenuOptions;\n    } else if (showBuzzRoom && !isMainEvent) {\n      options = isMobile\n        ? hostBuzzMobileMenuOptions\n        : hostBuzzDesktopMenuOptions;\n    }\n\n    const updatedOptions = options?.map((option) => ({\n      ...option,\n      icon: (\n        <Icon\n          name={option.iconName as IconProps['name']}\n          color={option.labelColor}\n          size={24}\n        />\n      ),\n    }));\n    return updatedOptions;\n  }, [showBuzzRoom, isMobile, isMainEvent, isEndEvent, isEventOwner]);\n\n  const onUpdateEvent = useCallback(\n    async (status: EventsStatus) => {\n      try {\n        setLoading(true);\n        await onUpdateEventStatus(status);\n      } catch (err) {\n        logError(err, '');\n      } finally {\n        setLoading(false);\n      }\n    },\n    [logError, onUpdateEventStatus],\n  );\n\n  const onStartMainEvent = useCallback(async () => {\n    await onUpdateEvent(EventsStatus.PreLive);\n  }, [onUpdateEvent]);\n\n  const onStartPostEvent = useCallback(async () => {\n    await onUpdateEvent(EventsStatus.PostEvent);\n    onLeaveQuietly();\n  }, [onUpdateEvent, onLeaveQuietly]);\n\n  const leaveAndCancelEvent = useCallback(async () => {\n    setShowEndModal(false);\n    setShowCancelModal(false);\n    setIsBlockNavigate(false);\n    let status = EventsStatus.Cancelled;\n    if (isPostEvent) {\n      status = EventsStatus.PostEventEnded;\n    }\n    await onUpdateEventStatus?.(status);\n  }, [setIsBlockNavigate, isPostEvent, onUpdateEventStatus]);\n\n  const handleLeaveEvent = useCallback(async () => {\n    setShowLeaveModal(false);\n    await onExitSocialHallCall();\n    navigate(isUnregistered ? ROUTES.GUEST_HOME : ROUTES.HOME_NOUM);\n  }, [onExitSocialHallCall, navigate, isUnregistered]);\n\n  const finishEvent = useCallback(async () => {\n    setShowFinishModal(false);\n    await onStartPostEvent();\n  }, [onStartPostEvent]);\n\n  const handleSelectOptions = useCallback(\n    (option) => {\n      switch (option.value) {\n        case 'start_main_event':\n          onStartMainEvent();\n          break;\n        case 'change_room_name':\n          onChangeGroupName?.();\n          break;\n        case 'invite_users':\n          onInviteAttendees?.();\n          break;\n        case 'leave_and_cancel_event':\n          setShowCancelModal(true);\n          break;\n        case 'see_event_attendees':\n          onViewAttendees?.();\n          break;\n        case 'leave_event':\n          setShowLeaveModal(true);\n          break;\n        case 'copy_the_event_link':\n          navigator.clipboard.writeText(`${window.location}` ?? '');\n          break;\n      }\n    },\n    [onStartMainEvent, onChangeGroupName, onInviteAttendees, onViewAttendees],\n  );\n\n  useEffect(() => {\n    if (\n      eventDetails?.status === EventsStatus.PreLive &&\n      remainTime / 1000 < 4 &&\n      remainTime / 1000 > 3\n    ) {\n      setShowCountDownModal(true);\n    }\n  }, [eventDetails?.status, remainTime]);\n\n  return (\n    <Wrapper isRow={showBuzzRoom || isMainEvent} data-testid=\"host_header\">\n      <ToggleBuzzRoomBtn />\n      {isMobile &&\n      showBuzzRoom &&\n      !(initialNotifications.length > 0 || hostJoined) &&\n      !(isMainEvent && isEventHost && showRaiseHand) ? (\n        <MobileBuzzRoomMiddleWrapper>\n          <EventTag />\n          <TitleWrapper>\n            <TitleSpan\n              font=\"body-xl-bold\"\n              isGray={showBuzzRoom && !groupName && !isMainEvent}\n            >\n              {showBuzzRoom && !isMainEvent\n                ? groupName || t('noumena.social_hall.add_group_name')\n                : eventDetails?.title}\n            </TitleSpan>\n          </TitleWrapper>\n          {!isPostEvent && !isEndedEvent && (\n            <CounterClockSpan\n              font=\"systemInfo-m\"\n              isCountDown={\n                eventDetails?.status === EventsStatus.PreLive ||\n                eventDetails?.status === EventsStatus.PostEventEnded\n              }\n              data-testid=\"counter_clock\"\n            >\n              {formattedTime}\n            </CounterClockSpan>\n          )}\n        </MobileBuzzRoomMiddleWrapper>\n      ) : (\n        <MiddleWrapper isBuzzRoom={showBuzzRoom}>\n          <TitleWrapper>\n            <EventTag />\n            <TitleSpan\n              font=\"body-xl-bold\"\n              isGray={showBuzzRoom && !groupName && !isMainEvent}\n            >\n              {showBuzzRoom && !isMainEvent\n                ? groupName || t('noumena.social_hall.add_group_name')\n                : eventDetails?.title}\n            </TitleSpan>\n          </TitleWrapper>\n          {!isPostEvent && !isEndedEvent && (\n            <CounterClockSpan\n              font=\"systemInfo-m\"\n              isCountDown={\n                eventDetails?.status === EventsStatus.PreLive ||\n                eventDetails?.status === EventsStatus.PostEventEnded\n              }\n              data-testid=\"counter_clock\"\n            >\n              {formattedTime}\n            </CounterClockSpan>\n          )}\n        </MiddleWrapper>\n      )}\n\n      <RightWrapper isBuzzRoom={showBuzzRoom}>\n        {eventDetails?.status === EventsStatus.PreEvent &&\n          (!showBuzzRoom || (showBuzzRoom && isDesktop)) && (\n            <Button\n              size={isMobile ? 'full_small' : 'small'}\n              primary\n              loading={loading}\n              onClick={() => onStartMainEvent()}\n              leftIcon={\n                <Icon\n                  color=\"--icon-button-neutral-alt-default\"\n                  name=\"wave_left_m\"\n                  size={24}\n                />\n              }\n              rightIcon={\n                <Icon\n                  color=\"--icon-button-neutral-alt-default\"\n                  name=\"wave_right_m\"\n                  size={24}\n                />\n              }\n              data-testid=\"start_event_button\"\n            >\n              {t('noumena.social_hall.start_main_event')}\n            </Button>\n          )}\n\n        {(isPreEvent || isPostEvent) && showBuzzRoom && (\n          <Button\n            size=\"small\"\n            secondary\n            loading={isLoadingLeaveCall}\n            onClick={() => onLeaveQuietly()}\n            leftIcon={<Icon imageIconName=\"leave_quietly\" size={24} />}\n            data-testid=\"leave_quietly_button\"\n          >\n            {t('noumena.social_hall.leave_quietly')}\n          </Button>\n        )}\n\n        {isEndMainEvent && (\n          <Button\n            size=\"small\"\n            secondary\n            loading={loading}\n            onClick={() => setShowFinishModal(true)}\n            data-testid=\"finish_main_event\"\n          >\n            {t('noumena.social_hall.finish_main_event')}\n          </Button>\n        )}\n\n        {isEndEvent && (\n          <Button\n            size=\"full_small\"\n            secondary\n            intent=\"negative\"\n            loading={loading}\n            onClick={() => setShowEndModal(true)}\n            data-testid=\"end_event\"\n          >\n            {t('noumena.social_hall.end_event')}\n          </Button>\n        )}\n\n        <DropdownWrapper data-testid=\"dropdown_wrapper\">\n          <Dropdown\n            hideIcons={false}\n            closeOnSelect\n            placement=\"bottom-end\"\n            onSelectOption={(option) => handleSelectOptions(option)}\n            options={selectableOptions}\n            containerWidth=\"280px\"\n            usePortal={false}\n            calRefTop={false}\n            isAnimation={false}\n            usePopStyle={true}\n          >\n            {({\n              targetRef,\n              targetProps,\n              toggle,\n            }: DropdownTargetProps<HTMLDivElement>) => (\n              <IconButton\n                ref={targetRef}\n                onClick={toggle}\n                {...targetProps}\n                data-testid=\"three_dot_button\"\n              >\n                <Icon\n                  color=\"--icon-button-neutral-default\"\n                  name=\"more_m\"\n                  size={24}\n                />\n              </IconButton>\n            )}\n          </Dropdown>\n        </DropdownWrapper>\n      </RightWrapper>\n      <EventModal\n        isOpen={showCountDownModal}\n        onClose={() => setShowCountDownModal(false)}\n        countDown={true}\n        remainTime={remainTime}\n        {...countDownModalData}\n      />\n      <EventModal\n        isOpen={showCancelModal}\n        onClose={() => setShowCancelModal(false)}\n        onConfirm={leaveAndCancelEvent}\n        {...cancelEventModalData}\n      />\n      <EventModal\n        isOpen={showFinishModal}\n        onClose={() => setShowFinishModal(false)}\n        onConfirm={finishEvent}\n        {...hostFinishMainEventModalData}\n      />\n      <EventModal\n        isOpen={showEndModal}\n        onClose={() => setShowEndModal(false)}\n        onConfirm={leaveAndCancelEvent}\n        {...endEventModalData}\n      />\n      <EventModal\n        isOpen={showLeaveModal}\n        onClose={() => setShowLeaveModal(false)}\n        onConfirm={handleLeaveEvent}\n        isConfirmButtonPrimary\n        {...attendeeLeaveEventModalData}\n      />\n    </Wrapper>\n  );\n};\n\nexport default HostHeaderOld;\n","import { useLaunchDarkly } from '@/hooks/launchDarkly';\nimport { AttendeeHeader as AttendeeHeaderNew } from './AttendeeHeader';\nimport { AttendeeHeaderOld } from './AttendeeHeaderOld';\nimport { HostHeader as HostHeaderNew } from './HostHeader';\nimport { HostHeaderOld } from './HostHeaderOld';\nimport { type SocialHallHeaderProps } from './types';\n\nconst HostHeader = (props: SocialHallHeaderProps) => {\n  const {\n    flags: { socialHallVideoCall },\n  } = useLaunchDarkly();\n\n  return socialHallVideoCall ? (\n    <HostHeaderNew {...props} />\n  ) : (\n    <HostHeaderOld {...props} />\n  );\n};\n\nconst AttendeeHeader = (props: SocialHallHeaderProps) => {\n  const {\n    flags: { socialHallVideoCall },\n  } = useLaunchDarkly();\n\n  return socialHallVideoCall ? (\n    <AttendeeHeaderNew {...props} />\n  ) : (\n    <AttendeeHeaderOld {...props} />\n  );\n};\n\nexport { HostHeader, AttendeeHeader };\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n  useRef,\n} from 'react';\nimport { useLaunchDarkly } from '@/hooks/launchDarkly';\nimport {\n  useSocialHallCallContext,\n  useSocialHallContext,\n  useSocialHallEventContext,\n} from '@/providers';\nimport {\n  type UserOutput,\n  type Maybe,\n  type Knock,\n} from '@/apollo/generated/types';\nimport {\n  type ICameraVideoTrack,\n  type IRemoteVideoTrack,\n  type UID,\n} from '@/facade/agora';\nimport { useToggle, useBreakpoints } from '@/hooks';\nimport { useAuth } from '@/features/auth/contexts';\nimport {\n  useActiveSpeaker,\n  useCheckIfEventHasSocialHallAttendees,\n  useUserOffline,\n} from '@/features/socialHall/hooks';\nimport { SocialHallChat } from '../SocialHallChat/SocialHallChat';\nimport {\n  Wrapper,\n  MainViewWrapper,\n  MainEventUserWrapper,\n  KnockNotificationWrapper,\n  ScrollViewWrapper,\n} from './styles';\nimport { ControlGroupMainEventNotification } from '../ControllerGroup/ControlGroupMainEventNotification';\nimport { KnockNotification } from '../MiniPlayerAndNotification/KnockNotification/KnockNotification';\nimport { MediaPreview } from '../MediaPreview';\nimport {\n  type VideoGalleryItem,\n  VideoMasonryCarousel,\n} from '../VideoMasonryCarousel';\nimport { SpeakerView } from '../SpeakerView';\nimport { SocialHallMembers } from '../SocialHallMembers';\nimport { ScreenShare } from '../ScreenShare';\nimport { AttendeeHeader, HostHeader } from '../Header';\nimport { ChangeGroupNameModal } from '../ChangeGroupName';\nimport { BrowserSupport } from '../BrowserSupport';\nimport { ControlPanel } from '../ControlPanel';\n\ninterface Document {\n  webkitFullscreenElement?: Element;\n}\n\nexport type EventRoomProps = {\n  initialNotifications: Maybe<Knock>[];\n};\n\nexport const EventRoom = ({ initialNotifications }: EventRoomProps) => {\n  const { flags } = useLaunchDarkly();\n  const {\n    activeSocialHallGroup,\n    socialHallAttendeesAndGroups,\n    isGridLayout,\n    showBuzzRoom,\n    showBrowserSupportBanner,\n  } = useSocialHallContext();\n\n  const {\n    messages,\n    showRaiseHand,\n    isCameraEnable,\n    localVideoTrack,\n    remoteUserVideoFeeds,\n    agoraConnectionState,\n    screenSharingLocalUserFeed,\n    screenSharingRemoteUserFeed,\n  } = useSocialHallCallContext();\n\n  const [connectionLostUsers] = useUserOffline();\n\n  const { user } = useAuth();\n  const [isNewMessage, setIsNewMessage] = useState(false);\n  const { activeSpeaker } = useActiveSpeaker();\n  const mediaPreviewRef = useRef<HTMLDivElement>(null);\n  const [showChatPanel, setShowChatPanel] = useState(false);\n  const [showMembersPanel, setMembersPanel] = useState(false);\n  const { hostJoined, isMainEvent, isEventHost, eventDetails } =\n    useSocialHallEventContext();\n  const [showChangeGroupName, setShowChangeGroupName] = useToggle(false);\n  const [updatedActiveSpeaker, setUpdatedActiveSpeaker] = useState<UID>();\n  const [maxVideoPerPage, setMaxVideoPerPage] = useState<number>(9);\n  const { isTablet, isLaptop, isDesktop } = useBreakpoints();\n\n  const onSetMaxVideoPerPage = useCallback(() => {\n    setMaxVideoPerPage(isLaptop || isDesktop ? 12 : isTablet ? 6 : 3);\n  }, [isLaptop, isTablet, isDesktop]);\n\n  const isReconnecting = useMemo(\n    () => agoraConnectionState === 'RECONNECTING',\n    [agoraConnectionState],\n  );\n\n  const getVideoFeed = useCallback(\n    (userId: string): IRemoteVideoTrack | ICameraVideoTrack | null => {\n      if (user?._id === userId) {\n        return isCameraEnable ? localVideoTrack! : null;\n      }\n\n      return remoteUserVideoFeeds?.[userId]!;\n    },\n    [localVideoTrack, remoteUserVideoFeeds, user?._id, isCameraEnable],\n  );\n\n  const screenSharingRemoteFeedPlayer = useMemo(\n    () => `screen-sharing-feed_${user?._id}_${user?._id}`,\n    [user?._id],\n  );\n\n  const isInvited = useCallback(\n    (attendeeId) =>\n      activeSocialHallGroup?.invitedAsSpeakers?.findIndex(\n        (speaker) => speaker?.invitee?._id === attendeeId,\n      ) !== -1,\n    [activeSocialHallGroup],\n  );\n\n  const isFullScreen =\n    !!document.fullscreenElement ||\n    !!(document as Document).webkitFullscreenElement;\n\n  const attendees = useMemo(() => {\n    const activeUsers = (\n      (activeSocialHallGroup?.users as UserOutput[]) || []\n    ).filter((activeUser) => !connectionLostUsers.includes(activeUser._id));\n    if (isMainEvent) {\n      return activeUsers?.filter((attendee) =>\n        activeSocialHallGroup?.speakers?.includes(attendee?._id!),\n      );\n    }\n    return activeUsers;\n  }, [\n    isMainEvent,\n    connectionLostUsers,\n    activeSocialHallGroup?.users,\n    activeSocialHallGroup?.speakers,\n  ]);\n\n  const hasSocialHallAttendees = useCheckIfEventHasSocialHallAttendees(\n    socialHallAttendeesAndGroups,\n    activeSocialHallGroup,\n  );\n\n  const onSetShowChatPanelHandler = useCallback((show: boolean) => {\n    setShowChatPanel(show);\n    setIsNewMessage(false);\n    setMembersPanel(false);\n  }, []);\n\n  const onSetShowMembersPanelHandler = useCallback((show: boolean) => {\n    setMembersPanel(show);\n    setShowChatPanel(false);\n  }, []);\n\n  const isShowChatPanel = useMemo(\n    () => showChatPanel && !hasSocialHallAttendees,\n    [showChatPanel, hasSocialHallAttendees],\n  );\n\n  const isScreenShareFeed = useMemo(\n    () =>\n      !!screenSharingLocalUserFeed || !!screenSharingRemoteUserFeed?.hasVideo,\n    [screenSharingLocalUserFeed, screenSharingRemoteUserFeed],\n  );\n\n  useEffect(() => {\n    if (\n      !!messages?.length &&\n      messages[(messages?.length ?? 0) - 1]?.uid !== user?._id\n    ) {\n      setIsNewMessage(true);\n    }\n  }, [messages, user?._id]);\n\n  useEffect(() => {\n    if (screenSharingLocalUserFeed) {\n      screenSharingLocalUserFeed.play(screenSharingRemoteFeedPlayer);\n    }\n    if (screenSharingRemoteUserFeed?.hasVideo) {\n      screenSharingRemoteUserFeed.videoTrack?.play(\n        screenSharingRemoteFeedPlayer,\n      );\n    }\n  }, [\n    screenSharingLocalUserFeed,\n    screenSharingRemoteUserFeed,\n    screenSharingRemoteFeedPlayer,\n  ]);\n\n  const attendeeVideos = useMemo(() => {\n    const galleryItem: VideoGalleryItem[] = [];\n    attendees?.forEach((attendee) => {\n      galleryItem.push({\n        id: attendee._id,\n        element: (\n          <MediaPreview\n            key={attendee._id}\n            isFullScreen={isFullScreen}\n            isReconnecting={isReconnecting}\n            isMinimalView={isShowChatPanel}\n            speakerCarouselPortal={false}\n            {...(attendee as UserOutput)}\n          />\n        ),\n      });\n    });\n    return galleryItem;\n  }, [attendees, isShowChatPanel, isReconnecting, isFullScreen]);\n\n  useEffect(() => {\n    if (isMainEvent && showChangeGroupName) setShowChangeGroupName();\n  }, [isMainEvent, setShowChangeGroupName, showChangeGroupName]);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setUpdatedActiveSpeaker(activeSpeaker);\n    }, 100);\n    return () => clearTimeout(timer);\n  }, [activeSpeaker]);\n\n  useEffect(() => {\n    onSetMaxVideoPerPage();\n  }, [onSetMaxVideoPerPage]);\n\n  return (\n    <>\n      <BrowserSupport />\n      <Wrapper\n        isBannerVisible={!!showBrowserSupportBanner}\n        data-testid=\"buzzroom_wrapper\"\n        showRaiseHand={showRaiseHand}\n      >\n        <MainViewWrapper data-testid=\"main_wrapper\" isMainEvent={isMainEvent}>\n          {isEventHost && eventDetails?._id && showBuzzRoom && (\n            <HostHeader onChangeGroupName={setShowChangeGroupName} />\n          )}\n          {!isEventHost && eventDetails?._id && showBuzzRoom && (\n            <AttendeeHeader onChangeGroupName={setShowChangeGroupName} />\n          )}\n          <ScrollViewWrapper id=\"fullScreenElement\" isFullScreen={isFullScreen}>\n            <MainEventUserWrapper\n              isSpeakerView={isFullScreen || !isGridLayout || isScreenShareFeed}\n              ref={mediaPreviewRef}\n              isFullScreen={isFullScreen}\n            >\n              {isScreenShareFeed && (\n                <ScreenShare\n                  userFeeds={attendees}\n                  isFullScreen={isFullScreen}\n                  fullScreenElemId=\"fullScreenElement\"\n                  screenShareElemId={screenSharingRemoteFeedPlayer}\n                  clientWidth={mediaPreviewRef.current?.clientWidth ?? 0}\n                  clientHeight={mediaPreviewRef.current?.clientHeight ?? 0}\n                  showChatPanel={showChatPanel}\n                  showMembersPanel={showMembersPanel}\n                />\n              )}\n              {isGridLayout && !isScreenShareFeed && (\n                <VideoMasonryCarousel\n                  gutterSpace={8}\n                  videos={attendeeVideos}\n                  maxVideoPerPage={maxVideoPerPage}\n                  clientWidth={mediaPreviewRef.current?.clientWidth ?? 0}\n                  clientHeight={mediaPreviewRef.current?.clientHeight ?? 0}\n                  showChatPanel={showChatPanel}\n                  showMembersPanel={showMembersPanel}\n                />\n              )}\n              {(!isGridLayout || isScreenShareFeed) && (\n                <SpeakerView\n                  speakerFeed={\n                    attendees?.find((attendee) =>\n                      updatedActiveSpeaker\n                        ? attendee._id === updatedActiveSpeaker\n                        : attendee._id === attendees[0]._id,\n                    )!\n                  }\n                  activeSpeaker={activeSpeaker}\n                  userFeeds={attendees as UserOutput[]}\n                  isMinimalView={isShowChatPanel}\n                  isInvited={isInvited}\n                  videoFeed={getVideoFeed}\n                  clientWidth={mediaPreviewRef.current?.clientWidth ?? 0}\n                  clientHeight={mediaPreviewRef.current?.clientHeight ?? 0}\n                  showChatPanel={showChatPanel}\n                  showMembersPanel={showMembersPanel}\n                  isFullScreen={isFullScreen}\n                />\n              )}\n            </MainEventUserWrapper>\n          </ScrollViewWrapper>\n          {showBuzzRoom && (\n            <ControlPanel\n              isReconnecting={isReconnecting}\n              showMembersPanel={showMembersPanel}\n              isNewMessage={isNewMessage}\n              showChatPanel={showChatPanel}\n              onToggleChat={() => {\n                onSetShowChatPanelHandler(!showChatPanel);\n                setIsNewMessage(false);\n              }}\n              onToggleMember={() => {\n                onSetShowMembersPanelHandler(!showMembersPanel);\n              }}\n            />\n          )}\n          <KnockNotificationWrapper>\n            {initialNotifications.map((notification) => (\n              <KnockNotification\n                key={notification?._id}\n                notification={notification!}\n                isSingle={initialNotifications.length === 1}\n              />\n            ))}\n            {hostJoined && (\n              <KnockNotification\n                isSingle={initialNotifications.length === 1}\n                isHostJoined\n              />\n            )}\n          </KnockNotificationWrapper>\n        </MainViewWrapper>\n        {flags.socialHallMessaging && (\n          <SocialHallChat\n            show={isShowChatPanel}\n            disabled={isReconnecting}\n            onClose={() => onSetShowChatPanelHandler(!showChatPanel)}\n          />\n        )}\n        <SocialHallMembers\n          isInvited={isInvited}\n          show={showMembersPanel}\n          onlineAttendees={attendees}\n          onClose={() => onSetShowMembersPanelHandler(!showMembersPanel)}\n        />\n      </Wrapper>\n      <ChangeGroupNameModal\n        isOpen={showChangeGroupName && !isMainEvent}\n        onClose={setShowChangeGroupName}\n      />\n      {isMainEvent && <ControlGroupMainEventNotification />}\n    </>\n  );\n};\n","import { useCallback } from 'react';\nimport { t } from 'i18next';\nimport { breakpoints } from '@/constants/devices';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useLaunchDarkly, useToggle, useWindowDimensions } from '@/hooks';\nimport { Icon } from '@/components/Icon';\nimport {\n  useSocialHallCallContext,\n  useSocialHallContext,\n  useSocialHallEventContext,\n} from '@/providers';\nimport {\n  useCheckIfEventHasSocialHallAttendees,\n  useRaiseHandApi,\n} from '@/features/socialHall/hooks';\nimport {\n  BadgeContainer,\n  ChatNotification,\n  ChatNotificationContainer,\n  ControlIconWrapper,\n  ControlWrapper,\n  RaiseHandsBadge,\n  RaiseHandWrapper,\n} from './styles';\nimport { type ControllerGroupProps } from './types';\nimport { HandsUpModal } from '../EventModals/HandsUpModal';\n\nexport const ControllerGroup = ({\n  onShowChat,\n  isNewMessage,\n  onShowRaiseHands,\n}: ControllerGroupProps): JSX.Element => {\n  const { flags } = useLaunchDarkly();\n  const { isMuted, toggleMuteCall } = useSocialHallCallContext();\n  const {\n    askHandsUpOnce,\n    setAskHandsUpOnce,\n    activeSocialHallGroup,\n    socialHallAttendeesAndGroups,\n  } = useSocialHallContext();\n\n  const {\n    showRaiseHand,\n    isShareScreen,\n    raisedHandUsers,\n    onToggleScreenSharing,\n    screenSharingRemoteUserFeed,\n  } = useSocialHallCallContext();\n\n  const hasSocialHallAttendees = useCheckIfEventHasSocialHallAttendees(\n    socialHallAttendeesAndGroups,\n    activeSocialHallGroup,\n  );\n\n  const { isPreEvent, isPostEvent, isMainEvent, isEventHost, isEventSpeaker } =\n    useSocialHallEventContext();\n\n  const { toggleRaisedHand } = useRaiseHandApi();\n  const { user } = useAuth();\n  const [isOpen, toggle] = useToggle(false);\n  const { width } = useWindowDimensions();\n  const isTablet = width < breakpoints.LAPTOP;\n\n  const handleHandsUp = useCallback(() => {\n    if (!askHandsUpOnce) setAskHandsUpOnce(true);\n    toggle();\n    toggleRaisedHand(!showRaiseHand, user?._id!);\n  }, [\n    askHandsUpOnce,\n    showRaiseHand,\n    setAskHandsUpOnce,\n    toggle,\n    toggleRaisedHand,\n    user?._id,\n  ]);\n\n  return (\n    <ControlWrapper data-testid=\"control_wrapper\">\n      {isMainEvent && !isEventHost && !isEventSpeaker ? (\n        <>\n          {isTablet && (\n            <ControlIconWrapper cursorAllowed onClick={onShowChat}>\n              <Icon\n                name=\"message_m\"\n                size={24}\n                color=\"--icon-button-neutral-default\"\n              />\n            </ControlIconWrapper>\n          )}\n          <RaiseHandWrapper\n            onClick={() => toggleRaisedHand(!showRaiseHand, user?._id!)}\n            isRaiseHand={showRaiseHand}\n            font=\"button-m\"\n            colorToken=\"--text-button-neutral-default\"\n          >\n            <Icon imageIconName=\"raise_hand_m\" size={24} />\n            {t(\n              showRaiseHand\n                ? 'noumena.social_hall.hands_up.hand_raised'\n                : 'noumena.social_hall.hands_up.raise_hand',\n            )}\n          </RaiseHandWrapper>\n        </>\n      ) : (\n        <>\n          {isTablet && flags.socialHallMessaging && !hasSocialHallAttendees && (\n            <ControlIconWrapper cursorAllowed onClick={onShowChat}>\n              {isNewMessage && (\n                <ChatNotificationContainer>\n                  <ChatNotification />\n                </ChatNotificationContainer>\n              )}\n              <Icon\n                name=\"message_m\"\n                size={24}\n                color=\"--icon-button-neutral-default\"\n              />\n            </ControlIconWrapper>\n          )}\n          <ControlIconWrapper cursorAllowed onClick={() => toggleMuteCall()}>\n            <Icon\n              name={isMuted ? 'mic_off_m' : 'mic_on_m'}\n              size={24}\n              color={\n                isMuted\n                  ? '--icon-button-danger-secondary-default'\n                  : '--icon-button-neutral-default'\n              }\n            />\n          </ControlIconWrapper>\n          {((isMainEvent && (isEventHost || isEventSpeaker)) ||\n            isPreEvent ||\n            isPostEvent) && (\n            <ControlIconWrapper\n              cursorAllowed\n              onClick={() => onToggleScreenSharing()}\n            >\n              <Icon\n                name={\n                  isShareScreen || screenSharingRemoteUserFeed?.uid\n                    ? 'share_content_off_m'\n                    : 'share_content_m'\n                }\n                size={24}\n                color=\"--icon-button-neutral-default\"\n              />\n            </ControlIconWrapper>\n          )}\n          {!isMainEvent && (\n            <ControlIconWrapper\n              cursorAllowed\n              onClick={\n                askHandsUpOnce\n                  ? () => toggleRaisedHand(!showRaiseHand, user?._id!)\n                  : toggle\n              }\n              backgroundColor={\n                showRaiseHand\n                  ? 'var(--bg-button-brand-primary-default)'\n                  : 'var(--bg-button-neutral-alt-default)'\n              }\n            >\n              <Icon imageIconName=\"raise_hand_m\" size={24} />\n            </ControlIconWrapper>\n          )}\n          {isTablet && isEventHost && isMainEvent && (\n            <ControlIconWrapper cursorAllowed onClick={onShowRaiseHands}>\n              <Icon\n                name=\"raise_hand_2_outline_m\"\n                size={24}\n                color=\"--icon-button-neutral-default\"\n              />\n              {raisedHandUsers.length > 0 && (\n                <BadgeContainer>\n                  <RaiseHandsBadge text={`${raisedHandUsers.length}`} />\n                </BadgeContainer>\n              )}\n            </ControlIconWrapper>\n          )}\n          <HandsUpModal\n            isOpen={isOpen}\n            onClose={toggle}\n            onConfirm={handleHandsUp}\n          />\n        </>\n      )}\n    </ControlWrapper>\n  );\n};\n","import { useState, useCallback } from 'react';\nimport { getFullName } from '@/utils/fullName';\nimport { Avatar } from '@/components/Avatar/Avatar';\nimport { Button } from '@/components/Button';\nimport { Icon } from '@/components/Icon';\nimport { useRaiseHandApi } from '@/features/socialHall/hooks';\nimport {\n  AvatarWrapper,\n  ButtonWrapper,\n  ItemWrapper,\n  NameSpan,\n  NameWrapper,\n  TitleSpan,\n} from './styles';\nimport { type SideBarUserItemProps } from '../types';\n\nexport const SideBarUserItem = ({ userInfo }: SideBarUserItemProps) => {\n  const { onDeclineRaiseHand, onAcceptRaiseHand } = useRaiseHandApi();\n  const [declineLoading, setDeclineLoading] = useState(false);\n  const [acceptLoading, setAcceptLoading] = useState(false);\n\n  const handleAccept = useCallback(async () => {\n    setAcceptLoading(true);\n    await onAcceptRaiseHand(userInfo._id);\n    setAcceptLoading(false);\n  }, [onAcceptRaiseHand, userInfo._id]);\n\n  const handleReject = useCallback(async () => {\n    setDeclineLoading(true);\n    await onDeclineRaiseHand(userInfo._id);\n    setDeclineLoading(false);\n  }, [onDeclineRaiseHand, userInfo._id]);\n\n  return (\n    <ItemWrapper>\n      <AvatarWrapper data-testid=\"avatar_wrapper\">\n        <Avatar url={userInfo?.profile?.profilePicture || ''} />\n      </AvatarWrapper>\n      <NameWrapper>\n        <NameSpan\n          colorToken=\"--text-tablecell-header-neutral-highlighted\"\n          font=\"body-l-bold\"\n        >\n          {getFullName(\n            userInfo?.firstName,\n            userInfo?.middleName,\n            userInfo?.lastName,\n          )}\n        </NameSpan>\n        <TitleSpan\n          font=\"body-m\"\n          colorToken=\"--text-tablecell-body-neutral-default\"\n        >\n          {userInfo.title}\n        </TitleSpan>\n      </NameWrapper>\n      <ButtonWrapper>\n        <Button\n          data-testid=\"close_button\"\n          size=\"small\"\n          onClick={handleReject}\n          icon={\n            <Icon\n              name=\"close_m\"\n              size={24}\n              color=\"--icon-button-neutral-default\"\n            />\n          }\n          loading={declineLoading}\n        />\n        <Button\n          data-testid=\"accept_button\"\n          primary\n          size=\"small\"\n          onClick={handleAccept}\n          icon={\n            <Icon\n              name=\"tick_m\"\n              size={24}\n              color=\"--icon-button-neutral-alt-default\"\n            />\n          }\n          loading={acceptLoading}\n        />\n      </ButtonWrapper>\n    </ItemWrapper>\n  );\n};\n","import { useEffect, useMemo } from 'react';\nimport { first } from 'lodash';\nimport { useTranslation } from 'react-i18next';\n\nimport { Icon } from '@/components/Icon';\nimport { useSocialHallCallContext, useSocialHallContext } from '@/providers';\nimport { SideBarUserItem } from './SideBarUserItem/SideBarUserListItem';\nimport {\n  ListWrapper,\n  SideBarWrapper,\n  EmptyMessageSpan,\n  EmptyScreenWrapper,\n  SideBarHeader,\n  SideBarHeaderWrapper,\n  CloseButton,\n} from './styles';\n\nexport type RaiseHandsSideBarProps = {\n  onClose: () => void;\n};\n\nexport const RaiseHandsSideBar = ({ onClose }: RaiseHandsSideBarProps) => {\n  const { t } = useTranslation();\n\n  const { socialHallAttendeesAndGroups } = useSocialHallContext();\n\n  const { raisedHandUsers, setRaisedHandUsers } = useSocialHallCallContext();\n\n  useEffect(() => {\n    setRaisedHandUsers([]);\n  }, [setRaisedHandUsers]);\n\n  const groupAttendees = useMemo(\n    () =>\n      first(\n        socialHallAttendeesAndGroups?.data?.socialHallGroups?.data,\n      )?.users?.filter((attendee) => raisedHandUsers?.includes(attendee?._id!)),\n    [raisedHandUsers, socialHallAttendeesAndGroups],\n  );\n\n  return (\n    <SideBarWrapper data-testid=\"side_bar_wrapper\">\n      <SideBarHeaderWrapper>\n        <SideBarHeader\n          colorToken=\"--text-appbar-neutral-default\"\n          font=\"body-l-bold\"\n        >\n          {t('noumena.social_hall.raised_hands')}\n        </SideBarHeader>\n        <CloseButton onClick={onClose}>\n          <Icon\n            color=\"--icon-card-neutral-highlighted\"\n            name=\"close_m\"\n            size={24}\n          />\n        </CloseButton>\n      </SideBarHeaderWrapper>\n      {groupAttendees?.length ? (\n        <ListWrapper data-testid=\"list_wrapper\">\n          {groupAttendees.map((attendee) => (\n            <SideBarUserItem key={attendee?._id} userInfo={attendee!} />\n          ))}\n        </ListWrapper>\n      ) : (\n        <EmptyScreenWrapper>\n          <Icon\n            name=\"raise_hand_2_outline_m\"\n            size={144}\n            color=\"--icon-card-placeholder-neutral-default\"\n          />\n          <EmptyMessageSpan\n            colorToken=\"--text-placeholder-neutral-default\"\n            font=\"body-xl\"\n          >\n            {t('noumena.social_hall.no_raise_hand')}\n          </EmptyMessageSpan>\n        </EmptyScreenWrapper>\n      )}\n    </SideBarWrapper>\n  );\n};\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLaunchDarkly } from '@/hooks/launchDarkly';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useWindowDimensions } from '@/hooks';\nimport { breakpoints } from '@/constants/devices';\nimport {\n  useSocialHallCallContext,\n  useSocialHallContext,\n  useSocialHallEventContext,\n} from '@/providers';\nimport {\n  type UserOutput,\n  type Maybe,\n  type Knock,\n} from '@/apollo/generated/types';\nimport { Icon } from '@/components/Icon';\nimport { useCheckIfEventHasSocialHallAttendees } from '@/features/socialHall/hooks';\nimport { SocialHallChat } from '../SocialHallChat/SocialHallChat';\nimport { ControllerGroup } from '../ControllerGroup/ControllerGroup';\n\nimport { AttendeeInCall } from '../AttendeeInCall';\nimport {\n  Wrapper,\n  StageHeader,\n  AttendeeHeader,\n  MainViewWrapper,\n  StageUserWrapper,\n  BuzzRoomUsersContainer,\n  BuzzRoomUsersWrapper,\n  MainEventUserWrapper,\n  ScreenSharingElement,\n  ScreenShareWrapper,\n  ScreenShareTitleSpan,\n  ScreenShareNameSpan,\n  CloseIconButton,\n  FullScreenWrapper,\n  KnockNotificationWrapper,\n  ScrollViewWrapper,\n  ControllerWrapper,\n  TempChatContainer,\n} from './stylesOld';\n\nimport { RaiseHandsSideBar } from '../RaiseHandsSideBar/RaiseHandsSideBar';\nimport { ControlGroupMainEventNotification } from '../ControllerGroup/ControlGroupMainEventNotification';\nimport { KnockNotification } from '../MiniPlayerAndNotification/KnockNotification/KnockNotification';\n\ninterface HTMLElement {\n  webkitRequestFullScreen?: () => Promise<void>;\n  requestFullscreen?: () => Promise<void>;\n}\n\ninterface Document {\n  webkitFullscreenElement?: Element;\n  exitFullscreen?: () => Promise<void>;\n  webkitExitFullscreen?: () => Promise<void>;\n}\n\ntype EventRoomProps = {\n  initialNotifications: Maybe<Knock>[];\n};\n\nexport const EventRoomOld = ({ initialNotifications }: EventRoomProps) => {\n  const { flags } = useLaunchDarkly();\n  const { t } = useTranslation();\n  const {\n    stageAttendees,\n    audienceAttendees,\n    activeSocialHallGroup,\n    socialHallAttendeesAndGroups,\n  } = useSocialHallContext();\n\n  const {\n    messages,\n    mutedUsers,\n    showRaiseHand,\n    agoraConnectionState,\n    screenSharingLocalUserFeed,\n    screenSharingRemoteUserFeed,\n  } = useSocialHallCallContext();\n\n  const isReconnecting = useMemo(\n    () => agoraConnectionState === 'RECONNECTING',\n    [agoraConnectionState],\n  );\n\n  const { hostJoined, isMainEvent, isEventHost } = useSocialHallEventContext();\n  const { user } = useAuth();\n  const { width } = useWindowDimensions();\n  const isTablet = width < breakpoints.LAPTOP;\n  const [isNewMessage, setIsNewMessage] = useState(false);\n  const [showChatPanel, setShowChatPanel] = useState(false);\n  const [screenShareUserName, setScreenShareUserName] = useState<string>();\n\n  const screenSharingRemoteFeedPlayer = useMemo(\n    () => `screen-sharing-feed_${user?._id}`,\n    [user?._id],\n  );\n\n  const isInvited = useCallback(\n    (attendeeId) =>\n      activeSocialHallGroup?.invitedAsSpeakers?.findIndex(\n        (speaker) => speaker?.invitee?._id === attendeeId,\n      ) !== -1,\n    [activeSocialHallGroup],\n  );\n\n  const onClickShareScreen = useCallback(() => {\n    const el = document.getElementById('screenShareWrapper') as HTMLElement;\n    // Disable fullscreen mode for user who is sharing screen\n    if (screenSharingLocalUserFeed) {\n      return;\n    }\n    if (el?.requestFullscreen) {\n      el.requestFullscreen();\n    } else if (el?.webkitRequestFullScreen) {\n      el.webkitRequestFullScreen();\n    }\n  }, [screenSharingLocalUserFeed]);\n\n  const onCloseShareScreen = useCallback(() => {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if ((document as Document)?.webkitExitFullscreen) {\n      (document as Document)?.webkitExitFullscreen?.();\n    }\n  }, []);\n\n  const isFullScreen =\n    !!document.fullscreenElement ||\n    !!(document as Document).webkitFullscreenElement;\n\n  const attendees = useMemo(\n    () => activeSocialHallGroup?.users,\n    [activeSocialHallGroup?.users],\n  );\n\n  const hasSocialHallAttendees = useCheckIfEventHasSocialHallAttendees(\n    socialHallAttendeesAndGroups,\n    activeSocialHallGroup,\n  );\n\n  const onSetShowChatPanelHandler = useCallback((show: boolean) => {\n    setShowChatPanel(show);\n    setIsNewMessage(false);\n  }, []);\n\n  useEffect(() => {\n    if (\n      !!messages?.length &&\n      messages[(messages?.length ?? 0) - 1]?.uid !== user?._id\n    ) {\n      setIsNewMessage(true);\n    }\n  }, [messages, user?._id]);\n\n  useEffect(() => {\n    if (screenSharingLocalUserFeed) {\n      screenSharingLocalUserFeed.play(screenSharingRemoteFeedPlayer);\n      setScreenShareUserName(user?.firstName!);\n    }\n    if (screenSharingRemoteUserFeed?.hasVideo) {\n      screenSharingRemoteUserFeed.videoTrack?.play(\n        screenSharingRemoteFeedPlayer,\n      );\n      setScreenShareUserName(\n        activeSocialHallGroup?.users?.filter(\n          (userFeed) => userFeed?._id === screenSharingRemoteUserFeed.uid,\n        )[0]?.firstName || '',\n      );\n    }\n  }, [\n    user?.firstName,\n    activeSocialHallGroup,\n    screenSharingLocalUserFeed,\n    screenSharingRemoteUserFeed,\n    screenSharingRemoteFeedPlayer,\n  ]);\n\n  return (\n    <>\n      <Wrapper data-testid=\"buzzroom_wrapper\" showRaiseHand={showRaiseHand}>\n        {isMainEvent &&\n        isEventHost &&\n        (!isTablet || (isTablet && showRaiseHand)) ? (\n          <RaiseHandsSideBar onClose={() => {}} />\n        ) : isTablet ? null : (\n          <TempChatContainer />\n        )}\n        <MainViewWrapper data-testid=\"main_wrapper\" isMainEvent={isMainEvent}>\n          <ScrollViewWrapper>\n            <ScreenShareWrapper\n              visible={\n                !!screenSharingRemoteUserFeed?.hasVideo ||\n                !!screenSharingLocalUserFeed\n              }\n              id=\"screenShareWrapper\"\n            >\n              {isFullScreen ? (\n                <FullScreenWrapper>\n                  <CloseIconButton onClick={onCloseShareScreen}>\n                    <Icon\n                      color=\"--icon-button-neutral-default\"\n                      name=\"close_m\"\n                      size={24}\n                    />\n                  </CloseIconButton>\n                  <ControllerGroup\n                    isNewMessage={isNewMessage}\n                    onShowChat={() => {\n                      setIsNewMessage(false);\n                    }}\n                    onShowRaiseHands={() => {}}\n                  />\n                </FullScreenWrapper>\n              ) : (\n                <ScreenShareTitleSpan\n                  font=\"body-m\"\n                  colorToken=\"--text-tablecell-body-neutral-default\"\n                >\n                  <ScreenShareNameSpan\n                    font=\"body-m-bold\"\n                    colorToken=\"--text-tablecell-body-neutral-default\"\n                  >\n                    {screenShareUserName}\n                  </ScreenShareNameSpan>\n                  {t('noumena.social_hall.is_sharing_screen')}\n                </ScreenShareTitleSpan>\n              )}\n\n              <ScreenSharingElement\n                isFullScreen={isFullScreen}\n                id={screenSharingRemoteFeedPlayer}\n                onClick={onClickShareScreen}\n              />\n            </ScreenShareWrapper>\n            {isMainEvent ? (\n              <MainEventUserWrapper>\n                <StageHeader\n                  font=\"body-m\"\n                  colorToken=\"--text-tablecell-body-neutral-default\"\n                  screenSharing={!!screenSharingRemoteUserFeed?.hasVideo}\n                >\n                  {t('noumena.social_hall.stage')}\n                </StageHeader>\n                <StageUserWrapper>\n                  {stageAttendees?.map((attendee) => {\n                    if (!attendee?._id) {\n                      return null;\n                    }\n                    return (\n                      <AttendeeInCall\n                        key={attendee?._id}\n                        isMuted={mutedUsers.includes(attendee?._id!)}\n                        {...attendee}\n                      />\n                    );\n                  })}\n                </StageUserWrapper>\n                <AttendeeHeader\n                  font=\"body-m-bold\"\n                  colorToken=\"--text-tablecell-body-neutral-default\"\n                >\n                  {t('noumena.social_hall.audience')}\n                </AttendeeHeader>\n                <StageUserWrapper>\n                  {audienceAttendees?.map((attendee) => {\n                    if (!attendee?._id) {\n                      return null;\n                    }\n                    return (\n                      <AttendeeInCall\n                        isAudience={true}\n                        key={attendee?._id}\n                        isInvited={isInvited(attendee?._id)}\n                        isMuted={false}\n                        {...attendee}\n                      />\n                    );\n                  })}\n                </StageUserWrapper>\n              </MainEventUserWrapper>\n            ) : (\n              <BuzzRoomUsersContainer>\n                <BuzzRoomUsersWrapper>\n                  {attendees?.map((attendee) => {\n                    if (!attendee?._id) {\n                      return null;\n                    }\n                    return (\n                      <AttendeeInCall\n                        key={attendee?._id}\n                        isMuted={mutedUsers.includes(attendee?._id!)}\n                        {...(attendee as UserOutput)}\n                      />\n                    );\n                  })}\n                </BuzzRoomUsersWrapper>\n              </BuzzRoomUsersContainer>\n            )}\n          </ScrollViewWrapper>\n          <ControllerWrapper />\n          <ControllerGroup\n            isNewMessage={isNewMessage}\n            onShowChat={() => {\n              onSetShowChatPanelHandler(true);\n            }}\n            onShowRaiseHands={() => {\n              onSetShowChatPanelHandler(false);\n            }}\n          />\n          <KnockNotificationWrapper>\n            {initialNotifications.map((notification) => (\n              <KnockNotification\n                key={notification?._id}\n                notification={notification!}\n                isSingle={initialNotifications.length === 1}\n              />\n            ))}\n            {hostJoined && (\n              <KnockNotification\n                key={new Date().getTime()}\n                isSingle={initialNotifications.length === 1}\n                isHostJoined\n              />\n            )}\n          </KnockNotificationWrapper>\n        </MainViewWrapper>\n        {(!isTablet || (isTablet && showChatPanel)) &&\n        flags.socialHallMessaging &&\n        !hasSocialHallAttendees ? (\n          <SocialHallChat\n            show={true}\n            disabled={isReconnecting}\n            onClose={() => onSetShowChatPanelHandler(false)}\n          />\n        ) : isTablet ? null : (\n          <TempChatContainer />\n        )}\n      </Wrapper>\n      {isMainEvent && <ControlGroupMainEventNotification />}\n    </>\n  );\n};\n","import { useLaunchDarkly } from '@/hooks/launchDarkly';\nimport {\n  EventRoom as EventRoomComponent,\n  type EventRoomProps,\n} from './EventRoom';\nimport { EventRoomOld } from './EventRoomOld';\n\nexport const EventRoom = (props: EventRoomProps) => {\n  const {\n    flags: { socialHallVideoCall },\n  } = useLaunchDarkly();\n\n  return socialHallVideoCall ? (\n    <EventRoomComponent {...props} />\n  ) : (\n    <EventRoomOld {...props} />\n  );\n};\n","import { useMemo, useState } from 'react';\nimport { Dropdown, type DropdownTargetProps } from '@/components/Dropdown';\nimport { Button } from '@/components/Button';\nimport { TSpan } from '@/components/Typography';\nimport { Icon } from '@/components/Icon';\nimport { Spacer } from '@/layout';\nimport { DropdownLabelWrapper, LabelIconWrapper } from './styles';\nimport { type MediaDropdownProps } from './types';\n\nexport const MediaDropdown = ({\n  options,\n  onSelect,\n  disabled,\n  children,\n  selectedId,\n  prefixIcon,\n  emptyText,\n}: MediaDropdownProps) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const minHeight = useMemo(() => `${options.length * 50}px`, [options]);\n  const iconName = useMemo(\n    () => (isOpen ? 'chevron_small_up_m' : 'chevron_small_down_m'),\n    [isOpen],\n  );\n\n  const selectedLabel = useMemo(\n    () => options.find(({ value }) => value === selectedId)?.label,\n    [options, selectedId],\n  );\n\n  const onOpenHandler = () => setIsOpen(!!options.length);\n\n  const ddIconColor = useMemo(\n    () =>\n      options.length\n        ? '--icon-input-neutral-default'\n        : '--icon-input-neutral-disabled',\n    [options],\n  );\n\n  return (\n    <Dropdown\n      isOpen={isOpen}\n      hideIcons={true}\n      options={options}\n      usePortal={true}\n      disabled={disabled}\n      closeOnSelect={true}\n      minHeight={minHeight}\n      inputValue={selectedId}\n      observerMinHeight=\"1px\"\n      onOpen={onOpenHandler}\n      onClose={() => setIsOpen(false)}\n      noAvailableOptionsText={emptyText}\n      onSelectOption={(option) => onSelect(option.key)}\n    >\n      {({ toggle, targetRef }: DropdownTargetProps<HTMLButtonElement>) => (\n        <Button ref={targetRef} size=\"full_small\" textOnly onClick={toggle}>\n          <DropdownLabelWrapper>\n            <LabelIconWrapper>\n              <Icon\n                name={prefixIcon}\n                size={24}\n                color=\"--icon-input-neutral-default\"\n              />\n              <Spacer width={8} />\n              {selectedLabel ? (\n                <TSpan overflow=\"ellipsis\" font=\"body-m\">\n                  {selectedLabel}\n                </TSpan>\n              ) : (\n                <TSpan\n                  colorToken=\"--text-input-neutral-disabled\"\n                  overflow=\"ellipsis\"\n                  font=\"body-m\"\n                >\n                  {emptyText}\n                </TSpan>\n              )}\n            </LabelIconWrapper>\n            <Spacer width={16} />\n            <Icon size={24} color={ddIconColor} name={iconName} />\n          </DropdownLabelWrapper>\n          {children}\n        </Button>\n      )}\n    </Dropdown>\n  );\n};\n","import { useLayoutEffect, useRef } from 'react';\nimport { type EqualizerProps } from './types';\nimport { EqualizerElement, EqualizerWrapper } from './styles';\n\nexport const Equalizer = ({ deviceId, setTracks }: EqualizerProps) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  useLayoutEffect(() => {\n    let microphoneSource: MediaStreamAudioSourceNode | null = null;\n    // Create an audio context and an AnalyserNode\n    const audioContext = new AudioContext();\n    const analyserNode = audioContext.createAnalyser();\n    const stopMicrophone = () => {\n      if (microphoneSource) {\n        const tracks = microphoneSource.mediaStream.getTracks();\n        tracks.forEach((track) => track.stop());\n        microphoneSource.disconnect(analyserNode);\n        microphoneSource = null;\n      }\n    };\n    if (canvasRef.current) {\n      // Maximum canvasWidth/100\n      const audioSensivity = 2.5;\n      const canvas = canvasRef.current;\n\n      // Get the microphone audio stream\n      navigator.mediaDevices\n        .getUserMedia({ audio: { deviceId } })\n        .then((stream) => {\n          // Connect the microphone audio stream to the AnalyserNode\n          microphoneSource = audioContext.createMediaStreamSource(stream);\n          if (microphoneSource) {\n            setTracks((tracks) => [\n              ...tracks,\n              ...((\n                microphoneSource as MediaStreamAudioSourceNode\n              ).mediaStream.getTracks() || []),\n            ]);\n          }\n          microphoneSource.connect(analyserNode);\n        })\n        .catch((err) => {\n          // eslint-disable-next-line no-console\n          console.error('Failed to get microphone audio:', err);\n        });\n\n      // Set up the AnalyserNode\n      analyserNode.fftSize = 2048; // Set the FFT size\n      const bufferLength = analyserNode.frequencyBinCount;\n      const dataArray = new Uint8Array(bufferLength); // Create a buffer to hold the frequency data\n\n      const canvasContext = canvas.getContext('2d');\n\n      // Set up the bar colors and spacing\n      const barHeight = 28;\n      const barColor = '#00CA7A';\n\n      const drawBar = () => {\n        if (!canvasContext) return;\n        // Get the frequency data and update the canvas\n        analyserNode.getByteFrequencyData(dataArray);\n        canvasContext?.clearRect(0, 0, canvas.width, canvas.height);\n        const barWidth = canvas.width * (dataArray[0] / 255) * audioSensivity;\n        canvasContext.fillStyle = barColor;\n        canvasContext.fillRect(\n          0,\n          canvas.height / 2 - barHeight / 2,\n          barWidth,\n          barHeight,\n        );\n        requestAnimationFrame(drawBar);\n      };\n\n      drawBar();\n    }\n    return () => {\n      stopMicrophone();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [deviceId]);\n\n  return (\n    <EqualizerWrapper>\n      <EqualizerElement ref={canvasRef} />\n    </EqualizerWrapper>\n  );\n};\n","import { t } from 'i18next';\nimport { useCallback } from 'react';\n\nimport { useWindowDimensions } from '@/hooks';\nimport { useSocialHallContext } from '@/providers';\nimport { breakpoints } from '@/constants/devices';\nimport { type MediaDeviceId } from '@/screens/SocialHall/types';\n\nimport { Equalizer } from './Equalizer';\nimport { MediaDropdown } from './MediaDropdown';\nimport { type AvailableMediaSelectionProps } from './types';\nimport { HardwareControlItem, MediaOptionsWrapper } from './styles';\n\nexport const AvailableMediaSelection = ({\n  setTracks,\n  isMuteAudio,\n  allConnectedDevices,\n  onVideoDeviceChange,\n}: AvailableMediaSelectionProps) => {\n  const { width } = useWindowDimensions();\n  const isMobile = width < breakpoints.TABLET;\n\n  const { setDeviceId, deviceId } = useSocialHallContext();\n\n  const onSelectMedia = useCallback(\n    (device: Partial<MediaDeviceId>) => {\n      setDeviceId({ ...deviceId, ...device } as MediaDeviceId);\n    },\n    [setDeviceId, deviceId],\n  );\n\n  const onVideoDeviceChangeHandler = (camera: string) => {\n    onVideoDeviceChange(camera);\n    onSelectMedia({ camera });\n  };\n\n  return (\n    <MediaOptionsWrapper>\n      <HardwareControlItem>\n        <MediaDropdown\n          emptyText={t('noumena.social_hall.hardware_testing_mic_not_found')}\n          prefixIcon=\"mic_on_m\"\n          options={allConnectedDevices?.audioDevices ?? []}\n          onSelect={(microphone) => onSelectMedia({ microphone })}\n          selectedId={deviceId?.microphone ?? ''}\n        >\n          {!isMuteAudio && !isMobile && (\n            <Equalizer\n              setTracks={setTracks}\n              deviceId={deviceId?.microphone ?? ''}\n            />\n          )}\n        </MediaDropdown>\n      </HardwareControlItem>\n\n      <HardwareControlItem>\n        <MediaDropdown\n          emptyText={t(\n            'noumena.social_hall.hardware_testing_speaker_not_found',\n          )}\n          prefixIcon=\"volume_on_m\"\n          options={allConnectedDevices?.speakerDevices ?? []}\n          onSelect={(speaker) => onSelectMedia({ speaker })}\n          selectedId={deviceId?.speaker ?? ''}\n        />\n      </HardwareControlItem>\n\n      <HardwareControlItem>\n        <MediaDropdown\n          emptyText={t('noumena.social_hall.hardware_testing_camera_not_found')}\n          prefixIcon=\"webcam_on_m\"\n          options={allConnectedDevices?.cameraDevices ?? []}\n          onSelect={onVideoDeviceChangeHandler}\n          selectedId={deviceId?.camera ?? ''}\n        />\n      </HardwareControlItem>\n    </MediaOptionsWrapper>\n  );\n};\n","import { useState } from 'react';\nimport { t } from 'i18next';\nimport { TSpan } from '@/components/Typography';\nimport { Spacer } from '@/layout';\nimport { Button } from '@/components/Button';\nimport { Checkbox } from '@/components/Checkbox';\nimport { Icon } from '@/components/Icon';\nimport { useUpdateUserMediaTestingForShMutation } from '@/apollo/graphql';\nimport { useAuth } from '@/features/auth/contexts';\nimport { type MediaContentProps } from './types';\nimport {\n  ButtonContainer,\n  MediaMessageWrapper,\n  SkipHardwareTestingWrapper,\n} from './styles';\n\nexport const MediaContent = ({\n  onCompleted,\n  onLeave,\n  showLoader,\n}: MediaContentProps) => {\n  const { refetchUserData } = useAuth();\n  const [skipHardwareTesting, setSkipHardwareTesting] = useState(false);\n  const [updateUserMediaTestingForSh] =\n    useUpdateUserMediaTestingForShMutation();\n\n  const onCompleteHandler = async () => {\n    if (skipHardwareTesting) {\n      await updateUserMediaTestingForSh({\n        variables: { accept: skipHardwareTesting },\n      });\n      refetchUserData();\n    }\n    onCompleted();\n  };\n\n  return (\n    <MediaMessageWrapper>\n      <TSpan\n        colorToken=\"--text-modal-header-neutral-default\"\n        font=\"heading-s-bold\"\n      >\n        {t('noumena.social_hall.hardware_testing_heading')}\n      </TSpan>\n      <Spacer height={8} />\n      <TSpan colorToken=\"--text-modal-neutral-default\" font=\"body-l\">\n        {t('noumena.social_hall.hardware_testing_title')}\n      </TSpan>\n      <Spacer height={24} />\n      <ButtonContainer>\n        <Button\n          tertiary\n          intent=\"negative\"\n          size=\"full\"\n          loading={showLoader}\n          onClick={() => onLeave()}\n          data-testid=\"leave-event-button\"\n        >\n          {t('noumena.social_hall.hardware_testing_cancel_btn')}\n        </Button>\n        <Spacer width={16} />\n        <Button\n          primary\n          size=\"full\"\n          loading={showLoader}\n          onClick={onCompleteHandler}\n          data-testid=\"join-event-button\"\n        >\n          {t('noumena.social_hall.hardware_testing_success_btn')}\n        </Button>\n      </ButtonContainer>\n      <Spacer height={32} />\n      <SkipHardwareTestingWrapper>\n        <Checkbox\n          onChange={() => setSkipHardwareTesting(!skipHardwareTesting)}\n          isChecked={skipHardwareTesting}\n          icon={\n            <Icon\n              name=\"tick_m\"\n              size={skipHardwareTesting ? 24 : 0}\n              color=\"--icon-checkbox-neutral-alt-default\"\n            />\n          }\n        />\n        <Spacer width={8} />\n        <TSpan colorToken=\"--text-tablecell-header-neutral-default\">\n          {t('noumena.social_hall.hardware_testing_skip_future_test')}\n        </TSpan>\n      </SkipHardwareTestingWrapper>\n    </MediaMessageWrapper>\n  );\n};\n","import { Spacer } from '@/layout';\nimport { MuteControl, VideoControl } from '../ControlPanel';\nimport { MediaControlWrapper } from './styles';\nimport { type MediaControlButtonProps } from './types';\n\nexport const MediaControlButton = ({\n  muteAudio,\n  muteVideo,\n  isLoading,\n  onToggleAudio,\n  onToggleVideo,\n  hasAudioPermission,\n  hasVideoPermission,\n}: MediaControlButtonProps) => (\n  <MediaControlWrapper>\n    <MuteControl\n      isError={!hasAudioPermission}\n      isMuted={muteAudio}\n      onToggle={onToggleAudio}\n    />\n    <Spacer width={16} />\n    <VideoControl\n      isLoading={isLoading && hasVideoPermission}\n      isCameraEnable={!muteVideo}\n      onToggle={onToggleVideo}\n      isError={!hasVideoPermission}\n    />\n  </MediaControlWrapper>\n);\n","import { useAuth } from '@/features/auth/contexts';\nimport { Avatar } from '@/components/Avatar/Avatar';\nimport { UserProfilePictureWrapper } from './styles';\n\nexport const UserProfilePicture = () => {\n  const { user } = useAuth();\n  return (\n    <UserProfilePictureWrapper>\n      <Avatar\n        url={user?.profile?.profilePicture!}\n        size=\"XL\"\n        width={80}\n        height={80}\n      />\n    </UserProfilePictureWrapper>\n  );\n};\n","import { t } from 'i18next';\n\nimport {\n  type MediaDeviceId,\n  type ConnectedDevices,\n  type MediaDeviceLabel,\n} from '@/screens/SocialHall/types';\nimport { isFireFox } from '@/utils/browserDetect';\nimport { type DropdownValueType } from '@/components/Dropdown';\nimport { SocialHallMediaUtils } from '@/utils/socialHallMedia';\n\nimport { type MediaAllConnectedDevices } from './types';\n\nexport const defaultAsSystemOption = (\n  deviceId: string = 'default',\n): DropdownValueType<string>[] => [\n  {\n    type: 'value',\n    value: deviceId,\n    key: deviceId,\n    label: t('noumena.social_hall.default_hardware'),\n  },\n];\n\nexport const formatDeviceForDropdown = (\n  devices: MediaDeviceLabel[],\n): DropdownValueType<string>[] =>\n  devices.map((device) => ({\n    type: 'value',\n    value: device.deviceId,\n    key: device.deviceId,\n    label: SocialHallMediaUtils.formatDeviceLabel(device.label),\n  }));\n\nexport const formatAllConnectedDeviceForDropdown = (\n  devices: ConnectedDevices,\n  deviceId: MediaDeviceId,\n): MediaAllConnectedDevices => ({\n  audioDevices: formatDeviceForDropdown(devices.audioDevices),\n  cameraDevices: formatDeviceForDropdown(devices.cameraDevices),\n  speakerDevices: isFireFox()\n    ? defaultAsSystemOption(deviceId.speaker)\n    : formatDeviceForDropdown(devices.speakerDevices),\n});\n","import { Header } from '@/components/Header';\nimport { MainHeader } from '@/layout/MainHeader';\nimport { breakpoints } from '@/constants/devices';\nimport ROUTES from '@/constants/routes';\nimport {\n  useMediaDeviceUpdated,\n  useMediaPermissionPopup,\n} from '@/features/socialHall/hooks';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useWindowDimensions } from '@/hooks';\nimport { Spacer } from '@/layout';\nimport { useSocialHallCallContext, useSocialHallContext } from '@/providers';\nimport { type MediaDeviceId } from '@/screens/SocialHall/types';\nimport { cleanList } from '@/utils/list';\nimport { SocialHallMediaUtils } from '@/utils/socialHallMedia';\nimport { UserUtil } from '@/utils/user';\nimport { type IMicrophoneAudioTrack } from 'agora-rtc-sdk-ng';\nimport {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { useNavigate } from 'react-router';\nimport { BrowserSupport } from '../BrowserSupport';\nimport { MediaPermissionNotification } from '../MediaPermissionNotification';\nimport { AvailableMediaSelection } from './AvailableMediaSelection';\nimport { MediaContent } from './MediaContent';\nimport { MediaControlButton } from './MediaControlButton';\nimport { UserProfilePicture } from './UserProfilePicture';\nimport { formatAllConnectedDeviceForDropdown } from './helper';\nimport {\n  BannerWrapper,\n  Layout,\n  MediaWrapper,\n  VideoElement,\n  VideoWrapper,\n  Wrapper,\n} from './styles';\nimport { type MediaAllConnectedDevices, type Track } from './types';\n\nconst videoElementId = 'video_element';\n\nexport const InitialSettings = () => {\n  const navigate = useNavigate();\n  const videoElementRef = useRef<HTMLVideoElement>(null);\n  const { user, onSetAcceptedSkipMediaTesting } = useAuth();\n  const { width } = useWindowDimensions();\n  const isMobile = width < breakpoints.TABLET;\n  const [videoTrack, setVideoTrack] = useState<MediaStream | null>();\n  const [tracks, setTracks] = useState<Track[]>([]);\n  const [audioTrack, setAudioTrack] = useState<IMicrophoneAudioTrack | null>();\n  const [muteAudio, toggleMuteAudio] = useState(false);\n  const [muteVideo, toggleMuteVideo] = useState(false);\n  const { showPermissionPopup, onBothMediaBlocked, onTogglePopup } =\n    useMediaPermissionPopup();\n\n  const cacheDeviceIdRef = useRef<MediaDeviceId>({} as MediaDeviceId);\n  const [allConnectedDevices, setAllConnectedDevices] =\n    useState<MediaAllConnectedDevices>();\n  const {\n    deviceId,\n    hasAudioPermission,\n    hasVideoPermission,\n    audioPermissionState,\n    videoPermissionState,\n    selectDefaultMediaInput,\n    showBrowserSupportBanner,\n  } = useSocialHallContext();\n\n  const { microphone, speaker, camera } = deviceId || {};\n\n  const { setIsCameraEnable, setCamUsers, onUpdateMuteState } =\n    useSocialHallCallContext();\n\n  const initializeDefaultHardware = async () => {\n    await SocialHallMediaUtils.askForPermission();\n    const devices = await SocialHallMediaUtils.getAllConnectedMedia();\n    setAllConnectedDevices(() =>\n      formatAllConnectedDeviceForDropdown(\n        devices,\n        (deviceId || {}) as MediaDeviceId,\n      ),\n    );\n    setTimeout(selectDefaultMediaInput, 500);\n  };\n\n  const updateCacheDeviceIdRef = useCallback(\n    (media: Partial<MediaDeviceId>) => {\n      if (cacheDeviceIdRef.current) {\n        cacheDeviceIdRef.current = {\n          ...cacheDeviceIdRef.current,\n          ...media,\n        };\n      }\n    },\n    [],\n  );\n\n  const updateVideoTrack = useCallback(() => {\n    if (!videoTrack || !videoElementRef.current) return;\n    if (!muteVideo) {\n      videoElementRef.current.srcObject = videoTrack;\n      videoElementRef.current.play();\n    } else {\n      videoElementRef.current.srcObject = null;\n    }\n  }, [muteVideo, videoTrack]);\n\n  const onVideoDeviceChange = useCallback(\n    async (cameraId: string) => {\n      if (videoTrack) {\n        videoElementRef.current?.pause();\n        setVideoTrack(null);\n      }\n      if (videoElementRef.current) {\n        const track = await SocialHallMediaUtils.handleCameraCheck(cameraId);\n        setVideoTrack(track);\n      }\n    },\n    [videoTrack],\n  );\n\n  const onToggleAudio = () => {\n    if (!hasAudioPermission) {\n      onTogglePopup('audio');\n    } else {\n      toggleMuteAudio((mute) => !mute);\n    }\n  };\n\n  const onToggleVideo = () => {\n    if (!hasVideoPermission) {\n      onTogglePopup('video');\n    } else if (videoTrack) {\n      toggleMuteVideo((mute) => !mute);\n    }\n  };\n\n  const onReset = () => {\n    audioTrack?.close();\n    audioTrack?.stop();\n    cleanList(videoTrack?.getTracks()).forEach((track) => track?.stop());\n    cleanList(tracks).forEach((track) => track?.stop());\n    setTracks([]);\n  };\n\n  const onJoinSocialHall = async () => {\n    if (showLoader) {\n      return;\n    }\n    onReset();\n    setIsCameraEnable(!muteVideo);\n    if (!muteVideo) {\n      setCamUsers([user?._id || '']);\n    }\n    onUpdateMuteState(muteAudio, user?._id || '');\n    // @NOTES: this will automatically close the screen and start the SH visualization\n    onSetAcceptedSkipMediaTesting(true);\n  };\n\n  const onLeave = () => {\n    if (showLoader) {\n      return;\n    }\n    onReset();\n    navigate(ROUTES.HOME_NOUM);\n  };\n\n  useEffect(() => {\n    const handleAudioTrack = async () => {\n      if (microphone && cacheDeviceIdRef.current?.microphone !== microphone) {\n        updateCacheDeviceIdRef({ microphone });\n        const track = await SocialHallMediaUtils.handleMicrophoneCheck(\n          microphone,\n        );\n        setTracks((oldTracks) => [...oldTracks, track] as Track[]);\n        setAudioTrack(track);\n      }\n    };\n    handleAudioTrack();\n  }, [microphone, hasAudioPermission, updateCacheDeviceIdRef]);\n\n  useEffect(() => {\n    if (speaker && cacheDeviceIdRef.current?.speaker !== speaker) {\n      updateCacheDeviceIdRef({ speaker });\n      SocialHallMediaUtils.handleSpeakerCheck(speaker);\n    }\n  }, [speaker, updateCacheDeviceIdRef]);\n\n  useLayoutEffect(() => {\n    if (\n      camera &&\n      !cacheDeviceIdRef.current?.camera &&\n      videoPermissionState === 'granted'\n    ) {\n      updateCacheDeviceIdRef({ camera });\n      onVideoDeviceChange(camera);\n    }\n  }, [\n    camera,\n    onVideoDeviceChange,\n    videoPermissionState,\n    updateCacheDeviceIdRef,\n  ]);\n\n  useEffect(() => {\n    updateVideoTrack();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [muteVideo, videoTrack]);\n\n  useEffect(() => {\n    initializeDefaultHardware();\n    return () => {\n      onReset();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [videoPermissionState, audioPermissionState]);\n\n  useMediaDeviceUpdated(initializeDefaultHardware);\n\n  useEffect(() => {\n    if (!hasAudioPermission && !hasVideoPermission) {\n      onBothMediaBlocked();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [hasAudioPermission, hasVideoPermission]);\n\n  const showLoader = useMemo(() => {\n    if (\n      hasAudioPermission &&\n      !audioTrack &&\n      hasVideoPermission &&\n      !videoTrack\n    ) {\n      return true;\n    }\n    return false;\n  }, [hasAudioPermission, hasVideoPermission, audioTrack, videoTrack]);\n\n  const MediaControlResponsiveBtn = () => (\n    <MediaControlButton\n      isLoading={!videoTrack}\n      muteAudio={muteAudio}\n      muteVideo={muteVideo}\n      hasAudioPermission={!!hasAudioPermission}\n      hasVideoPermission={!!hasVideoPermission}\n      onToggleAudio={onToggleAudio}\n      onToggleVideo={onToggleVideo}\n    />\n  );\n\n  return (\n    <Layout>\n      <Header>\n        <MainHeader\n          avatar={UserUtil.getProfilePicture(user) || undefined}\n          userName={user?.firstName || undefined}\n        />\n      </Header>\n      <Wrapper isBannerVisible={showBrowserSupportBanner}>\n        <BannerWrapper>\n          <BrowserSupport />\n        </BannerWrapper>\n        <MediaWrapper>\n          <VideoWrapper>\n            <UserProfilePicture />\n            <VideoElement ref={videoElementRef} id={videoElementId} />\n            {!isMobile && <MediaControlResponsiveBtn />}\n          </VideoWrapper>\n          {isMobile && <MediaControlResponsiveBtn />}\n          <AvailableMediaSelection\n            setTracks={setTracks}\n            isMuteAudio={muteAudio}\n            isMuteVideo={muteVideo}\n            onVideoDeviceChange={onVideoDeviceChange}\n            allConnectedDevices={allConnectedDevices}\n          />\n        </MediaWrapper>\n        <Spacer width={48} />\n        <MediaContent\n          showLoader={showLoader}\n          onCompleted={onJoinSocialHall}\n          onLeave={onLeave}\n        />\n        <MediaPermissionNotification\n          onTogglePopup={onTogglePopup}\n          showAudioModal={showPermissionPopup.audio}\n          showVideoModal={showPermissionPopup.video}\n        />\n      </Wrapper>\n    </Layout>\n  );\n};\n","import { useMemo } from 'react';\nimport { InlineAvatar } from '@/components/Avatar/Inline/Inline';\nimport { Icon } from '@/components/Icon';\nimport { Button } from '@/components/Button';\nimport {\n  useSocialHallCallContext,\n  useSocialHallContext,\n  useSocialHallEventContext,\n} from '@/providers';\nimport { Wrapper, GroupTitleSpan, IconButtonWrapper } from './styles';\nimport { type MiniPlayerProps } from '../types';\n\nexport const MiniPlayer = ({\n  isCloseLoading,\n  isLeaveLoading,\n  isMuteLoading,\n}: MiniPlayerProps) => {\n  const { setShowBuzzRoom, activeSocialHallGroup } = useSocialHallContext();\n  const { groupName } = useSocialHallEventContext();\n\n  const { isMuted, onLeaveCall, toggleMuteCall } = useSocialHallCallContext();\n\n  const muteIcon = useMemo(\n    () => (isMuted ? 'mic_off_m' : 'mic_on_m'),\n    [isMuted],\n  );\n\n  const avatarUrls = useMemo(\n    () =>\n      activeSocialHallGroup?.users?.map(\n        (user) => user?.profile?.profilePicture || '',\n      ),\n    [activeSocialHallGroup?.users],\n  );\n\n  return (\n    <Wrapper data-testid=\"player_wrapper\">\n      <InlineAvatar urls={avatarUrls || []} borderedImage={true} size=\"XXL\" />\n      <GroupTitleSpan colorToken=\"--text-card-neutral-highlighted\">\n        {activeSocialHallGroup?.name || groupName}\n      </GroupTitleSpan>\n      <IconButtonWrapper>\n        <Button\n          data-testid=\"button_mute\"\n          onClick={() => toggleMuteCall()}\n          size=\"small\"\n          icon={\n            <Icon\n              name={muteIcon}\n              size={24}\n              color=\"--icon-button-neutral-default\"\n            />\n          }\n          loading={isMuteLoading}\n        />\n        <Button\n          key={new Date().getTime()}\n          data-testid=\"button_leave\"\n          onClick={onLeaveCall}\n          size=\"small\"\n          icon={<Icon imageIconName=\"leave_quietly\" size={24} />}\n          loading={isLeaveLoading}\n        />\n        <Button\n          data-testid=\"button_close\"\n          onClick={() => {\n            setShowBuzzRoom(true);\n          }}\n          size=\"small\"\n          icon={\n            <Icon\n              name=\"chevron_small_up_m\"\n              size={24}\n              color=\"--icon-button-neutral-default\"\n            />\n          }\n          loading={isCloseLoading}\n        />\n      </IconButtonWrapper>\n    </Wrapper>\n  );\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { Spacer } from '@/layout';\nimport { Icon } from '@/components/Icon';\nimport { Radiobox } from '@/components/Radiobox';\nimport { TextField } from '@/components/TextField';\nimport { Button } from '@/components/Button';\nimport { useSocialHallCallContext } from '@/providers';\nimport { declineMessages, knockMessages } from './data';\nimport { Description, DescriptionSpan } from './styles';\n\nexport enum KnockMessageModalTypeEnum {\n  knock = 'KNOCK',\n  decline = 'DECLINE',\n}\n\nexport type KnockMessageSelectModalProps = {\n  isOpen: boolean;\n  onClose: (message: string | null) => void;\n  modalType: KnockMessageModalTypeEnum;\n};\n\nexport const KnockMessageSelectModal = ({\n  isOpen,\n  onClose,\n  modalType,\n}: KnockMessageSelectModalProps) => {\n  const { t } = useTranslation();\n  const [selectedId, setSelectedId] = useState<number | null>();\n  const [message, setMessage] = useState<string>('');\n  const [messages, setMessages] =\n    useState<{ key: number; description: string }[]>(knockMessages);\n  const { setMessages: setSocialHallMessages } = useSocialHallCallContext();\n  const handleClickItem = useCallback(\n    (itemId: number) => {\n      setSelectedId(itemId);\n      setMessage('');\n      if (itemId !== 3) {\n        setMessage(messages[itemId].description);\n      }\n    },\n    [messages],\n  );\n\n  const handleClickKnock = useCallback(() => {\n    setSocialHallMessages([]);\n    onClose(message);\n  }, [message, onClose, setSocialHallMessages]);\n\n  useEffect(() => {\n    if (modalType === KnockMessageModalTypeEnum.knock) {\n      setMessages(knockMessages);\n    } else {\n      setMessages(declineMessages);\n    }\n  }, [modalType]);\n\n  return (\n    <Modal\n      open={isOpen}\n      onClose={() => onClose(null)}\n      testId=\"knock-message-select-modal\"\n      enableCloseButton\n      size={ModalSize.L}\n      disableBackdropClick\n    >\n      <ModalHeader>\n        {t(\n          modalType === KnockMessageModalTypeEnum.knock\n            ? 'noumena.social_hall.knock_modal.title'\n            : 'noumena.social_hall.decline_modal.title',\n        )}\n      </ModalHeader>\n      <ModalBody>\n        {messages.map((item, index) => (\n          <Description\n            isLast={messages.length - 1 === index}\n            key={item.key}\n            onClick={() => handleClickItem(item.key)}\n          >\n            <Radiobox\n              icon={\n                item.key === selectedId ? (\n                  <Icon\n                    name=\"radio_btn_m\"\n                    size={12}\n                    color=\"--icon-radiobutton-brand-primary-default\"\n                  />\n                ) : undefined\n              }\n              isChecked={item.key === selectedId}\n            />\n            {item.key === selectedId && item.key === 3 ? (\n              <TextField\n                label={item.description}\n                onChange={(e) => setMessage(e.target.value)}\n                maxLength={500}\n                hideLengthHelperText\n              />\n            ) : (\n              <DescriptionSpan\n                font=\"body-l\"\n                colorToken=\"--text-tablecell-header-neutral-highlighted\"\n              >\n                {item.description}\n              </DescriptionSpan>\n            )}\n          </Description>\n        ))}\n      </ModalBody>\n      <Spacer height={16} />\n      <ModalFooter gap={16} flexDirection=\"row\" marginTop={12}>\n        <Button\n          tertiary\n          size=\"full\"\n          onClick={() => onClose(null)}\n          data-testid=\"cancel-button\"\n        >\n          {t(\n            modalType === KnockMessageModalTypeEnum.knock\n              ? 'noumena.cancel'\n              : 'noumena.close',\n          )}\n        </Button>\n        <Button\n          primary\n          size=\"full\"\n          onClick={handleClickKnock}\n          data-testid=\"knock-button\"\n        >\n          {t(\n            modalType === KnockMessageModalTypeEnum.knock\n              ? 'noumena.social_hall.knock'\n              : 'noumena.chamber.decline_button',\n          )}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n","import { useCallback, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { getFullName } from '@/utils/fullName';\nimport { Button } from '@/components/Button';\nimport { Avatar } from '@/components/Avatar/Avatar';\nimport { Icon } from '@/components/Icon';\nimport { SocialHallUtils } from '@/utils/socialHall';\nimport {\n  type Knock,\n  type Maybe,\n  type UserOutput,\n} from '@/apollo/generated/types';\nimport { UserUtil } from '@/utils/user';\nimport { useSocialHallContext } from '@/providers/SocialHallProvider';\nimport { useSocialHallCallContext } from '@/providers/SocialHallCallProvider';\nimport { useSocialHallEventContext } from '@/providers/SocialHallEventProvider';\nimport { useKnockUser, useRefreshKnocks } from '@/features/socialHall/hooks';\nimport {\n  KnockMessageModalTypeEnum,\n  KnockMessageSelectModal,\n} from '../EventModals/KnockMessageSelectModal/KnockMessageSelectModal';\nimport { KnockStatusEnum } from '../SideBar/types';\nimport { confirmKnockModalData, EventModal } from '../EventModals/EventModal';\nimport {\n  ItemHeader,\n  NameSpan,\n  NameWrapper,\n  ItemWrapper,\n  TitleSpan,\n  UsersWrapper,\n  UserWrapper,\n  AvatarWrapper,\n} from './styles';\nimport { type GroupProfilePopupProps } from './types';\n\nexport const GroupProfilePopup = ({\n  groupId,\n  showGroupPopup,\n  onCloseGroupPopup,\n}: GroupProfilePopupProps) => {\n  const { t } = useTranslation();\n  const {\n    socialHallAttendeesAndGroups,\n    socialHallAttendee,\n    userActiveGroupData,\n  } = useSocialHallContext();\n\n  const { onLeaveCall } = useSocialHallCallContext();\n  const { isEventHost } = useSocialHallEventContext();\n  const {\n    knockUser,\n    declineKnock,\n    acceptKnock,\n    knockLoading,\n    declineLoading,\n    acceptLoading,\n  } = useKnockUser();\n  const [openModal, setOpenModal] = useState<boolean>(false);\n  const [openConfirmKnock, setOpenConfirmKnock] = useState<boolean>(false);\n  const groupInfo = useMemo(() => {\n    const groups = socialHallAttendeesAndGroups?.data?.socialHallGroups?.data;\n    return groups?.filter((group) => group?._id === groupId)[0];\n  }, [socialHallAttendeesAndGroups, groupId]);\n  const { userOwnKnocks, userActiveKnocks } = useRefreshKnocks();\n\n  const allKnocks: Maybe<Knock>[] = useMemo(\n    () => [...(userOwnKnocks?.data ?? []), ...(userActiveKnocks?.data ?? [])],\n    [userOwnKnocks?.data, userActiveKnocks?.data],\n  );\n\n  const { knock, status } = useMemo(\n    () =>\n      SocialHallUtils.getGroupKnockDetails(\n        allKnocks,\n        socialHallAttendee?.attendeeId?._id!,\n      ),\n    [allKnocks, socialHallAttendee],\n  );\n\n  const isUserOnCall = useMemo(\n    () => !!userActiveGroupData?.data?.userActiveSocialHallGroup?._id,\n    [userActiveGroupData?.data?.userActiveSocialHallGroup?._id],\n  );\n\n  const handleKnock = useCallback(() => {\n    if (isUserOnCall) {\n      setOpenConfirmKnock(true);\n    } else {\n      setOpenModal(true);\n    }\n  }, [isUserOnCall]);\n\n  const hideJoinButton = useCallback(\n    () =>\n      SocialHallUtils.isUserInGroupCall(\n        socialHallAttendee?.attendeeId?._id ?? '',\n        (groupInfo?.users ?? []) as UserOutput[],\n      ),\n    [socialHallAttendee, groupInfo],\n  );\n\n  const handleKeepConversation = useCallback(() => {\n    setOpenConfirmKnock(false);\n  }, []);\n\n  const handleLeaveConversation = useCallback(async () => {\n    await onLeaveCall();\n    setOpenConfirmKnock(false);\n    setOpenModal(true);\n  }, [onLeaveCall]);\n\n  const onKnockWithMessage = useCallback(\n    (message) => {\n      if (message !== null) {\n        knockUser(null, groupInfo?._id, message);\n      }\n      setOpenModal(false);\n    },\n    [groupInfo, knockUser],\n  );\n\n  const KnockButton = useMemo(() => {\n    if (status === KnockStatusEnum.Normal) {\n      return (\n        <Button\n          data-testid=\"join_button\"\n          primary\n          size=\"small\"\n          onClick={handleKnock}\n          loading={knockLoading}\n        >\n          {t(\n            isEventHost\n              ? 'noumena.social_hall.knock'\n              : 'noumena.social_hall.join',\n          )}\n        </Button>\n      );\n    }\n\n    // When user receive knock\n    if (status === KnockStatusEnum.IsKnocked) {\n      return (\n        <>\n          <Button\n            data-testid=\"close_button\"\n            size=\"small\"\n            onClick={() => declineKnock(knock?._id!)}\n            icon={\n              <Icon\n                name=\"close_m\"\n                size={24}\n                color=\"--icon-button-neutral-default\"\n              />\n            }\n            loading={declineLoading}\n          />\n          <Button\n            data-testid=\"accept_button\"\n            primary\n            size=\"small\"\n            onClick={() => acceptKnock(knock?._id!)}\n            icon={\n              <Icon\n                name=\"tick_m\"\n                size={24}\n                color=\"--icon-button-neutral-alt-default\"\n              />\n            }\n            loading={acceptLoading}\n          />\n        </>\n      );\n    }\n\n    if (status === KnockStatusEnum.IsKnocking) {\n      return (\n        <Button size=\"small\" disabled>\n          {t('noumena.social_hall.knocking')}\n        </Button>\n      );\n    }\n\n    return null;\n  }, [\n    t,\n    knock,\n    status,\n    isEventHost,\n    acceptKnock,\n    handleKnock,\n    declineKnock,\n    knockLoading,\n    acceptLoading,\n    declineLoading,\n  ]);\n\n  const groupName = useMemo(\n    () => groupInfo?.name || groupInfo?.channelName,\n    [groupInfo],\n  );\n\n  return (\n    <ItemWrapper data-testid=\"item_wrapper\" isHidden={!showGroupPopup}>\n      <ItemHeader>\n        <NameWrapper>\n          <NameSpan colorToken=\"--text-tablecell-header-neutral-highlighted\">\n            {groupName}\n          </NameSpan>\n          <TitleSpan\n            colorToken=\"--text-tablecell-body-neutral-default\"\n            data-testid=\"members_count\"\n          >\n            {t('noumena.social_hall.members', {\n              memberCount: groupInfo?.users?.length,\n            })}\n          </TitleSpan>\n        </NameWrapper>\n        {!hideJoinButton() && KnockButton}\n        <Button\n          size=\"small\"\n          icon={\n            <Icon\n              color=\"--icon-button-neutral-default\"\n              name=\"close_m\"\n              size={24}\n            />\n          }\n          onClick={onCloseGroupPopup}\n        />\n      </ItemHeader>\n      <UsersWrapper>\n        {groupInfo?.users?.map((user) => (\n          <UserWrapper\n            key={user?._id}\n            onClick={() => UserUtil.goToUserProfile(user)}\n          >\n            <AvatarWrapper>\n              <Avatar url={user?.profile?.profilePicture || ''} size=\"M\" />\n            </AvatarWrapper>\n            <NameWrapper>\n              <NameSpan colorToken=\"--text-tablecell-header-neutral-highlighted\">\n                {getFullName(user?.firstName, user?.middleName, user?.lastName)}\n              </NameSpan>\n              <TitleSpan colorToken=\"--text-tablecell-body-neutral-default\">\n                {user?.title}\n              </TitleSpan>\n            </NameWrapper>\n            <Button\n              size=\"small\"\n              icon={\n                <Icon\n                  name=\"chevron_small_right_m\"\n                  size={24}\n                  color=\"--icon-tablecell-neutral-default\"\n                />\n              }\n            />\n          </UserWrapper>\n        ))}\n      </UsersWrapper>\n      <KnockMessageSelectModal\n        isOpen={openModal}\n        onClose={onKnockWithMessage}\n        modalType={KnockMessageModalTypeEnum.knock}\n      />\n      <EventModal\n        isConfirmButtonPrimary\n        isOpen={openConfirmKnock}\n        onClose={handleLeaveConversation}\n        onConfirm={handleKeepConversation}\n        {...confirmKnockModalData}\n      />\n    </ItemWrapper>\n  );\n};\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { getFullName } from '@/utils/fullName';\nimport { Avatar } from '@/components/Avatar/Avatar';\nimport { Button } from '@/components/Button';\nimport { type Knock, type Maybe, type Skill } from '@/apollo/generated/types';\nimport { Icon } from '@/components/Icon';\nimport { SocialHallUtils } from '@/utils/socialHall';\nimport { UserUtil } from '@/utils/user';\nimport { useKnockUser, useRefreshKnocks } from '@/features/socialHall/hooks';\nimport { useSocialHallCallContext } from '@/providers/SocialHallCallProvider';\nimport { useSocialHallContext } from '@/providers/SocialHallProvider';\nimport { KnockStatusEnum } from '../SideBar/types';\nimport {\n  KnockMessageModalTypeEnum,\n  KnockMessageSelectModal,\n} from '../EventModals/KnockMessageSelectModal/KnockMessageSelectModal';\nimport { confirmKnockModalData, EventModal } from '../EventModals/EventModal';\nimport {\n  AvatarWrapper,\n  ItemHeader,\n  ItemWrapper,\n  NameSpan,\n  NameWrapper,\n  TagSpan,\n  TagWrapper,\n  TitleSpan,\n  BioSpan,\n  ProfileLinkSpan,\n  ButtonWrapper,\n} from './styles';\nimport { type UserProfilePopupProps } from './types';\n\nexport const UserProfilePopup = ({\n  showUserPopup,\n  attendeeId,\n  onCloseUserPopup,\n}: UserProfilePopupProps) => {\n  const { t } = useTranslation();\n  const [openModal, setOpenModal] = useState<boolean>(false);\n  const [openConfirmKnock, setOpenConfirmKnock] = useState<boolean>(false);\n  const {\n    knockUser,\n    acceptKnock,\n    declineKnock,\n    knockLoading,\n    acceptLoading,\n    declineLoading,\n  } = useKnockUser();\n  const { userOwnKnocks, userActiveKnocks } = useRefreshKnocks();\n  const { onLeaveCall } = useSocialHallCallContext();\n  const {\n    socialHallAttendeesAndGroups,\n    socialHallAttendee,\n    userActiveGroupData,\n  } = useSocialHallContext();\n\n  const allKnocks: Maybe<Knock>[] = useMemo(\n    () => [...(userOwnKnocks?.data ?? []), ...(userActiveKnocks?.data ?? [])],\n    [userOwnKnocks?.data, userActiveKnocks?.data],\n  );\n\n  const userInfo = useMemo(() => {\n    const attendees =\n      socialHallAttendeesAndGroups?.data?.socialHallAttendee?.data;\n    return attendees?.filter(\n      (attendee) => attendee?.attendeeId?._id === attendeeId,\n    )[0];\n  }, [socialHallAttendeesAndGroups, attendeeId]);\n\n  const { knock, status } = useMemo(\n    () =>\n      SocialHallUtils.getKnockDetails(allKnocks, userInfo?.attendeeId?._id!),\n    [allKnocks, userInfo],\n  );\n\n  const isUserOnCall = useMemo(\n    () => !!userActiveGroupData?.data?.userActiveSocialHallGroup?._id,\n    [userActiveGroupData?.data?.userActiveSocialHallGroup?._id],\n  );\n\n  const handleKnock = useCallback(() => {\n    if (isUserOnCall) {\n      setOpenConfirmKnock(true);\n    } else {\n      setOpenModal(true);\n    }\n  }, [isUserOnCall]);\n\n  const onKnockWithMessage = useCallback(\n    (message) => {\n      if (message !== null) {\n        knockUser(userInfo?._id, userInfo?.hallGroupId, message);\n      }\n      setOpenModal(false);\n    },\n    [knockUser, userInfo],\n  );\n\n  const getTopSkills = useCallback(\n    (skills) => (skills?.length > 3 ? skills?.slice(0, 3) : skills) || [],\n    [],\n  );\n\n  const handleKeepConversation = useCallback(() => {\n    setOpenConfirmKnock(false);\n  }, []);\n\n  const handleLeaveConversation = useCallback(async () => {\n    await onLeaveCall();\n    setOpenConfirmKnock(false);\n    setOpenModal(true);\n  }, [onLeaveCall]);\n\n  const KnockButton = useMemo(() => {\n    if (status === KnockStatusEnum.Normal) {\n      return (\n        <Button\n          secondary\n          size=\"small\"\n          loading={knockLoading}\n          onClick={handleKnock}\n          data-testid=\"knock_button\"\n        >\n          {t('noumena.social_hall.knock')}\n        </Button>\n      );\n    }\n\n    // When user receive knock\n    if (status === KnockStatusEnum.IsKnocked) {\n      return (\n        <>\n          <Button\n            data-testid=\"close_button\"\n            size=\"small\"\n            onClick={() => declineKnock(knock?._id!)}\n            icon={\n              <Icon\n                name=\"close_m\"\n                size={24}\n                color=\"--icon-button-neutral-default\"\n              />\n            }\n            loading={declineLoading}\n          />\n          <Button\n            data-testid=\"accept_button\"\n            primary\n            size=\"small\"\n            onClick={() => acceptKnock(knock?._id!)}\n            icon={\n              <Icon\n                name=\"tick_m\"\n                size={24}\n                color=\"--icon-button-neutral-alt-default\"\n              />\n            }\n            loading={acceptLoading}\n          />\n        </>\n      );\n    }\n\n    if (status === KnockStatusEnum.IsKnocking) {\n      return (\n        <Button size=\"small\" disabled>\n          {t('noumena.social_hall.knocking')}\n        </Button>\n      );\n    }\n\n    return (\n      <Button secondary size=\"small\">\n        {t('noumena.social_hall.knock')}\n      </Button>\n    );\n  }, [\n    t,\n    knock,\n    status,\n    handleKnock,\n    acceptKnock,\n    declineKnock,\n    knockLoading,\n    acceptLoading,\n    declineLoading,\n  ]);\n\n  useEffect(() => {\n    if (!userInfo) {\n      onCloseUserPopup();\n    }\n  }, [userInfo, onCloseUserPopup]);\n\n  return (\n    <ItemWrapper data-testid=\"item_wrapper\" isHidden={!showUserPopup}>\n      <ItemHeader>\n        <AvatarWrapper data-testid=\"avatar_wrapper\">\n          <Avatar\n            url={UserUtil.getProfilePicture(userInfo?.attendeeId) ?? ''}\n          />\n        </AvatarWrapper>\n        <NameWrapper>\n          <NameSpan colorToken=\"--text-tablecell-header-neutral-highlighted\">\n            {getFullName(\n              userInfo?.attendeeId?.firstName,\n              userInfo?.attendeeId?.middleName,\n              userInfo?.attendeeId?.lastName,\n            )}\n          </NameSpan>\n          <TitleSpan colorToken=\"--text-tablecell-body-neutral-default\">\n            {userInfo?.attendeeId?.title}\n          </TitleSpan>\n        </NameWrapper>\n        {socialHallAttendee?._id !== userInfo?._id && (\n          <ButtonWrapper>{KnockButton}</ButtonWrapper>\n        )}\n        <Button\n          size=\"small\"\n          icon={\n            <Icon\n              name=\"close_m\"\n              size={24}\n              color=\"--icon-button-neutral-alt-default\"\n            />\n          }\n          onClick={onCloseUserPopup}\n        />\n      </ItemHeader>\n      <TagWrapper>\n        {getTopSkills(userInfo?.attendeeId?.skills).map((skill: Skill) => (\n          <TagSpan\n            colorToken=\"--text-skillbadge-neutral-default\"\n            key={skill?._id}\n          >\n            {skill?.name}\n          </TagSpan>\n        ))}\n      </TagWrapper>\n      <BioSpan colorToken=\"--text-card-neutral-default\">\n        {userInfo?.attendeeId?.bio}\n      </BioSpan>\n      <ProfileLinkSpan\n        colorToken=\"--text-card-neutral-default\"\n        onClick={() =>\n          window.open(`/noum/${userInfo?.attendeeId?.chamber?._id}`, '_blank')\n        }\n      >\n        {t('noumena.social_hall.see_full_profile')}\n      </ProfileLinkSpan>\n      <KnockMessageSelectModal\n        isOpen={openModal}\n        onClose={onKnockWithMessage}\n        modalType={KnockMessageModalTypeEnum.knock}\n      />\n      <EventModal\n        isConfirmButtonPrimary\n        isOpen={openConfirmKnock}\n        onClose={handleLeaveConversation}\n        onConfirm={handleKeepConversation}\n        {...confirmKnockModalData}\n      />\n    </ItemWrapper>\n  );\n};\n","import { useMemo } from 'react';\nimport { useSocialHallContext, useSocialHallEventContext } from '@/providers';\nimport { GroupProfilePopup } from '../ProfilePopup/GroupProfilePopup';\nimport { UserProfilePopup } from '../ProfilePopup/UserProfilePopup';\nimport { KnockNotification } from './KnockNotification/KnockNotification';\nimport { MiniPlayer } from './MiniPlayer/MiniPlayer';\nimport { MiniAndNotificationWrapper, Wrapper } from './styles';\nimport { type MiniPlayerAndNotificationProps } from './types';\n\nexport const MiniPlayerAndNotification = ({\n  initialNotifications,\n  showMiniPlayerNotification,\n  ...props\n}: MiniPlayerAndNotificationProps) => {\n  const { activeSocialHallGroup, showBuzzRoom } = useSocialHallContext();\n\n  const { hostJoined } = useSocialHallEventContext();\n\n  const showMiniPlayer = useMemo(\n    () => !!activeSocialHallGroup?._id && !showBuzzRoom,\n    [activeSocialHallGroup, showBuzzRoom],\n  );\n\n  return (\n    <Wrapper data-testid=\"main_wrapper\">\n      {showMiniPlayerNotification && (\n        <MiniAndNotificationWrapper\n          isVisible={initialNotifications?.length > 0 || !!showMiniPlayer}\n          isSingle={initialNotifications?.length === 1 && !showMiniPlayer}\n        >\n          {!showBuzzRoom &&\n            initialNotifications.map((notification) => (\n              <KnockNotification\n                key={notification?._id}\n                notification={notification!}\n                isSingle={initialNotifications.length === 1 && !showMiniPlayer}\n              />\n            ))}\n          {hostJoined && showMiniPlayer && (\n            <KnockNotification\n              key={new Date().getTime()}\n              isSingle={initialNotifications.length === 1 && !showMiniPlayer}\n              isHostJoined\n            />\n          )}\n          {showMiniPlayer && <MiniPlayer {...props} />}\n        </MiniAndNotificationWrapper>\n      )}\n      <UserProfilePopup {...props} />\n      <GroupProfilePopup {...props} />\n    </Wrapper>\n  );\n};\n","import { useMemo, useState, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { getFullName } from '@/utils/fullName';\nimport { Avatar } from '@/components/Avatar/Avatar';\nimport { SocialHallUtils } from '@/utils/socialHall';\nimport { Button } from '@/components/Button';\nimport { Icon } from '@/components/Icon';\nimport { type Knock, type Maybe, type Skill } from '@/apollo/generated/types';\nimport { useKnockUser, useRefreshKnocks } from '@/features/socialHall/hooks';\nimport { useSocialHallCallContext } from '@/providers';\nimport {\n  KnockMessageModalTypeEnum,\n  KnockMessageSelectModal,\n} from '../../EventModals/KnockMessageSelectModal/KnockMessageSelectModal';\nimport {\n  confirmKnockModalData,\n  EventModal,\n} from '../../EventModals/EventModal';\nimport {\n  AvatarWrapper,\n  ButtonWrapper,\n  ItemHeader,\n  ItemWrapper,\n  NameSpan,\n  NameWrapper,\n  TagSpan,\n  TagWrapper,\n  TitleSpan,\n  BioSpan,\n  ProfileLinkSpan,\n} from './styles';\nimport { KnockStatusEnum, type SideBarUserListItemProps } from '../types';\n\nexport const SideBarUserListItem = ({\n  userInfo,\n  showKnockBtn = true,\n  isUserOnCall,\n}: SideBarUserListItemProps) => {\n  const { t } = useTranslation();\n  const [isFocused, setIsFocused] = useState<boolean>(false);\n  const [openModal, setOpenModal] = useState<boolean>(false);\n  const [openConfirmKnock, setOpenConfirmKnock] = useState<boolean>(false);\n  const { onLeaveCall, setMessages } = useSocialHallCallContext();\n  const {\n    knockUser,\n    acceptKnock,\n    declineKnock,\n    knockLoading,\n    acceptLoading,\n    declineLoading,\n  } = useKnockUser();\n  const { userOwnKnocks, userActiveKnocks } = useRefreshKnocks();\n\n  const allKnocks: Maybe<Knock>[] = useMemo(\n    () => [...(userOwnKnocks?.data ?? []), ...(userActiveKnocks?.data ?? [])],\n    [userOwnKnocks?.data, userActiveKnocks?.data],\n  );\n\n  const { knock, status } = useMemo(\n    () => SocialHallUtils.getKnockDetails(allKnocks, userInfo.attendeeId?._id!),\n    [allKnocks, userInfo],\n  );\n\n  const onKnockWithMessage = useCallback(\n    (message) => {\n      if (message !== null) {\n        knockUser(userInfo._id, userInfo.hallGroupId, message);\n      }\n      setOpenModal(false);\n    },\n    [userInfo, knockUser],\n  );\n\n  const getTopSkills = useCallback(\n    (skills) => (skills?.length > 3 ? skills?.slice(0, 3) : skills) || [],\n    [],\n  );\n\n  const handleKnock = useCallback(() => {\n    if (isUserOnCall) {\n      setOpenConfirmKnock(true);\n    } else {\n      setOpenModal(true);\n    }\n  }, [isUserOnCall]);\n\n  const handleKeepConversation = useCallback(() => {\n    setOpenConfirmKnock(false);\n  }, []);\n\n  const handleLeaveConversation = useCallback(async () => {\n    await onLeaveCall();\n    setOpenConfirmKnock(false);\n    setOpenModal(true);\n  }, [onLeaveCall]);\n\n  const KnockButton = useMemo(() => {\n    if (status === KnockStatusEnum.Normal) {\n      return (\n        <Button\n          onClick={handleKnock}\n          primary={isFocused}\n          secondary={!isFocused}\n          size=\"small\"\n          loading={knockLoading}\n        >\n          {t('noumena.social_hall.knock')}\n        </Button>\n      );\n    }\n\n    // When user receive knock\n    if (status === KnockStatusEnum.IsKnocked) {\n      return (\n        <>\n          <Button\n            data-testid=\"close_button\"\n            size=\"small\"\n            onClick={() => declineKnock(knock?._id!)}\n            icon={\n              <Icon\n                name=\"close_m\"\n                size={24}\n                color=\"--icon-button-neutral-default\"\n              />\n            }\n            loading={declineLoading}\n          />\n          <Button\n            data-testid=\"accept_button\"\n            primary\n            size=\"small\"\n            onClick={() => {\n              acceptKnock(knock?._id!);\n              setMessages([]);\n            }}\n            icon={\n              <Icon\n                name=\"tick_m\"\n                size={24}\n                color=\"--icon-button-neutral-alt-default\"\n              />\n            }\n            loading={acceptLoading}\n          />\n        </>\n      );\n    }\n\n    if (status === KnockStatusEnum.IsKnocking) {\n      return (\n        <Button size=\"small\" disabled>\n          {t('noumena.social_hall.knocking')}\n        </Button>\n      );\n    }\n\n    return (\n      <Button secondary size=\"small\">\n        {t('noumena.social_hall.knock')}\n      </Button>\n    );\n  }, [\n    acceptKnock,\n    acceptLoading,\n    declineKnock,\n    declineLoading,\n    handleKnock,\n    isFocused,\n    knock?._id,\n    knockLoading,\n    setMessages,\n    status,\n    t,\n  ]);\n\n  const fullName = useMemo(\n    () =>\n      getFullName(\n        userInfo.attendeeId?.firstName,\n        userInfo.attendeeId?.middleName,\n        userInfo.attendeeId?.lastName,\n      ),\n    [userInfo.attendeeId],\n  );\n\n  const isUnregistered = useMemo(\n    () => userInfo.attendeeId?.userStatus === 'UNREGISTERED',\n    [userInfo.attendeeId?.userStatus],\n  );\n\n  return (\n    <ItemWrapper\n      onMouseEnter={() => setIsFocused(true)}\n      onMouseLeave={() => setIsFocused(false)}\n      data-testid=\"item_wrapper\"\n    >\n      <ItemHeader>\n        <AvatarWrapper data-testid=\"avatar_wrapper\">\n          <Avatar url={userInfo?.attendeeId?.profile?.profilePicture || ''} />\n        </AvatarWrapper>\n        <NameWrapper>\n          <NameSpan colorToken=\"--text-tablecell-header-neutral-highlighted\">\n            {userInfo.isHost && (\n              <Icon\n                name=\"star_s\"\n                size={12}\n                color=\"--icon-call-ui-neutral-default\"\n              />\n            )}\n            {fullName}\n          </NameSpan>\n          <TitleSpan colorToken=\"--text-tablecell-body-neutral-default\">\n            {isUnregistered\n              ? t('noumena.event.event_non_noumena_attendee')\n              : userInfo.attendeeId?.title}\n          </TitleSpan>\n        </NameWrapper>\n        {showKnockBtn && <ButtonWrapper>{KnockButton}</ButtonWrapper>}\n      </ItemHeader>\n      <TagWrapper>\n        {getTopSkills(userInfo?.attendeeId?.skills).map((skill: Skill) => (\n          <TagSpan\n            colorToken=\"--text-skillbadge-neutral-default\"\n            key={skill?._id}\n            isFocused={isFocused}\n          >\n            {skill?.name}\n          </TagSpan>\n        ))}\n      </TagWrapper>\n      {userInfo.attendeeId?.bio && (\n        <BioSpan colorToken=\"--text-card-neutral-default\">\n          {userInfo.attendeeId?.bio}\n        </BioSpan>\n      )}\n      <ProfileLinkSpan\n        colorToken=\"--text-card-neutral-default\"\n        onClick={() =>\n          window.open(`/noum/${userInfo.attendeeId?.chamber?._id}`, '_blank')\n        }\n      >\n        {t('noumena.social_hall.see_full_profile')}\n      </ProfileLinkSpan>\n      <KnockMessageSelectModal\n        isOpen={openModal}\n        onClose={onKnockWithMessage}\n        modalType={KnockMessageModalTypeEnum.knock}\n      />\n      <EventModal\n        isConfirmButtonPrimary\n        isOpen={openConfirmKnock}\n        onClose={handleLeaveConversation}\n        onConfirm={handleKeepConversation}\n        {...confirmKnockModalData}\n      />\n    </ItemWrapper>\n  );\n};\n","import { useCallback, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { getFullName } from '@/utils/fullName';\nimport {\n  type Knock,\n  type Maybe,\n  type UserOutput,\n} from '@/apollo/generated/types';\nimport { Button } from '@/components/Button';\nimport { Avatar } from '@/components/Avatar/Avatar';\nimport { Icon } from '@/components/Icon';\nimport { SocialHallUtils } from '@/utils/socialHall';\nimport {\n  useSocialHallCallContext,\n  useSocialHallContext,\n  useSocialHallEventContext,\n} from '@/providers';\nimport { useKnockUser, useRefreshKnocks } from '@/features/socialHall/hooks';\nimport { UserUtil } from '@/utils/user';\nimport {\n  KnockMessageModalTypeEnum,\n  KnockMessageSelectModal,\n} from '../../EventModals/KnockMessageSelectModal/KnockMessageSelectModal';\nimport {\n  confirmKnockModalData,\n  EventModal,\n} from '../../EventModals/EventModal';\nimport {\n  ItemHeader,\n  NameSpan,\n  NameWrapper,\n  ItemWrapper,\n  TitleSpan,\n  UsersWrapper,\n  UserWrapper,\n  AvatarWrapper,\n  IconButton,\n} from './styles';\nimport { KnockStatusEnum, type SideBarGroupListItemProps } from '../types';\n\nexport const SideBarGroupListItem = ({\n  groupInfo,\n  isUserOnCall,\n}: SideBarGroupListItemProps) => {\n  const { t } = useTranslation();\n  const {\n    knockUser,\n    declineKnock,\n    acceptKnock,\n    joinGroupAsHost,\n    knockLoading,\n    declineLoading,\n    acceptLoading,\n    joiningGroupAsHost,\n  } = useKnockUser();\n  const [openModal, setOpenModal] = useState<boolean>(false);\n  const [openConfirmKnock, setOpenConfirmKnock] = useState<boolean>(false);\n  const { isEventHost } = useSocialHallEventContext();\n  const { socialHallAttendee } = useSocialHallContext();\n  const { onLeaveCall } = useSocialHallCallContext();\n  const { userOwnKnocks, userActiveKnocks } = useRefreshKnocks();\n\n  const allKnocks: Maybe<Knock>[] = useMemo(\n    () => [...(userOwnKnocks?.data ?? []), ...(userActiveKnocks?.data ?? [])],\n    [userOwnKnocks?.data, userActiveKnocks?.data],\n  );\n\n  const { knock, status } = useMemo(\n    () =>\n      SocialHallUtils.getGroupKnockDetails(\n        allKnocks,\n        socialHallAttendee?.attendeeId?._id!,\n      ),\n    [allKnocks, socialHallAttendee],\n  );\n\n  const handleKeepConversation = useCallback(() => {\n    setOpenConfirmKnock(false);\n  }, []);\n\n  const handleLeaveConversation = useCallback(async () => {\n    await onLeaveCall;\n    setOpenConfirmKnock(false);\n    setOpenModal(true);\n  }, [onLeaveCall]);\n\n  const hideJoinButton = useCallback(\n    () =>\n      SocialHallUtils.isUserInGroupCall(\n        socialHallAttendee?.attendeeId?._id ?? '',\n        (groupInfo.users ?? []) as UserOutput[],\n      ),\n    [socialHallAttendee, groupInfo],\n  );\n\n  const onKnockWithMessage = useCallback(\n    (message) => {\n      if (message !== null) {\n        knockUser(null, groupInfo._id, message);\n      }\n      setOpenModal(false);\n    },\n    [groupInfo._id, knockUser],\n  );\n\n  const handleKnockJoin = useCallback(async () => {\n    if (isUserOnCall) {\n      setOpenConfirmKnock(true);\n    } else if (isEventHost) {\n      await onLeaveCall();\n      await joinGroupAsHost(groupInfo._id);\n    } else {\n      setOpenModal(true);\n    }\n  }, [groupInfo._id, isEventHost, joinGroupAsHost, onLeaveCall, isUserOnCall]);\n\n  const KnockButton = useMemo(() => {\n    if (status === KnockStatusEnum.Normal) {\n      return (\n        <Button\n          data-testid=\"join_button\"\n          onClick={handleKnockJoin}\n          primary\n          size=\"small\"\n          loading={knockLoading || joiningGroupAsHost}\n        >\n          {t(\n            isEventHost\n              ? 'noumena.social_hall.join'\n              : 'noumena.social_hall.knock',\n          )}\n        </Button>\n      );\n    }\n\n    // When user receive knock\n    if (status === KnockStatusEnum.IsKnocked) {\n      return (\n        <>\n          <Button\n            data-testid=\"close_button\"\n            size=\"small\"\n            onClick={() => declineKnock(knock?._id!)}\n            icon={\n              <Icon\n                name=\"close_m\"\n                size={24}\n                color=\"--icon-button-neutral-default\"\n              />\n            }\n            loading={declineLoading}\n          />\n          <Button\n            data-testid=\"accept_button\"\n            primary\n            size=\"small\"\n            onClick={() => acceptKnock(knock?._id!)}\n            icon={\n              <Icon\n                name=\"tick_m\"\n                size={24}\n                color=\"--icon-button-neutral-alt-default\"\n              />\n            }\n            loading={acceptLoading}\n          />\n        </>\n      );\n    }\n\n    if (status === KnockStatusEnum.IsKnocking) {\n      return (\n        <Button size=\"small\" disabled>\n          {t('noumena.social_hall.knocking')}\n        </Button>\n      );\n    }\n\n    return null;\n  }, [\n    status,\n    handleKnockJoin,\n    knockLoading,\n    joiningGroupAsHost,\n    t,\n    isEventHost,\n    declineLoading,\n    acceptLoading,\n    declineKnock,\n    knock?._id,\n    acceptKnock,\n  ]);\n\n  const groupName = useMemo(\n    () => groupInfo.name || groupInfo.channelName,\n    [groupInfo],\n  );\n\n  return (\n    <ItemWrapper data-testid=\"item_wrapper\">\n      <ItemHeader>\n        <NameWrapper>\n          <NameSpan\n            colorToken=\"--text-tablecell-header-neutral-highlighted\"\n            isGroup\n          >\n            {groupName}\n          </NameSpan>\n          <TitleSpan\n            colorToken=\"--text-tablecell-body-neutral-default\"\n            data-testid=\"members_count\"\n          >\n            {t('noumena.social_hall.members', {\n              memberCount: groupInfo.users?.length,\n            })}\n          </TitleSpan>\n        </NameWrapper>\n        {!hideJoinButton() && KnockButton}\n      </ItemHeader>\n      <UsersWrapper>\n        {groupInfo.users?.map((user) => (\n          <UserWrapper\n            key={user?._id}\n            onClick={() => UserUtil.goToUserProfile(user)}\n          >\n            <AvatarWrapper>\n              <Avatar url={user?.profile?.profilePicture || ''} size=\"M\" />\n            </AvatarWrapper>\n            <NameWrapper>\n              <NameSpan colorToken=\"--text-tablecell-header-neutral-highlighted\">\n                {groupInfo.hosts?.includes(user?._id!) && (\n                  <Icon\n                    color=\"--icon-call-ui-neutral-default\"\n                    name=\"star_s\"\n                    size={12}\n                  />\n                )}\n                {getFullName(user?.firstName, user?.middleName, user?.lastName)}\n              </NameSpan>\n              <TitleSpan colorToken=\"--text-tablecell-body-neutral-default\">\n                {user?.title}\n              </TitleSpan>\n            </NameWrapper>\n            <IconButton>\n              <Icon\n                name=\"chevron_small_right_m\"\n                size={24}\n                color=\"--icon-tablecell-neutral-default\"\n              />\n            </IconButton>\n          </UserWrapper>\n        ))}\n      </UsersWrapper>\n      <KnockMessageSelectModal\n        isOpen={openModal}\n        onClose={onKnockWithMessage}\n        modalType={KnockMessageModalTypeEnum.knock}\n      />\n      <EventModal\n        isConfirmButtonPrimary\n        isOpen={openConfirmKnock}\n        onClose={handleLeaveConversation}\n        onConfirm={handleKeepConversation}\n        {...confirmKnockModalData}\n      />\n    </ItemWrapper>\n  );\n};\n","import { useCallback, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useWindowDimensions } from '@/hooks/dimensions';\nimport BasicChipsTabsForm from '@/components/Tabs/TabsForm';\nimport { breakpoints } from '@/constants/devices';\nimport { useSocialHallContext } from '@/providers';\nimport { type SocialHallAttendee } from '@/apollo/generated/types';\nimport { sideBarTabs } from './data';\nimport { SideBarUserListItem } from './UserListItem/SideBarUserListItem';\nimport { SideBarGroupListItem } from './GroupListItem/SideBarGroupListItem';\nimport {\n  ListWrapper,\n  SideBarWrapper,\n  TabsWrapper,\n  EmptyMessageSpan,\n  EmptyWrapper,\n} from './styles';\n\nexport const SideBar = () => {\n  const { t } = useTranslation();\n  const {\n    socialHallAttendee,\n    socialHallAttendeesAndGroups,\n    userActiveGroupData,\n  } = useSocialHallContext();\n  const { width } = useWindowDimensions();\n  const isMobile = width <= breakpoints.MOBILE_L;\n  const [selectedId, setSelectedId] = useState<string>('0');\n  const handleChangeTab = useCallback((value) => {\n    setSelectedId(value);\n  }, []);\n\n  const { attendees, groups } = useMemo(\n    () => ({\n      attendees: socialHallAttendeesAndGroups?.data?.socialHallAttendee?.data,\n      groups: socialHallAttendeesAndGroups?.data?.socialHallGroups?.data,\n    }),\n    [socialHallAttendeesAndGroups],\n  );\n\n  const isUserOnCall = useMemo(\n    () => !!userActiveGroupData?.data?.userActiveSocialHallGroup?._id,\n    [userActiveGroupData?.data?.userActiveSocialHallGroup?._id],\n  );\n\n  return (\n    <SideBarWrapper data-testid=\"side_bar_wrapper\">\n      <TabsWrapper data-testid=\"tabs_wrapper\">\n        <BasicChipsTabsForm\n          inputList={sideBarTabs}\n          onChange={(value) => handleChangeTab(value)}\n          selectedId={selectedId}\n          isWithoutImage\n          mode=\"isUnderline\"\n          tabWidth={isMobile ? '' : '148px'}\n          fullWidth={isMobile}\n        />\n      </TabsWrapper>\n      <ListWrapper data-testid=\"list_wrapper\">\n        {selectedId === '0' ? (\n          attendees && attendees.length > 0 ? (\n            attendees.map((attendee) => (\n              <SideBarUserListItem\n                key={attendee?._id}\n                userInfo={attendee as SocialHallAttendee}\n                showKnockBtn={attendee?._id !== socialHallAttendee?._id}\n                isUserOnCall={isUserOnCall}\n              />\n            ))\n          ) : (\n            <EmptyWrapper>\n              <EmptyMessageSpan colorToken=\"--text-placeholder-neutral-default\">\n                {t('noumena.social_hall.empty_user')}\n              </EmptyMessageSpan>\n            </EmptyWrapper>\n          )\n        ) : groups && groups.length > 0 ? (\n          groups.map((group) => (\n            <SideBarGroupListItem key={group?._id} groupInfo={group!} />\n          ))\n        ) : (\n          <EmptyWrapper>\n            <EmptyMessageSpan colorToken=\"--text-placeholder-neutral-default\">\n              {t('noumena.social_hall.empty_group')}\n            </EmptyMessageSpan>\n          </EmptyWrapper>\n        )}\n      </ListWrapper>\n    </SideBarWrapper>\n  );\n};\n","import { t } from 'i18next';\nimport { Spacer } from '@/layout';\nimport ROUTES from '@/constants/routes';\nimport { useNavigate } from 'react-router';\nimport { Button } from '@/components/Button';\nimport { Spinner } from '@/components/Spinner';\nimport { TSpan } from '@/components/Typography';\n\nimport { Wrapper, Container, Loader } from './styles';\n\nexport const UserInitialization = () => {\n  const navigate = useNavigate();\n\n  const onLeave = () => navigate(ROUTES.HOME_NOUM);\n\n  return (\n    <Wrapper>\n      <Container>\n        <Loader>\n          <Spinner />\n        </Loader>\n        <Spacer height={32} />\n        <TSpan font=\"heading-s\">\n          {t('noumena.social_hall.joining_the_event')}\n        </TSpan>\n        <Spacer height={8} />\n        <TSpan font=\"body-l\" colorToken=\"--text-modal-neutral-default\">\n          {t('noumena.social_hall.joining_the_event_title')}\n        </TSpan>\n        <Spacer height={24} />\n        <Button\n          tertiary\n          intent=\"negative\"\n          size=\"full\"\n          onClick={() => onLeave()}\n          data-testid=\"leave-event-button\"\n        >\n          {t('noumena.social_hall.hardware_testing_cancel_btn')}\n        </Button>\n      </Container>\n    </Wrapper>\n  );\n};\n","/* eslint-disable no-plusplus */\nimport { boundingOffset } from '../const';\nimport {\n  type SocialHallVizProps,\n  type SocialHallData,\n  type SocialHallOutput,\n  type Coords,\n  type ICirclePacking,\n  type ScreenDimensions,\n  type SocialHallParticle,\n} from '../types';\nimport { getIncreaseByPercentage, groupProcessData } from './utils';\n\nexport type RadCoords = Coords & {\n  radius: number;\n};\n\nexport type Dimension = {\n  width: number;\n  height: number;\n};\n\nexport type LabelDimensions = {\n  title: Dimension;\n  heading: Dimension;\n};\nclass SocialHallNavigation {\n  private width: number;\n\n  private height: number;\n\n  private topPadding: number;\n\n  private bottomPadding: number;\n\n  private circleGutterSpace: number; // gutter space between 2 big circle\n\n  private maxCollisionCheckCount; //\n\n  private data: Array<SocialHallData>;\n\n  private cacheCoords: SocialHallOutput;\n\n  private particles: Array<SocialHallParticle> = [];\n\n  private increaseByPercentage: ScreenDimensions;\n\n  /**\n   * @param increaseByPercentage      lib will increase the width and height of viewport if empty coordinates is not found\n   * @param maxCollisionCheckCount    lib will try `maxCollisionCheckCount` times to fit circle within the minWidth and minHeight, post that it will keep increasing the space, until the circles fits.\n   */\n  constructor({\n    data,\n    cache,\n    minWidth,\n    minHeight,\n    topPadding,\n    maxCollisionCheckCount,\n    increaseByPercentage,\n    bottomPadding,\n  }: SocialHallVizProps) {\n    this.data = data;\n    this.topPadding = topPadding || 0;\n    this.bottomPadding = bottomPadding || 0;\n    this.circleGutterSpace = 120;\n    /*\n      loop number of times in order to find empty coords to draw the UI\n      higher the number closer the cirles smaller the viewport size, but\n      this will lower the performance\n    */\n    this.maxCollisionCheckCount = maxCollisionCheckCount || 750;\n    this.cacheCoords = cache || {\n      width: minWidth,\n      height: minHeight,\n      particles: [],\n    };\n    this.width = this.cacheCoords.width;\n    this.height = this.cacheCoords.height;\n    this.increaseByPercentage = getIncreaseByPercentage(\n      increaseByPercentage || 10,\n    );\n  }\n\n  private randomIntFromRange(): Coords {\n    const minHeight = this.circleGutterSpace + this.topPadding;\n    return {\n      xCoords: Math.floor(\n        Math.random() * (this.width - this.circleGutterSpace * 2 + 1) +\n          this.circleGutterSpace,\n      ),\n      yCoords: Math.floor(\n        Math.random() *\n          (this.height -\n            this.bottomPadding -\n            (this.circleGutterSpace * 2 + 1)) +\n          minHeight,\n      ),\n    };\n  }\n\n  // Method detects 2 circle collides or not.\n  private isCollision(circle1: RadCoords, circle2: RadCoords): boolean {\n    const xDist = circle1.xCoords - circle2.xCoords;\n    const yDist = circle1.yCoords - circle2.yCoords;\n    const radius = circle1.radius + circle2.radius + this.circleGutterSpace;\n    return xDist * xDist + yDist * yDist <= radius * radius;\n  }\n\n  // Method calculates outer circle radius basis on provided childCount\n  // eslint-disable-next-line class-methods-use-this\n  private computeRadius(data: Array<SocialHallData>): Array<SocialHallData> {\n    return data.map((item) => {\n      const childCount = Math.min(item.children.length, 5);\n      // Radius of the bounding box circle\n      const boundingRadius =\n        childCount <= 2\n          ? item.radius * childCount\n          : Math.sqrt((Math.PI * (item.radius * item.radius) * childCount) / 2);\n\n      return {\n        ...item,\n        radius:\n          Math.ceil(boundingRadius) + (childCount > 1 ? boundingOffset : 0),\n      };\n    });\n  }\n\n  // Method add child circles inside parent\n  private circlePacking(\n    data: SocialHallData,\n    boundingCircleXCoords: number,\n    boundingCircleYCoords: number,\n  ): {\n    children: Array<ICirclePacking>;\n    groupCoords: Array<{ x: number; y: number }>;\n    arcCoords: Array<{ x: number; y: number }>;\n    moreChildren: number;\n  } {\n    const children: Array<ICirclePacking> = [];\n    const childCount = data.children.length;\n    const moreChildren = childCount - Math.min(childCount, 5);\n    const groupCoords: Array<{ x: number; y: number }> = [];\n    const boundingRadius =\n      data.radius +\n      (childCount === 1 ? 1 : childCount - 1) * childCount +\n      boundingOffset;\n    for (let i = 0; i < childCount; i++) {\n      // Incase of only 1 circle\n      let changeY = boundingCircleYCoords - data.radius;\n      let changeX = boundingCircleXCoords - data.radius;\n\n      const alpha = ((2 * Math.PI) / Math.min(childCount, 5)) * i;\n      if (childCount > 1) {\n        // changeY = boundingCircleYCoords + Math.sin((degree * Math.PI) / 180) * boundingRadius - data.radius;\n        // changeX = boundingCircleXCoords + Math.cos((degree * Math.PI) / 180) * boundingRadius - data.radius;\n        changeY =\n          Math.sin(alpha) * boundingRadius +\n          boundingCircleYCoords -\n          data.radius;\n        changeX =\n          Math.cos(alpha) * boundingRadius +\n          boundingCircleXCoords -\n          data.radius;\n        // changeX = (data.xCoords ?? 0) + R * Math.cos(alpha);\n        // changeY = (data.yCoords ?? 0) + R * Math.sin(alpha);\n      }\n\n      const xCoords = Math.round(changeX * 1000) / 1000;\n      const yCoords = Math.round(changeY * 1000) / 1000;\n\n      // calculate group coordinates to link between child\n      const x0 = xCoords + data.children[i].radius * Math.sin(alpha);\n      const y0 = yCoords - data.children[i].radius * Math.cos(alpha);\n      const x1 = xCoords - data.children[i].radius * Math.sin(alpha);\n      const y1 = yCoords + data.children[i].radius * Math.cos(alpha);\n      groupCoords.push({ x: x0, y: y0 });\n      groupCoords.push({ x: x1, y: y1 });\n      children.push({ ...data.children[i], xCoords, yCoords });\n    }\n    const arcCoords: Array<{ x: number; y: number }> =\n      this.calculateArcCoordinates(\n        children.slice(0, 5),\n        boundingCircleXCoords - data.radius,\n        boundingCircleYCoords - data.radius,\n        boundingRadius,\n      );\n    return { children, groupCoords, arcCoords, moreChildren };\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private calculateArcCoordinates(\n    children: Array<ICirclePacking>,\n    x: number,\n    y: number,\n    r: number,\n  ): Array<{ x: number; y: number }> {\n    const childCount = children.length;\n    if (childCount === 1) return [];\n    const arcCoords: Array<{ x: number; y: number }> = [];\n    const beta = Math.PI / childCount;\n    for (let i = 0; i <= childCount * 2 - 1; i++) {\n      // finding arc coordinate for Q\n      const CenterBeta = (Math.PI / childCount) * i;\n      if (i % 2 === 0) {\n        arcCoords.push({\n          x: children[i / 2].xCoords,\n          y: children[i / 2].yCoords,\n        });\n      } else {\n        const deltaX = Math.abs(r * Math.cos(beta)) * Math.cos(CenterBeta);\n        const deltaY = Math.abs(r * Math.cos(beta)) * Math.sin(CenterBeta);\n        const arcX = x + deltaX;\n        const arcY = y + deltaY;\n        arcCoords.push({ x: arcX, y: arcY });\n      }\n    }\n    return arcCoords;\n  }\n\n  public generateCoords(): SocialHallOutput {\n    let counter = 0;\n    const { processed, unprocessed } = groupProcessData(\n      this.cacheCoords.particles,\n      this.data,\n    );\n    this.particles = [...processed];\n    if (unprocessed.length) {\n      this.computeRadius(unprocessed).forEach(({ radius }, index) => {\n        let { xCoords, yCoords } = this.randomIntFromRange();\n        for (let i = 0; i < this.particles.length; i++) {\n          counter++;\n          // Incase empty coords are not found increase the viewport proportinally\n          if (counter === this.maxCollisionCheckCount) {\n            counter = 0;\n            this.width += (this.width * this.increaseByPercentage.width) / 100;\n            this.height +=\n              (this.height * this.increaseByPercentage.height) / 100;\n          }\n          const isCollision = this.isCollision(\n            { xCoords, yCoords, radius },\n            { ...this.particles[i] },\n          );\n          if (isCollision) {\n            const coords = this.randomIntFromRange();\n            xCoords = coords.xCoords;\n            yCoords = coords.yCoords;\n            i = -1;\n          }\n        }\n        counter = 0;\n        const circlePacking = this.circlePacking(\n          unprocessed[index],\n          xCoords + unprocessed[index].radius,\n          yCoords + unprocessed[index].radius,\n        );\n        this.particles.push({\n          ...unprocessed[index],\n          xCoords,\n          yCoords,\n          radius,\n          children: circlePacking.children,\n          groupCoords: circlePacking.groupCoords,\n          arcCoords: circlePacking.arcCoords,\n          moreChildren: circlePacking.moreChildren,\n        });\n      });\n    }\n\n    return {\n      width: this.width,\n      height: this.height,\n      particles: this.particles,\n    };\n  }\n}\n\nexport default SocialHallNavigation;\n","import { TransformWrapper, TransformComponent } from 'react-zoom-pan-pinch';\nimport { useEffect, useRef, useState } from 'react';\nimport { DeviceTypeEnum, useDeviceType } from '@/hooks';\nimport {\n  type SocialHallOutput,\n  type SocialHallParticle,\n  type SocialHallVizProps,\n} from './types';\nimport { CirclePacking } from './CirclePacking';\nimport SocialHallNavigation from './helpers/socialHallNavigation';\n\nexport const SocialHallViz = (props: SocialHallVizProps): JSX.Element => {\n  const { onMemberPressed, minHeight, minWidth } = props;\n  const device = useDeviceType();\n\n  const cache = useRef<SocialHallOutput>({\n    width: minWidth,\n    height: minHeight,\n    particles: [],\n  });\n  const [socialHallData, setSocialHallData] = useState<\n    Array<SocialHallParticle>\n  >([]);\n\n  useEffect(() => {\n    const {\n      width: newWidth,\n      height: newHeight,\n      particles,\n    } = new SocialHallNavigation({\n      ...props,\n      cache: cache.current,\n    }).generateCoords();\n    setSocialHallData(particles);\n    cache.current = { width: newWidth, height: newHeight, particles };\n  }, [props]);\n  return (\n    <TransformWrapper initialScale={1} minScale={1} maxScale={1}>\n      <TransformComponent\n        wrapperStyle={{\n          width: '100%',\n          height: '100%',\n          fontFamily: \"Suisse Int'l\",\n          borderRadius: device === DeviceTypeEnum.MOBILE ? '0' : '16px',\n        }}\n      >\n        <div\n          style={{\n            background: 'var(--bg-shmap-brand-secondary-default)',\n            minHeight: `${minHeight}px`,\n            minWidth: `${minWidth}px`,\n          }}\n        >\n          <svg width={cache.current.width} height={cache.current.height}>\n            {socialHallData.map((particle: SocialHallParticle) => (\n              <CirclePacking\n                key={particle.id}\n                onMemberPressed={onMemberPressed}\n                particle={particle}\n              />\n            ))}\n          </svg>\n        </div>\n      </TransformComponent>\n    </TransformWrapper>\n  );\n};\n","import { t } from 'i18next';\nimport { Spacer } from '@/layout';\nimport ROUTES from '@/constants/routes';\nimport { useNavigate } from 'react-router';\nimport { Button } from '@/components/Button';\nimport { Spinner } from '@/components/Spinner';\nimport { TSpan } from '@/components/Typography';\n\nimport { Wrapper, Container, Loader } from './styles';\n\nexport const WaitingForHost = () => {\n  const navigate = useNavigate();\n\n  const onLeave = () => navigate(ROUTES.HOME_NOUM);\n\n  return (\n    <Wrapper>\n      <Container>\n        <Loader>\n          <Spinner />\n        </Loader>\n        <Spacer height={32} />\n        <TSpan\n          font=\"heading-s-bold\"\n          colorToken=\"--text-modal-header-neutral-default\"\n        >\n          Waiting for the Host\n        </TSpan>\n        <Spacer height={8} />\n        <TSpan font=\"body-l\" colorToken=\"--text-modal-neutral-default\">\n          The event will start soon.\n        </TSpan>\n        <Spacer height={24} />\n        <Button\n          tertiary\n          size=\"full\"\n          onClick={() => onLeave()}\n          data-testid=\"leave-event-button\"\n        >\n          {t('noumena.social_hall.hardware_testing_cancel_btn')}\n        </Button>\n      </Container>\n    </Wrapper>\n  );\n};\n","import { useEffect, useRef, useState } from 'react';\n\nexport const useTimer = (defaultTime: number = 0) => {\n  const myInterval = useRef<NodeJS.Timer>();\n  const [elapsedTime, setElapsedTime] = useState<number>(defaultTime);\n\n  useEffect(() => () => clearInterval(myInterval.current), []);\n\n  const startTimer = (timer: number = 0) => {\n    clearInterval(myInterval.current);\n    setElapsedTime(timer);\n    myInterval.current = setInterval(() => {\n      setElapsedTime((time) => time + 1000);\n    }, 1000);\n  };\n\n  return {\n    startTimer,\n    elapsedTime,\n    resetInterval: () => clearInterval(myInterval.current),\n  };\n};\n\nexport default useTimer;\n","import { useCallback, useEffect, useRef, useState } from 'react';\n\nexport const useCountDown = (\n  maxTime: number = 0,\n): { startCountdown: (timer: number) => void; remainTime: number } => {\n  const myInterval = useRef<NodeJS.Timer>();\n  const [remainTime, setRemainTime] = useState(maxTime);\n\n  useEffect(() => {\n    myInterval.current = setInterval(() => {\n      if (remainTime > 1000) {\n        setRemainTime(remainTime - 1000);\n      }\n      if (remainTime < 1000) {\n        setRemainTime(0);\n        clearInterval(myInterval.current);\n      }\n    }, 1000);\n    return () => {\n      clearInterval(myInterval.current);\n    };\n  }, [remainTime]);\n\n  const startCountdown = useCallback((timer: number) => {\n    clearInterval(myInterval.current);\n    setRemainTime(timer);\n  }, []);\n\n  return {\n    remainTime,\n    startCountdown,\n  };\n};\n\nexport default useCountDown;\n","import { useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useError } from '@/hooks/useError';\nimport {\n  useUserActiveKnocksQuery,\n  useUserOwnKnocksQuery,\n} from '@/apollo/graphql';\n\nexport const useRefreshKnocks = () => {\n  const { logError } = useError();\n  const { id = '' } = useParams();\n\n  const userOwnKnocks = useUserOwnKnocksQuery({\n    skip: true,\n    variables: {\n      socialHallId: id,\n    },\n  });\n\n  const userActiveKnocks = useUserActiveKnocksQuery({\n    skip: true,\n    variables: {\n      socialHallId: id,\n    },\n  });\n\n  const refreshActiveKnocks = async () => {\n    try {\n      // await userActiveKnocks.refetch();\n    } catch (e) {\n      logError(e, '');\n    }\n  };\n\n  const refreshOwnKnocks = async () => {\n    try {\n      // await userOwnKnocks.refetch();\n    } catch (e) {\n      logError(e, '');\n    }\n  };\n\n  const refreshAllKnocks = async () => {\n    try {\n      // await userActiveKnocks.refetch();\n      // await userOwnKnocks.refetch();\n    } catch (e) {\n      logError(e, '');\n    }\n  };\n\n  const useOwnKnocksData = useMemo(\n    () => userOwnKnocks.data?.userOwnKnocks,\n    [userOwnKnocks.data?.userOwnKnocks],\n  );\n  const userActiveKnocksData = useMemo(\n    () => userActiveKnocks.data?.userActiveKnocks,\n    [userActiveKnocks.data?.userActiveKnocks],\n  );\n\n  return {\n    refreshAllKnocks,\n    refreshOwnKnocks,\n    refreshActiveKnocks,\n    userOwnKnocks: useOwnKnocksData,\n    userActiveKnocks: userActiveKnocksData,\n  };\n};\n\nexport default useRefreshKnocks;\n","import { useState } from 'react';\nimport { useError } from '@/hooks/useError';\nimport {\n  useAcceptKnockMutation,\n  useCancelKnockMutation,\n  useDeclineKnockMutation,\n  useJoinGroupWithoutKnockingMutation,\n  useKnockMutation,\n} from '@/apollo/graphql';\nimport { type Maybe } from '@/apollo/generated/types';\nimport { useSocialHallContext } from '@/providers/SocialHallProvider';\nimport { useRefreshKnocks } from './useRefreshKnocks';\n\nexport const useKnockUser = () => {\n  const { logError } = useError();\n  const [knockMutation] = useKnockMutation();\n  const {\n    refreshVisualization,\n    userActiveGroupData,\n    socialHallAttendeesAndGroups,\n  } = useSocialHallContext();\n  const { refreshOwnKnocks, refreshActiveKnocks } = useRefreshKnocks();\n\n  const [acceptKnockMutation] = useAcceptKnockMutation();\n  const [cancelKnockMutation] = useCancelKnockMutation();\n  const [declineKnockMutation] = useDeclineKnockMutation();\n  const [joinGroupWithoutKnocking, { loading: joiningGroupAsHost }] =\n    useJoinGroupWithoutKnockingMutation();\n\n  const [knockLoading, setKnockLoading] = useState<boolean>(false);\n  const [acceptLoading, setAcceptLoading] = useState<boolean>(false);\n  const [declineLoading, setDeclineLoading] = useState<boolean>(false);\n\n  const knockUser = async (\n    hallAttendeeId?: Maybe<string>,\n    groupId?: Maybe<string>,\n    knockMessage?: string,\n  ) => {\n    if (groupId || hallAttendeeId) {\n      try {\n        setKnockLoading(true);\n        await knockMutation({\n          variables: {\n            hallAttendeeId,\n            groupId,\n            knockMessage,\n          },\n        });\n        refreshOwnKnocks();\n      } catch (err) {\n        logError(err, '');\n      } finally {\n        setKnockLoading(false);\n      }\n    }\n  };\n\n  const acceptKnock = async (knockId: string) => {\n    try {\n      setAcceptLoading(true);\n      await acceptKnockMutation({ variables: { knockId } });\n      await refreshActiveKnocks();\n      await refreshVisualization();\n    } catch (e) {\n      logError(e, '');\n    } finally {\n      setAcceptLoading(false);\n    }\n  };\n\n  // Method to decline someone else knocks\n  const declineKnock = async (knockId: string) => {\n    try {\n      setDeclineLoading(true);\n      await declineKnockMutation({ variables: { knockId } });\n      await refreshActiveKnocks();\n    } catch (e) {\n      logError(e, '');\n    } finally {\n      setDeclineLoading(false);\n    }\n  };\n\n  // Method to cancel my knock\n  const cancelKnock = async (knockId: string) => {\n    try {\n      setDeclineLoading(true);\n      await cancelKnockMutation({ variables: { knockId } });\n      await refreshOwnKnocks();\n    } catch (e) {\n      logError(e, '');\n    } finally {\n      setDeclineLoading(false);\n    }\n  };\n\n  // Join to a group as host\n  const joinGroupAsHost = async (groupId: string) => {\n    try {\n      await joinGroupWithoutKnocking({\n        variables: { groupId },\n        onCompleted: () => {\n          userActiveGroupData?.refetch();\n          socialHallAttendeesAndGroups?.refetch();\n        },\n      });\n    } catch (e) {\n      logError(e, '');\n    }\n  };\n\n  return {\n    knockUser,\n    cancelKnock,\n    acceptKnock,\n    declineKnock,\n    joinGroupAsHost,\n    knockLoading,\n    acceptLoading,\n    declineLoading,\n    joiningGroupAsHost,\n  };\n};\n\nexport default useKnockUser;\n","import { useEffect, useCallback, useState } from 'react';\nimport { useKnockUpdatesSubscription } from '@/apollo/graphql';\nimport { type Knock, KnockType } from '@/apollo/generated/types';\nimport { HideDeclineKnockTimer } from '@/screens/SocialHall/const';\nimport { useSocialHallContext } from '@/providers/SocialHallProvider';\nimport { useRefreshKnocks } from '../useRefreshKnocks';\n\nexport const useKnockSubscription = () => {\n  const [declinedKnocks, setDeclinedKnocks] = useState<Knock[]>([]);\n  const { socialHallAttendeesAndGroups, userActiveGroupData, socialHallId } =\n    useSocialHallContext();\n\n  const { userOwnKnocks, refreshAllKnocks, refreshOwnKnocks } =\n    useRefreshKnocks();\n\n  const { data } = useKnockUpdatesSubscription({\n    variables: {\n      socialHallId,\n    },\n  });\n\n  const updateDeclinedKnocksState = useCallback(\n    (knockId: string) => {\n      setTimeout(() => {\n        const knocks = declinedKnocks.filter(({ _id }) => _id === knockId);\n        setDeclinedKnocks(knocks);\n      }, HideDeclineKnockTimer);\n    },\n    [declinedKnocks],\n  );\n\n  const handleKnockDeclined = async (knockId: string) => {\n    const declined = userOwnKnocks?.data?.find(\n      (_knock) => _knock?._id === knockId,\n    );\n    const duplicateKnocks = declinedKnocks.find(({ _id }) => _id === knockId);\n\n    if (!duplicateKnocks) {\n      await refreshOwnKnocks();\n\n      // keep adding new declined knocks on top\n      if (declined) {\n        const knocks: Knock[] = [\n          { ...declined!, knockStatus: KnockType.Declined } as Knock,\n          ...declinedKnocks,\n        ];\n        setDeclinedKnocks(knocks);\n        updateDeclinedKnocksState(declined._id);\n      }\n    }\n  };\n\n  const handleKnockAccepted = () => {\n    refreshAllKnocks();\n    userActiveGroupData?.refetch();\n    socialHallAttendeesAndGroups?.refetch();\n  };\n\n  useEffect(() => {\n    if (data?.knockUpdates.event !== undefined) {\n      if (data?.knockUpdates.event === KnockType.Declined) {\n        handleKnockDeclined(data?.knockUpdates._id);\n      } else if (data?.knockUpdates.event === KnockType.Accepted) {\n        handleKnockAccepted();\n      } else if (data?.knockUpdates.event === KnockType.Cancelled) {\n        refreshOwnKnocks();\n      } else {\n        refreshAllKnocks();\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data?.knockUpdates.event, data?.knockUpdates._id]);\n\n  return {\n    declinedKnocks,\n  };\n};\n\nexport default useKnockSubscription;\n","/* eslint-disable no-console */\nimport { useCallback, useEffect } from 'react';\nimport { type RtmMessage, type RtmTextMessage } from '@/facade/agoraRTM';\nimport {\n  type SubscriptionContent,\n  SubscriptionType,\n} from '@/screens/SocialHall/types';\nimport { SUBSCRIPTION_MESSAGE } from '@/screens/SocialHall/const';\nimport { EventsStatus, type UserOutput } from '@/apollo/generated/types';\nimport { useUpdateGetEventByIdCache } from '@/features/events/hooks/gql/useUpdateGetEventByIdCache';\nimport { useSocialHallCallContext } from '@/providers/SocialHallCallProvider';\nimport { useUpdateUserActiveSocialHallGroupCache } from '../gql/useUpdateUserActiveSocialHallGroupCache';\n\nexport const useAgoraSubscriptionHandler = () => {\n  const {\n    updateGroupName,\n    updateRaiseHandUsersCache,\n    updateNewAttendeeOnCallCache,\n    removeAttendeeFromCallCache,\n  } = useUpdateUserActiveSocialHallGroupCache();\n  const { updateEventStatus } = useUpdateGetEventByIdCache();\n  const {\n    rtmEngine,\n    rtmChannel,\n    onLeaveCall,\n    onHostBlocked,\n    toggleMuteCall,\n    onRemoteUserLeftChannel,\n  } = useSocialHallCallContext();\n\n  const onChannelMessageSubscriptionHandler = useCallback(\n    (message: RtmMessage, memberId: string): void => {\n      console.log('===========Agora Subsctiption Start============');\n      console.log(message, memberId);\n      console.log('===========Agora Subsctiption End =============');\n\n      try {\n        const msg = message as RtmTextMessage;\n        const { type, data, description } = JSON.parse(\n          msg.text,\n        ) as SubscriptionContent;\n\n        if (description === SUBSCRIPTION_MESSAGE) {\n          switch (type) {\n            case SubscriptionType.RAISED_HAND:\n              updateRaiseHandUsersCache(data as boolean, memberId);\n              break;\n            // Peer2Peer message\n            case SubscriptionType.MUTE_ATTENDEE_IN_GROUP_CALL:\n              toggleMuteCall();\n              break;\n            // Peer2Peer message\n            case SubscriptionType.UNMUTE_ATTENDEE_IN_GROUP_CALL:\n              toggleMuteCall();\n              break;\n            case SubscriptionType.NEW_ATTENDEE_IN_GROUP_CALL:\n              updateNewAttendeeOnCallCache(data as UserOutput);\n              break;\n            // Peer2Peer message\n            case SubscriptionType.BLOCK_ATTENDEE_ON_GROUP_CALL:\n              onHostBlocked();\n              break;\n            case SubscriptionType.QUIT_ATTENDEE_ON_SOCIAL_HALL:\n              setTimeout(() => onRemoteUserLeftChannel(memberId), 2000);\n              removeAttendeeFromCallCache(memberId);\n              break;\n            case SubscriptionType.UPDATE_EVENT_STATUS:\n              if ((data as EventsStatus) === EventsStatus.Cancelled) {\n                onLeaveCall();\n              }\n              updateEventStatus(data as EventsStatus);\n              break;\n            case SubscriptionType.UPDATE_GROUP_NAME:\n              updateGroupName(data as EventsStatus);\n              break;\n            default:\n              break;\n          }\n        }\n      } catch (err) {\n        // no error handling required\n        console.log(err);\n      }\n    },\n    [\n      onLeaveCall,\n      onHostBlocked,\n      toggleMuteCall,\n      updateGroupName,\n      updateEventStatus,\n      onRemoteUserLeftChannel,\n      updateRaiseHandUsersCache,\n      removeAttendeeFromCallCache,\n      updateNewAttendeeOnCallCache,\n    ],\n  );\n\n  const bindEvent = useCallback(() => {\n    if (!rtmEngine && !rtmChannel) {\n      return;\n    }\n    rtmEngine?.on('MessageFromPeer', onChannelMessageSubscriptionHandler);\n    rtmChannel?.on('ChannelMessage', onChannelMessageSubscriptionHandler);\n  }, [rtmEngine, rtmChannel, onChannelMessageSubscriptionHandler]);\n\n  useEffect(() => {\n    bindEvent();\n    return () => {\n      rtmEngine?.off('MessageFromPeer', onChannelMessageSubscriptionHandler);\n      rtmChannel?.off('ChannelMessage', onChannelMessageSubscriptionHandler);\n    };\n  }, [bindEvent, rtmEngine, rtmChannel, onChannelMessageSubscriptionHandler]);\n\n  return {\n    onChannelMessageSubscriptionHandler,\n  };\n};\n\nexport default useAgoraSubscriptionHandler;\n","import { useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport { useSocialHallCallContext } from '@/providers';\nimport {\n  useVideoMasonryLayoutCalc,\n  type VideoMasonryLayoutCalc,\n} from './useVideoMasonryLayoutCalc';\n\ntype SpeakerViewProps = {\n  clientWidth: number;\n  clientHeight: number;\n  showChatPanel?: boolean;\n  showMembersPanel?: boolean;\n};\n\nexport const useSpeakerView = ({\n  clientHeight,\n  clientWidth,\n  showChatPanel,\n  showMembersPanel,\n}: SpeakerViewProps) => {\n  const maxVideoPerPage = 1;\n\n  const { screenSharingLocalUserFeed, screenSharingRemoteUserFeed } =\n    useSocialHallCallContext();\n\n  const elemRef = useRef<HTMLDivElement | null>(null);\n  const { calculateLayout } = useVideoMasonryLayoutCalc();\n  const [dimension, setDimension] = useState<VideoMasonryLayoutCalc>({\n    width: 0,\n    cols: 0,\n    height: 0,\n    rows: 0,\n  });\n\n  useLayoutEffect(() => {\n    if (elemRef.current) {\n      setDimension(() =>\n        calculateLayout({\n          clientWidth,\n          clientHeight,\n          maxVideoPerPage,\n          videoCount: 1,\n        }),\n      );\n    }\n  }, [calculateLayout, clientHeight, clientWidth]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      window.dispatchEvent(new Event('resize'));\n    }, 250);\n  }, [\n    clientWidth,\n    screenSharingLocalUserFeed,\n    screenSharingRemoteUserFeed,\n    showChatPanel,\n    showMembersPanel,\n  ]);\n\n  const maxHeight = useMemo(\n    () => (dimension.rows ? `${dimension.rows * dimension.height}px` : '100vh'),\n    [dimension],\n  );\n\n  return {\n    elemRef,\n    maxHeight,\n    dimension,\n  };\n};\n","import { useMemo, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { formatTime } from '@/utils/date';\n\nimport { EventsStatus } from '@/apollo/generated/types';\nimport { useSocialHallEventContext } from '@/providers/SocialHallEventProvider';\nimport { useCountDown } from './useCountdown';\nimport { useTimer } from './useTimer';\n\nexport const useHeaderTimer = () => {\n  const { remainTimeForEvent, eventDetails } = useSocialHallEventContext();\n\n  const { t } = useTranslation();\n  const { startCountdown, remainTime } = useCountDown();\n  const { startTimer, elapsedTime } = useTimer();\n\n  useEffect(() => {\n    if (\n      [\n        EventsStatus.PreLive,\n        EventsStatus.PreEvent,\n        EventsStatus.PostEventEnded,\n      ].includes(eventDetails?.status!)\n    ) {\n      startCountdown(remainTimeForEvent);\n    } else {\n      startTimer(remainTimeForEvent);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [remainTimeForEvent]);\n\n  const formattedTime = useMemo(() => {\n    if (\n      eventDetails?.status === EventsStatus.PreLive ||\n      eventDetails?.status === EventsStatus.PreEvent\n    ) {\n      return `${t('noumena.social_hall.to_the_main_event', {\n        remainTime: formatTime(remainTime),\n      })}`;\n    }\n\n    if (eventDetails?.status === EventsStatus.PostEventEnded) {\n      return `${t('noumena.social_hall.to_the_end_event', {\n        remainTime: formatTime(remainTime),\n      })}`;\n    }\n    return formatTime(elapsedTime);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [elapsedTime, remainTime, eventDetails?.status]);\n\n  return {\n    formattedTime,\n    remainTime,\n  };\n};\n\nexport default useHeaderTimer;\n","import { debounce } from 'lodash';\nimport {\n  type Dispatch,\n  type SetStateAction,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { SocialHallUtils } from '@/utils/socialHall';\nimport { AGORA_EVENT, USER_OFFLINE_REASON } from '@/constants/socialHall';\nimport {\n  type ConnectionState,\n  type IAgoraRTCRemoteUser,\n  type UID,\n} from '@/facade/agora';\nimport { REMOVE_OFFLINE_USER } from '@/screens/SocialHall/const';\nimport { useSocialHallContext } from '@/providers/SocialHallProvider';\nimport { useSocialHallCallContext } from '@/providers/SocialHallCallProvider';\n\nexport const useUserOffline = (): [UID[], Dispatch<SetStateAction<UID[]>>] => {\n  const timer = useRef<NodeJS.Timeout>();\n  /**\n   * We will use connectionLostUsers only to hide from stage, if user\n   * network revives then we will unhide it.\n   */\n  const [connectionLostUsers, setConnectionLostUsers] = useState<UID[]>([]);\n  const { userActiveGroupData } = useSocialHallContext();\n  const { rtcEngine, rtmChannel } = useSocialHallCallContext();\n\n  /**\n   * We're monitoring the RTM `onMemberLeft` event as it's triggered\n   * when user connection revival completely fails, such as when a user\n   * goes offline or closes the tab where browser fails to trigger `window.unload` event.\n   */\n  const onMemberConnectionTemporarilyLost = useCallback(\n    (user: IAgoraRTCRemoteUser, reason: string) => {\n      if (reason === USER_OFFLINE_REASON.SERVER_TIME_OUT) {\n        timer.current = setTimeout(() => {\n          setConnectionLostUsers((users) =>\n            SocialHallUtils.updateUsers(true, user.uid, users),\n          );\n        }, REMOVE_OFFLINE_USER);\n      }\n    },\n    [setConnectionLostUsers],\n  );\n\n  const onChannelJoinedSuccess = useCallback((user) => {\n    clearTimeout(timer.current);\n    setConnectionLostUsers((users) =>\n      SocialHallUtils.updateUsers(false, user.uid, users),\n    );\n  }, []);\n\n  rtcEngine?.on(\n    AGORA_EVENT.CONNECTION_STATE_CHANGE,\n    debounce((currentState: ConnectionState, prevState: ConnectionState) => {\n      if (currentState === 'CONNECTED' && prevState === 'RECONNECTING') {\n        userActiveGroupData?.refetch();\n      }\n    }, 2000),\n  );\n\n  const bindEvent = useCallback(() => {\n    if (!rtmChannel || !rtcEngine) {\n      return;\n    }\n    rtcEngine?.on(AGORA_EVENT.USER_JOINED, onChannelJoinedSuccess);\n    rtcEngine?.on(AGORA_EVENT.USER_LEFT, onMemberConnectionTemporarilyLost);\n  }, [\n    rtcEngine,\n    rtmChannel,\n    onChannelJoinedSuccess,\n    onMemberConnectionTemporarilyLost,\n  ]);\n\n  useEffect(() => {\n    bindEvent();\n    return () => {\n      rtcEngine?.off(AGORA_EVENT.USER_JOINED, onChannelJoinedSuccess);\n      rtcEngine?.off(AGORA_EVENT.USER_LEFT, onMemberConnectionTemporarilyLost);\n    };\n  }, [\n    bindEvent,\n    rtcEngine,\n    rtmChannel,\n    onChannelJoinedSuccess,\n    onMemberConnectionTemporarilyLost,\n  ]);\n\n  return [connectionLostUsers, setConnectionLostUsers];\n};\n","import { useCallback } from 'react';\nimport { t } from 'i18next';\nimport * as Sentry from '@sentry/react';\nimport { useChangeGroupNameMutation } from '@/apollo/graphql';\nimport { useToast } from '@/hooks/toast';\nimport { useSocialHallCallContext } from '@/providers/SocialHallCallProvider';\nimport { SubscriptionType } from '@/screens/SocialHall/types';\n\nexport const useSocialHallData = () => {\n  const { addToast } = useToast();\n  const { onSendSubscriptionMessage } = useSocialHallCallContext();\n  const [\n    changeGroupName,\n    { loading: isChangingGroupName, error: changeGroupNameError },\n  ] = useChangeGroupNameMutation();\n\n  const handleError = useCallback(\n    (networkError: String | Error | null) => {\n      addToast(\n        'error',\n        'none',\n        `${t('noumena.toast_error.text')}: ${networkError}`,\n      );\n    },\n    [addToast],\n  );\n\n  const handleChangeGroupName = useCallback(\n    async (groupId: string, name: string) => {\n      let isSuccess;\n      await changeGroupName({\n        variables: {\n          groupId,\n          input: { name },\n        },\n        onError: ({ networkError = null, graphQLErrors = [] }) => {\n          isSuccess = false;\n          const [err] = graphQLErrors;\n          handleError(err?.message ?? networkError);\n          Sentry.captureException(new Error(err?.message ?? networkError), {\n            tags: {\n              section: 'createMultipleEventInvitation',\n            },\n          });\n        },\n        onCompleted: () => {\n          isSuccess = true;\n          onSendSubscriptionMessage({\n            type: SubscriptionType.UPDATE_GROUP_NAME,\n            data: name,\n          });\n        },\n      });\n      return isSuccess;\n    },\n    [changeGroupName, handleError, onSendSubscriptionMessage],\n  );\n  return { handleChangeGroupName, isChangingGroupName, changeGroupNameError };\n};\n\nexport default useSocialHallData;\n","import { useEffect } from 'react';\n\nexport const useMediaDeviceUpdated = (callback: () => void) => {\n  useEffect(() => {\n    if (!navigator.mediaDevices) {\n      // eslint-disable-next-line no-console\n      console.warn('MediaDevices API not available');\n      return;\n    }\n\n    navigator.mediaDevices.ondevicechange = () => callback();\n  }, [callback]);\n};\n","import { useCallback, useState } from 'react';\n\nexport const useMediaPermissionPopup = () => {\n  const [showPermissionPopup, setShowPermissionPopup] = useState<{\n    audio: boolean | null;\n    video: boolean | null;\n  }>({\n    audio: null,\n    video: null,\n  });\n\n  const onTogglePopup = useCallback(\n    (type: 'audio' | 'video') => {\n      setShowPermissionPopup((permission) => ({\n        ...permission,\n        [type]: !showPermissionPopup[type],\n      }));\n    },\n    [showPermissionPopup],\n  );\n\n  const onBothMediaBlocked = useCallback(() => {\n    setShowPermissionPopup({\n      audio: true,\n      video: true,\n    });\n  }, []);\n\n  return {\n    onTogglePopup,\n    onBothMediaBlocked,\n    showPermissionPopup,\n  };\n};\n","import { useEffect, useState } from 'react';\nimport { type UserOutput } from '@/apollo/generated/types';\nimport {\n  circleRadius,\n  gutterSpace,\n  type SocialHallData,\n} from '@/features/socialHall/components/Visualization';\nimport { useSocialHallContext } from '@/providers/SocialHallProvider';\nimport { notEmpty } from '@/utils/notEmpty';\nimport { capitalizeAllWord } from '@/utils/strings';\n\nexport const useSocialHallUsersAndGroupsData = () => {\n  const [users, setUsers] = useState<SocialHallData[]>([]);\n  const [groups, setGroups] = useState<SocialHallData[]>([]);\n  const { socialHallAttendeesAndGroups } = useSocialHallContext();\n\n  const getChildData = (user: UserOutput) => ({\n    radius: circleRadius,\n    gutterSpace,\n    title: capitalizeAllWord(user?.firstName ?? ' '),\n    subTitle: capitalizeAllWord(user?.title ?? ' '),\n    background: user?.profile?.profilePicture,\n    chamberId: user?.chamber?._id,\n  });\n\n  useEffect(() => {\n    const shUsers =\n      (socialHallAttendeesAndGroups?.data?.socialHallAttendee?.data || [])\n        // .filter((attendee) => !!attendee?.attendeeId?.SocialHallTCAccepted)\n        .map((attendee) => ({\n          id: `user-${attendee?.attendeeId?._id || `${Date.now()}`}`, // user?.SocialHallTCAccepted should be used instead for actual usage\n          radius: circleRadius,\n          title: attendee?.attendeeId?.firstName || ' ',\n          subTitle: attendee?.attendeeId?.title || ' ',\n          children: [\n            {\n              id: attendee?.attendeeId?._id || '',\n              ...getChildData(attendee?.attendeeId!),\n            },\n          ],\n        })) ?? [];\n\n    const shGroups =\n      (socialHallAttendeesAndGroups?.data?.socialHallGroups?.data || [])\n        .filter(notEmpty)\n        ?.map((group) => {\n          const children =\n            group?.users?.filter(notEmpty)?.map((groupUser) => ({\n              id: `group-${groupUser?._id || ''}`,\n              ...getChildData(groupUser),\n            })) ?? [];\n          return {\n            id: group?._id ?? '',\n            radius: circleRadius,\n            title: group.name || group.channelName || '',\n            children,\n          };\n        }) ?? [];\n    setUsers(shUsers);\n    setGroups(shGroups);\n  }, [\n    socialHallAttendeesAndGroups?.data?.socialHallAttendee?.data,\n    socialHallAttendeesAndGroups?.data?.socialHallGroups?.data,\n  ]);\n\n  return {\n    users,\n    groups,\n  };\n};\n\nexport default useSocialHallUsersAndGroupsData;\n","import { useMemo } from 'react';\nimport { type QueryResult } from '@apollo/client';\nimport {\n  type UserActiveSocialHallGroupQuery,\n  type SocialHallAttendeesAndGroupsQuery,\n  type SocialHallAttendeesAndGroupsQueryVariables,\n} from '@/apollo/graphql';\n\nexport const useCheckIfEventHasSocialHallAttendees = (\n  socialHallAttendeesAndGroups?: QueryResult<\n    SocialHallAttendeesAndGroupsQuery,\n    SocialHallAttendeesAndGroupsQueryVariables\n  >,\n  activeSocialHallGroup?:\n    | UserActiveSocialHallGroupQuery['userActiveSocialHallGroup']\n    | null,\n) =>\n  useMemo(() => {\n    const socialHallGroups =\n      socialHallAttendeesAndGroups?.data?.socialHallGroups?.data;\n    let socialHallMember;\n    if (socialHallGroups && activeSocialHallGroup?.hosts) {\n      const socialHallUsersData = socialHallGroups[0]?.users;\n      if (socialHallUsersData?.length === 1 && socialHallUsersData[0]?._id) {\n        socialHallMember = activeSocialHallGroup?.hosts.includes(\n          socialHallUsersData[0]?._id,\n        );\n      }\n    }\n    return socialHallMember;\n  }, [\n    socialHallAttendeesAndGroups?.data?.socialHallGroups?.data,\n    activeSocialHallGroup?.hosts,\n  ]);\n\nexport default useCheckIfEventHasSocialHallAttendees;\n","import styled from 'styled-components';\nimport { cssVar, rgba } from 'polished';\nimport { devices, sizes } from '@/constants/devices';\n\nexport const Layout = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  #main-header {\n    width: 100%;\n  }\n`;\n\nexport const Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow-y: auto;\n  z-index: 1;\n  height: 100%;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex: 1;\n  overflow-y: auto;\n  position: relative;\n`;\n\nexport const SideBarWrapper = styled.div<{ visible: boolean }>`\n  z-index: 999;\n  flex-direction: row;\n  height: 100%;\n  overflow-y: auto;\n  background-color: white;\n  width: 100%;\n  position: absolute;\n  display: ${({ visible }) => (visible ? 'flex' : 'none')};\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    display: none;\n  }\n  @media ${devices.LAPTOP} {\n    display: flex;\n    width: unset;\n    position: relative;\n  }\n`;\n\nexport const Background = styled.div`\n  flex: 1;\n  background-color: ${rgba(cssVar('--shadow-neutral-dark'), 0.2)}\n  display: none;\n  @media (min-width: ${sizes.TABLET}) and (max-width: ${sizes.TABLET_L}) {\n    display: block;\n  }\n`;\n\nexport const Children = styled.div<{ visible: boolean }>`\n  flex: 1;\n  overflow: hidden;\n  padding: 0;\n  visibility: ${({ visible }) => (visible ? 'visible' : 'hidden')};\n  @media ${devices.TABLET} {\n    visibility: visible;\n  }\n  @media ${devices.LAPTOP} {\n    visibility: visible;\n  }\n`;\n\nexport const BottomBarWrapper = styled.div<{ visible: boolean }>`\n  width: 100%;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  background: var(--bg-body-neutral-alt-default);\n  box-shadow: 0px 4px 32px ${rgba(cssVar('--shadow-neutral-default'), 0.08)};\n  visibility: ${({ visible }) => (visible ? 'visible' : 'hidden')};\n  display: flex;\n  border-radius: 16px 16px 0px 0px;\n  @media ${devices.TABLET} {\n    border-radius: 0;\n  }\n  @media ${devices.LAPTOP} {\n    display: none;\n  }\n`;\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Header } from '@/components/Header';\nimport { MainHeader } from '@/layout/MainHeader';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useLaunchDarkly, useToggle, useWindowDimensions } from '@/hooks';\nimport { UserUtil } from '@/utils/user';\nimport {\n  SideBar,\n  BottomBar,\n  InviteAttendeeModal,\n  ChangeGroupNameModal,\n  HostHeader,\n  AttendeeHeader,\n} from '@/features/socialHall/components';\nimport { breakpoints } from '@/constants/devices';\nimport { Modal, ModalBody, ModalHeader } from '@/components/ExtendedModal';\nimport { EventAttendeesModal } from '@/screens/Chamber/components/elements/CalendarEvent/modals/EventAttendeesModal';\nimport { useSocialHallContext, useSocialHallEventContext } from '@/providers';\nimport { GuestHeader } from '@/layout/GuestHeader';\nimport { Spacer } from '../Stack';\nimport * as S from './styles';\nimport { type LayoutProps } from './types';\nimport { AppLayout } from '../AppLayout';\n\nexport const SocialHallLayout = (props: LayoutProps) => {\n  const { showBuzzRoom, socialHallAttendeesAndGroups } = useSocialHallContext();\n  const { isEventHost, eventDetails, isMainEvent } =\n    useSocialHallEventContext();\n  const { children } = props;\n  const attendeesRef =\n    useRef<React.ElementRef<typeof EventAttendeesModal>>(null);\n  const { user, isUnregistered } = useAuth();\n  const { width } = useWindowDimensions();\n  const { t } = useTranslation();\n  const [visibilityViz, setVisibilityViz] = useState<boolean>(true);\n  const [showInviteModal, setShowInviteModal] = useState<boolean>(false);\n  const [showChangeGroupName, setShowChangeGroupName] = useToggle(false);\n\n  const { flags } = useLaunchDarkly();\n\n  const isMobile = width <= breakpoints.MOBILE_MAX;\n\n  const urls = useMemo(() => {\n    const profileUrls =\n      socialHallAttendeesAndGroups?.data?.socialHallAttendee?.data?.map(\n        (attendee) => attendee?.attendeeId?.profile?.profilePicture ?? '',\n      );\n    socialHallAttendeesAndGroups?.data?.socialHallGroups?.data?.map((group) => {\n      group?.users?.map((u) =>\n        profileUrls?.push(u?.profile?.profilePicture ?? ''),\n      );\n      return undefined;\n    });\n    return profileUrls ?? [];\n  }, [socialHallAttendeesAndGroups]);\n\n  const toggle = () => setShowInviteModal((val) => !val);\n\n  const onViewAttendees = useCallback(() => {\n    attendeesRef.current?.open(eventDetails?._id ?? '', !!isEventHost);\n  }, [isEventHost, eventDetails]);\n\n  useEffect(() => {\n    if (isMainEvent && showChangeGroupName) setShowChangeGroupName();\n  }, [isMainEvent, setShowChangeGroupName, showChangeGroupName]);\n\n  const mainContent = (\n    <>\n      <S.Container>\n        {isEventHost && eventDetails?._id && !showBuzzRoom && (\n          <HostHeader\n            onViewAttendees={onViewAttendees}\n            onInviteAttendees={toggle}\n            onChangeGroupName={setShowChangeGroupName}\n          />\n        )}\n        {!isEventHost && eventDetails?._id && !showBuzzRoom && (\n          <AttendeeHeader\n            onViewAttendees={onViewAttendees}\n            onChangeGroupName={setShowChangeGroupName}\n          />\n        )}\n        <S.Content>\n          {!showBuzzRoom && (\n            <S.SideBarWrapper visible={!visibilityViz}>\n              <SideBar />\n              <S.Background onClick={() => setVisibilityViz(true)} />\n            </S.SideBarWrapper>\n          )}\n          <S.Children visible={visibilityViz}>{children}</S.Children>\n          {!showBuzzRoom && (\n            <S.BottomBarWrapper visible={visibilityViz}>\n              <BottomBar\n                urls={urls}\n                onClickShowAll={() => setVisibilityViz(false)}\n              />\n            </S.BottomBarWrapper>\n          )}\n        </S.Content>\n      </S.Container>\n      {isMobile && (\n        <Modal\n          open={!visibilityViz}\n          isFullScreen\n          noPaddingNoBorder\n          enableCloseButton\n          closeButtonStyles={{ enforceRight: true }}\n          onClose={() => setVisibilityViz(true)}\n        >\n          <Spacer height={26} />\n          <ModalHeader isFullScreen>\n            {t(`noumena.social_hall.see_event_attendees`)}\n          </ModalHeader>\n          <ModalBody isFullScreen mobileFlex overflowY=\"hidden\">\n            <SideBar />\n          </ModalBody>\n        </Modal>\n      )}\n      <EventAttendeesModal ref={attendeesRef} />\n      <InviteAttendeeModal isOpen={showInviteModal} handleClose={toggle} />\n      <ChangeGroupNameModal\n        isOpen={showChangeGroupName && !isMainEvent}\n        onClose={setShowChangeGroupName}\n      />\n    </>\n  );\n\n  if (flags.newAppNavigation) {\n    return (\n      <AppLayout.Layout\n        mode=\"focused\"\n        topNavbar={\n          isUnregistered ? (\n            <GuestHeader leftNavButton={true} />\n          ) : (\n            <AppLayout.TopBar />\n          )\n        }\n      >\n        {mainContent}\n      </AppLayout.Layout>\n    );\n  }\n\n  return (\n    <S.Layout>\n      <Header isBorderRadius={false}>\n        {isUnregistered ? (\n          <GuestHeader leftNavButton={true} />\n        ) : (\n          <MainHeader\n            avatar={UserUtil.getProfilePicture(user) || undefined}\n            userName={user?.firstName || undefined}\n          />\n        )}\n      </Header>\n      {mainContent}\n    </S.Layout>\n  );\n};\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Header } from '@/components/Header';\nimport { MainHeader } from '@/layout/MainHeader';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useToggle, useWindowDimensions } from '@/hooks';\nimport { UserUtil } from '@/utils/user';\n\nimport {\n  HostHeader,\n  AttendeeHeader,\n} from '@/features/socialHall/components/Header';\nimport {\n  SideBar,\n  BottomBar,\n  InviteAttendeeModal,\n  ChangeGroupNameModal,\n} from '@/features/socialHall/components';\nimport { breakpoints } from '@/constants/devices';\nimport { Modal, ModalBody, ModalHeader } from '@/components/ExtendedModal';\nimport { EventAttendeesModal } from '@/screens/Chamber/components/elements/CalendarEvent/modals/EventAttendeesModal';\nimport { useSocialHallContext, useSocialHallEventContext } from '@/providers';\nimport * as S from './styles';\nimport { type LayoutProps } from './types';\nimport { Spacer } from '../Stack';\n\nexport const SocialHallLayoutOld = (props: LayoutProps) => {\n  const { showBuzzRoom, socialHallAttendeesAndGroups } = useSocialHallContext();\n  const { isEventHost, eventDetails, isMainEvent } =\n    useSocialHallEventContext();\n  const { children } = props;\n  const attendeesRef =\n    useRef<React.ElementRef<typeof EventAttendeesModal>>(null);\n  const { user } = useAuth();\n  const { width } = useWindowDimensions();\n  const { t } = useTranslation();\n  const [visibilityViz, setVisibilityViz] = useState<boolean>(true);\n  const [showInviteModal, setShowInviteModal] = useState<boolean>(false);\n  const [showChangeGroupName, setShowChangeGroupName] = useToggle(false);\n\n  const isMobile = useMemo(() => width <= breakpoints.MOBILE_MAX, [width]);\n\n  const urls = useMemo(() => {\n    const profileUrls =\n      socialHallAttendeesAndGroups?.data?.socialHallAttendee?.data?.map(\n        (attendee) => attendee?.attendeeId?.profile?.profilePicture ?? '',\n      );\n    socialHallAttendeesAndGroups?.data?.socialHallGroups?.data?.map((group) => {\n      group?.users?.map((u) =>\n        profileUrls?.push(u?.profile?.profilePicture ?? ''),\n      );\n      return undefined;\n    });\n    return profileUrls ?? [];\n  }, [socialHallAttendeesAndGroups]);\n\n  const toggle = () => setShowInviteModal((val) => !val);\n\n  const handleClickShowAll = () => {\n    setVisibilityViz(false);\n  };\n\n  const onViewAttendees = useCallback(() => {\n    attendeesRef.current?.open(eventDetails?._id ?? '', !!isEventHost);\n  }, [isEventHost, eventDetails]);\n\n  useEffect(() => {\n    if (isMainEvent && showChangeGroupName) setShowChangeGroupName();\n  }, [isMainEvent, setShowChangeGroupName, showChangeGroupName]);\n\n  return (\n    <S.Layout>\n      <Header isBorderRadius={false}>\n        <MainHeader\n          avatar={UserUtil.getProfilePicture(user) || undefined}\n          userName={user?.firstName || undefined}\n        />\n      </Header>\n      <S.Container>\n        {isEventHost && eventDetails?._id && (\n          <HostHeader\n            onViewAttendees={onViewAttendees}\n            onInviteAttendees={toggle}\n            onChangeGroupName={setShowChangeGroupName}\n          />\n        )}\n        {!isEventHost && eventDetails?._id && (\n          <AttendeeHeader\n            onViewAttendees={onViewAttendees}\n            onChangeGroupName={setShowChangeGroupName}\n          />\n        )}\n        <S.Content>\n          {!showBuzzRoom && (\n            <S.SideBarWrapper visible={!visibilityViz}>\n              <SideBar />\n              <S.Background onClick={() => setVisibilityViz(true)} />\n            </S.SideBarWrapper>\n          )}\n          <S.Children visible={visibilityViz}>{children}</S.Children>\n          {!showBuzzRoom && (\n            <S.BottomBarWrapper visible={visibilityViz}>\n              <BottomBar urls={urls} onClickShowAll={handleClickShowAll} />\n            </S.BottomBarWrapper>\n          )}\n        </S.Content>\n      </S.Container>\n      {isMobile && (\n        <Modal\n          open={!visibilityViz}\n          isFullScreen\n          noPaddingNoBorder\n          enableCloseButton\n          closeButtonStyles={{ enforceRight: true }}\n          onClose={() => setVisibilityViz(true)}\n        >\n          <Spacer height={26} />\n          <ModalHeader isFullScreen>\n            {t(`noumena.social_hall.see_event_attendees`)}\n          </ModalHeader>\n          <ModalBody isFullScreen mobileFlex overflowY=\"hidden\">\n            <SideBar />\n          </ModalBody>\n        </Modal>\n      )}\n      <EventAttendeesModal ref={attendeesRef} />\n      <InviteAttendeeModal isOpen={showInviteModal} handleClose={toggle} />\n      <ChangeGroupNameModal\n        isOpen={showChangeGroupName && !isMainEvent}\n        onClose={setShowChangeGroupName}\n      />\n    </S.Layout>\n  );\n};\n","import { useLaunchDarkly } from '@/hooks/launchDarkly';\nimport { type LayoutProps } from './types';\nimport { SocialHallLayout } from './SocialHallLayout';\nimport { SocialHallLayoutOld } from './SocialHallLayoutOld';\n\nexport default (props: LayoutProps) => {\n  const {\n    flags: { socialHallVideoCall },\n  } = useLaunchDarkly();\n\n  return socialHallVideoCall ? (\n    <SocialHallLayout {...props} />\n  ) : (\n    <SocialHallLayoutOld {...props} />\n  );\n};\n","import styled from 'styled-components';\nimport { cssVar, rgba } from 'polished';\nimport { devices, mediaSizes } from '@/constants/devices';\nimport { Stack } from '@/layout';\nimport { TSpan } from '@/components/Typography';\n\nexport const Container = styled.div<{ showBuzzRoom: boolean }>`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  background: var(--bg-shmap-brand-secondary-default);\n  border-radius: 0;\n  visibility: ${({ showBuzzRoom }) => (showBuzzRoom ? 'hidden' : 'visible')};\n  @media ${devices.TABLET} {\n    border-radius: 16px;\n  }\n`;\n\nexport const NotifyOnlyYouWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 0px;\n  position: absolute;\n  bottom: 44px;\n  width: 100%;\n  z-index: 99;\n  @media (max-width: ${mediaSizes.TABLET_MIN}) {\n    bottom: 80px;\n  }\n`;\n\nexport const NotifyOnlyYou = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 0 16px;\n  height: 64px;\n  background: var(--bg-tablecell-neutral-alt-default);\n  box-shadow: 0px 4px 32px ${rgba(cssVar('--shadow-neutral-default'), 0.08)};\n  border-radius: 16px;\n`;\n\nexport const InviteContainer = styled.div`\n  background-color: var(--bg-card-neutral-alt-default);\n  flex-direction: column;\n  border-radius: 16px;\n  width: 783px;\n  margin: auto;\n  padding: 24px;\n  display: flex;\n`;\n\nexport const DetailsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: 16px;\n  gap: 16px;\n`;\n\nexport const EventInviteContainer = styled(Stack)`\n  background-color: var(--bg-body-neutral-alt-highlighted);\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  flex: 1;\n  justify-content: flex-start;\n`;\n\nexport const EventLink = styled(TSpan)`\n  cursor: pointer;\n`;\n","import { useCallback, useEffect, useMemo, useRef, memo, useState } from 'react';\nimport { t } from 'i18next';\nimport { type Transition } from 'history';\nimport { useNavigate } from 'react-router';\nimport { useElementDimensions, useWindowDimensions } from '@/hooks';\nimport { useAuth } from '@/features/auth/contexts';\nimport {\n  useRefreshKnocks,\n  useKnockSubscription,\n  useSocialHallUsersAndGroupsData,\n  useAgoraSubscriptionHandler,\n} from '@/features/socialHall/hooks';\nimport {\n  useSocialHallCallContext,\n  useSocialHallContext,\n  useSocialHallEventContext,\n} from '@/providers';\nimport { SocialHallUtils } from '@/utils/socialHall';\nimport SocialHallLayout from '@/layout/SocialHallLayout';\nimport {\n  EventModal,\n  EventRoom,\n  SocialHallViz,\n  UserInitialization,\n  MiniPlayerAndNotification,\n  hostEndedModalData,\n  attendeeEndedModalData,\n  attendeeCanceledModalData,\n  kickedFromEventModalData,\n  WaitingForHost,\n} from '@/features/socialHall/components';\nimport { breakpoints } from '@/constants/devices';\nimport { TSpan } from '@/components/Typography';\nimport useBlocker from '@/hooks/useBlocker';\nimport ROUTES from '@/constants/routes';\nimport { Container, NotifyOnlyYou, NotifyOnlyYouWrapper } from './styles';\n\nconst SocialHall = memo(() => {\n  const {\n    showBuzzRoom,\n    socialHallAttendee,\n    activeSocialHallGroup,\n    isBlockNavigate,\n    isWaitingForHost,\n    setIsBlockNavigate,\n  } = useSocialHallContext();\n  const { startCall, closeAgoraConnection, agoraChannelUsers } =\n    useSocialHallCallContext();\n\n  const {\n    isKicked,\n    isPreEvent,\n    isMainEvent,\n    isEventHost,\n    isEndedEvent,\n    isCancelledEvent,\n    onCancelledEvent,\n    setIsEndedEvent,\n    onUserBlockedSuccess,\n  } = useSocialHallEventContext();\n\n  useAgoraSubscriptionHandler();\n\n  const refContainer = useRef<HTMLDivElement>(null);\n  const tx = useRef<Transition>();\n  const { user } = useAuth();\n  const { users, groups } = useSocialHallUsersAndGroupsData();\n  const { size } = useElementDimensions(refContainer);\n  const { width } = useWindowDimensions();\n  const navigate = useNavigate();\n  const isTablet = useMemo(() => width < breakpoints.LAPTOP, [width]);\n\n  const { userOwnKnocks, userActiveKnocks } = useRefreshKnocks();\n  const { declinedKnocks } = useKnockSubscription();\n  const [openUserProfile, setOpenUserProfile] = useState<boolean>(false);\n  const [selectedAttendeeId, setSelectedAttendeeId] = useState<string>();\n  const [openGroupProfile, setOpenGroupProfile] = useState<boolean>(false);\n  const [selectedGroupId, setSelectedGroupId] = useState<string>();\n\n  const handleBlockNavigation = (transition: Transition) => {\n    tx.current = transition;\n    if (transition.location.pathname === ROUTES.LOGIN) {\n      transition.retry();\n    } else {\n      window.open(transition.location.pathname, '_blank');\n    }\n  };\n\n  useBlocker(handleBlockNavigation, isBlockNavigate);\n\n  const isOnlyYou = useMemo(\n    () => !groups.length && users.length === 1,\n    [groups.length, users.length],\n  );\n\n  const initialNotifications = useMemo(() => {\n    let knocks = [\n      ...(userOwnKnocks?.data ?? []),\n      ...(userActiveKnocks?.data ?? []),\n    ];\n\n    if (declinedKnocks.length) {\n      knocks = SocialHallUtils.getUniqueDeclinedKnocks(knocks, declinedKnocks);\n    }\n    return knocks;\n  }, [userOwnKnocks?.data, userActiveKnocks?.data, declinedKnocks]);\n\n  const hasJoined = useMemo(\n    () => agoraChannelUsers?.includes(user?._id ?? ''),\n    [agoraChannelUsers, user?._id],\n  );\n\n  const showMiniPlayerNotification = useMemo(\n    () => !!initialNotifications.length || !!activeSocialHallGroup?._id,\n    [activeSocialHallGroup, initialNotifications],\n  );\n\n  const onMemberPressed = useCallback(\n    (children, parent) => {\n      if (!isTablet) return;\n      if (parent?.children?.length > 1) {\n        setSelectedGroupId(parent.id);\n        setOpenGroupProfile(true);\n      } else {\n        setSelectedAttendeeId(children.id);\n        setOpenUserProfile(true);\n      }\n    },\n    [isTablet],\n  );\n\n  const handleEndEvent = useCallback(() => {\n    setIsEndedEvent?.(false);\n    setIsBlockNavigate(false);\n    setTimeout(() => {\n      navigate(ROUTES.HOME_NOUM);\n    }, 500);\n  }, [navigate, setIsBlockNavigate, setIsEndedEvent]);\n\n  const handleCanceledEvent = useCallback(() => {\n    setIsBlockNavigate(false);\n    setTimeout(() => {\n      onCancelledEvent();\n    }, 500);\n  }, [onCancelledEvent, setIsBlockNavigate]);\n\n  const startSocialHallCall = useCallback(async () => {\n    if (activeSocialHallGroup?._id && socialHallAttendee?._id) {\n      await closeAgoraConnection();\n      await startCall();\n    }\n  }, [\n    closeAgoraConnection,\n    socialHallAttendee,\n    startCall,\n    activeSocialHallGroup,\n  ]);\n\n  useEffect(() => {\n    startSocialHallCall();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeSocialHallGroup?._id, socialHallAttendee?._id]);\n\n  const isShowBuzzRoom = useMemo(\n    () => showBuzzRoom || isMainEvent,\n    [showBuzzRoom, isMainEvent],\n  );\n\n  const isShowMiniPlayer = useMemo(\n    () => showMiniPlayerNotification || openUserProfile || openGroupProfile,\n    [showMiniPlayerNotification, openUserProfile, openGroupProfile],\n  );\n\n  return (\n    <SocialHallLayout data-testid=\"social_hall_layout\">\n      {isWaitingForHost ? (\n        <WaitingForHost />\n      ) : !hasJoined && !isKicked ? (\n        <UserInitialization />\n      ) : (\n        <>\n          <>\n            {isShowBuzzRoom && (\n              <EventRoom initialNotifications={initialNotifications} />\n            )}\n            {refContainer.current && !isShowBuzzRoom && (\n              <Container\n                ref={refContainer}\n                showBuzzRoom={showBuzzRoom}\n                data-testid=\"main_container\"\n              >\n                <SocialHallViz\n                  data={[...users, ...groups]}\n                  minHeight={size.height}\n                  minWidth={size.width}\n                  topPadding={50}\n                  bottomPadding={50}\n                  onMemberPressed={onMemberPressed}\n                />\n                {isOnlyYou && (\n                  <NotifyOnlyYouWrapper>\n                    <NotifyOnlyYou>\n                      <TSpan\n                        font=\"body-l\"\n                        colorToken=\"--text-tablecell-header-neutral-highlighted\"\n                      >\n                        {t('noumena.social_hall.attendees_only_one', {\n                          eventType: isPreEvent\n                            ? t('noumena.social_hall.pre_event')\n                            : t('noumena.social_hall.post_event'),\n                        })}\n                      </TSpan>\n                    </NotifyOnlyYou>\n                  </NotifyOnlyYouWrapper>\n                )}\n              </Container>\n            )}\n            {isShowMiniPlayer && (\n              <MiniPlayerAndNotification\n                showMiniPlayerNotification={showMiniPlayerNotification}\n                initialNotifications={initialNotifications}\n                showUserPopup={openUserProfile}\n                showGroupPopup={openGroupProfile}\n                attendeeId={selectedAttendeeId}\n                groupId={selectedGroupId}\n                onCloseGroupPopup={() => setOpenGroupProfile(false)}\n                onCloseUserPopup={() => setOpenUserProfile(false)}\n              />\n            )}\n          </>\n          {isEventHost ? (\n            <EventModal\n              isOpen={isEndedEvent}\n              onClose={handleEndEvent}\n              {...hostEndedModalData}\n            />\n          ) : (\n            <>\n              <EventModal\n                isOpen={isCancelledEvent}\n                onClose={handleCanceledEvent}\n                {...attendeeCanceledModalData}\n              />\n              <EventModal\n                isOpen={isEndedEvent}\n                onClose={handleEndEvent}\n                {...attendeeEndedModalData}\n              />\n              <EventModal\n                isOpen={isKicked}\n                onClose={onUserBlockedSuccess}\n                {...kickedFromEventModalData}\n              />\n            </>\n          )}\n        </>\n      )}\n    </SocialHallLayout>\n  );\n});\n\nexport default SocialHall;\n","import { useLaunchDarkly } from '@/hooks/launchDarkly';\nimport {\n  SocialHallProvider,\n  SocialHallCallProvider,\n  SocialHallEventProvider,\n} from '@/providers';\nimport { useAuth } from '@/features/auth/contexts';\nimport { InitialSettings } from '@/features/socialHall/components';\nimport SocialHall from './SocialHall';\n\nconst SocialHallWrapper = () => {\n  const {\n    flags: { noumsSocialHall },\n  } = useLaunchDarkly();\n\n  const { isAcceptedSkipMediaTesting } = useAuth();\n\n  return noumsSocialHall ? (\n    <SocialHallProvider>\n      <SocialHallEventProvider>\n        <SocialHallCallProvider>\n          {!isAcceptedSkipMediaTesting ? <InitialSettings /> : <SocialHall />}\n        </SocialHallCallProvider>\n      </SocialHallEventProvider>\n    </SocialHallProvider>\n  ) : (\n    <div />\n  );\n};\n\nexport default SocialHallWrapper;\n"],"names":["useGetEventByIdCache","client","useApolloClient","eventDetails","useSocialHallEventContext","data","options","query","GetEventByIdDocument","variables","id","_id","getEventById","readQuery","writeQuery","useUpdateGetEventByIdCache","updateCache","updateEventStatus","useCallback","status","eventStatusUpdatedAt","Date","EventModal","isOpen","onClose","onConfirm","title","description","confirmButton","cancelButton","countDown","remainTime","isConfirmButtonPrimary","onCloseModal","remainSecond","setRemainSecond","useState","useEffect","Math","floor","ceil","jsxs","Modal","ModalSize","S","jsx","ModalHeader","ModalBody","alignItems","TSpan","Spacer","ModalFooter","Button","undefined","AttendeeInCall","attendeeId","isMuted","isInvited","profile","chamber","firstName","middleName","lastName","isAudience","userStatus","user","useAuth","toggleIsOpen","useToggle","onBlockUser","onViewAttendeeProfile","onInviteAttendeeToStage","onCancelInvitationToStage","onRemoveSpeakerFromStage","onMuteSpeakerOnStage","useAttendeeManagement","userActiveGroupData","useSocialHallContext","rtcEngine","raisedHandUsers","networkErrorUsers","agoraChannelUsers","useSocialHallCallContext","eventOwner","isEventHost","isMainEvent","isActiveSpeaker","setIsActiveSpeaker","isNetworkError","useMemo","includes","avatarImg","ActionType","Unregistered","NonNMDefaultImage","profilePicture","isSpeakerOnline","name","getFullName","on","AGORA_EVENT","VOLUME_INDICATOR","volumes","forEach","volume","isSpeaker","level","uid","userActiveSocialHallGroup","getMuteOptions","map","op","key","label","value","iconName","labelColor","type","selectableOptions","isInstantEvent","prepostInstantEventAudience","stageEventHostMenuOptions","hosts","stageEventCoHostMenuOptions","speakers","stageUserMenuOptions","invitedUserMenuOptions","audienceUserMenuOptions","option","t","icon","Icon","handleSelectOptions","MuteSpeakerType","Mute","Unmute","handleKickUser","AttendeeContent","Fragment","AvatarWrapper","CenterIconContainer","AvatarMask","Avatar","InvitedContainer","Microphone","EqualizerContainer","Lottie","equalizerAnimation","height","BorderContainer","Spinner","NameSpan","OptionMenuWrapper","Dropdown","length","inset","minWidth","targetRef","targetProps","toggle","AttendeeWrapper","EventCancelAttendeeModal","kickUserModalData","BottomBar","props","urls","onClickShowAll","useTranslation","S.Container","S.AvatarWrapper","InlineAvatar","slice","S.TotalUsers","userCount","BrowserSupport","setShowBrowserSupportBanner","showBrowserSupportBanner","Container","Content","IconContainer","ChangeGroupNameModal","groupName","setGroupName","originalGroupName","groupId","handleChangeGroupName","isChangingGroupName","useSocialHallData","handleCancel","onChangeGroupName","e","target","replace","M","TextField","ChatControl","onToggleChat","isNewMessage","showChatPanel","ControlPanelIcon","BadgeContainer","BadgeNotification","MediaVirtualBackgroundOption","onCheck","selected","handleCheck","SelectBoxContainer","Checkbox","SelectBoxText","SocialHallMediaUtils","formatDeviceLabel","MediaSettingOption","device","deviceId","Radiobox","MediaSettingModal","handleClose","setVirtualBackground","virtualBackground","videoPermissionState","audioPermissionState","onChangeDevice","selectedCamera","setSelectedCamera","selectedVirtualBackground","setSelectVirtualBackground","selectedMicrophone","setSelectedMicrophone","audioMediaDevices","setAudioMediaDevices","videoMediaDevices","setVideoMediaDevices","handleAccept","camera","microphone","speaker","handleSetMediaDevices","inputDevices","getAllConnectedMedia","audioDevices","cameraDevices","virtualBackgrounds","getAllVirtualBackground","useMediaDeviceUpdated","MiniContainer","ModalSubHeading","background","bg","MediaSettingControl","setIsOpen","onToggleMediaSettingPopup","open","MemberControl","onToggleMemberPanel","showMembersPanel","showBadge","setShowBadge","isNewMemberJoined","setIsNewMemberJoined","onToggleHandler","hostBadgeLogic","VideoControl","onToggle","isCameraEnable","isError","isLoading","color","bgColor","iconColor","hoverColor","ErrorWrapper","MuteControl","HandsUpModal","HandIconWrapper","RaiseHandControl","width","useWindowDimensions","isMobile","breakpoints","MOBILE_MAX","showRaiseHand","onToggleRaiseHand","ScreenSharingControl","isShareScreen","onToggleScreenSharing","isRemoteScreenSharing","screenSharingLocalUserFeed","isScreenSharing","onToggleScreenSharingHandler","MediaPermissionNotification","showAudioModal","showVideoModal","onTogglePopup","showNotificationModal","setShowNotificationModal","showAudioPopup","showVideoPopup","heading","body","notificationModal","cameraMicNotFound","micNotFound","cameraNotFound","CopyLinkControl","addToast","useToast","onCopyLink","socialHallLink","window","location","href","clipboard","writeText","ControlPanel","onToggleMember","isReconnecting","hasVideoPermission","useCameraPermissionListener","hasAudioPermission","useMicrophonePermissionListener","showPermissionPopup","useMediaPermissionPopup","navigate","useNavigate","logError","useError","flags","useLaunchDarkly","isUnregistered","setLoading","onLeaveCall","toggleCamera","toggleMuteCall","localVideoTrack","onSendSubscriptionMessage","onUpdateEventStatus","isEventSpeaker","isPreEvent","isPostEvent","socialHallAttendeesAndGroups","activeSocialHallGroup","setShowBuzzRoom","showFinishModal","setShowFinishModal","showLeaveModal","setShowLeaveModal","onLeaveQuietly","err","onUpdateEvent","handleLeaveEvent","ROUTES","GUEST_HOME","HOME_NOUM","onFinishEvent","SubscriptionType","UPDATE_EVENT_STATUS","EventsStatus","Cancelled","recurring","Expired","isNotAMainEvent","isMainEventSpeaker","isMainEventAudience","hasPublishingMediaPermission","isShowChatControl","socialHallMessaging","isShowRaiseHandControl","showLeaveEventBtn","showEndEventBtn","showMemberControl","hasSocialHallAttendees","useCheckIfEventHasSocialHallAttendees","endTheMainEventBtnLabel","hostEndEventModalProps","hostFinishMainEventModalData","hostFinishInstantEventModalData","ControlPanelWrapper","ControlPanelMainContainer","onToggleMuteCall","onToggleCamera","isPlaying","attendeeLeaveEventModalData","audio","video","useEmoticons","text","MessageItem","message","profileUrl","messageType","align","updateMessageWithEmoji","MessageType","TEXT","bubbleProps","showAvatar","userAvatar","maxWidth","IMAGE","ImageMessageBubble","NOTIFICATION","NotificationMessage","__html","toString","NotificationTime","format","newProps","TextMessageBubble","MessageList","messages","MessageListWrapper","SocialHallChat","show","disabled","onSendMessage","isTablet","LAPTOP","messageScrollRef","useRef","socialHallVideoCall","setTimeout","current","scrollTo","top","scrollHeight","behavior","handleSendMessage","files","isFile","file","index","ChatWrapper","ChatHeader","TitleSpan","CloseButton","NoMessageWrapper","MessageInputWrapper","MessageInput","MainEventNotification","onDecline","showButtons","showUserJoined","showUserLeave","Wrapper","Section","IconWrapper","IconChild","Trans","span","ButtonWrapper","DeclineButton","ControlGroupMainEventNotification","onAcceptSpeakerInvitation","onDeclineSpeakerInvitation","useSpeakerApi","toggleRaisedHand","useRaiseHandApi","speakerInvitation","stageAttendees","joinLeaveMember","setShowUserJoined","setShowUserLeave","joinedUsers","isRaiseHandRejected","resetMembersNotification","isShowRaiseHand","speakerSubscription","showMovedToAudienceNotification","setMovedToAudienceNotification","showHostInviteAsSpeaker","setShowHostInviteAsSpeaker","showDeclineToStageNotification","setShowDeclineToStageNotification","showRaiseHandNotification","setShowRaiseHandNotification","resetAll","isShow","resetUserJoinLeave","resetRaiseHandNotification","removedBy","find","attendee","inviterId","onConfirmHandler","onDeclineHandler","showSpeakerRequestToJoinStage","invitee","timeout","MainEventSpeakerNotificationTimer","clearTimeout","actionType","SpeakerInvitationType","SpeakerRemoved","inviteeId","inviter","ControlGroupNotificationWrapper","UserUtil","getProfilePicture","numberOfUser","KnockNotification","isSingle","notification","timer","knockTimer","isHostJoined","socialHallAttendee","showBuzzRoom","setMessages","setRemainTime","declineKnock","acceptKnock","acceptLoading","declineLoading","cancelKnock","useKnockUser","avatarUrls","groupInfo","users","profilePictureThumbnail","acceptKnockHandler","myInterval","setInterval","clearInterval","Com","NotificationWrapper","MainWrapper","TextWrapper","KnockingSpan","receiverUser","knockerUserId","knockStatus","KnockType","Pending","knockerUser","notificationRemainTime","knockMessage","MessageSpan","Declined","SpeakerViewCarousel","userFeeds","speakerFeed","maxVideoPerPage","isMinimalView","isFullScreen","LAPTOP_L","onPrev","onNext","currentPage","isDisablePrev","isDisableNext","updateCurrentSlide","CarouselItems","useVideoMasonryCarousel","videoCount","SpeakerItems","S.SpeakerCarouselWrapper","S.Steps","Carousel","item","S.GalleryViewBody","S.HostItem","MediaPreview","SpeakerView","clientHeight","clientWidth","elemRef","maxHeight","dimension","useSpeakerView","isSingleAttendee","maxMinWidth","maxMinHeight","SpeakerWarpper","SpeakerWarpperChlid","PinedFrameWarpper","minHeight","SideBarType","ON_STAGE","AUDIENCE","RAISED_HAND","createSection","header","createAudienceSection","attendees","createStageSection","createRaisedHandSection","mobileDropdownStyles","backgroundColor","marginBottom","SideBarUserItem","isOffline","sideBarType","refetchAudience","onDeclineRaiseHand","onAcceptRaiseHand","setDeclineLoading","setAcceptLoading","showBlockUserPopup","toggleBlockUserPopup","mutedUsers","isHost","fullName","useMediaPreviewSettings","invitationStatus","userType","onStage","isRaisedHand","invited","handleReject","usersRole","getEventUserRole","userRole","UserRole","Host","Cohost","ItemWrapper","OfflineWrapper","NameWrapper","Stack","OfflineBadge","StatusTag","ThreeDotsIconWrapper","SocialHallMembers","onlineAttendees","showInviteModal","setShowInviteModal","attendeesRef","stageUsers","audienceAttendees","audience","inviteUserToggle","val","onViewAttendees","pendingAttendees","pAttendees","useEventAttendees","eventId","Boolean","shouldFetch","camUsers","groupAttendees","first","socialHallGroups","filter","cleanList","userId","HostAudienceAttendees","totalMembers","sideBarData","audiences","stage","raisedHand","sections","SideBarWrapper","SideBarActionHeader","IconButton","moreDropdownOptionHost","moreDropdownOptionAttendee","React","SideBarHeaderWrapper","SideBarHeader","ListWrapper","EventAttendeesModal","InviteAttendeeModal","ScreenShare","fullScreenElemId","screenShareElemId","onCloseFullScreen","screenSharingRemoteUserFeed","onClickShareScreen","el","document","getElementById","rfs","requestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","call","onMaximizeScreenShare","screenSharingUserName","SocialHallUtils","cleanScreenSharingUid","screenSharei18Key","ScreenSharingLabel","b","ScreenShareWarpper","CloseFullScreenButton","PinnedFrameWrapper","StopSharing","ControlIconWrapper","FullScreenButton","PinedFrame","LayoutToggle","onSwitchLayout","isGridLayout","TABLET","onSwitchLayoutHandler","isGrid","RightWrapper","HeaderCountDownModal","useHeaderTimer","showCountDownModal","setShowCountDownModal","PreLive","countDownModalData","MoreOptionsBottomSheet","onSettingsClick","onChangeRoomNameClick","BottomSheet","SocialHallBottomSheetBody","LayoutSwitchBottomSheet","onLayoutChange","onLayoutChangeClick","HeaderBottomSheet","selectDefaultMediaInput","showMoreOptionsBottomSheet","setShowMoreOptionsBottomSheet","isLayoutSwitchBottomSheetOpen","setIsLayoutSwitchBottomSheetOpen","onLayoutSwitchBottomSheetClose","onLayoutSwitchBottomSheetLayoutChange","onToggleChangeRoomNamePopup","ToggleBuzzRoomBtn","LeftWrapper","getEventTagLabel","tag","PreEvent","Live","PostEvent","EventTag","eventTag","TagSpan","GroupName","showMobileView","canEdit","TagTitleContainer","TitleWrapper","HeaderTimer","formattedTime","isEndedEvent","CounterClockSpan","PostEventEnded","SwitchCamera","TABLET_L","onSwitchCamera","unusedCamera","cameras","GroupNameWrapper","children","isBuzzRoom","MobileBuzzRoomMiddleWrapper","MiddleWrapper","AttendeeHeader","onExitSocialHallCall","isLoadingLeaveCall","setIsLoadingLeaveCall","setIsBlockNavigate","AttendeeHeaderOld","attendeeBuzzMenuOptions","attendeeNotBuzzMenuOptions","DropdownWrapper","HeaderDropDownMenu","onSelectOption","HostHeader","onInviteAttendees","hostJoined","isEventOwner","userOwnKnocks","userActiveKnocks","useRefreshKnocks","loading","showCancelModal","setShowCancelModal","showEndModal","setShowEndModal","isShowEndMainEventBtn","isEndEvent","initialNotifications","hostNotBuzzMenuOption","cohostNotBuzzMenuOption","hostPostEventDesktopMenuOptions","updatedOptions","onStartMainEvent","leaveAndCancelEvent","navigator","cancelEventModalData","endEventModalData","HostHeaderOld","isDesktop","isEndMainEvent","hostBuzzMobileMenuOptions","hostBuzzDesktopMenuOptions","onStartPostEvent","finishEvent","HostHeaderNew","AttendeeHeaderNew","EventRoom","remoteUserVideoFeeds","agoraConnectionState","connectionLostUsers","useUserOffline","setIsNewMessage","activeSpeaker","useActiveSpeaker","mediaPreviewRef","setShowChatPanel","setMembersPanel","showChangeGroupName","setShowChangeGroupName","updatedActiveSpeaker","setUpdatedActiveSpeaker","setMaxVideoPerPage","isLaptop","useBreakpoints","onSetMaxVideoPerPage","getVideoFeed","screenSharingRemoteFeedPlayer","invitedAsSpeakers","findIndex","fullscreenElement","webkitFullscreenElement","activeUsers","activeUser","onSetShowChatPanelHandler","onSetShowMembersPanelHandler","isShowChatPanel","isScreenShareFeed","hasVideo","play","videoTrack","attendeeVideos","galleryItem","push","element","MainViewWrapper","ScrollViewWrapper","MainEventUserWrapper","VideoMasonryCarousel","KnockNotificationWrapper","ControllerGroup","onShowChat","onShowRaiseHands","askHandsUpOnce","setAskHandsUpOnce","handleHandsUp","ControlWrapper","RaiseHandWrapper","ChatNotificationContainer","ChatNotification","RaiseHandsBadge","userInfo","RaiseHandsSideBar","setRaisedHandUsers","EmptyScreenWrapper","EmptyMessageSpan","EventRoomOld","screenShareUserName","setScreenShareUserName","onCloseShareScreen","exitFullscreen","webkitExitFullscreen","userFeed","TempChatContainer","ScreenShareWrapper","FullScreenWrapper","CloseIconButton","ScreenShareTitleSpan","ScreenShareNameSpan","ScreenSharingElement","StageHeader","StageUserWrapper","BuzzRoomUsersContainer","BuzzRoomUsersWrapper","ControllerWrapper","getTime","EventRoomComponent","MediaDropdown","onSelect","selectedId","prefixIcon","emptyText","selectedLabel","onOpenHandler","ddIconColor","DropdownLabelWrapper","LabelIconWrapper","Equalizer","setTracks","canvasRef","useLayoutEffect","microphoneSource","audioContext","AudioContext","analyserNode","createAnalyser","stopMicrophone","mediaStream","getTracks","track","stop","disconnect","canvas","mediaDevices","getUserMedia","then","stream","createMediaStreamSource","tracks","connect","catch","error","fftSize","bufferLength","frequencyBinCount","dataArray","Uint8Array","canvasContext","getContext","barHeight","barColor","drawBar","getByteFrequencyData","clearRect","barWidth","audioSensivity","fillStyle","fillRect","requestAnimationFrame","EqualizerWrapper","EqualizerElement","AvailableMediaSelection","isMuteAudio","allConnectedDevices","onVideoDeviceChange","setDeviceId","onSelectMedia","onVideoDeviceChangeHandler","MediaOptionsWrapper","HardwareControlItem","speakerDevices","MediaContent","onCompleted","onLeave","showLoader","refetchUserData","skipHardwareTesting","setSkipHardwareTesting","updateUserMediaTestingForSh","useUpdateUserMediaTestingForShMutation","onCompleteHandler","accept","MediaMessageWrapper","ButtonContainer","SkipHardwareTestingWrapper","MediaControlButton","muteAudio","muteVideo","onToggleAudio","onToggleVideo","MediaControlWrapper","UserProfilePicture","UserProfilePictureWrapper","defaultAsSystemOption","formatDeviceForDropdown","devices","formatAllConnectedDeviceForDropdown","isFireFox","videoElementId","InitialSettings","videoElementRef","onSetAcceptedSkipMediaTesting","setVideoTrack","audioTrack","setAudioTrack","toggleMuteAudio","toggleMuteVideo","onBothMediaBlocked","cacheDeviceIdRef","setAllConnectedDevices","setIsCameraEnable","setCamUsers","onUpdateMuteState","initializeDefaultHardware","askForPermission","updateCacheDeviceIdRef","media","updateVideoTrack","srcObject","cameraId","pause","handleCameraCheck","mute","onReset","close","onJoinSocialHall","handleMicrophoneCheck","oldTracks","handleSpeakerCheck","MediaControlResponsiveBtn","Layout","Header","MainHeader","BannerWrapper","MediaWrapper","VideoWrapper","VideoElement","MiniPlayer","isCloseLoading","isLeaveLoading","isMuteLoading","muteIcon","GroupTitleSpan","IconButtonWrapper","KnockMessageModalTypeEnum","knock","decline","KnockMessageSelectModal","modalType","setSelectedId","setMessage","knockMessages","setSocialHallMessages","handleClickItem","itemId","handleClickKnock","declineMessages","L","Description","DescriptionSpan","GroupProfilePopup","showGroupPopup","onCloseGroupPopup","knockUser","knockLoading","openModal","setOpenModal","openConfirmKnock","setOpenConfirmKnock","groups","group","allKnocks","getGroupKnockDetails","isUserOnCall","handleKnock","hideJoinButton","isUserInGroupCall","handleKeepConversation","handleLeaveConversation","onKnockWithMessage","KnockButton","KnockStatusEnum","Normal","IsKnocked","IsKnocking","channelName","ItemHeader","memberCount","UsersWrapper","UserWrapper","goToUserProfile","confirmKnockModalData","UserProfilePopup","showUserPopup","onCloseUserPopup","getKnockDetails","hallGroupId","getTopSkills","skills","TagWrapper","skill","BioSpan","bio","ProfileLinkSpan","MiniPlayerAndNotification","showMiniPlayerNotification","showMiniPlayer","MiniAndNotificationWrapper","SideBarUserListItem","showKnockBtn","isFocused","setIsFocused","SideBarGroupListItem","joinGroupAsHost","joiningGroupAsHost","handleKnockJoin","SideBar","MOBILE_L","handleChangeTab","TabsWrapper","BasicChipsTabsForm","sideBarTabs","EmptyWrapper","UserInitialization","Loader","SocialHallNavigation","constructor","cache","topPadding","maxCollisionCheckCount","increaseByPercentage","bottomPadding","circleGutterSpace","cacheCoords","particles","getIncreaseByPercentage","randomIntFromRange","xCoords","random","yCoords","isCollision","circle1","circle2","xDist","yDist","radius","computeRadius","childCount","min","boundingRadius","sqrt","PI","boundingOffset","circlePacking","boundingCircleXCoords","boundingCircleYCoords","moreChildren","groupCoords","i","changeY","changeX","alpha","sin","cos","round","x0","y0","x1","y1","x","y","arcCoords","calculateArcCoordinates","r","beta","CenterBeta","deltaX","abs","deltaY","arcX","arcY","generateCoords","counter","processed","unprocessed","groupProcessData","coords","SocialHallViz","onMemberPressed","useDeviceType","socialHallData","setSocialHallData","newWidth","newHeight","TransformWrapper","TransformComponent","fontFamily","borderRadius","DeviceTypeEnum","MOBILE","particle","CirclePacking","WaitingForHost","useTimer","defaultTime","elapsedTime","setElapsedTime","startTimer","time","resetInterval","useCountDown","maxTime","startCountdown","useParams","useUserOwnKnocksQuery","skip","socialHallId","useUserActiveKnocksQuery","refreshActiveKnocks","refreshOwnKnocks","refreshAllKnocks","useOwnKnocksData","userActiveKnocksData","knockMutation","useKnockMutation","refreshVisualization","acceptKnockMutation","useAcceptKnockMutation","cancelKnockMutation","useCancelKnockMutation","declineKnockMutation","useDeclineKnockMutation","joinGroupWithoutKnocking","useJoinGroupWithoutKnockingMutation","setKnockLoading","hallAttendeeId","knockId","refetch","useKnockSubscription","declinedKnocks","setDeclinedKnocks","useKnockUpdatesSubscription","updateDeclinedKnocksState","knocks","HideDeclineKnockTimer","handleKnockDeclined","declined","_knock","handleKnockAccepted","knockUpdates","event","Accepted","useAgoraSubscriptionHandler","updateGroupName","updateRaiseHandUsersCache","updateNewAttendeeOnCallCache","removeAttendeeFromCallCache","useUpdateUserActiveSocialHallGroupCache","rtmEngine","rtmChannel","onHostBlocked","onRemoteUserLeftChannel","onChannelMessageSubscriptionHandler","memberId","console","log","msg","JSON","parse","SUBSCRIPTION_MESSAGE","MUTE_ATTENDEE_IN_GROUP_CALL","UNMUTE_ATTENDEE_IN_GROUP_CALL","NEW_ATTENDEE_IN_GROUP_CALL","BLOCK_ATTENDEE_ON_GROUP_CALL","QUIT_ATTENDEE_ON_SOCIAL_HALL","UPDATE_GROUP_NAME","bindEvent","off","calculateLayout","useVideoMasonryLayoutCalc","setDimension","cols","rows","dispatchEvent","Event","remainTimeForEvent","formatTime","setConnectionLostUsers","onMemberConnectionTemporarilyLost","reason","USER_OFFLINE_REASON","SERVER_TIME_OUT","updateUsers","REMOVE_OFFLINE_USER","onChannelJoinedSuccess","CONNECTION_STATE_CHANGE","debounce","currentState","prevState","USER_JOINED","USER_LEFT","changeGroupName","changeGroupNameError","useChangeGroupNameMutation","handleError","networkError","isSuccess","input","onError","graphQLErrors","Sentry","Error","tags","section","callback","warn","ondevicechange","setShowPermissionPopup","permission","useSocialHallUsersAndGroupsData","setUsers","setGroups","getChildData","circleRadius","gutterSpace","capitalizeAllWord","subTitle","chamberId","shUsers","now","shGroups","notEmpty","groupUser","socialHallMember","socialHallUsersData","styled","div","visible","sizes","Background","rgba","cssVar","Children","BottomBarWrapper","SocialHallLayout","visibilityViz","setVisibilityViz","profileUrls","u","mainContent","S.Content","S.SideBarWrapper","S.Background","S.Children","S.BottomBarWrapper","enforceRight","newAppNavigation","AppLayout","GuestHeader","S.Layout","SocialHallLayoutOld","handleClickShowAll","NotifyOnlyYouWrapper","mediaSizes","TABLET_MIN","NotifyOnlyYou","SocialHall","memo","isBlockNavigate","isWaitingForHost","startCall","closeAgoraConnection","isKicked","isCancelledEvent","onCancelledEvent","setIsEndedEvent","onUserBlockedSuccess","refContainer","tx","size","useElementDimensions","openUserProfile","setOpenUserProfile","selectedAttendeeId","setSelectedAttendeeId","openGroupProfile","setOpenGroupProfile","selectedGroupId","setSelectedGroupId","useBlocker","transition","pathname","LOGIN","retry","isOnlyYou","getUniqueDeclinedKnocks","hasJoined","parent","handleEndEvent","handleCanceledEvent","startSocialHallCall","isShowBuzzRoom","isShowMiniPlayer","eventType","hostEndedModalData","attendeeCanceledModalData","attendeeEndedModalData","kickedFromEventModalData","SocialHallWrapper","noumsSocialHall","isAcceptedSkipMediaTesting","SocialHallProvider","SocialHallEventProvider","SocialHallCallProvider"],"mappings":"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"}