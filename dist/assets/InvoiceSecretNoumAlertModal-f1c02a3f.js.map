{"version":3,"file":"InvoiceSecretNoumAlertModal-f1c02a3f.js","sources":["../../src/features/invoices/providers/InvoiceProvider.tsx","../../src/features/invoices/hooks/useInvoiceForm.ts","../../src/features/invoices/components/InvoiceSecretNoumAlertModal/InvoiceSecretNoumAlertModal.tsx"],"sourcesContent":["import { createContext, useState, type FC, useMemo } from 'react';\nimport { type SelectedContact } from '@/features/noumContacts/types';\n\ntype InvoiceContextType = {\n  shouldShowInvoicePreview: boolean;\n  setShowInvoicePreview: (value: boolean) => void;\n  selectedBuyer?: SelectedContact | null;\n  setSelectedBuyer: (value?: SelectedContact | null) => void;\n  selectedServiceProvider?: SelectedContact | null;\n  setSelectedServiceProvider: (value?: SelectedContact | null) => void;\n};\n\nexport const InvoiceContext = createContext<InvoiceContextType>({\n  shouldShowInvoicePreview: false,\n  setShowInvoicePreview: () => {},\n  selectedBuyer: null,\n  selectedServiceProvider: null,\n  setSelectedBuyer: () => {},\n  setSelectedServiceProvider: () => {},\n});\n\nexport const InvoiceProvider: FC = ({ children }) => {\n  const [shouldShowInvoicePreview, setShowInvoicePreview] = useState(false);\n  const [selectedBuyer, setSelectedBuyer] = useState<SelectedContact | null>();\n  const [selectedServiceProvider, setSelectedServiceProvider] =\n    useState<SelectedContact | null>();\n\n  const value = useMemo(\n    () => ({\n      shouldShowInvoicePreview,\n      selectedBuyer,\n      selectedServiceProvider,\n      setShowInvoicePreview,\n      setSelectedBuyer,\n      setSelectedServiceProvider,\n    }),\n    [shouldShowInvoicePreview, selectedBuyer, selectedServiceProvider],\n  );\n\n  return (\n    <InvoiceContext.Provider value={value}>{children}</InvoiceContext.Provider>\n  );\n};\n","import { type DefaultValues, useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport {\n  AllCurrencyEnum,\n  InvoiceStatusEnum,\n  PaymentTerms,\n} from '@/apollo/generated/types';\nimport { ALPHANUMERIC_REGEX } from '@/components/TextField/utils';\nimport { DueDateOption, LateFeeOption } from '../types';\n\nconst MAX_AMOUNT = 999999999999;\nexport type InvoiceFormValues = yup.InferType<typeof invoiceFormSchema>;\n\ninterface UseInvoiceFormOptions {\n  defaultValues?: DefaultValues<InvoiceFormValues>;\n}\n\nexport const invoiceItemSchema = yup.object({\n  id: yup.string().required(),\n  unitPrice: yup.number().min(1).label('Unit Price').required(),\n  quantity: yup.number().min(1).label('Quantity').required().max(999),\n  description: yup.string().label('Service Name').required().max(3000),\n  taxName: yup.string().optional().nullable(),\n  taxRate: yup\n    .number()\n    .optional()\n    .max(100)\n    .nullable()\n    .when('taxName', {\n      is: (value: number) => !!value,\n      then: (schema) => schema.required(),\n      otherwise: (schema) => schema.notRequired(),\n    }),\n  currency: yup\n    .mixed<AllCurrencyEnum>()\n    .oneOf(Object.values(AllCurrencyEnum))\n    .required(),\n});\n\nexport const invoiceFormSchema = yup.object({\n  id: yup.string().optional(),\n  noumId: yup\n    .string()\n    .required('You have to assign a Noum to your invoice')\n    .label('Noum Assignment'),\n  invoiceNumber: yup\n    .string()\n    .label('Invoice No.')\n    .when('noumId', {\n      is: (value: string) => !!value,\n      then: (schema) => schema.required().matches(ALPHANUMERIC_REGEX),\n    }),\n  buyerId: yup.string().label('Recipient').required(),\n  serviceProviderId: yup.string().label('Service Provider').required(),\n  lineItems: yup.array(invoiceItemSchema).label('Items').required().min(1),\n  defaultTaxRate: yup.number().optional(),\n  defaultTaxName: yup.string().optional(),\n  issueDate: yup.date().label('Issue Date').required(),\n  lateFeeType: yup\n    .mixed<LateFeeOption>()\n    .oneOf(Object.values(LateFeeOption))\n    .required(),\n  status: yup\n    .mixed<InvoiceStatusEnum>()\n    .oneOf(Object.values(InvoiceStatusEnum))\n    .required(),\n  dueDate: yup\n    .mixed<DueDateOption>()\n    .oneOf(Object.values(DueDateOption))\n    .required(),\n  currency: yup\n    .mixed<AllCurrencyEnum>()\n    .oneOf(Object.values(AllCurrencyEnum))\n    .required(),\n  notes: yup.string().label('Notes').optional().max(200),\n  summary: yup.string().label('Attention').optional().max(200),\n  logo: yup.string().label('Logo').optional(),\n  buyerDetailsComplete: yup.boolean().is([true]),\n  serviceProviderDetailsComplete: yup.boolean().is([true]),\n  paymentTerms: yup\n    .mixed<PaymentTerms>()\n    .oneOf(Object.values(PaymentTerms))\n    .label('Payment Terms')\n    .required(),\n  customDueDate: yup\n    .date()\n    .label('Due date')\n    .when('dueDate', {\n      is: DueDateOption.CUSTOM_DATE,\n      then: (schema) => schema.required(),\n    }),\n  lateFeeValue: yup\n    .number()\n    .label('Late Fee')\n    .when('lateFeeType', {\n      is: LateFeeOption.FIXED_AMOUNT,\n      then: (schema) => schema.min(1).max(MAX_AMOUNT).required(),\n      otherwise: (schema) => schema.notRequired(),\n    })\n    .when('lateFeeType', {\n      is: LateFeeOption.PERCENTAGE,\n      then: (schema) => schema.min(1).max(100).required(),\n      otherwise: (schema) => schema.notRequired().max(MAX_AMOUNT),\n    }),\n});\n\nexport function useInvoiceForm({ defaultValues }: UseInvoiceFormOptions = {}) {\n  return useForm<InvoiceFormValues>({\n    mode: 'onChange',\n    defaultValues,\n    resolver: yupResolver(invoiceFormSchema),\n  });\n}\n","import SecretNoumAlertModal from '@/components/SecretNoumAlertModal/SecretNoumAlertModal';\nimport React from 'react';\n\ntype InvoiceSecretNoumAlertModalProps = {\n  isOpenModal: boolean;\n  isUnauthenticated?: boolean;\n  onClose: () => void;\n};\n\nconst InvoiceSecretNoumAlertModal: React.FC<\n  InvoiceSecretNoumAlertModalProps\n> = ({ isUnauthenticated, ...props }) => {\n  const warningText = isUnauthenticated\n    ? `Your client is not a member or an authenticated non-member of Noumena. Our team can help you to share this invoice with your client, get in touch with us on our support page.`\n    : `Your client is not connected to this Noum. Head to your Noum to connect them first and then share your invoice.`;\n\n  const description = isUnauthenticated\n    ? `You created this invoice from a secret Noum. To share it with your client (guest user) they need to be both a member or an authenticated non-member of Noumena and also connected to the Noum. You can find your draft invoice in the Invoice Manager.`\n    : `You created this invoice from a secret Noum. To share it with your client they need to be both connected to the Noum and also a member or an authenticated non-member of Noumena. You can find your draft invoice in the Invoice Manager.`;\n\n  return (\n    <SecretNoumAlertModal\n      warningText={warningText}\n      description={description}\n      title=\"Your Invoice cannot be issued\"\n      {...props}\n    />\n  );\n};\n\nexport default InvoiceSecretNoumAlertModal;\n"],"names":["InvoiceContext","createContext","shouldShowInvoicePreview","setShowInvoicePreview","selectedBuyer","selectedServiceProvider","setSelectedBuyer","setSelectedServiceProvider","InvoiceProvider","children","useState","value","useMemo","jsx","MAX_AMOUNT","invoiceItemSchema","yup","id","required","unitPrice","min","label","quantity","max","description","taxName","string","optional","nullable","taxRate","when","is","then","schema","otherwise","notRequired","currency","oneOf","Object","values","AllCurrencyEnum","invoiceFormSchema","noumId","invoiceNumber","matches","ALPHANUMERIC_REGEX","buyerId","serviceProviderId","lineItems","defaultTaxRate","defaultTaxName","issueDate","lateFeeType","LateFeeOption","status","InvoiceStatusEnum","dueDate","DueDateOption","notes","summary","logo","buyerDetailsComplete","serviceProviderDetailsComplete","paymentTerms","PaymentTerms","customDueDate","CUSTOM_DATE","lateFeeValue","FIXED_AMOUNT","PERCENTAGE","useInvoiceForm","defaultValues","useForm","mode","resolver","yupResolver","InvoiceSecretNoumAlertModal","isUnauthenticated","props","SecretNoumAlertModal"],"mappings":"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"}