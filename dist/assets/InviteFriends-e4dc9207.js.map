{"version":3,"file":"InviteFriends-e4dc9207.js","sources":["../../src/screens/CoreSettings/AccountSettings/styles.ts","../../src/components/StorybookHelpers/styles.ts","../../src/components/StorybookHelpers/LabelWrap.tsx","../../src/screens/CoreSettings/AccountSettings/EmailAddressSection.tsx","../../src/screens/CoreSettings/AccountSettings/PhoneNumberSection.tsx","../../src/screens/CoreSettings/AccountSettings/Modals/EditAndEnableEmailAddressModal.tsx","../../src/screens/CoreSettings/AccountSettings/Modals/EditAndEnablePhoneNumberModal.tsx","../../src/screens/CoreSettings/AccountSettings/types.ts","../../src/screens/CoreSettings/AccountSettings/Modals/OtpModal.tsx","../../src/screens/CoreSettings/AccountSettings/Modals/DeleteAccountModal.tsx","../../src/screens/CoreSettings/AccountSettings/index.tsx","../../src/screens/CoreSettings/InvitesFriends/styles.ts","../../src/screens/CoreSettings/InvitesFriends/InvitesRequest.tsx","../../src/screens/CoreSettings/InvitesFriends/index.tsx","../../src/screens/CoreSettings/NotificationsSettings/styles.ts","../../src/screens/CoreSettings/NotificationsSettings/index.tsx","../../src/screens/CoreSettings/Cookie/index.tsx","../../src/screens/CoreSettings/index.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { sizes } from '@/constants/devices';\nimport { Stack } from '@/layout';\nimport { Icon } from '@/components/Icon';\nimport { TSpan } from '@/components/Typography';\nimport { Button } from '@/components/Button';\n\nexport const StyledSpacer = styled.div`\n  padding-top: 32px;\n\n  @media (max-width: ${sizes.MOBILE_L}) {\n    padding-top: 24px;\n  }\n`;\n\nexport const FullWidthStack = styled(Stack)`\n  width: 100%;\n`;\n\nexport const ModalWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 400px;\n  text-align: center;\n\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    width: 300px;\n  }\n`;\n\nexport const AccountWrapper = styled.div`\n  height: 100%;\n  gap: 0;\n  display: block;\n\n  @media (max-width: ${sizes.TABLET_L}) {\n    margin-bottom: 0px;\n    max-height: 100vh;\n    max-width: 100vw;\n    overflow-x: hidden;\n    margin-left: calc((100vw - 401px) / 2);\n    overflow-y: hidden;\n    margin-bottom: 40px;\n  }\n\n  @media (max-width: ${sizes.TABLET}) {\n    margin-left: calc((100vw - 360px) / 2);\n    margin-bottom: 98px;\n  }\n\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    margin-left: calc((100vw - 343px) / 2);\n    margin-bottom: 98px;\n  }\n`;\n\nexport const EditAndEnableButton = styled(Button)`\n  width: 175px;\n\n  @media (max-width: ${sizes.TABLET_L}) {\n    width: 401px;\n  }\n\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    width: 343px;\n  }\n`;\n\nexport const DeleteAccountWrapper = styled.div`\n  padding-top: 190px;\n  @media (max-width: ${sizes.TABLET_L}) {\n    text-align: center;\n    padding-top: 170px;\n  }\n`;\n\nexport const ButtonWrap = styled.div`\n  width: 207px;\n  height: 56px;\n  margin-right: 40px;\n  div {\n    width: 37px;\n    height: 16px;\n    font-family: var(--font-family);\n    font-style: normal;\n    font-weight: var(--font-link-medium-weight);\n    font-size: 16px;\n    line-height: 100%;\n    text-align: center;\n    flex: none;\n    order: 0;\n    flex-grow: 0;\n  }\n  @media (max-width: ${sizes.TABLET}) {\n    display: block;\n    div {\n      margin-top: 44px;\n    }\n  }\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    display: block;\n    margin-top: 44px;\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n  width: 179px;\n  height: 56px;\n\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    width: 150px;\n  }\n`;\n\nexport const ButtonsWrap = styled.div`\n  display: flex;\n`;\n\nexport const OtpButtonWrapper = styled.div`\n  display: flex;\n  width: 400px;\n`;\n\nexport const PhoneText = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n`;\n\nexport const FourDigitOtp = styled.p`\n  height: 48px;\n  font-family: var(--font-family);\n  font-style: normal;\n  font-weight: var(--font-input-medium-regular-weight);\n  font-size: 16px;\n  line-height: 150%;\n  text-align: center;\n  flex: none;\n  order: 0;\n  align-self: stretch;\n  flex-grow: 0;\n`;\n\nexport const DeleteAccountParagraph = styled.div`\n  width: 100%;\n  font-style: normal;\n  line-height: 150%;\n  text-align: center;\n`;\n\nexport const LinkIconWrapper = styled.div`\n  display: flex;\n`;\n\nexport const DeleteWrapper = styled.div`\n  display: block;\n`;\n\nexport const DeleteAccountProceed = styled.div`\n  text-align: center;\n`;\n\nexport const TextHeader = styled.div``;\n\nexport const DeleteFooter = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: auto;\n`;\n\nexport const DivWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n\n  @media (max-width: ${sizes.TABLET}) {\n    display: block;\n    width: 768px;\n    div {\n      width: 360px;\n    }\n  }\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    display: block;\n    width: 767px;\n    div {\n      width: 343px;\n    }\n  }\n`;\n\nexport const PhoneInputBox = styled.div`\n  width: 401px;\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    width: 343px;\n  }\n`;\n\nexport const EmailInputBox = styled.div`\n  width: 401px;\n\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    width: 343px;\n  }\n`;\n\nexport const StyledButton = styled.div<{ isDisabled?: boolean }>`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  button {\n    border-radius: 0;\n  }\n\n  svg path {\n    ${({ isDisabled }) =>\n      isDisabled &&\n      'fill: var(--icon-button-neutral-disabled); cursor: default;'};\n  }\n\n  :hover {\n    svg path {\n      ${({ isDisabled }) =>\n        isDisabled &&\n        'fill: var(--icon-button-neutral-disabled); cursor: default;'};\n    }\n  }\n`;\n\nexport const AdvancedSettingsWrapper = styled(StyledButton)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const PrivacyPolicyLink = styled(TSpan)<{ isDisabled?: boolean }>`\n  text-decoration-line: underline;\n  cursor: pointer;\n  padding-left: 3px;\n  ${({ isDisabled }) => isDisabled && 'cursor: default;'};\n`;\n\nexport const IconWrapper = styled.div`\n  cursor: pointer;\n  transition: all 0.2s linear;\n  transform: 180deg;\n`;\n\nexport const RemoveAccount = styled.div`\n  margin-left: 20px;\n`;\n\nexport const CheckBoxWrapper = styled.div`\n  position: relative;\n`;\n\nexport const CheckBoxLabel = styled.label`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 45px;\n  height: 26px;\n  border-radius: 15px;\n  background: var(--bg-toggle-neutral-default);\n  cursor: pointer;\n  &::after {\n    content: '';\n    display: block;\n    border-radius: 50%;\n    width: 18px;\n    height: 18px;\n    margin: 4px;\n    background: var(--bg-toggle-neutral-alt-default);\n    box-shadow: 1px 3px 3px 1px rgba(0, 0, 0, 0.2);\n    transition: 0.2s;\n  }\n`;\n\nexport const CheckBox = styled.input`\n  opacity: 0;\n  z-index: 1;\n  border-radius: 15px;\n  width: 42px;\n  height: 24px;\n  &:checked + ${CheckBoxLabel} {\n    background: var(--bg-toggle-brand-primary-selected);\n    &::after {\n      content: '';\n      display: block;\n      border-radius: 50%;\n      width: 18px;\n      height: 18px;\n      margin-left: 21px;\n      transition: 0.2s;\n    }\n  }\n`;\n\nexport const RightIcon = styled(Icon)<{\n  isOpen?: boolean;\n  isDisabled?: boolean;\n}>`\n  transition: transform 0.3s;\n  ${({ isOpen }) => isOpen && 'transform: rotate(180deg)'};\n  ${({ isDisabled }) => isDisabled && 'cursor: default'};\n  svg path {\n    ${({ isDisabled }) =>\n      isDisabled &&\n      'fill: var(--icon-button-neutral-disabled); cursor: default'};\n  }\n`;\n\nexport const TextFieldWrapper = styled.div`\n  text-align: left;\n  width: 100%;\n`;\n","import styled from 'styled-components';\n\nexport const StyledLabelGroup = styled.div<{ columns: number }>`\n  display: grid;\n  gap: 16px;\n  margin-bottom: 16px;\n  grid-column: 1 / ${({ columns }) => columns};\n  grid-template-columns: repeat(${({ columns }) => columns}, 1fr);\n  width: 100%;\n`;\n\nexport const LabelWrapStyled = styled.span`\n  margin-bottom: 16px;\n`;\n\nexport const LabelStyled = styled.label`\n  margin-bottom: 4px;\n  padding-top: 8px;\n  display: inline-block;\n  font-family: var(--font-family);\n  font-size: var(--font-body-medium-size);\n  font-weight: var(--font-body-medium-weight);\n`;\n","import { type FC, type HTMLAttributes } from 'react';\nimport { StyledLabelGroup, LabelStyled, LabelWrapStyled } from './styles';\n\nexport const LabelGroup: FC<\n  { columns: number } & HTMLAttributes<HTMLDivElement>\n> = ({ children, columns, ...props }) => (\n  <StyledLabelGroup columns={columns} {...props}>\n    {children}\n  </StyledLabelGroup>\n);\n\nexport const LabelWrap: FC<{ label: string }> = ({ children, label }) => (\n  <LabelWrapStyled>\n    <LabelStyled>{label}</LabelStyled>\n    {children}\n  </LabelWrapStyled>\n);\n","import React from 'react';\nimport { t } from 'i18next';\nimport {\n  EditAndEnableButton,\n  EmailInputBox,\n  TextHeader,\n} from '@/screens/CoreSettings/AccountSettings/styles';\nimport { TSpan } from '@/components/Typography';\nimport { Spacer } from '@/layout';\nimport { TextField } from '@/components/TextField';\nimport { LabelGroup } from '@/components/StorybookHelpers/LabelWrap';\nimport { Button } from '@/components/Button';\nimport { type PhoneNumberSectionProps } from '@/screens/CoreSettings/AccountSettings/types';\n\nconst EmailAddressSection: React.FC<PhoneNumberSectionProps> = ({\n  onEditEmailAddressButtonClick,\n  onEnableEmailAddressButtonClick,\n  handleChange,\n  userProfileDetails,\n  user,\n}) => (\n  <div>\n    {user?.email ? (\n      <>\n        <TextHeader>\n          <TSpan\n            font=\"heading-xs-bold\"\n            colorToken=\"--text-card-header-neutral-highlighted\"\n          >\n            {t('noumena.email_address')}\n          </TSpan>\n        </TextHeader>\n        <Spacer height={32} />\n        <EmailInputBox>\n          <TextField\n            onChange={handleChange}\n            value={userProfileDetails.email || undefined}\n            label={t('noumena.email_login_form.email_address.label')}\n            data-testid=\"testEmailLoginTextField\"\n            disabled\n          />\n        </EmailInputBox>\n        <Spacer height={16} />\n        <LabelGroup columns={1}>\n          <EditAndEnableButton\n            testId=\"edit-email\"\n            secondary\n            onClick={onEditEmailAddressButtonClick}\n          >\n            {t('noumena.myaccount.account_settings_edit_email_address')}\n          </EditAndEnableButton>\n        </LabelGroup>\n      </>\n    ) : (\n      <>\n        <TextHeader>\n          <TSpan\n            font=\"heading-xs-bold\"\n            colorToken=\"--text-card-header-neutral-highlighted\"\n          >\n            {t('noumena.phone_login_form.phone.label')}\n          </TSpan>\n        </TextHeader>\n        <Spacer height={20} />\n        <TSpan font=\"body-m\" colorToken=\"--text-body-neutral-default\">\n          {t('noumena.account.settings_to_login')}\n        </TSpan>\n        <Spacer height={20} />\n        <Button\n          testId=\"edit-email\"\n          primary\n          onClick={onEnableEmailAddressButtonClick}\n        >\n          {t('noumena.account.settings_to_enable_email')}\n        </Button>\n      </>\n    )}\n  </div>\n);\n\nexport default EmailAddressSection;\n","import React from 'react';\nimport { t } from 'i18next';\nimport {\n  EditAndEnableButton,\n  PhoneInputBox,\n  TextHeader,\n} from '@/screens/CoreSettings/AccountSettings/styles';\nimport { TSpan } from '@/components/Typography';\nimport { Spacer } from '@/layout';\nimport { PhoneInput } from '@/components/PhoneInput';\nimport { LabelGroup } from '@/components/StorybookHelpers/LabelWrap';\nimport { Button } from '@/components/Button';\nimport { type EmailAddressSectionProps } from './types';\n\nconst PhoneNumberSection: React.FC<EmailAddressSectionProps> = ({\n  onEditPhoneNumberButtonClick,\n  userProfileDetails,\n  handleChange,\n  onEnablePhoneButtonClick,\n  user,\n}) => (\n  <div>\n    {user?.phone ? (\n      <>\n        <TextHeader>\n          <TSpan\n            font=\"heading-xs-bold\"\n            colorToken=\"--text-card-header-neutral-highlighted\"\n          >\n            {t('noumena.phone_login_form.phone.label')}\n          </TSpan>\n        </TextHeader>\n        <Spacer height={32} />\n        <PhoneInputBox>\n          <PhoneInput\n            onPhoneChange={() => {}}\n            onChange={handleChange}\n            value={`+${userProfileDetails.phone}` || undefined}\n            label={t('noumena.phone_login_form.phone.label')}\n            disabled\n          />\n        </PhoneInputBox>\n        <Spacer height={16} />\n        <LabelGroup columns={1}>\n          <EditAndEnableButton\n            testId=\"edit-phone\"\n            secondary\n            onClick={onEditPhoneNumberButtonClick}\n          >\n            {t('noumena.myaccount.account_settings_edit')}\n          </EditAndEnableButton>\n        </LabelGroup>\n      </>\n    ) : (\n      <div>\n        <TextHeader>\n          <TSpan\n            font=\"heading-xs-bold\"\n            colorToken=\"--text-card-header-neutral-highlighted\"\n          >\n            {t('noumena.phone_login_form.phone.label')}\n          </TSpan>\n        </TextHeader>\n        <Spacer height={32} />\n        <TSpan font=\"body-m\" colorToken=\"--text-body-neutral-default\">\n          {t('noumena.account.settings_to_login')}\n        </TSpan>\n        <Spacer height={24} />\n        <Button testId=\"edit-phone\" primary onClick={onEnablePhoneButtonClick}>\n          {t('noumena.account.settings_to_enable_phone')}\n        </Button>\n      </div>\n    )}\n  </div>\n);\n\nexport default PhoneNumberSection;\n","import { useCallback, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport * as yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from '@/components/ExtendedModal';\nimport { TSpan } from '@/components/Typography';\nimport { type Maybe, type OtpResponseOutput } from '@/apollo/generated/types';\nimport { Spacer } from '@/layout';\nimport { TextFieldWrapper } from '@/screens/CoreSettings/AccountSettings/styles';\nimport { TextField } from '@/components/TextField';\nimport { EMAIL_REGEX } from '@/constants/regex';\nimport { Button } from '@/components/Button';\nimport { useGenerateOtpForVerificationMutation } from '@/apollo/graphql';\nimport { useWindowDimensions } from '@/hooks';\nimport { breakpoints } from '@/constants/devices';\nimport {\n  type EditPhoneNumberModalProps,\n  type EmailLoginFormInputs,\n} from '../types';\n\nexport const EditAndEnableEmailAddressModal = ({\n  cancelCallback,\n  onFailed,\n  onSuccess,\n  isEdit,\n}: EditPhoneNumberModalProps) => {\n  const { t } = useTranslation();\n\n  const submitEmailData = useCallback(\n    async (data: Maybe<OtpResponseOutput | undefined>, email: string) => {\n      if (data?.error) {\n        onFailed('email', data);\n        return;\n      }\n      onSuccess('email', data, email);\n    },\n    [onSuccess, onFailed],\n  );\n\n  const btnType: { [key: string]: boolean } = {};\n  const [email, setEmail] = useState<string>('');\n\n  const validationSchema = useMemo(\n    () =>\n      yup\n        .object({\n          email: yup\n            .string()\n            .email(t('noumena.signup.error.incorrect_email'))\n            .required(t('noumena.signup.error.field_cannot_be_empty')),\n        })\n        .required(),\n    [t],\n  );\n\n  const {\n    register,\n    formState: { errors },\n  } = useForm<EmailLoginFormInputs>({\n    resolver: yupResolver(validationSchema),\n  });\n\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setEmail(e.currentTarget.value);\n    },\n    [setEmail],\n  );\n\n  const [generateOtpForVerificationMutation] =\n    useGenerateOtpForVerificationMutation({\n      variables: {\n        email,\n      },\n    });\n\n  const handleClick = useCallback(async () => {\n    await generateOtpForVerificationMutation().then((response) => {\n      const res: Maybe<OtpResponseOutput | undefined> =\n        response?.data?.generateOTPForVerification;\n      submitEmailData(res, email);\n    });\n  }, [submitEmailData, email, generateOtpForVerificationMutation]);\n\n  const { width } = useWindowDimensions();\n  const isMobile = width < breakpoints.TABLET;\n\n  return (\n    <Modal\n      onClose={cancelCallback}\n      style={{ textAlign: isMobile ? 'left' : 'center' }}\n      isFullScreen={isMobile}\n      open={true}\n    >\n      <ModalHeader isFullScreen={isMobile}>\n        {isEdit\n          ? t(`noumena.myaccount.account_settings_edit_email_address_popup`)\n          : t(`noumena.account.settings_to_enable_email_popup`)}\n      </ModalHeader>\n      <ModalBody\n        style={{ maxWidth: isMobile ? '100%' : 350 }}\n        isFullScreen={isMobile}\n      >\n        <TSpan\n          font=\"body-l\"\n          colorToken=\"--text-body-neutral-default\"\n          data-testid=\"description\"\n        >\n          {isEdit\n            ? t(`noumena.myaccount.account_settings.email_description`)\n            : t(`noumena.myaccount.account_settings.email_description`)}\n        </TSpan>\n        <Spacer height={16} />\n        <TextFieldWrapper>\n          <TextField\n            {...register('email', {\n              required: {\n                value: true,\n                message: t('noumena.email_login_form.valid_email.field_empty'),\n              },\n              pattern: {\n                value: EMAIL_REGEX,\n                message: t(\n                  'noumena.email_login_form.valid_email.error_message',\n                ),\n              },\n              onChange: handleChange,\n            })}\n            value={email}\n            label={t('noumena.email_address_new')}\n            error={!!errors.email}\n            helperText={\n              errors.email?.message || t('noumena.email_professional')\n            }\n            data-testid=\"testEmailLoginTextField\"\n          />\n        </TextFieldWrapper>\n      </ModalBody>\n      <ModalFooter isFullScreen={isMobile}>\n        <Button\n          tertiary\n          size=\"full\"\n          onClick={cancelCallback}\n          testId=\"cancelButton\"\n          textTestId=\"secondaryBtnLabel\"\n        >\n          {t('noumena.cancel')}\n        </Button>\n        <Spacer width={20} />\n        <Button\n          type=\"submit\"\n          primary\n          disabled={!email}\n          size=\"full\"\n          testId=\"nextButton\"\n          textTestId=\"primaryBtnLabel\"\n          onClick={handleClick}\n          {...btnType}\n        >\n          {t(`noumena.next.text`)}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n","import { type KeyboardEvent, useCallback, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from '@/components/ExtendedModal';\nimport { type Maybe, type OtpResponseOutput } from '@/apollo/generated/types';\nimport { TSpan } from '@/components/Typography';\nimport { Spacer } from '@/layout';\nimport { useWindowDimensions } from '@/hooks';\nimport { breakpoints } from '@/constants/devices';\nimport { Button } from '@/components/Button';\nimport { TextFieldWrapper } from '@/screens/CoreSettings/AccountSettings/styles';\nimport { useGenerateOtpForVerificationMutation } from '@/apollo/graphql';\nimport { isValidPhoneNumber } from '@/utils/phonenumber';\nimport { PhoneInput } from '@/components/PhoneInput';\nimport { type EditPhoneNumberModalProps } from '../types';\n\nexport const EditAndEnablePhoneNumberModal = ({\n  cancelCallback,\n  onFailed,\n  onSuccess,\n  isEdit,\n}: EditPhoneNumberModalProps) => {\n  const { t } = useTranslation();\n\n  const submitPhoneData = useCallback(\n    async (data: Maybe<OtpResponseOutput | undefined>, phoneNumber: string) => {\n      if (data?.error) {\n        onFailed('phone', data);\n        return;\n      }\n      onSuccess('phone', data, phoneNumber);\n    },\n    [onSuccess, onFailed],\n  );\n\n  const { width } = useWindowDimensions();\n  const isMobile = width < breakpoints.TABLET;\n\n  const [phone, setPhone] = useState<string>('');\n  const [phoneError, setPhoneError] = useState<string>('');\n  const handlePhoneChange = useCallback(\n    (value: string) => {\n      setPhone(value);\n    },\n    [setPhone],\n  );\n\n  const [generateOtpForVerificationMutation] =\n    useGenerateOtpForVerificationMutation({\n      variables: {\n        phone,\n      },\n    });\n  const handleClick = useCallback(async () => {\n    setPhoneError('');\n    if (!phone) {\n      setPhoneError(t('noumena.phone_login_form.valid_phone.field_empty'));\n      return;\n    }\n    if (phone.includes('-') || !isValidPhoneNumber(`+${phone}`)) {\n      setPhoneError(t('noumena.phone_login_form.valid_phone.error_message'));\n      return;\n    }\n    await generateOtpForVerificationMutation().then((response) => {\n      const res: Maybe<OtpResponseOutput | undefined> =\n        response?.data?.generateOTPForVerification;\n      submitPhoneData(res, phone);\n    });\n  }, [phone, submitPhoneData, generateOtpForVerificationMutation, t]);\n\n  const handlePhoneInputKeyPress = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        handleClick();\n      }\n    },\n    [handleClick],\n  );\n\n  useEffect(() => {\n    if (isValidPhoneNumber(phone)) {\n      setPhoneError('');\n    }\n  }, [phone, setPhoneError]);\n\n  return (\n    <Modal\n      style={{ textAlign: isMobile ? 'left' : 'center' }}\n      onClose={cancelCallback}\n      isFullScreen={isMobile}\n      open={true}\n    >\n      <ModalHeader isFullScreen={isMobile}>\n        {isEdit\n          ? t(`noumena.myaccount.account_settings_edit_popoup`)\n          : t(`noumena.account.settings_to_enable_phone_popup`)}\n      </ModalHeader>\n      <ModalBody\n        style={{ maxWidth: isMobile ? '100%' : 350 }}\n        isFullScreen={isMobile}\n        flexDirection=\"column\"\n      >\n        <TSpan\n          font=\"body-l\"\n          colorToken=\"--text-body-neutral-default\"\n          data-testid=\"description\"\n        >\n          {isEdit\n            ? t(`noumena.myaccount.account_settings.phone_description`)\n            : t(`noumena.myaccount.account_settings.phone_description_new`)}\n        </TSpan>\n        <Spacer height=\"16px\" />\n        <>\n          <TextFieldWrapper>\n            <PhoneInput\n              label={t('noumena.phone_login_form.phone.label')}\n              error={!!phoneError}\n              helperText={phoneError}\n              onPhoneChange={handlePhoneChange}\n              onKeyPress={handlePhoneInputKeyPress}\n              data-testid=\"testLoginPhoneInput\"\n            />\n          </TextFieldWrapper>\n        </>\n      </ModalBody>\n      <ModalFooter gap={20} isFullScreen={isMobile}>\n        <Button\n          tertiary\n          size=\"full\"\n          onClick={cancelCallback}\n          testId=\"cancelButton\"\n          textTestId=\"secondaryBtnLabel\"\n        >\n          {t('noumena.cancel')}\n        </Button>\n        <Button\n          primary\n          size=\"full\"\n          onClick={handleClick}\n          softDisabled={phone.trim() === ''}\n        >\n          {t(`noumena.next.text`)}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n","import { type ButtonIntent, type ButtonType } from '@/components/Button/types';\nimport {\n  type Maybe,\n  type OtpResponseOutput,\n  type User,\n  type UserOutput,\n  type UserProfileInput,\n} from '@/apollo/generated/types';\nimport { type LoginData } from './loginTypes';\n\nexport type EmailAddressSectionProps = {\n  onEditPhoneNumberButtonClick: () => void;\n  onEnablePhoneButtonClick: () => void;\n  userProfileDetails: UserProfileInput;\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  user?: Maybe<UserOutput | User>;\n};\n\nexport type PhoneNumberSectionProps = {\n  onEditEmailAddressButtonClick: () => void;\n  onEnableEmailAddressButtonClick: () => void;\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  userProfileDetails: UserProfileInput;\n  user?: Maybe<UserOutput | User>;\n};\n\nexport type DeleteAccountModalProps = {\n  cancelCallback: () => void;\n};\n\nexport type ConfirmModalProps = {\n  positiveBtnType: ButtonType;\n  positiveBtnIntent?: ButtonIntent;\n  phonePositiveBtnLabel: string;\n  isOpenEditPhoneNumber: boolean;\n  isOpenEnablePhoneModel: boolean;\n  isOpenEditEmailModel: boolean;\n  isOpenEnableEmailModel: boolean;\n  isOpenOtpModel: boolean;\n  isDeleteAccount: boolean;\n  cancelCallback: () => void;\n};\n\nexport type EnableEmailAddressModalProps = {\n  isOpenEnableEmailModel: boolean;\n  phonePositiveBtnLabel: string;\n  cancelCallback: () => void;\n};\n\nexport type ConfirmModalForEmailProps = {\n  isEdit: boolean;\n  isOpenEnableEmailModel: boolean;\n  isOpenEditEmailModel: boolean;\n  phonePositiveBtnLabel: string;\n  cancelCallback: () => void;\n  onFailed: (type: string, data: Maybe<OtpResponseOutput | undefined>) => void;\n  onSuccess: (\n    type: string,\n    msg: Maybe<OtpResponseOutput | undefined>,\n    email: string,\n  ) => void;\n};\n\nexport type EnablePhoneNumberModalProps = {\n  errorMessage?: string;\n  loading?: boolean;\n  isOpenEnablePhoneModel: boolean;\n  phonePositiveBtnLabel: string;\n  cancelCallback: () => void;\n};\n\nexport type EditPhoneNumberModalProps = {\n  isEdit: boolean;\n  onFailed: (type: string, data: Maybe<OtpResponseOutput | undefined>) => void;\n  onSuccess: (\n    type: string,\n    data: Maybe<OtpResponseOutput | undefined>,\n    onPhoneSuccess: string,\n  ) => void;\n  cancelCallback: () => void;\n};\n\nexport type OtpModalProps = {\n  errorMsg?: string;\n  onVerifyFailed: (msg: string) => void;\n  onVerifySuccess: (resp: string) => void;\n  cancelCallback: () => void;\n  phoneOrEmail: string;\n  onEmailOrPhoneOtpFailed: (\n    type: string,\n    data: Maybe<OtpResponseOutput | undefined>,\n  ) => void;\n  onEmailOrPhoneOtpSuccess: (\n    type: string,\n    msg: Maybe<OtpResponseOutput | undefined>,\n    email: string,\n  ) => void;\n  type: string;\n};\n\nexport type EditPhoneNumberProps = {\n  recaptchaToken?: Maybe<string>;\n  loading?: boolean;\n  errorMessage?: string;\n  onLoginFailed: (\n    type: 'phone' | 'email',\n    errorStatus: number,\n    errorMessage: string,\n  ) => void;\n  onLoginSuccess: (msg: string, data: LoginData, isResend?: boolean) => void;\n  clearInput?: () => void;\n  positiveBtnType: ButtonType;\n  positiveBtnIntent?: ButtonIntent;\n  phonePositiveBtnLabel: string;\n  negativeBtnLabel?: string;\n  isOpenEditPhoneNumber: boolean;\n  isOpenEditEmailModel: boolean;\n  isOpenOtpModel: boolean;\n  isDeleteAccount: boolean;\n  cancelCallback: () => void;\n  confirmCallback: () => void;\n};\nexport type EmailLoginFormInputs = {\n  email: string;\n};\n\nexport type PhoneFormProps = {\n  errorMessage?: string;\n  recaptchaToken?: Maybe<string>;\n  loading?: boolean;\n  submitPhoneData: (\n    data: Maybe<OtpResponseOutput | undefined>,\n    phoneNumber: string,\n  ) => void;\n  positiveBtnIntent?: ButtonIntent;\n  phonePositiveBtnLabel: string;\n  cancelEditPhone: () => void;\n};\nexport type EmailFormProps = {\n  isFullScreen: boolean;\n  submitLoginData?: (data: LoginData) => void;\n  submitEmailData: (\n    data: Maybe<OtpResponseOutput | undefined>,\n    eamil: string,\n  ) => void;\n  positiveBtnIntent?: ButtonIntent;\n  phonePositiveBtnLabel: string;\n  cancelEditPhone: () => void;\n  confirmEditPhone: () => void;\n};\nexport enum TypeEnum {\n  phone = 'phone',\n  email = 'email',\n}\n","import { useCallback, useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from '@/components/Button';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from '@/components/ExtendedModal';\nimport { OtpInput } from '@/components/Otp/OtpInput';\nimport { Spacer } from '@/layout';\nimport { TSpan } from '@/components/Typography';\nimport {\n  useOtpVerificationMutation,\n  useGenerateOtpForVerificationMutation,\n} from '@/apollo/graphql';\nimport { type Maybe, type OtpResponseOutput } from '@/apollo/generated/types';\nimport { type OtpModalProps, TypeEnum } from '../types';\nimport { StyledButton, FourDigitOtp } from '../styles';\n\nexport const OtpModal = ({\n  cancelCallback,\n  errorMsg,\n  onVerifyFailed,\n  onVerifySuccess,\n  phoneOrEmail,\n  onEmailOrPhoneOtpFailed,\n  onEmailOrPhoneOtpSuccess,\n  type,\n}: OtpModalProps) => {\n  const { t } = useTranslation();\n\n  const [otp, setOtp] = useState('');\n\n  const [otpVerificationMutation] = useOtpVerificationMutation({\n    variables: {\n      otp: otp ? parseInt(otp, 10) : null,\n      phone: type === TypeEnum.phone ? phoneOrEmail : null,\n      email: type === TypeEnum.email ? phoneOrEmail : null,\n    },\n  });\n\n  const [generateOtpForVerificationMutation] =\n    useGenerateOtpForVerificationMutation({\n      variables: {\n        phone: type === TypeEnum.phone ? phoneOrEmail : null,\n        email: type === TypeEnum.email ? phoneOrEmail : null,\n      },\n    });\n\n  const onVerify = useCallback(async () => {\n    await otpVerificationMutation().then((response) => {\n      const data = response.data ? response.data.OTPVerification : {};\n      const message = data?.message ? data?.message : '';\n      if (data?.error) {\n        onVerifyFailed(message);\n        return;\n      }\n      onVerifySuccess(message);\n    });\n  }, [onVerifyFailed, onVerifySuccess, otpVerificationMutation]);\n\n  useEffect(() => {\n    if (errorMsg !== '') {\n      setOtp('');\n    }\n  }, [errorMsg]);\n\n  const handleClick = useCallback(async () => {\n    await generateOtpForVerificationMutation().then((response) => {\n      const data: Maybe<OtpResponseOutput | undefined> =\n        response?.data?.generateOTPForVerification;\n      if (data?.error) {\n        onEmailOrPhoneOtpFailed(type, data);\n        return;\n      }\n      onEmailOrPhoneOtpSuccess(type, data, phoneOrEmail);\n    });\n  }, [\n    phoneOrEmail,\n    type,\n    generateOtpForVerificationMutation,\n    onEmailOrPhoneOtpFailed,\n    onEmailOrPhoneOtpSuccess,\n  ]);\n\n  return (\n    <Modal style={{ width: 400 }} isFullScreen={false} open={true}>\n      <ModalHeader isFullScreen={false}>\n        {type === 'phone'\n          ? t('noumena.sign_up.phone_verification')\n          : t('noumena.sign_up.email_verification')}\n      </ModalHeader>\n      <ModalBody isFullScreen={false}>\n        <FourDigitOtp>\n          <TSpan font=\"body-l\" colorToken=\"--text-body-neutral-default\">\n            {t('noumena.enter_otp_code.text')}\n            <br />\n          </TSpan>\n          <TSpan font=\"body-l\" colorToken=\"--text-body-neutral-highlighted\">\n            {type === 'phone' ? '+' : ''}\n            {phoneOrEmail}\n          </TSpan>\n        </FourDigitOtp>\n        <Spacer height={32} />\n        <OtpInput value={otp} onChange={(val) => setOtp(val || '')} />\n        <Spacer height={32} />\n        <StyledButton>\n          <Button\n            secondary\n            textOnly\n            data-testid=\"resend-verify-button\"\n            onClick={handleClick}\n          >\n            {t('noumena.resend_verification_code.text')}\n          </Button>\n        </StyledButton>\n        <Spacer height={8} />\n      </ModalBody>\n      <ModalFooter isFullScreen={false}>\n        <Button\n          tertiary\n          size=\"full\"\n          onClick={cancelCallback}\n          testId=\"secondaryBtn\"\n          textTestId=\"secondaryBtnLabel\"\n        >\n          {t('noumena.cancel')}\n        </Button>\n        <Spacer width={20} />\n        <Button\n          size=\"full\"\n          testId=\"primaryBtn\"\n          textTestId=\"primaryBtnLabel\"\n          onClick={onVerify}\n          primary\n          disabled={!otp}\n        >\n          {t(`noumena.next.text`)}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n","import { useState, useCallback } from 'react';\nimport { t } from 'i18next';\nimport * as Sentry from '@sentry/react';\nimport { Button } from '@/components/Button';\nimport { Modal, ModalBody, ModalHeader } from '@/components/ExtendedModal';\nimport { Spacer } from '@/layout';\nimport { Form } from '@/screens/Register/Steps/StepThree/SignUpForm/styles';\nimport { useDeleteAccountMutation } from '@/apollo/graphql';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useToast } from '@/hooks';\n\nimport { TextField } from '@/components/TextField';\nimport { TSpan } from '@/components/Typography';\nimport { LINKS } from '@/constants/links';\nimport { type DeleteAccountModalProps } from '../types';\nimport {\n  DeleteAccountParagraph,\n  LinkIconWrapper,\n  DeleteAccountProceed,\n  DeleteFooter,\n  AdvancedSettingsWrapper,\n  RemoveAccount,\n  CheckBoxWrapper,\n  CheckBox,\n  CheckBoxLabel,\n  RightIcon,\n  PrivacyPolicyLink,\n} from '../styles';\n\nexport const DeleteAccountModal = ({\n  cancelCallback,\n}: DeleteAccountModalProps) => {\n  const { addToast } = useToast();\n  const { signOut } = useAuth();\n  const [typeDeleteValue, setTypeDeleteValue] = useState('');\n  const [deletePersonalDataCheckbox, setDeletePersonalDataCheckbox] =\n    useState(Boolean);\n  const [isOpen, toggle] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const btnType: { [key: string]: boolean } = {};\n\n  const onInputChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setTypeDeleteValue(event.target.value);\n    },\n    [],\n  );\n\n  const onCheckboxChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setDeletePersonalDataCheckbox(event.target.checked);\n    },\n    [setDeletePersonalDataCheckbox],\n  );\n\n  const [deleteAccountMutation] = useDeleteAccountMutation({\n    variables: {\n      input: {\n        deletePII: deletePersonalDataCheckbox,\n        reason: typeDeleteValue,\n      },\n    },\n  });\n\n  const handleSubmitSave = useCallback(async () => {\n    try {\n      setIsDeleting(true);\n      const res = await deleteAccountMutation();\n      if (res.errors) {\n        addToast(\n          'error',\n          'icon',\n          t('noumena.myaccount.account_settings_account_deleted_error'),\n        );\n      } else {\n        addToast(\n          'primary',\n          'none',\n          t('noumena.myaccount.account_settings_account_deleted_success'),\n        );\n        signOut();\n      }\n      setIsDeleting(false);\n    } catch (error: unknown) {\n      setIsDeleting(false);\n      Sentry.captureException(error, {\n        tags: {\n          section: 'deleteAccountMutation',\n        },\n      });\n      if (error instanceof Error) {\n        addToast('error', 'icon', `${error.message}`);\n      } else {\n        addToast(\n          'error',\n          'icon',\n          t('noumena.myaccount.account_settings_account_deleted_error'),\n        );\n      }\n    }\n    cancelCallback();\n  }, [deleteAccountMutation, addToast, cancelCallback, signOut]);\n\n  return (\n    <Modal\n      isFullScreen={false}\n      open={true}\n      onClose={cancelCallback}\n      style={{ width: 327 }}\n    >\n      <ModalHeader isFullScreen={false}>\n        {t('noumena.myaccount.delete_account')}\n      </ModalHeader>\n      <ModalBody isFullScreen={false}>\n        <TSpan font=\"body-l\" colorToken=\"--text-body-neutral-default\">\n          <DeleteAccountParagraph>\n            {t('noumena.myaccount.delete_account_paragraph')}\n            {deletePersonalDataCheckbox ? (\n              <>\n                <strong>\n                  {` ${t('noumena.myaccount.delete_account_profile')}`}\n                </strong>{' '}\n                {t('noumena.myaccount.delete_account_and')}{' '}\n                <strong>\n                  {` ${t(\n                    'noumena.myaccount.delete_account_personal_information',\n                  )}`}\n                </strong>{' '}\n                {t('noumena.myaccount.delete_account_permanently')}\n              </>\n            ) : (\n              <strong>\n                {` ${t('noumena.myaccount.delete_account_profile')}`}\n              </strong>\n            )}\n            .\n          </DeleteAccountParagraph>\n        </TSpan>\n        <Spacer height={24} />\n        <Form>\n          <DeleteAccountProceed>\n            <TSpan font=\"body-l\" colorToken=\"--text-body-neutral-default\">\n              {t('noumena.myaccount.delete_account_proceed')}{' '}\n              <strong>{t('noumena.myaccount.delete_account_delete')}</strong>{' '}\n              {t('noumena.myaccount.delete_account_below')}\n            </TSpan>\n          </DeleteAccountProceed>\n          <Spacer height={16} />\n          <TextField\n            onChange={(e) => {\n              onInputChange(e);\n            }}\n            placeholder={t('noumena.chambers.element.posts.type_delete')}\n            inputSize=\"normal\"\n          />\n          <Spacer height={16} />\n          <AdvancedSettingsWrapper isDisabled={isDeleting}>\n            <Button\n              rightIcon={\n                <RightIcon\n                  name=\"chevron_down_m\"\n                  isOpen={isOpen}\n                  size={16}\n                  onClick={() => {\n                    if (!isDeleting) toggle(!isOpen);\n                  }}\n                  data-testid=\"styledCountryDownArrow\"\n                  isDisabled={isDeleting}\n                  color=\"--icon-button-brand-primary-default\"\n                />\n              }\n              secondary\n              textOnly\n              onClick={() => {\n                if (!isDeleting) toggle(!isOpen);\n              }}\n              data-testid=\"resend-verify-button\"\n            >\n              {t('noumena.myaccount.delete_account_link_advanced')}\n            </Button>\n          </AdvancedSettingsWrapper>\n          {isOpen && (\n            <>\n              <Spacer height={21} />\n              <LinkIconWrapper>\n                <TSpan font=\"body-m\" colorToken=\"--text-body-neutral-default\">\n                  <RemoveAccount>\n                    {t('noumena.myaccount.switch.personal_details_remove')}\n                  </RemoveAccount>\n                </TSpan>\n                <Spacer width={16} />\n                <CheckBoxWrapper>\n                  <CheckBox\n                    id=\"checkbox\"\n                    type=\"checkbox\"\n                    onChange={(event) => {\n                      if (!isDeleting) onCheckboxChange(event);\n                    }}\n                    disabled={isDeleting}\n                  />\n                  <CheckBoxLabel htmlFor=\"checkbox\" />\n                </CheckBoxWrapper>\n              </LinkIconWrapper>\n            </>\n          )}\n        </Form>\n        <Spacer height={16} />\n        <Button\n          secondary\n          size=\"full\"\n          intent=\"negative\"\n          testId=\"primaryBtn\"\n          textTestId=\"primaryBtnLabel\"\n          onClick={handleSubmitSave}\n          {...btnType}\n          loading={isDeleting}\n          disabled={typeDeleteValue !== 'DELETE' || isDeleting}\n        >\n          {t('noumena.myaccount.delete_account')}\n        </Button>\n        <Spacer height={16} />\n        <Button\n          primary\n          size=\"full\"\n          intent=\"negative\"\n          onClick={cancelCallback}\n          testId=\"secondaryBtn\"\n          textTestId=\"secondaryBtnLabel\"\n          disabled={isDeleting}\n        >\n          {t('noumena.cancel')}\n        </Button>\n        <Spacer height=\"16px\" />\n        <DeleteFooter>\n          <TSpan font=\"body-s\" colorToken=\"--text-body-neutral-default\">\n            {t('noumena.myaccount.delete_account_footer')}\n          </TSpan>\n          <PrivacyPolicyLink\n            isDisabled={isDeleting}\n            onClick={() => {\n              if (!isDeleting) window?.open(LINKS.PRIVACY, '_blank');\n            }}\n            font=\"body-s\"\n            colorToken=\"--text-body-neutral-default\"\n          >\n            {t('noumena.myaccount.privacy_policy')}\n          </PrivacyPolicyLink>\n        </DeleteFooter>\n      </ModalBody>\n    </Modal>\n  );\n};\n","import { useState, useCallback, useEffect } from 'react';\nimport { t } from 'i18next';\nimport { Button } from '@/components/Button';\nimport { Spacer } from '@/layout';\nimport { type EditPhoneNumberModalProps } from '@/screens/CoreSettings/AccountSettings/types';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useToast } from '@/hooks';\nimport {\n  type Maybe,\n  type OtpResponseOutput,\n  type UserProfileInput,\n} from '@/apollo/generated/types';\nimport { TSpan } from '@/components/Typography';\nimport EmailAddressSection from '@/screens/CoreSettings/AccountSettings/EmailAddressSection';\nimport PhoneNumberSection from '@/screens/CoreSettings/AccountSettings/PhoneNumberSection';\nimport { EditAndEnableEmailAddressModal } from './Modals/EditAndEnableEmailAddressModal';\nimport { EditAndEnablePhoneNumberModal } from './Modals/EditAndEnablePhoneNumberModal';\nimport { OtpModal } from './Modals/OtpModal';\nimport { DeleteAccountModal } from './Modals/DeleteAccountModal';\nimport {\n  AccountWrapper,\n  DeleteAccountWrapper,\n  DivWrapper,\n  StyledButton,\n} from './styles';\nimport { HeaderWrapper } from '../PersonalDetails/styles';\n\nenum AccountSettingsModal {\n  EditPhoneNumber = 'EditPhoneNumber',\n  EnablePhoneNumber = 'EnablePhoneNumber',\n  EnableEmailAddress = 'EnableEmailAddress',\n  EditEmailAddress = 'EditEmailAddress',\n  DeleteAccount = 'DeleteAccount',\n  Opt = 'Opt',\n}\n\nfunction AccountSettings() {\n  const { addToast } = useToast();\n  const { user, refetchUserData } = useAuth();\n\n  const [currentlyOpenModal, setCurrentlyOpenModal] =\n    useState<AccountSettingsModal | null>(null);\n\n  const [phoneOrEmail, setPhoneOrEmail] = useState('');\n\n  const [type, setType] = useState('');\n\n  const [userProfileDetails, setUserProfileDetails] =\n    useState<UserProfileInput>({\n      phone: user?.phone,\n      email: user?.email,\n    });\n\n  const onEditPhoneNumberButtonClick = () =>\n    setCurrentlyOpenModal(AccountSettingsModal.EditPhoneNumber);\n\n  const onEditEmailAddressButtonClick = () =>\n    setCurrentlyOpenModal(AccountSettingsModal.EditEmailAddress);\n\n  const onDeleteAccountButtonClick = () =>\n    setCurrentlyOpenModal(AccountSettingsModal.DeleteAccount);\n\n  const onEnablePhoneButtonClick = () =>\n    setCurrentlyOpenModal(AccountSettingsModal.EnablePhoneNumber);\n\n  const onEnableEmailAddressButtonClick = () =>\n    setCurrentlyOpenModal(AccountSettingsModal.EnableEmailAddress);\n\n  const onPhoneOrEmailFailed = useCallback(\n    (checkType: string, data: Maybe<OtpResponseOutput | undefined>) => {\n      let errMsg = data?.message;\n      if (data?.Status === 404) {\n        errMsg =\n          checkType === 'phone'\n            ? t('noumena.phone_login_form.phone_number.not_exist_error')\n            : t('noumena.email_login_form.email_address.not_exist_error');\n      }\n\n      addToast('error', 'none', `${t('noumena.toast_error.text')}: ${errMsg}`);\n    },\n    [addToast],\n  );\n\n  const onPhoneOrEmailSuccess = useCallback(\n    (\n      checkType: string,\n      data: Maybe<OtpResponseOutput | undefined>,\n      phoneNumberOrEmail: string,\n    ) => {\n      setType(checkType);\n      setPhoneOrEmail(phoneNumberOrEmail);\n      setCurrentlyOpenModal(AccountSettingsModal.Opt);\n      addToast('success', 'none', t('noumena.verification_code_sent.text'));\n    },\n    [addToast],\n  );\n\n  const onVerifyFailed = useCallback(\n    (message: string) => {\n      addToast('error', 'none', `${t('noumena.toast_error.text')}: ${message}`);\n    },\n    [addToast],\n  );\n\n  const onVerifySuccess = useCallback(\n    (message: string) => {\n      addToast(\n        'success',\n        'none',\n        `${t('noumena.toast_success.text')}: ${message}`,\n      );\n      setCurrentlyOpenModal(null);\n      refetchUserData();\n    },\n    [addToast, refetchUserData],\n  );\n\n  useEffect(() => {\n    setUserProfileDetails({\n      phone: user?.phone,\n      email: user?.email,\n    });\n  }, [user]);\n\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setUserProfileDetails({\n        ...userProfileDetails,\n        [e.currentTarget.name]: e.currentTarget.value,\n      });\n    },\n    [userProfileDetails, setUserProfileDetails],\n  );\n\n  const defaultModalProps: EditPhoneNumberModalProps = {\n    isEdit: true,\n    cancelCallback: () => {\n      setCurrentlyOpenModal(null);\n    },\n    onFailed: onPhoneOrEmailFailed,\n    onSuccess: onPhoneOrEmailSuccess,\n  };\n\n  const renderModal = () => {\n    if (currentlyOpenModal) {\n      switch (currentlyOpenModal) {\n        case AccountSettingsModal.DeleteAccount:\n          return (\n            <DeleteAccountModal\n              {...defaultModalProps}\n              data-testid=\"deleteAccountModal\"\n            />\n          );\n        case AccountSettingsModal.EnablePhoneNumber:\n          return (\n            <EditAndEnablePhoneNumberModal\n              {...defaultModalProps}\n              isEdit={false}\n              data-testid=\"enablePhoneNumberModal\"\n            />\n          );\n        case AccountSettingsModal.EditPhoneNumber:\n          return (\n            <EditAndEnablePhoneNumberModal\n              {...defaultModalProps}\n              data-testid=\"editPhoneNumberModal\"\n            />\n          );\n        case AccountSettingsModal.EnableEmailAddress:\n          return (\n            <EditAndEnableEmailAddressModal\n              {...defaultModalProps}\n              isEdit={false}\n              data-testid=\"enableEmailAddressModal\"\n            />\n          );\n        case AccountSettingsModal.EditEmailAddress:\n          return (\n            <EditAndEnableEmailAddressModal\n              {...defaultModalProps}\n              data-testid=\"editEmailAddressModal\"\n            />\n          );\n        case AccountSettingsModal.Opt:\n          return (\n            <OtpModal\n              data-testid=\"optModal\"\n              onVerifyFailed={onVerifyFailed}\n              onVerifySuccess={onVerifySuccess}\n              onEmailOrPhoneOtpFailed={onPhoneOrEmailFailed}\n              onEmailOrPhoneOtpSuccess={onPhoneOrEmailSuccess}\n              phoneOrEmail={phoneOrEmail}\n              type={type}\n              cancelCallback={() => {\n                setCurrentlyOpenModal(null);\n              }}\n            />\n          );\n        default:\n          return <></>;\n      }\n    }\n    return <></>;\n  };\n\n  if (!user) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <AccountWrapper>\n        <HeaderWrapper>\n          <TSpan\n            font=\"heading-m-bold\"\n            colorToken=\"--text-card-header-neutral-highlighted\"\n          >\n            {' '}\n            {t('noumena.myaccount.account_settings')}\n          </TSpan>\n        </HeaderWrapper>\n        <Spacer height={32} />\n        <PhoneNumberSection\n          user={user}\n          handleChange={handleChange}\n          onEnablePhoneButtonClick={onEnablePhoneButtonClick}\n          onEditPhoneNumberButtonClick={onEditPhoneNumberButtonClick}\n          userProfileDetails={userProfileDetails}\n        />\n        <Spacer height={36} />\n        <EmailAddressSection\n          user={user}\n          handleChange={handleChange}\n          userProfileDetails={userProfileDetails}\n          onEnableEmailAddressButtonClick={onEnableEmailAddressButtonClick}\n          onEditEmailAddressButtonClick={onEditEmailAddressButtonClick}\n        />\n        <DivWrapper>\n          <DeleteAccountWrapper>\n            <StyledButton>\n              <Button\n                secondary\n                textOnly\n                onClick={onDeleteAccountButtonClick}\n                data-testid=\"delete-account\"\n              >\n                {t('noumena.myaccount.account_settings_delete_my_account')}\n              </Button>\n            </StyledButton>\n          </DeleteAccountWrapper>\n        </DivWrapper>\n      </AccountWrapper>\n      {renderModal()}\n    </>\n  );\n}\n\nexport default AccountSettings;\n","import styled from 'styled-components';\nimport { sizes } from '@/constants/devices';\nimport { bodyTypography } from '@/components/Typography';\n\nexport const InviteFriendsWrapper = styled.form`\n  height: 100%;\n  display: flex;\n  gap: 0;\n  position: relative;\n  @media (max-width: ${sizes.LAPTOP}) {\n    flex-direction: column;\n  }\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    flex-direction: column;\n    margin-left: 16px;\n  }\n`;\nexport const LeftContent = styled.div`\n  width: 401px;\n  @media (max-width: ${sizes.LAPTOP}) {\n    width: 820px;\n    margin-left: 204px;\n  }\n  @media (max-width: ${sizes.TABLET}) {\n    width: 560px;\n    margin-left: 204px;\n  }\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    width: 405px;\n    margin-left: 0;\n  }\n  @media (max-width: ${sizes.MOBILE_M}) {\n    width: 360px;\n    margin-left: 0;\n  }\n`;\n\nexport const TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  width: 401px;\n\n  @media (max-width: ${sizes.TABLET}) {\n    width: 360px;\n    margin-top: 28px;\n  }\n  @media (max-width: ${sizes.MOBILE_L}) {\n    width: 348px;\n    margin: 28px 20px 0 20px;\n  }\n  @media (max-width: ${sizes.MOBILE_M}) {\n    width: 300px;\n  }\n`;\nexport const HeaderWrapper = styled.div`\n  margin-top: 24px;\n  @media (max-width: ${sizes.TABLET}) {\n    display: none;\n    margin-top: 0px;\n  }\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    display: none;\n    margin-top: 0px;\n  }\n`;\nexport const InvitesWrapper = styled.div`\n  height: 100%;\n  margin-top: 96px;\n  width: 400px;\n  flex: 0;\n  flex-grow: 1;\n  display: flex;\n  margin-left: 109px;\n  flex-direction: column;\n  @media (max-width: ${sizes.LAPTOP}) {\n    order: 1;\n    margin-left: 204px;\n    margin-top: 24px;\n  }\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    order: 1;\n    margin-left: 0;\n    margin-top: 24px;\n    > span {\n      font-size: 16px;\n    }\n  }\n  @media (max-width: ${sizes.MOBILE_M}) {\n    width: 300px;\n    margin: 28px 20px 60px 20px;\n    > span {\n      font-size: 16px;\n    }\n  }\n`;\n\nexport const ReferralCodeHead = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: flex-start;\n  width: 401px;\n  border-radius: 16px;\n  background: var(--bg-input-neutral-default);\n  padding: 16px;\n  button {\n    margin-top: 8px;\n    background: var(--bg-button-neutral-alt-default);\n  }\n  @media (max-width: ${sizes.MOBILE_MAX}) {\n    /* width: 343px; */\n    width: calc(343px - 16px - 32px);\n  }\n  @media (max-width: ${sizes.MOBILE_M}) {\n    width: 290px;\n  }\n`;\n\nexport const InvHead = styled.span`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  ${bodyTypography.bodyMedium}\n`;\n\nexport const InvDataHead = styled.span`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 16px;\n`;\n\nexport const InvDataBody = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const InvTitle = styled.span`\n  display: flex;\n  cursor: pointer;\n  flex-direction: column;\n  color: var(--text-tablecell-header-neutral-highlighted);\n  ${bodyTypography.bodyMediumBold};\n`;\nexport const InvContainer = styled.div`\n  width: 100%;\n`;\n","import { useTranslation } from 'react-i18next';\nimport { format } from 'date-fns';\nimport { Avatar } from '@/components/Avatar/Avatar';\nimport { Underline } from '@/screens/Chamber/components/RightPanel/elements/ReceivedRequests/styles';\nimport { TSpan } from '@/components/Typography';\nimport {\n  InvContainer,\n  InvDataBody,\n  InvDataHead,\n  InvHead,\n  InvTitle,\n} from './styles';\nimport { type IInvitesRequest } from './types';\n\nconst InvitesRequest = ({ name, profileImage, date }: IInvitesRequest) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <InvContainer>\n        <InvHead data-testid=\"theadSection\">\n          <InvDataHead>\n            <Avatar url={profileImage} />\n            <InvDataBody>\n              <InvTitle data-testid=\"tMemberRequestTitle\">{name}</InvTitle>\n              <TSpan\n                font=\"body-m\"\n                colorToken=\"--text-tablecell-body-neutral-default\"\n              >\n                {t(`noumena.myaccount.invitefriends_responded`)}{' '}\n                {format(new Date(date), 'MM.dd.yyyy')}\n              </TSpan>\n            </InvDataBody>\n          </InvDataHead>\n        </InvHead>\n      </InvContainer>\n      <Underline />\n    </>\n  );\n};\n\nexport default InvitesRequest;\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { Spacer } from '@/layout';\nimport { useToast } from '@/hooks';\nimport { UserStatus } from '@/apollo/generated/types';\nimport { TSpan } from '@/components/Typography';\nimport { Button } from '@/components/Button';\nimport { useUserReferralEntryQuery } from '@/apollo/graphql';\nimport { Spinner } from '@/components/Spinner';\nimport { UserUtil } from '@/utils/user';\nimport { getFullName } from '@/utils/fullName';\nimport * as Storyblok from '@/services/rest/storyblok';\nimport InvitesRequest from './InvitesRequest';\nimport {\n  InvitesWrapper,\n  TextWrapper,\n  HeaderWrapper,\n  InviteFriendsWrapper,\n  LeftContent,\n  ReferralCodeHead,\n} from './styles';\nimport { type Content, type RootObject } from './types';\n\nconst InvitesFriends = () => {\n  const { t } = useTranslation();\n  const { addToast } = useToast();\n  const [content, setContent] = useState<Content>();\n  const componentMounted = useRef(true);\n\n  useEffect(() => {\n    async function getReferralPageContent() {\n      const { data }: { data: RootObject } =\n        await Storyblok.getReferralPageContent();\n      if (componentMounted.current) {\n        setContent(data?.story?.content);\n      }\n    }\n\n    getReferralPageContent();\n  }, []);\n\n  const { data, loading } = useUserReferralEntryQuery({\n    variables: {\n      productKey: 'NOUMENATI',\n    },\n  });\n\n  const referralData = useMemo(\n    () => data?.userReferralEntry,\n    [data?.userReferralEntry],\n  );\n\n  const [isReferralUsed, referralUsedBy] = useMemo(() => {\n    const usedBy =\n      data?.userReferralEntry?.usedBy?.filter(\n        (u) => u?.userStatus === UserStatus.Active,\n      ) || [];\n\n    return [usedBy.length > 0, usedBy];\n  }, [data?.userReferralEntry?.usedBy]);\n\n  const remainingInvites = useMemo(() => {\n    const maxCount = referralData?.maxAllowedCount ?? 0;\n    const usedCount = referralData?.usedCount ?? 0;\n\n    if (maxCount > 0 && maxCount === usedCount) {\n      return 'no';\n    }\n    return maxCount - usedCount;\n  }, [referralData?.maxAllowedCount, referralData?.usedCount]);\n\n  const referralLink = `${window?.location?.origin}/sign-up?referral-code=${referralData?.referralCode}`;\n\n  const copyText = useCallback(() => {\n    navigator.clipboard.writeText(referralLink ?? '');\n    addToast(\n      'success',\n      'icon',\n      t('noumena.myaccount.invitefriends_toast_referral_code_copied'),\n    );\n  }, [addToast, referralLink, t]);\n\n  return (\n    <>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <InviteFriendsWrapper>\n          <LeftContent>\n            <HeaderWrapper>\n              <TSpan\n                font=\"heading-m-bold\"\n                colorToken=\"--text-card-header-neutral-highlighted\"\n              >\n                {t(`noumena.side_menu.invite_a-friend`)}\n              </TSpan>\n            </HeaderWrapper>\n            <Spacer height={30} />\n            <TextWrapper>\n              <TSpan\n                font=\"body-l-bold\"\n                colorToken=\"--text-body-header-neutral-default\"\n              >\n                {isReferralUsed &&\n                referralUsedBy.length === referralData?.maxAllowedCount\n                  ? t(\n                      `noumena.myaccount.invitefriends_freelancer_noumena_limited`,\n                    )\n                  : t(`noumena.myaccount.invitefriends_freelancer_noumena`)}\n              </TSpan>\n              {isReferralUsed &&\n              referralUsedBy.length === referralData?.maxAllowedCount ? (\n                <TSpan font=\"body-l\" colorToken=\"--text-body-neutral-default\">\n                  <Trans\n                    i18nKey={t(\n                      `noumena.myaccount.invitefriends_copy_referral_code_limited`,\n                    )}\n                    components={{\n                      br: <br />,\n                    }}\n                  />\n                </TSpan>\n              ) : (\n                <TSpan font=\"body-l\" colorToken=\"--text-body-neutral-default\">\n                  {t(`noumena.myaccount.invitefriends_copy_referral_code`)}\n                </TSpan>\n              )}\n              <Spacer height={32} />\n              {typeof remainingInvites === 'number' && (\n                <>\n                  {' '}\n                  <TSpan\n                    font=\"body-l-bold\"\n                    colorToken=\"--text-body-header-neutral-default\"\n                  >\n                    {t(`noumena.myaccount.invitefriends_referral_code`)}\n                  </TSpan>\n                  <ReferralCodeHead>\n                    <TSpan\n                      font=\"body-l\"\n                      colorToken=\"--text-code-form-neutral-default\"\n                    >\n                      {referralLink}\n                    </TSpan>\n                    <Button size=\"small\" onClick={copyText}>\n                      {t(`noumena.myaccount.invitefriends_copy_link`)}\n                    </Button>\n                  </ReferralCodeHead>\n                </>\n              )}\n            </TextWrapper>\n            <Spacer height={40} />\n            {(!isReferralUsed ||\n              referralUsedBy.length !== referralData?.maxAllowedCount) && (\n              <TextWrapper>\n                <TSpan\n                  font=\"body-l-bold\"\n                  colorToken=\"--text-body-header-neutral-default\"\n                >\n                  {content?.Header}\n                </TSpan>\n                <TSpan colorToken=\"--text-body-neutral-default\" font=\"body-l\">\n                  {content?.Subtitle}\n                </TSpan>\n              </TextWrapper>\n            )}\n          </LeftContent>\n          <InvitesWrapper>\n            <TSpan\n              font=\"heading-xs-bold\"\n              colorToken=\"--text-body-header-neutral-default\"\n            >\n              {t(`noumena.myaccount.invitefriends_approved_users`)}\n            </TSpan>\n            <Spacer height={24} />\n            {isReferralUsed ? (\n              referralUsedBy.map((item) => (\n                <InvitesRequest\n                  key={item?._id}\n                  name={getFullName(\n                    item?.firstName,\n                    item?.middleName,\n                    item?.lastName,\n                  )}\n                  profileImage={UserUtil.getProfilePicture(item) ?? ''}\n                  date={item?.createdAt}\n                />\n              ))\n            ) : (\n              <TSpan font=\"body-l\" colorToken=\"--text-body-neutral-default\">\n                {t(`noumena.myaccount.invitefriends_invitation_yet`)}\n              </TSpan>\n            )}\n          </InvitesWrapper>\n        </InviteFriendsWrapper>\n      )}\n    </>\n  );\n};\n\nexport default InvitesFriends;\n","import styled from 'styled-components';\nimport { TSpan } from '@/components/Typography';\nimport { Stack } from '@/layout';\nimport { sizes } from '@/constants/devices';\n\nconst Layout = styled(Stack).attrs({\n  vertical: true,\n  gap: 32,\n  padding: '40px 0 0',\n  fullWidth: true,\n})`\n  @media (max-width: ${sizes.TABLET_L}) {\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nconst Container = styled(Stack).attrs({\n  vertical: true,\n  gap: 32,\n})``;\n\nconst HeaderText = styled(TSpan).attrs({\n  font: 'heading-m-bold',\n  colorToken: '--text-card-header-neutral-highlighted',\n})``;\n\nconst NoteText = styled(TSpan).attrs({\n  font: 'body-m',\n  colorToken: '--text-card-header-neutral-default',\n})``;\n\nconst SubTitle = styled(TSpan).attrs({\n  font: 'heading-xs-bold',\n  colorToken: '--text-card-header-neutral-highlighted',\n})``;\n\nconst Header = styled(Stack).attrs({\n  gap: 32,\n  vertical: true,\n})``;\n\nconst OptionsContainer = styled(Stack).attrs({\n  vertical: true,\n  gap: 16,\n})``;\n\nconst Option = styled(Stack).attrs({\n  gap: 12,\n  align: 'center',\n})``;\n\nconst CheckboxLabel = styled(TSpan)``;\n\nexport default {\n  Container,\n  HeaderText,\n  SubTitle,\n  OptionsContainer,\n  Option,\n  CheckboxLabel,\n  Header,\n  Layout,\n  NoteText,\n};\n","import { Checkbox } from '@/components/Checkbox';\nimport { Icon } from '@/components/Icon';\nimport { Spinner } from '@/components/Spinner';\nimport { useBreakpoints } from '@/hooks/useBreakpoints';\nimport { Stack } from '@/layout';\nimport S from './styles';\nimport { useUserPreferences } from './useUserPreferences';\n\nfunction NotificationsSettings() {\n  const { isDesktop } = useBreakpoints();\n  const { loading, options, updatePreference } = useUserPreferences();\n\n  return (\n    <S.Layout>\n      <S.Container>\n        <S.Header>\n          {isDesktop && (\n            <S.HeaderText font=\"heading-m-bold\">Notifications</S.HeaderText>\n          )}\n\n          <Stack vertical gap={8}>\n            <S.SubTitle>E-mail notifications</S.SubTitle>\n            <S.NoteText>I want to receive notifications for:</S.NoteText>\n          </Stack>\n        </S.Header>\n\n        {loading && !options.length ? (\n          <Spinner />\n        ) : (\n          <S.OptionsContainer>\n            {options.map((option) => (\n              <S.Option key={option.id}>\n                <Checkbox\n                  isChecked={option.isSubscribed}\n                  disableClick={option.disabled}\n                  onChange={(value) => updatePreference(option.id, value)}\n                  icon={\n                    <Icon\n                      name=\"tick_m\"\n                      size={18}\n                      color=\"--icon-checkbox-neutral-alt-default\"\n                    />\n                  }\n                />\n                <S.CheckboxLabel>{option.label}</S.CheckboxLabel>\n              </S.Option>\n            ))}\n          </S.OptionsContainer>\n        )}\n        <S.NoteText>{`Uncheck the notifications you don't wish to receive.`}</S.NoteText>\n      </S.Container>\n    </S.Layout>\n  );\n}\n\nexport default NotificationsSettings;\n","import { useBreakpoints } from '@/hooks/useBreakpoints';\nimport { Stack } from '@/layout';\nimport { TSpan } from '@/components';\nimport { t } from 'i18next';\nimport S from '../NotificationsSettings/styles';\nimport { CookePageContent } from '../../Cookie';\n\nfunction NotificationsSettings() {\n  const { isDesktop } = useBreakpoints();\n\n  return (\n    <S.Layout>\n      <S.Container>\n        <Stack vertical gap={24} padding=\"24px\">\n          {isDesktop && (\n            <TSpan font=\"heading-m-bold\">\n              {t('noumena.cookie-policy-page.header')}\n            </TSpan>\n          )}\n          <CookePageContent />\n        </Stack>\n      </S.Container>\n    </S.Layout>\n  );\n}\n\nexport default NotificationsSettings;\n","import { t } from 'i18next';\nimport ROUTES from '@/constants/routes';\nimport MyAccount from '@/layout/MyAccountLayout';\nimport { Route, Routes } from 'react-router';\nimport { useMemo } from 'react';\nimport { getAccountRelativeRouteName } from '@/layout/MyAccountLayout/sideMenuItems';\nimport AccountSettings from './AccountSettings';\nimport InvitesFriends from './InvitesFriends';\nimport NotificationsSettings from './NotificationsSettings';\nimport Cookie from './Cookie';\n\nconst CoreSettings = () => {\n  const pathName = window.location.pathname;\n\n  const mobileHeader = useMemo(() => {\n    switch (pathName) {\n      case ROUTES.ACCOUNT_SETTINGS:\n        return t('noumena.myaccount.account_settings');\n      case ROUTES.INVITES_FRIENDS:\n        return t('noumena.side_menu.invite_a-friend');\n      case ROUTES.NOTIFICATIONS_SETTINGS:\n        return t('noumena.side_menu.notifications_settings');\n      case ROUTES.COOKIE_SETTINGS:\n        return t('noumena.cookie-policy-page.header');\n      default:\n        return '';\n    }\n  }, [pathName]);\n\n  return (\n    <MyAccount mobileHeader={mobileHeader}>\n      <Routes>\n        <Route\n          path={getAccountRelativeRouteName(ROUTES.ACCOUNT_SETTINGS)}\n          element={<AccountSettings />}\n        />\n        <Route\n          path={getAccountRelativeRouteName(ROUTES.INVITES_FRIENDS)}\n          element={<InvitesFriends />}\n        />\n        <Route\n          path={getAccountRelativeRouteName(ROUTES.NOTIFICATIONS_SETTINGS)}\n          element={<NotificationsSettings />}\n        />\n        <Route\n          path={getAccountRelativeRouteName(ROUTES.COOKIE_SETTINGS)}\n          element={<Cookie />}\n        />\n      </Routes>\n    </MyAccount>\n  );\n};\n\nexport default CoreSettings;\n"],"names":["styled","div","sizes","MOBILE_L","Stack","MOBILE_MAX","AccountWrapper","TABLET_L","TABLET","EditAndEnableButton","Button","DeleteAccountWrapper","FourDigitOtp","p","DeleteAccountParagraph","LinkIconWrapper","DeleteAccountProceed","TextHeader","DeleteFooter","DivWrapper","PhoneInputBox","EmailInputBox","StyledButton","isDisabled","AdvancedSettingsWrapper","PrivacyPolicyLink","TSpan","RemoveAccount","CheckBoxWrapper","CheckBoxLabel","label","CheckBox","input","RightIcon","Icon","isOpen","TextFieldWrapper","StyledLabelGroup","columns","span","LabelGroup","children","props","EmailAddressSection","onEditEmailAddressButtonClick","onEnableEmailAddressButtonClick","handleChange","userProfileDetails","user","email","jsxs","Fragment","jsx","t","Spacer","TextField","undefined","PhoneNumberSection","onEditPhoneNumberButtonClick","onEnablePhoneButtonClick","phone","PhoneInput","EditAndEnableEmailAddressModal","cancelCallback","onFailed","onSuccess","isEdit","useTranslation","submitEmailData","useCallback","data","error","btnType","setEmail","useState","validationSchema","useMemo","yup","required","register","formState","errors","useForm","resolver","yupResolver","e","currentTarget","value","generateOtpForVerificationMutation","useGenerateOtpForVerificationMutation","variables","handleClick","then","response","res","generateOTPForVerification","width","useWindowDimensions","isMobile","breakpoints","Modal","textAlign","ModalHeader","ModalBody","maxWidth","message","pattern","EMAIL_REGEX","onChange","ModalFooter","EditAndEnablePhoneNumberModal","submitPhoneData","phoneNumber","setPhone","phoneError","setPhoneError","handlePhoneChange","includes","isValidPhoneNumber","handlePhoneInputKeyPress","key","useEffect","trim","TypeEnum","OtpModal","errorMsg","onVerifyFailed","onVerifySuccess","phoneOrEmail","onEmailOrPhoneOtpFailed","onEmailOrPhoneOtpSuccess","type","otp","setOtp","otpVerificationMutation","useOtpVerificationMutation","parseInt","onVerify","OTPVerification","OtpInput","val","DeleteAccountModal","addToast","useToast","signOut","useAuth","typeDeleteValue","setTypeDeleteValue","deletePersonalDataCheckbox","setDeletePersonalDataCheckbox","Boolean","toggle","isDeleting","setIsDeleting","onInputChange","event","target","onCheckboxChange","checked","deleteAccountMutation","useDeleteAccountMutation","deletePII","reason","handleSubmitSave","Sentry","tags","section","Error","Form","open","LINKS","PRIVACY","AccountSettings","refetchUserData","currentlyOpenModal","setCurrentlyOpenModal","setPhoneOrEmail","setType","setUserProfileDetails","AccountSettingsModal","onDeleteAccountButtonClick","onPhoneOrEmailFailed","checkType","errMsg","Status","onPhoneOrEmailSuccess","phoneNumberOrEmail","name","defaultModalProps","renderModal","HeaderWrapper","InviteFriendsWrapper","form","LAPTOP","LeftContent","MOBILE_M","TextWrapper","InvitesWrapper","ReferralCodeHead","InvHead","bodyTypography","bodyMedium","InvDataHead","InvDataBody","InvTitle","bodyMediumBold","InvContainer","InvitesRequest","profileImage","date","Avatar","format","Date","Underline","InvitesFriends","content","setContent","componentMounted","useRef","getReferralPageContent","Storyblok","current","story","loading","useUserReferralEntryQuery","productKey","referralData","userReferralEntry","isReferralUsed","referralUsedBy","usedBy","filter","u","userStatus","UserStatus","Active","length","remainingInvites","maxCount","maxAllowedCount","usedCount","referralLink","window","location","origin","referralCode","copyText","clipboard","writeText","Spinner","Trans","br","Header","Subtitle","map","getFullName","item","firstName","middleName","lastName","UserUtil","getProfilePicture","createdAt","_id","Layout","attrs","vertical","gap","padding","fullWidth","Container","HeaderText","font","colorToken","NoteText","SubTitle","OptionsContainer","Option","align","CheckboxLabel","S","NotificationsSettings","isDesktop","useBreakpoints","options","updatePreference","useUserPreferences","Checkbox","option","isSubscribed","disabled","id","CookePageContent","CoreSettings","pathName","pathname","mobileHeader","ROUTES","ACCOUNT_SETTINGS","INVITES_FRIENDS","NOTIFICATIONS_SETTINGS","COOKIE_SETTINGS","MyAccount","Routes","Route","getAccountRelativeRouteName","Cookie","CoreSettings$1"],"mappings":"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"}