{"version":3,"file":"useStatementOfWorkPreviewScreen-5a4349a4.js","sources":["../../src/features/contracts/components/SummaryList/SummaryList.tsx","../../src/features/contracts/components/SummaryList/styles.ts","../../src/features/contracts/components/SummaryList/SummaryListItem.tsx","../../src/features/contracts/components/SummaryList/SummaryTotal.tsx","../../src/features/contracts/components/SummaryList/index.ts","../../src/features/contracts/components/AttachedFile/AttachedFile.tsx","../../src/features/contracts/components/StatementOfWorkPreview/styles.ts","../../src/features/contracts/components/StatementOfWorkPreview/ContractAssignment.tsx","../../src/features/contracts/hooks/statementOfWorkPreviewForm.ts","../../src/features/contracts/components/StatementOfWorkPreview/getFeesList.ts","../../src/features/contracts/components/StatementOfWorkPreview/StatementOfWorkPreview.tsx","../../src/features/contracts/hooks/statementOfWorkSigning.ts","../../src/screens/Contracts/StatementOfWorkPreview/useStatementOfWorkPreviewScreen.ts"],"sourcesContent":["import { type ReactNode } from 'react';\nimport { Stack } from '@/layout';\n\ninterface SummaryListProps {\n  children: ReactNode;\n}\n\nexport function SummaryList({ children }: SummaryListProps) {\n  return (\n    <Stack vertical gap={16} align=\"stretch\" fullWidth>\n      {children}\n    </Stack>\n  );\n}\n","import styled from 'styled-components';\nimport { TSpan } from '@/components/Typography';\n\nconst Title = styled(TSpan).attrs(() => ({\n  font: 'body-m',\n  colorToken: '--text-card-neutral-highlighted',\n}))``;\n\nconst Description = styled(TSpan).attrs(() => ({\n  font: 'footnote',\n  colorToken: '--text-card-neutral-default',\n}))``;\n\nexport default {\n  Title,\n  Description,\n};\n","import { CurrencyEnum } from '@/apollo/generated/types';\nimport { TSpan } from '@/components/Typography';\nimport { Stack, StackItem } from '@/layout';\nimport convertToCurrency from '@/utils/currencyToCurrency';\nimport { formatDateString } from '@/utils/getTimeStampForDisplaying';\nimport S from './styles';\n\nexport interface SummaryListItemProps {\n  index: number;\n  title: string;\n  description?: string;\n  dueDate?: Date;\n  amount?: number;\n}\n\nexport function SummaryListItem({\n  index,\n  title,\n  description,\n  dueDate,\n  amount,\n}: SummaryListItemProps) {\n  return (\n    <Stack gap={16} align=\"center\" fullWidth>\n      <StackItem basis=\"20px\">\n        <TSpan font=\"body-m\" colorToken=\"--text-card-neutral-default\">\n          #{index + 1}\n        </TSpan>\n      </StackItem>\n      <Stack vertical gap={4} align=\"stretch\" grow>\n        <S.Title>{title}</S.Title>\n        {description ? <S.Description>{description}</S.Description> : null}\n      </Stack>\n      {dueDate ? (\n        <Stack gap={8}>\n          <TSpan font=\"body-m-bold\">Due: </TSpan>{' '}\n          <TSpan font=\"body-m\">{formatDateString(dueDate)}</TSpan>\n        </Stack>\n      ) : null}\n      {amount ? (\n        <Stack gap={8}>{convertToCurrency(amount, CurrencyEnum.Usd, 2)}</Stack>\n      ) : null}\n    </Stack>\n  );\n}\n","import React from 'react';\nimport { TSpan } from '@/components/Typography';\nimport { Stack } from '@/layout';\n\ninterface SummaryTotalProps {\n  label: React.ReactNode;\n  value: React.ReactNode;\n}\n\nexport function SummaryTotal({ label, value }: SummaryTotalProps) {\n  return (\n    <Stack gap={8} justify=\"end\">\n      <TSpan font=\"body-l\" colorToken=\"--text-card-neutral-highlighted\">\n        {label}\n      </TSpan>\n      <TSpan font=\"body-l-bold\" colorToken=\"--text-card-neutral-highlighted\">\n        {value}\n      </TSpan>\n    </Stack>\n  );\n}\n","import { SummaryList as List } from './SummaryList';\nimport { SummaryListItem } from './SummaryListItem';\nimport { SummaryTotal } from './SummaryTotal';\n\nexport type { SummaryListItemProps } from './SummaryListItem';\n\nexport const SummaryList = {\n  List,\n  Item: SummaryListItem,\n  Total: SummaryTotal,\n};\n","import { Icon } from '@/components/Icon';\nimport { type IconProps } from '@/components/Icon/Icon';\nimport { TSpan } from '@/components/Typography';\nimport { Stack } from '@/layout';\n\ninterface AttachedFileProps {\n  title: string;\n  iconName?: IconProps['name'];\n}\n\nexport function AttachedFile({\n  title,\n  iconName = 'file_xs',\n}: AttachedFileProps) {\n  return (\n    <Stack gap={8} align=\"center\">\n      <Icon name={iconName} size={16} />\n      <TSpan font=\"body-m\">{title}</TSpan>\n    </Stack>\n  );\n}\n","import styled from 'styled-components';\nimport { Card as OriginalCard } from '@/components/Card';\nimport { Separator as OriginalSeparator } from '@/components/Separator/Separator';\n\nconst Card = styled(OriginalCard)`\n  padding: 24px;\n`;\n\nconst Separator = styled(OriginalSeparator)`\n  width: 100%;\n  margin: 0;\n`;\n\nconst PDFPreview = styled.div`\n  width: 100%;\n  height: 300px;\n  background-color: var(--text-tab-basic-neutral-disabled);\n  border-radius: 8px;\n`;\n\nconst ContractButtonLink = styled.div`\n  cursor: pointer;\n`;\n\nexport default {\n  Card,\n  Separator,\n  PDFPreview,\n  ContractButtonLink,\n};\n","import { Trans } from 'react-i18next';\nimport { type Maybe } from '@/apollo/generated/types';\nimport { type SowLinkedContractFragment } from '@/apollo/graphql';\nimport { Infobox } from '@/components/Infobox';\nimport { RouterLink } from '@/components/Link';\nimport { ContactDetailsUtils } from '@/features/noumContacts/utils/contactDetails';\nimport { Stack } from '@/layout';\nimport { ApiPayloadParser } from '@/utils/api/payloadParser';\nimport { formatDateString } from '@/utils/getTimeStampForDisplaying';\nimport { useAuth } from '@/features/auth/contexts';\nimport { ContractUtils } from '../../utils/contract';\nimport { ContractToolRoutes } from '../../utils/routes';\nimport { AttachedFile } from '../AttachedFile/AttachedFile';\nimport { LabelValue } from '../LabelValue/LabelValue';\nimport S from './styles';\n\ninterface ContractAssignmentProps {\n  contract: Maybe<SowLinkedContractFragment> | undefined;\n  openContractFromSow?: Function;\n}\n\nexport function ContractAssignment({\n  contract,\n  openContractFromSow,\n}: ContractAssignmentProps) {\n  const { isOpsUser } = useAuth();\n  if (!contract?.title) {\n    return <>-</>;\n  }\n\n  return (\n    <Stack gap={8} align=\"stretch\" vertical fullWidth>\n      {isOpsUser ? (\n        <S.ContractButtonLink\n          role=\"button\"\n          tabIndex={0}\n          onKeyPress={() => {}}\n          onClick={() => {\n            openContractFromSow?.({\n              sowId: undefined,\n              contractId: contract._id,\n            });\n          }}\n        >\n          <AttachedFile\n            title={ContractUtils.formatDocumentNameWithNumber(contract)}\n          />\n        </S.ContractButtonLink>\n      ) : (\n        <RouterLink\n          to={ContractToolRoutes.viewContract({ id: contract._id })}\n          passState\n        >\n          <AttachedFile\n            title={ContractUtils.formatDocumentNameWithNumber(contract)}\n          />\n        </RouterLink>\n      )}\n      <Stack gap={4} align=\"stretch\" vertical fullWidth>\n        <LabelValue\n          size=\"small\"\n          layout=\"horizontal\"\n          label=\"Buyer\"\n          value={\n            contract.buyer\n              ? ContactDetailsUtils.formatCompanyAndName(contract.buyer)\n              : '--'\n          }\n        />\n        <LabelValue\n          size=\"small\"\n          layout=\"horizontal\"\n          label=\"Provider\"\n          value={\n            contract.seller\n              ? ContactDetailsUtils.formatCompanyAndName(contract.seller)\n              : '--'\n          }\n        />\n        <LabelValue\n          size=\"small\"\n          layout=\"horizontal\"\n          label=\"Effective Date\"\n          value={\n            contract.effectiveDate\n              ? formatDateString(\n                  ApiPayloadParser.parseDateString(contract.effectiveDate),\n                )\n              : '--'\n          }\n        />\n      </Stack>\n      {ContractUtils.isDraft(contract) && (\n        <Infobox type=\"secondary\" size=\"small\">\n          <Trans\n            i18nKey=\"noumena.statement_of_work_preview.hint.draft_contract\"\n            components={{ b: <b /> }}\n          />\n        </Infobox>\n      )}\n    </Stack>\n  );\n}\n","import { yupResolver } from '@hookform/resolvers/yup';\nimport { type DefaultValues, useForm, useFormContext } from 'react-hook-form';\nimport * as yup from 'yup';\n\nconst statementOfWorkPreviewFormSchema = yup.object({\n  isAuthorized: yup.boolean().oneOf([true]),\n  termsAndConditions: yup.boolean().oneOf([true]),\n  eSign: yup.boolean().oneOf([true]),\n});\n\nexport type StatementOfWorkPreviewFormValues = yup.InferType<\n  typeof statementOfWorkPreviewFormSchema\n>;\n\ninterface UseStatementOfWorkPreviewFormOptions {\n  defaultValues?: DefaultValues<StatementOfWorkPreviewFormValues>;\n}\n\nexport function useStatementOfWorkPreviewForm({\n  defaultValues,\n}: UseStatementOfWorkPreviewFormOptions = {}) {\n  return useForm<StatementOfWorkPreviewFormValues>({\n    defaultValues,\n    resolver: yupResolver(statementOfWorkPreviewFormSchema),\n    mode: 'onChange',\n  });\n}\n\nexport function useStatementOfWorkPreviewFormContext() {\n  return useFormContext<StatementOfWorkPreviewFormValues>();\n}\n","import {\n  type CommissionAndReimbursement,\n  type DeliverablesAndMilestones,\n  FeesCategoryTypes,\n  type FeesInfo,\n} from '@/apollo/generated/types';\nimport { ApiPayloadParser } from '@/utils/api/payloadParser';\nimport { cleanList } from '@/utils/list';\nimport { type StatementOfWork } from '../../types';\nimport { type SummaryListItemProps } from '../SummaryList';\n\ntype FeeListItem = Omit<SummaryListItemProps, 'index'>;\n\nfunction getFeesList(\n  type: FeesCategoryTypes,\n  feesData: FeesInfo[],\n  milestones: DeliverablesAndMilestones[],\n): FeeListItem[] {\n  switch (type) {\n    case FeesCategoryTypes.Inadvance: {\n      const inAdvance = feesData[0];\n      return [\n        {\n          title: 'In Advance',\n          amount: inAdvance.amount ?? 0,\n          dueDate: ApiPayloadParser.parseDateString(inAdvance.dueDate),\n        },\n      ];\n    }\n    case FeesCategoryTypes.Installments: {\n      return feesData.map((installment, index) => ({\n        title: `Installment #${index + 1}`,\n        amount: installment.amount ?? 0,\n        dueDate: ApiPayloadParser.parseDateString(installment.dueDate),\n      }));\n    }\n    case FeesCategoryTypes.Milestones: {\n      const cleanMilestones = cleanList(milestones);\n      return feesData.map((milestone, index) => ({\n        title: cleanMilestones[index].title ?? '',\n        amount: milestone.amount ?? 0,\n        dueDate: ApiPayloadParser.parseDateString(milestone.dueDate),\n      }));\n    }\n    case FeesCategoryTypes.Lumpsum: {\n      const lumpSum = feesData[0];\n      return [\n        {\n          title: 'Lump Sum',\n          amount: lumpSum.amount ?? 0,\n          dueDate: ApiPayloadParser.parseDateString(lumpSum.dueDate),\n        },\n      ];\n    }\n    default: {\n      return [];\n    }\n  }\n}\n\nfunction getExpenseReimbursement(\n  expenseReimbursement: CommissionAndReimbursement[],\n): FeeListItem[] {\n  return expenseReimbursement.map((expense) => ({\n    title: expense.description ?? '',\n    description: 'Type: Expense Reimbursement',\n    amount: expense.amount ?? 0,\n  }));\n}\n\nfunction getBonusCommission(\n  bonusCommission: CommissionAndReimbursement[],\n): FeeListItem[] {\n  return bonusCommission.map((commission) => ({\n    title: commission.description ?? '',\n    description: 'Type: Bonus / Commission',\n    amount: commission.amount ?? 0,\n  }));\n}\n\nexport function getFeesAndOthers(\n  statementOfWork: StatementOfWork,\n): FeeListItem[] {\n  const items: FeeListItem[] = [];\n\n  const type = statementOfWork.fees?.type;\n  const feesData = cleanList(statementOfWork.fees?.feesData);\n  const expenseReimbursement = cleanList(statementOfWork.expenseReimbursement);\n  const bonusCommission = cleanList(statementOfWork.commission);\n\n  if (type && feesData.length > 0) {\n    items.push(\n      ...getFeesList(type, feesData, cleanList(statementOfWork.milestones)),\n    );\n  }\n\n  if (expenseReimbursement.length > 0) {\n    items.push(...getExpenseReimbursement(expenseReimbursement));\n  }\n\n  if (bonusCommission.length > 0) {\n    items.push(...getBonusCommission(bonusCommission));\n  }\n\n  return items;\n}\n","import { sumBy } from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { TSpan } from '@/components/Typography';\nimport { Stack, StackItem } from '@/layout';\nimport { ApiPayloadParser } from '@/utils/api/payloadParser';\nimport { formatDateString } from '@/utils/getTimeStampForDisplaying';\nimport { CurrencyEnum } from '@/apollo/generated/types';\nimport convertToCurrency from '@/utils/currencyToCurrency';\nimport { cleanList } from '@/utils/list';\nimport { DocumentType, type StatementOfWork } from '../../types';\nimport { AgreementCheckbox } from '../AgreementCheckbox/AgreementCheckbox';\nimport { DocumentStatusTag } from '../DocumentStatusTag/DocumentStatusTag';\nimport { EntityDisplay } from '../EntityDisplay/EntityDisplay';\nimport { LabelValue } from '../LabelValue/LabelValue';\nimport { Section } from '../Section/Section';\nimport { SummaryList } from '../SummaryList';\nimport { ContractAssignment } from './ContractAssignment';\nimport S from './styles';\n\nimport { useStatementOfWorkPermissions } from '../../hooks/statementOfWorkPermissions';\nimport { useStatementOfWorkPreviewFormContext } from '../../hooks/statementOfWorkPreviewForm';\nimport { StatementOfWorkUtils } from '../../utils/statementOfWork';\nimport { getFeesAndOthers } from './getFeesList';\nimport { DocumentTimeline } from '../DocumentTimeline/DocumentTimeline';\n\ninterface StatementOfWorkPreviewProps {\n  statementOfWork: StatementOfWork;\n  openContractFromSow?: Function;\n}\n\nexport function StatementOfWorkPreview({\n  statementOfWork,\n  openContractFromSow,\n}: StatementOfWorkPreviewProps) {\n  const { t } = useTranslation();\n\n  const {\n    formState: { isValid, isSubmitted },\n  } = useStatementOfWorkPreviewFormContext();\n\n  const StatementOfWorkPermissions = useStatementOfWorkPermissions();\n\n  const hasAgreementsError = isSubmitted && !isValid;\n  const canSign = StatementOfWorkPermissions.canSign(statementOfWork);\n\n  const deliverables = cleanList(statementOfWork.deliverables);\n  const milestones = cleanList(statementOfWork.milestones);\n  const fees = cleanList(statementOfWork.fees?.feesData);\n  const expenseReimbursement = cleanList(statementOfWork.expenseReimbursement);\n  const bonusCommission = cleanList(statementOfWork.commission);\n\n  const shouldDisplaySummary =\n    deliverables.length > 0 ||\n    milestones.length > 0 ||\n    fees.length > 0 ||\n    expenseReimbursement.length > 0 ||\n    bonusCommission.length > 0;\n\n  const feesAndOthers = getFeesAndOthers(statementOfWork);\n\n  return (\n    <Stack gap={24} vertical align=\"stretch\">\n      <S.Card>\n        <Section\n          title={\n            <>\n              <TSpan font=\"heading-xs-bold\">{statementOfWork.title}</TSpan>\n              <DocumentStatusTag status={statementOfWork.status} />\n            </>\n          }\n          titleSideAddon={\n            <TSpan font=\"body-m\" colorToken=\"--text-card-neutral-disabled\">\n              ID:{' '}\n              {StatementOfWorkUtils.formatDocumentNumber(\n                statementOfWork.SOWNumber,\n              )}\n            </TSpan>\n          }\n        >\n          <Stack gap={16} vertical>\n            <LabelValue\n              label=\"Scope of Work - Description\"\n              value={\n                <TSpan font=\"input-m\">\n                  {statementOfWork.scopeOfWork || '--'}\n                </TSpan>\n              }\n            />\n            <Stack gap={24} fullWidth justify=\"stretch\">\n              <StackItem grow={1}>\n                <LabelValue\n                  label=\"Effective Date\"\n                  value={\n                    statementOfWork.effectiveDate\n                      ? formatDateString(\n                          ApiPayloadParser.parseDateString(\n                            statementOfWork.effectiveDate,\n                          ),\n                        )\n                      : '--'\n                  }\n                />\n              </StackItem>\n              <StackItem grow={2} basis=\"min-content\">\n                <LabelValue\n                  label=\"Contract Assignment\"\n                  value={\n                    <ContractAssignment\n                      contract={statementOfWork.linkedContract}\n                      openContractFromSow={openContractFromSow}\n                    />\n                  }\n                />\n              </StackItem>\n              <StackItem grow={3}>\n                <LabelValue\n                  label=\"Noum\"\n                  value={\n                    <EntityDisplay\n                      name={statementOfWork.linkedNoum?.name ?? ''}\n                      avatarUrl={\n                        statementOfWork.linkedNoum?.profileImageThumbnail ??\n                        undefined\n                      }\n                    />\n                  }\n                />\n              </StackItem>\n            </Stack>\n          </Stack>\n        </Section>\n      </S.Card>\n      {shouldDisplaySummary && (\n        <S.Card>\n          <Section title=\"Summary\">\n            <Stack gap={16} vertical align=\"stretch\">\n              {deliverables.length > 0 && (\n                <LabelValue\n                  gap={16}\n                  label=\"Deliverables\"\n                  value={\n                    <SummaryList.List>\n                      {deliverables.map((deliverable, index) => (\n                        <SummaryList.Item\n                          // eslint-disable-next-line react/no-array-index-key\n                          key={index}\n                          index={index}\n                          title={deliverable?.title ?? ''}\n                          description={deliverable?.description ?? undefined}\n                          dueDate={\n                            deliverable?.dueDate\n                              ? ApiPayloadParser.parseDateString(\n                                  deliverable?.dueDate,\n                                )\n                              : undefined\n                          }\n                        />\n                      ))}\n                    </SummaryList.List>\n                  }\n                />\n              )}\n              {milestones.length > 0 && (\n                <LabelValue\n                  gap={16}\n                  label=\"Milestones\"\n                  value={\n                    <SummaryList.List>\n                      {milestones.map((milestone, index) => (\n                        <SummaryList.Item\n                          // eslint-disable-next-line react/no-array-index-key\n                          key={index}\n                          index={index}\n                          title={milestone?.title ?? ''}\n                          description={milestone?.description ?? undefined}\n                          dueDate={\n                            milestone?.dueDate\n                              ? ApiPayloadParser.parseDateString(\n                                  milestone?.dueDate,\n                                )\n                              : undefined\n                          }\n                        />\n                      ))}\n                    </SummaryList.List>\n                  }\n                />\n              )}\n              {(fees.length > 0 ||\n                expenseReimbursement.length > 0 ||\n                bonusCommission.length > 0) && (\n                <>\n                  <S.Separator />\n                  <Section variant=\"sub-section\" title=\"Fees and other items\">\n                    <Stack gap={16} vertical fullWidth align=\"stretch\">\n                      {' '}\n                      <SummaryList.List>\n                        {feesAndOthers.map((feeInfo, index) => (\n                          <SummaryList.Item\n                            // eslint-disable-next-line react/no-array-index-key\n                            key={index}\n                            {...feeInfo}\n                            index={index}\n                          />\n                        ))}\n                      </SummaryList.List>\n                      <SummaryList.Total\n                        label=\"Total:\"\n                        value={convertToCurrency(\n                          sumBy(feesAndOthers, 'amount'),\n                          CurrencyEnum.Usd,\n                          2,\n                        )}\n                      />\n                    </Stack>\n                  </Section>\n                </>\n              )}\n            </Stack>\n          </Section>\n        </S.Card>\n      )}\n\n      {statementOfWork.timeline && (\n        <S.Card>\n          <Section title=\"Timeline\">\n            <DocumentTimeline\n              items={statementOfWork.timeline}\n              buyer={statementOfWork.linkedContract?.buyer}\n              serviceProvider={statementOfWork.linkedContract?.seller}\n              documentType={DocumentType.Sow}\n            />\n          </Section>\n        </S.Card>\n      )}\n\n      <S.Card hasError={hasAgreementsError} id=\"agreements\">\n        <Section title=\"Agreements\">\n          <Stack gap={16} vertical align=\"stretch\">\n            <S.Separator />\n            <AgreementCheckbox\n              name=\"isAuthorized\"\n              label={t(\n                'noumena.statement_of_work_preview.agreements.is_authorized',\n              )}\n              disabled={!canSign}\n            />\n\n            <AgreementCheckbox\n              name=\"termsAndConditions\"\n              label={t(\n                'noumena.statement_of_work_preview.agreements.terms_and_conditions',\n              )}\n              disabled={!canSign}\n            />\n\n            <AgreementCheckbox\n              name=\"eSign\"\n              label={t('noumena.statement_of_work_preview.agreements.e_sign')}\n              disabled={!canSign}\n            />\n\n            {hasAgreementsError && (\n              <TSpan\n                font=\"body-m\"\n                colorToken=\"--bg-button-danger-primary-default\"\n              >\n                {t('noumena.contracts_document_preview.agreements.required')}\n              </TSpan>\n            )}\n          </Stack>\n        </Section>\n      </S.Card>\n    </Stack>\n  );\n}\n","import { type ApolloCache } from '@apollo/client';\nimport { useCallback } from 'react';\nimport {\n  GetSingleSowDocument,\n  type SowFragment,\n  SowFragmentDoc,\n  useRejectStatementOfWorkMutation,\n  useSendSowForSigningMutation,\n  useSignStatementOfWorkMutation,\n} from '@/apollo/graphql';\nimport { StatementOfWorkStatus } from '../types';\n\nfunction updateStatementOfWorkStatusInCache(\n  cache: ApolloCache<unknown>,\n  statementOfWorkId: string,\n  newStatus: StatementOfWorkStatus,\n) {\n  cache.updateFragment<SowFragment>(\n    {\n      fragment: SowFragmentDoc,\n      fragmentName: 'SOW',\n      id: cache.identify({\n        __typename: 'SOW',\n        _id: statementOfWorkId,\n      }),\n    },\n    (prevData) => {\n      if (!prevData) {\n        return null;\n      }\n\n      return {\n        ...prevData,\n        status: newStatus,\n      };\n    },\n  );\n}\n\ninterface UseStatementOfWorkSigningOptions {\n  id: string | undefined;\n}\n\nexport function useStatementOfWorkSigning({\n  id,\n}: UseStatementOfWorkSigningOptions) {\n  const [sendForSigningMutation] = useSendSowForSigningMutation({\n    update(cache, result) {\n      if (!result.data?.sendDocumentForSigning || !id) {\n        return;\n      }\n\n      updateStatementOfWorkStatusInCache(\n        cache,\n        id,\n        StatementOfWorkStatus.Issued,\n      );\n    },\n    refetchQueries: [GetSingleSowDocument],\n  });\n\n  const [signMutation] = useSignStatementOfWorkMutation({\n    update(cache, result) {\n      if (!result.data?.signSow || !id) {\n        return;\n      }\n\n      updateStatementOfWorkStatusInCache(\n        cache,\n        id,\n        StatementOfWorkStatus.Signed,\n      );\n    },\n    refetchQueries: [GetSingleSowDocument],\n  });\n\n  const [rejectMutation] = useRejectStatementOfWorkMutation({\n    update(cache, result) {\n      if (!result.data?.rejectSow || !id) {\n        return;\n      }\n\n      updateStatementOfWorkStatusInCache(\n        cache,\n        id,\n        StatementOfWorkStatus.Draft,\n      );\n    },\n    refetchQueries: [GetSingleSowDocument],\n  });\n\n  const sendForSigning = useCallback(async () => {\n    if (!id) {\n      return;\n    }\n\n    const result = await sendForSigningMutation({ variables: { id } });\n    if (!result.data?.sendDocumentForSigning) {\n      throw new Error('Unable to send the document. Please try again later.');\n    }\n  }, [id, sendForSigningMutation]);\n\n  const sign = useCallback(async () => {\n    if (!id) {\n      return;\n    }\n\n    const result = await signMutation({ variables: { id } });\n    if (!result.data?.signSow) {\n      throw new Error('Unable to sign the document. Please try again later.');\n    }\n  }, [id, signMutation]);\n\n  const reject = useCallback(async () => {\n    if (!id) {\n      return;\n    }\n\n    const result = await rejectMutation({ variables: { id } });\n    if (!result.data?.rejectSow) {\n      throw new Error(\n        'Unable to decline the document. Please try again later.',\n      );\n    }\n  }, [id, rejectMutation]);\n\n  return {\n    sendForSigning,\n    sign,\n    reject,\n  };\n}\n","import { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDocumentPreviewSignatureForm } from '@/features/contracts/hooks/documentPreviewSignatureForm';\nimport { useStatementOfWork } from '@/features/contracts/hooks/statementOfWork';\nimport { useStatementOfWorkPdfWithSignature } from '@/features/contracts/hooks/statementOfWorkPdf';\nimport { useStatementOfWorkPermissions } from '@/features/contracts/hooks/statementOfWorkPermissions';\nimport { useStatementOfWorkPreviewForm } from '@/features/contracts/hooks/statementOfWorkPreviewForm';\nimport { useStatementOfWorkSigning } from '@/features/contracts/hooks/statementOfWorkSigning';\nimport { useToast } from '@/hooks';\nimport { ContractUtils } from '@/features/contracts/utils/contract';\nimport { useResendDocumentNotificationMutation } from '@/apollo/graphql';\nimport { ContractSow, Parties } from '@/apollo/generated/types';\n\ntype PreviewStep = 'Summary' | 'ConfirmSignature';\n\ninterface UseStatementOfWorkPreviewScreenOptions {\n  id?: string;\n}\n\nexport function useStatementOfWorkPreviewScreen({\n  id,\n}: UseStatementOfWorkPreviewScreenOptions) {\n  const [previewStep, setPreviewStep] = useState<PreviewStep>('Summary');\n\n  const { t } = useTranslation();\n  const { addSuccessIconToast, addErrorToast, addPrimaryIconToast } =\n    useToast();\n  const StatementOfWorkPermissions = useStatementOfWorkPermissions();\n\n  const {\n    statementOfWork,\n    isLoading: isSummaryLoading,\n    deleteStatementOfWork,\n  } = useStatementOfWork(id);\n\n  const pdfWithSignature = useStatementOfWorkPdfWithSignature({\n    id,\n    statementOfWork,\n  });\n\n  const signing = useStatementOfWorkSigning({ id });\n\n  const summaryForm = useStatementOfWorkPreviewForm({\n    defaultValues: {\n      eSign: false,\n      isAuthorized: false,\n      termsAndConditions: false,\n    },\n  });\n\n  const signatureForm = useDocumentPreviewSignatureForm({\n    defaultValues: {\n      documentContentsChecked: false,\n      validSignature: false,\n    },\n  });\n\n  const [resendDocumentNotification] = useResendDocumentNotificationMutation();\n\n  const handleSummarySubmit = async () => {\n    if (ContractUtils.isDraft(statementOfWork?.linkedContract)) {\n      addErrorToast(\n        t('noumena.statement_of_work_preview.toast.draft_contract', {\n          documentName: ContractUtils.formatDocumentNameWithNumber(\n            statementOfWork?.linkedContract,\n          ),\n        }),\n      );\n      return;\n    }\n\n    setPreviewStep('ConfirmSignature');\n  };\n\n  const handleSignatureSubmit = async () => {\n    if (!statementOfWork) {\n      return;\n    }\n\n    try {\n      if (StatementOfWorkPermissions.isOwner(statementOfWork)) {\n        await signing.sendForSigning();\n        addSuccessIconToast(\n          t('noumena.statement_of_work_preview.toast.sent_for_signing'),\n        );\n      } else {\n        await signing.sign();\n        addSuccessIconToast(\n          t('noumena.statement_of_work_preview.toast.signed'),\n        );\n      }\n      setPreviewStep('Summary');\n    } catch (err) {\n      if (err instanceof Error) {\n        addErrorToast(err.message);\n      }\n    }\n  };\n\n  const handleDeclineStatementOfWork = async () => {\n    try {\n      await signing.reject();\n      addSuccessIconToast(t('noumena.contract_preview.toast.declined'));\n      setPreviewStep('Summary');\n    } catch (err) {\n      if (err instanceof Error) {\n        addErrorToast(err.message);\n      }\n    }\n  };\n\n  const handleDeleteStatementOfWork = async () => {\n    try {\n      await deleteStatementOfWork(id);\n      addSuccessIconToast(\n        t('noumena.statement_of_work_preview.toast.draft_deleted'),\n      );\n    } catch (err) {\n      if (err instanceof Error) {\n        addErrorToast(err.message);\n      }\n    }\n  };\n\n  const handleDuplicate = async () => {\n    addPrimaryIconToast('QA Note: Duplicating is not implemented yet.');\n  };\n\n  const handleResend = async () => {\n    if (!id) {\n      return;\n    }\n\n    try {\n      await resendDocumentNotification({\n        variables: {\n          documentId: id,\n          type: ContractSow.Sow,\n          sendTo: [Parties.CounterParty],\n        },\n      });\n      addSuccessIconToast(t('noumena.statement_of_work_preview.toast.resent'));\n    } catch (err) {\n      if (err instanceof Error) {\n        addErrorToast(err.message);\n      }\n    }\n  };\n\n  return {\n    summary: {\n      isLoading: isSummaryLoading,\n      form: summaryForm,\n      onSubmit: handleSummarySubmit,\n    },\n    signature: {\n      isLoading: pdfWithSignature.loading,\n      pdfWithSignature: pdfWithSignature.pdfData ?? undefined,\n      form: signatureForm,\n      onSubmit: handleSignatureSubmit,\n    },\n    statementOfWork,\n    previewStep,\n    changeStep: setPreviewStep,\n    deleteStatementOfWork: handleDeleteStatementOfWork,\n    declineStatementOfWork: handleDeclineStatementOfWork,\n    duplicateStatementOfWork: handleDuplicate,\n    resendStatementOfWork: handleResend,\n  };\n}\n"],"names":["SummaryList","children","jsx","Stack","Title","styled","TSpan","attrs","font","colorToken","Description","S$1","SummaryListItem","index","title","description","dueDate","amount","jsxs","StackItem","S","formatDateString","convertToCurrency","CurrencyEnum","Usd","SummaryTotal","label","value","List","Item","Total","AttachedFile","iconName","Icon","Card","OriginalCard","Separator","OriginalSeparator","PDFPreview","div","ContractButtonLink","ContractAssignment","contract","openContractFromSow","isOpsUser","useAuth","sowId","undefined","contractId","_id","ContractUtils","formatDocumentNameWithNumber","RouterLink","ContractToolRoutes","viewContract","id","LabelValue","buyer","ContactDetailsUtils","formatCompanyAndName","seller","effectiveDate","ApiPayloadParser","parseDateString","isDraft","Infobox","Trans","b","statementOfWorkPreviewFormSchema","yup","isAuthorized","oneOf","termsAndConditions","eSign","useStatementOfWorkPreviewForm","defaultValues","useForm","resolver","yupResolver","mode","useStatementOfWorkPreviewFormContext","useFormContext","getFeesList","type","feesData","milestones","FeesCategoryTypes","Inadvance","inAdvance","Installments","map","installment","Milestones","cleanMilestones","cleanList","milestone","Lumpsum","lumpSum","getExpenseReimbursement","expenseReimbursement","expense","getBonusCommission","bonusCommission","commission","getFeesAndOthers","statementOfWork","items","fees","length","push","StatementOfWorkPreview","t","useTranslation","formState","isValid","isSubmitted","StatementOfWorkPermissions","useStatementOfWorkPermissions","hasAgreementsError","canSign","deliverables","shouldDisplaySummary","feesAndOthers","Section","Fragment","DocumentStatusTag","status","StatementOfWorkUtils","formatDocumentNumber","SOWNumber","scopeOfWork","linkedContract","EntityDisplay","linkedNoum","name","profileImageThumbnail","deliverable","feeInfo","sumBy","timeline","DocumentTimeline","DocumentType","Sow","AgreementCheckbox","updateStatementOfWorkStatusInCache","cache","statementOfWorkId","newStatus","updateFragment","fragment","SowFragmentDoc","fragmentName","identify","__typename","prevData","useStatementOfWorkSigning","sendForSigningMutation","useSendSowForSigningMutation","update","result","data","sendDocumentForSigning","StatementOfWorkStatus","Issued","refetchQueries","GetSingleSowDocument","signMutation","useSignStatementOfWorkMutation","signSow","Signed","rejectMutation","useRejectStatementOfWorkMutation","rejectSow","Draft","sendForSigning","useCallback","variables","Error","sign","reject","useStatementOfWorkPreviewScreen","previewStep","setPreviewStep","useState","addSuccessIconToast","addErrorToast","addPrimaryIconToast","useToast","isLoading","isSummaryLoading","deleteStatementOfWork","useStatementOfWork","pdfWithSignature","useStatementOfWorkPdfWithSignature","signing","summaryForm","signatureForm","useDocumentPreviewSignatureForm","documentContentsChecked","validSignature","resendDocumentNotification","useResendDocumentNotificationMutation","handleSummarySubmit","documentName","handleSignatureSubmit","isOwner","err","message","handleDeclineStatementOfWork","handleDeleteStatementOfWork","handleDuplicate","handleResend","documentId","ContractSow","sendTo","Parties","CounterParty","summary","form","onSubmit","signature","loading","pdfData","changeStep","declineStatementOfWork","duplicateStatementOfWork","resendStatementOfWork"],"mappings":"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"}