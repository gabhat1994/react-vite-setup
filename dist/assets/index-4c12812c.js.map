{"version":3,"file":"index-4c12812c.js","sources":["../../src/screens/Register/Steps/StepTwo/SignUpForm/styles.ts","../../src/screens/Register/Steps/StepTwo/SignUpForm/useSignUpForm.ts","../../src/screens/Register/Steps/StepTwo/SignUpForm/index.tsx","../../src/screens/Register/Steps/StepTwo/styles.ts","../../src/screens/Register/Steps/StepTwo/index.tsx","../../src/screens/Register/Steps/StepThree/SignUpForm/index.tsx","../../src/screens/Register/Steps/StepThree/styles.ts","../../src/screens/Register/Steps/StepThree/index.tsx","../../src/screens/Register/Steps/StepFour/styles.ts","../../src/screens/Register/Steps/StepFour/index.tsx","../../src/screens/Register/Steps/StepOne/stylesV2.ts","../../src/screens/Register/Steps/StepOne/useSignUpFormHookV2.ts","../../src/screens/Register/Steps/StepOne/helpers.ts","../../src/screens/Register/Steps/StepOne/useSignupFormV2.ts","../../src/screens/Register/Steps/StepOne/PasswordHelper.tsx","../../src/screens/Register/Steps/StepOne/SocialAuthentication.tsx","../../src/screens/Register/Steps/StepOne/SignUpFormV2.tsx","../../src/screens/Register/index.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Stack } from '@/layout';\n\nexport const FormStyled = styled.div`\n  width: 100%;\n  min-height: 80vh;\n`;\n\nexport const CheckboxStyle = styled.div<{ checked: boolean }>`\n  display: inline-flex;\n  align-items: center;\n  gap: 9px;\n  height: 24px;\n  width: 100%;\n  input[type='checkbox'] {\n    appearance: none;\n    background-color: ${(p) =>\n      p.checked ? 'var(--bg-checkbox-brand-primary-default)' : 'transparent'};\n    margin: 0;\n    font: inherit;\n    color: currentColor;\n    width: 24px;\n    height: 24px;\n    border: 0.15em solid\n      ${(p) =>\n        p.checked ? 'transparent' : ' var(--border-checkbox-neutral-default)'};\n    border-radius: 0.15em;\n    transform: translateY(-0.075em);\n    display: grid;\n    place-content: center;\n  }\n  input[type='checkbox']::before {\n    content: '';\n    width: 16px;\n    height: 16px;\n    transform: scale(0);\n    transition: 120ms transform ease-in-out;\n    box-shadow: inset 0.5em 0.5em var(--form-control-color);\n    background-color: var(--bg-checkbox-neutral-alt-default);\n  }\n  input[type='checkbox']:checked::before {\n    transform: scale(1);\n    transform-origin: bottom left;\n    clip-path: polygon(\n      13.762px 4.202px,\n      13.798px 5.262px,\n      6.798px 12.762px,\n      6.263px 13px,\n      5.72px 12.78px,\n      2.22px 9.28px,\n      2.22px 8.22px,\n      3.28px 8.22px,\n      6.231px 11.171px,\n      12.702px 4.238px,\n      13.762px 4.202px\n    );\n  }\n`;\n\nexport const FullWidthStack = styled(Stack)`\n  width: 100%;\n`;\n\nexport const Form = styled.form`\n  width: 100%;\n`;\n","import {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n  type Dispatch,\n  type SetStateAction,\n} from 'react';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { type SubmitHandler, useForm } from 'react-hook-form';\nimport { t } from 'i18next';\nimport { omit } from 'lodash';\nimport {\n  NAME_REGEX,\n  TWO_LETTERED_NAME_REGEX,\n  REFFERAL_CODE_REGEX,\n} from '@/constants/regex';\nimport { type SignUpValues } from '@/screens/Register/types';\nimport { handleBackendError } from '@/screens/Register/helpers';\nimport { IdentityServices } from '@/services/rest/identity';\nimport Errors from '@/constants/errors';\nimport { type SignUpFormSchema } from './types';\n\ninterface IUseSignUpForm {\n  userInfo: SignUpValues | undefined;\n  onSetStep: Dispatch<SetStateAction<number>>;\n  onChangeUserInfo: (data: SignUpValues) => void;\n  hasRefCode: boolean;\n}\n\nexport const useSignUpForm = ({\n  userInfo,\n  onSetStep,\n  onChangeUserInfo,\n  hasRefCode,\n}: IUseSignUpForm) => {\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const formSchema = useMemo(() => {\n    const schema: SignUpFormSchema = {\n      firstName: yup\n        .string()\n        .trim()\n        .required(t(`noumena.input.not_empty`))\n        .max(20, t(`noumena.signup.first_name.too_long`))\n        .min(2, t(`noumena.signup.first_name.too_short`))\n        .test(\n          'Two letter name validation',\n          t('noumena.signup.two_digit_first_name.incorrect'),\n          (value) => {\n            if (value && value.length <= 2) {\n              return TWO_LETTERED_NAME_REGEX.test(value);\n            }\n            return true;\n          },\n        )\n        .matches(NAME_REGEX, t(`noumena.signup.first_name.incorrect`)),\n      lastName: yup\n        .string()\n        .trim()\n        .required(t(`noumena.input.not_empty`))\n        .max(20, t(`noumena.signup.last_name.too_long`))\n        .min(2, t(`noumena.signup.last_name.too_short`))\n        .test(\n          'Two letter name validation',\n          t('noumena.signup.two_digit_last_name.incorrect'),\n          (value) => {\n            if (value && value.length <= 2) {\n              return TWO_LETTERED_NAME_REGEX.test(value);\n            }\n            return true;\n          },\n        )\n        .matches(NAME_REGEX, t(`noumena.signup.last_name.incorrect`)),\n    };\n    if (hasRefCode) {\n      schema.referralCode = yup\n        .string()\n        .trim()\n        .required(t(`noumena.input.not_empty`))\n        .max(5, t(`noumena.signup.referral_code.max_error`))\n        .min(4, t(`noumena.signup.referral_code.min_error`))\n        .matches(\n          REFFERAL_CODE_REGEX,\n          t(`noumena.signup.referral_code.incorrect`),\n        );\n    }\n    return yup.object({ ...schema }).required();\n  }, [hasRefCode]);\n\n  const {\n    control,\n    setError,\n    setValue,\n    trigger,\n    handleSubmit,\n    formState: { errors, isValid },\n  } = useForm<SignUpValues>({\n    resolver: yupResolver(formSchema),\n    mode: 'all',\n    reValidateMode: 'onBlur',\n    defaultValues: {\n      firstName: userInfo?.firstName,\n      lastName: userInfo?.lastName,\n      referralCode: userInfo?.referralCode,\n    },\n  });\n\n  useEffect(() => {\n    if (hasRefCode) {\n      setValue('referralCode', userInfo?.referralCode);\n      trigger('referralCode');\n    } else {\n      setValue('referralCode', '');\n      trigger('referralCode');\n    }\n  }, [hasRefCode, setValue, trigger, userInfo?.referralCode]);\n\n  const onSubmit: SubmitHandler<SignUpValues> = useCallback(\n    async (data) => {\n      setLoading(true);\n      if (data.referralCode) {\n        const resp = await IdentityServices.serviceValidateReferralCode(\n          data.referralCode,\n        );\n        if (\n          !resp.errorMessage &&\n          resp?.isValid &&\n          resp?.countExceed === false\n        ) {\n          onChangeUserInfo({ ...userInfo, ...data });\n          setLoading(false);\n          onSetStep(3);\n          return;\n        }\n\n        if (resp.errorStatus === 102) {\n          throw new Error(Errors.BLOCKED_IP);\n        }\n\n        setError(\n          'referralCode',\n          {\n            type: 'focus',\n            message: handleBackendError(resp),\n          },\n          { shouldFocus: true },\n        );\n        setLoading(false);\n        throw new Error(handleBackendError(resp));\n      } else {\n        onChangeUserInfo({ ...userInfo, ...omit(data, ['referralCode']) });\n        setLoading(false);\n        onSetStep(3);\n      }\n    },\n    [setError, onSetStep, onChangeUserInfo, userInfo],\n  );\n\n  return {\n    control,\n    errors,\n    isValid,\n    loading,\n    onSubmit: handleSubmit(onSubmit),\n  };\n};\n","import { type FC, useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Controller } from 'react-hook-form';\nimport { t } from 'i18next';\n\nimport { Spacer, Stack } from '@/layout';\nimport { TSpan } from '@/components/Typography';\nimport { TextField } from '@/components/TextField';\nimport { Button } from '@/components/Button';\nimport { Icon } from '@/components/Icon';\nimport { CheckboxStyle, FormStyled, FullWidthStack, Form } from './styles';\n\nimport { type SignUpFormProps } from './types';\nimport { useSignUpForm } from './useSignUpForm';\n\nexport const SignUpForm: FC<SignUpFormProps> = ({\n  setStep,\n  setUserInfo,\n  userInfo,\n}) => {\n  const [hasReferralCode, setHasReferralCode] = useState(false);\n  const [searchParams] = useSearchParams();\n  const referralCodeParam = searchParams.get('referral-code') || '';\n  const referralCodeFromParam = referralCodeParam.replace(/[^a-zA-Z0-9]/g, '');\n\n  const { control, errors, isValid, loading, onSubmit } = useSignUpForm({\n    userInfo,\n    onSetStep: setStep,\n    onChangeUserInfo: setUserInfo,\n    hasRefCode: hasReferralCode,\n  });\n\n  useEffect(() => {\n    if (userInfo?.referralCode) {\n      setHasReferralCode(!!userInfo.referralCode);\n    }\n  }, [userInfo?.referralCode]);\n\n  return (\n    <FormStyled data-testid=\"stepTwoFormContainer\">\n      <Spacer height={80} />\n\n      <TSpan\n        font=\"heading-xs-bold\"\n        $fill\n        colorToken=\"--text-body-neutral-default\"\n      >\n        {t('noumena.sign_up.title')}\n      </TSpan>\n\n      <Spacer height={10} />\n\n      <TSpan\n        font=\"heading-xl-bold\"\n        $fill\n        colorToken=\"--text-body-header-neutral-default\"\n      >\n        {t('noumena.register.step2.sub_title')}\n      </TSpan>\n\n      <Spacer height={15} />\n\n      <Form onSubmit={onSubmit}>\n        <Stack vertical padding=\"16px 0\">\n          <Controller\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextField\n                name=\"firstName\"\n                value={value || ''}\n                label={t(`noumena.first_name`)}\n                onChange={onChange}\n                error={!!errors.firstName}\n                helperText={errors.firstName?.message}\n              />\n            )}\n            name=\"firstName\"\n          />\n\n          <Spacer height={30} />\n\n          <Controller\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextField\n                name=\"lastName\"\n                value={value || ''}\n                label={t(`noumena.last_name`)}\n                onChange={onChange}\n                error={!!errors.lastName}\n                helperText={errors.lastName?.message}\n              />\n            )}\n            name=\"lastName\"\n          />\n\n          <Spacer height={11} />\n\n          <TSpan font=\"body-l\" $fill colorToken=\"--text-body-neutral-default\">\n            {t(`noumena.register.step2.description`)}\n          </TSpan>\n          <Spacer height={20} />\n\n          <CheckboxStyle\n            data-testid=\"stepTwoFormCheckbox\"\n            checked={hasReferralCode}\n          >\n            <input\n              checked={hasReferralCode}\n              data-testid=\"stepTwoFormInput\"\n              type=\"checkbox\"\n              onChange={(e) => setHasReferralCode(e.target.checked)}\n              disabled={\n                !!userInfo?.referralCode &&\n                userInfo?.referralCode === referralCodeFromParam\n              }\n            />\n            <TSpan font=\"body-l\" $fill colorToken=\"--text-body-neutral-default\">\n              {t(`noumena.sign_up.referral_message`)}\n            </TSpan>\n          </CheckboxStyle>\n\n          {hasReferralCode && (\n            <>\n              <Spacer height={32} />\n              <Controller\n                control={control}\n                render={({ field: { onChange, value } }) => (\n                  <TextField\n                    data-testid=\"referralCode\"\n                    name=\"referralCode\"\n                    value={value || ''}\n                    label={t(`noumena.referral_code`)}\n                    onChange={onChange}\n                    error={!!errors.referralCode}\n                    helperText={errors.referralCode?.message}\n                    disabled={\n                      !!userInfo?.referralCode &&\n                      userInfo?.referralCode === referralCodeFromParam\n                    }\n                  />\n                )}\n                name=\"referralCode\"\n              />\n            </>\n          )}\n\n          <Spacer height={32} />\n          <FullWidthStack>\n            <Button\n              data-testid=\"stepTwoBackButton\"\n              tertiary\n              leftIcon={\n                <Icon\n                  color=\"--icon-button-neutral-default\"\n                  name=\"arrow_left_m\"\n                  size={16}\n                />\n              }\n              style={{ minWidth: '100px' }}\n              onClick={() => setStep(1)}\n            >\n              {t(`noumena.back.text`)}\n            </Button>\n            <Spacer width={16} />\n            <Button\n              data-testid=\"stepTwoSubmitButton\"\n              type=\"submit\"\n              primary\n              size=\"full\"\n              disabled={!isValid}\n              loading={loading}\n            >\n              {t(`noumena.next.text`)}\n            </Button>\n          </FullWidthStack>\n        </Stack>\n      </Form>\n    </FormStyled>\n  );\n};\n","import styled from 'styled-components';\nimport { Stack } from '@/layout';\n\nconst Screen = styled(Stack)`\n  font-family: var(--font-family);\n  max-width: 400px;\n  display: block;\n`;\n\nexport default Screen;\n","import { type FC } from 'react';\nimport { SignUpForm } from './SignUpForm';\nimport Screen from './styles';\nimport { type SignUpStepTwoInterface } from './types';\n\nconst SignUpStepTwo: FC<SignUpStepTwoInterface> = ({\n  setStep,\n  setUserInfo,\n  userInfo,\n}) => (\n  <Screen data-testid=\"stepTwoContainer\">\n    <SignUpForm\n      setStep={setStep}\n      setUserInfo={setUserInfo}\n      userInfo={userInfo}\n    />\n  </Screen>\n);\n\nexport default SignUpStepTwo;\n","import { type FC, Fragment, useCallback, useState } from 'react';\nimport { type SubmitHandler, useFieldArray, useForm } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\nimport { TSpan } from '@/components/Typography';\nimport { Spacer, Stack } from '@/layout';\nimport { TextField } from '@/components/TextField';\nimport { Button } from '@/components/Button';\nimport { Icon } from '@/components/Icon';\nimport { IdentityServices } from '@/services/rest/identity';\nimport { type SignUpValues } from '@/screens/Register/types';\nimport { TextArea } from '@/components/TextArea';\nimport { isValidURL } from '@/utils/url';\nimport { handleBackendError } from '@/screens/Register/helpers';\nimport { useToast } from '@/hooks';\nimport accessLocalStorage from '@/constants/accessLocalStorage';\nimport Errors from '@/constants/errors';\nimport { setLocalStorage } from '@/utils/localStorage';\nimport {\n  AddButtonStyle,\n  Form,\n  FormStyled,\n  FullWidthStack,\n  IconWrapper,\n  Point,\n} from './styles';\nimport { type SignUpFormProps } from './types';\n\nconst SignUpForm: FC<SignUpFormProps> = ({\n  setStep,\n  userInfo,\n  setUserInfo,\n  setUserOutput,\n}) => {\n  const { addToast } = useToast();\n  const { t } = useTranslation();\n\n  const [isURL, setIsURL] = useState(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const {\n    control,\n    register,\n    setError,\n    clearErrors,\n    getValues,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<SignUpValues>({\n    defaultValues: {\n      additionalInfo: userInfo?.additionalInfo,\n      profile: userInfo?.profile,\n    },\n  });\n\n  const validateURL = (url: string, index: number) => {\n    const valid = isValidURL(url);\n    if (!valid) {\n      setError(`profile.socialLinks.${index}.link`, {\n        type: 'focus',\n        message: t(`noumena.input.incorrect`),\n      });\n    } else {\n      if (index === 0) setIsURL(true);\n      clearErrors(`profile.socialLinks.${index}.link`);\n    }\n  };\n\n  const onSubmit: SubmitHandler<SignUpValues> = useCallback(\n    async (data) => {\n      setLoading(true);\n      const currentData = { ...data };\n      currentData.profile.socialLinks = currentData?.profile?.socialLinks\n        ?.filter(({ link }) => !!link)\n        .map(({ link }, index) => ({\n          name: `url${index + 1}`,\n          link: link?.toLowerCase(),\n        }));\n      const payload = {\n        ...userInfo,\n        ...currentData,\n      };\n      if (setUserInfo) {\n        setUserInfo(payload);\n      }\n      const resp = await IdentityServices.serviceSignup(payload);\n      if (resp && !resp.errorMessage) {\n        setLocalStorage(\n          accessLocalStorage.ACCESS_TOKEN,\n          resp.token.accessToken,\n        );\n        setLocalStorage(\n          accessLocalStorage.REFRESH_TOKEN,\n          resp.token.refreshToken,\n        );\n        if (setUserOutput) setUserOutput(resp.user);\n\n        setStep(4);\n        setLoading(false);\n      } else {\n        addToast(\n          'error',\n          'none',\n          resp.errorStatus === 102\n            ? Errors.BLOCKED_IP\n            : `${t('noumena.toast_error.text')}: ${handleBackendError(resp)}`,\n        );\n        setLoading(false);\n      }\n    },\n    [addToast, setStep, setUserInfo, setUserOutput, t, userInfo],\n  );\n\n  const {\n    fields: profileLinksFields,\n    append: profileLinksAppend,\n    remove: profileLinksRemove,\n  } = useFieldArray({ control, name: 'profile.socialLinks' });\n\n  return (\n    <FormStyled data-testid=\"stepThreeFormContainer\">\n      <Spacer height={78} />\n      <TSpan\n        font=\"heading-xs-bold\"\n        $fill\n        colorToken=\"--text-body-neutral-default\"\n      >\n        {t(`noumena.sign_up.title`)}\n      </TSpan>\n      <Spacer height={10} />\n      <TSpan\n        font=\"heading-xl-bold\"\n        $fill\n        colorToken=\"--text-body-header-neutral-default\"\n      >\n        {t(`noumena.register.step3.sub_title`)}\n      </TSpan>\n      <Spacer height={11} />\n      <TSpan font=\"body-l\" $fill colorToken=\"--text-body-neutral-default\">\n        {t(`noumena.register.step3.description`)}\n      </TSpan>\n      <Stack vertical padding=\"16px 40px\">\n        <TSpan colorToken=\"--text-body-neutral-highlighted\" font=\"body-l-bold\">\n          {t(`noumena.register.step3.sub_title1`)}\n        </TSpan>\n      </Stack>\n      <IconWrapper>\n        <Point />\n        <TSpan font=\"body-m\" colorToken=\"--text-body-neutral-default\">\n          {t(`noumena.register.step3.info_item1`)}\n        </TSpan>\n      </IconWrapper>\n      <IconWrapper>\n        <Point />\n        <TSpan font=\"body-m\" colorToken=\"--text-body-neutral-default\">\n          {t(`noumena.register.step3.info_item2`)}\n        </TSpan>\n      </IconWrapper>\n      <IconWrapper>\n        <Point />\n        <TSpan font=\"body-m\" colorToken=\"--text-body-neutral-default\">\n          {t(`noumena.register.step3.info_item3`)}\n        </TSpan>\n      </IconWrapper>\n      <Spacer height={15} />\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Stack vertical padding=\"16px 0\">\n          {profileLinksFields.map((field, index) => (\n            <Fragment key={field.id}>\n              <TextField\n                data-testid={`urlfield${index}`}\n                label={t(`noumena.professional_profile_link`)}\n                {...register(`profile.socialLinks.${index}.link`, {\n                  required: {\n                    value: true,\n                    message: t(`noumena.input.not_empty`),\n                  },\n                  pattern: {\n                    value:\n                      /[(http(s)?):\\\\/\\\\/(www\\\\.)?a-zA-Z0-9@:%._\\\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\\\+.~#?&//=]*)/i,\n                    message: t(`noumena.input.incorrect`),\n                  },\n                })}\n                onBlur={(e) => validateURL(e.target.value, index)}\n                rightIcon={\n                  index !== 0 ? (\n                    <Icon\n                      color=\"--icon-tablecell-neutral-highlighted\"\n                      name=\"delete_m\"\n                      size={24}\n                      onClick={() => profileLinksRemove(index)}\n                    />\n                  ) : undefined\n                }\n                value={getValues(`profile.socialLinks.${index}.link`)}\n                error={!!errors?.profile?.socialLinks?.[index]?.link}\n                helperText={\n                  errors?.profile?.socialLinks?.[index]?.link?.message ||\n                  t(`noumena.signup.socialLinks.example`)\n                }\n              />\n              <Spacer height={20} />\n            </Fragment>\n          ))}\n          {profileLinksFields.length < 3 && isURL && (\n            <>\n              {' '}\n              <AddButtonStyle\n                onClick={() =>\n                  profileLinksAppend({\n                    link: '',\n                  })\n                }\n              >\n                <Icon\n                  color=\"--icon-button-neutral-default\"\n                  name=\"add_m\"\n                  size={24}\n                />\n                <TSpan\n                  colorToken=\"--text-button-brand-primary-default\"\n                  font=\"button-m\"\n                  $fill\n                >\n                  {t(`noumena.add_another_link`)}\n                </TSpan>\n              </AddButtonStyle>\n              <Spacer height={16} />{' '}\n            </>\n          )}\n          <TextArea\n            label={t(`noumena.sign_up.step3.textarea.label`)}\n            resize={false}\n            {...register('additionalInfo', {\n              maxLength: {\n                value: 2000,\n                message: t(`noumena.input.not_exceed-2000`),\n              },\n            })}\n            value={getValues('additionalInfo')}\n            error={!!errors?.additionalInfo}\n            helperText={errors?.additionalInfo?.message}\n          />\n\n          <Spacer height={32} />\n\n          <FullWidthStack>\n            <Button\n              data-testid=\"stepThreeBackButton\"\n              tertiary\n              leftIcon={\n                <Icon\n                  color=\"--icon-button-neutral-default\"\n                  name=\"arrow_left_m\"\n                  size={16}\n                />\n              }\n              style={{ minWidth: '100px' }}\n              onClick={() => setStep(2)}\n            >\n              {t(`noumena.back.text`)}\n            </Button>\n            <Spacer width={16} />\n            <Button\n              data-testid=\"stepThreeSubmitButton\"\n              type=\"submit\"\n              primary\n              size=\"full\"\n              disabled={!isURL}\n              loading={loading}\n            >\n              {!isURL\n                ? t(`noumena.sign_up.step3.button.text`)\n                : t(`noumena.submit`)}\n            </Button>\n          </FullWidthStack>\n        </Stack>\n      </Form>\n    </FormStyled>\n  );\n};\n\nexport default SignUpForm;\n","import styled from 'styled-components';\nimport { Stack } from '@/layout';\n\nconst Screen = styled(Stack)`\n  font-family: var(--font-family);\n  max-width: 400px;\n  display: block;\n`;\n\nexport default Screen;\n","import SignUpForm from './SignUpForm/index';\nimport Screen from './styles';\nimport { type SignUpStepThreeInterface } from './types';\n\nconst SignUpStepThree: React.FC<SignUpStepThreeInterface> = ({\n  setStep,\n  userInfo,\n  setUserInfo,\n  setUserOutput,\n}) => (\n  <Screen data-testid=\"stepThreeContainer\">\n    <SignUpForm\n      setStep={setStep}\n      userInfo={userInfo}\n      setUserInfo={setUserInfo}\n      setUserOutput={setUserOutput}\n    />\n  </Screen>\n);\n\nexport default SignUpStepThree;\n","import styled from 'styled-components';\n\nexport const PageStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  gap: 12px;\n  width: 360px;\n`;\n\nexport const ButtonContainer = styled.div`\n  width: 282px;\n  margin-top: 24px;\n`;\n","import { type FC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { TSpan } from '@/components/Typography';\nimport { Spacer } from '@/layout';\nimport { Button } from '@/components/Button';\nimport { useAuth } from '@/features/auth/contexts';\nimport { type SignUpFormProps } from './types';\nimport { ButtonContainer, PageStyled } from './styles';\n\nexport const SignFour: FC<SignUpFormProps> = ({ userInfo, userOutput }) => {\n  const { signUp } = useAuth();\n  const buttonHandler = () => {\n    if (userOutput) {\n      signUp();\n    }\n  };\n  const { t } = useTranslation();\n\n  return (\n    <PageStyled data-testid=\"stepFourContainer\">\n      <Spacer height={138} />\n      <TSpan\n        colorToken=\"--text-body-header-neutral-default\"\n        font=\"heading-l-bold\"\n        $fill\n      >\n        {t(`noumena.sign_up.success_page.title`)}, {userInfo?.firstName}!\n      </TSpan>\n      <TSpan font=\"body-l\" $fill colorToken=\"--text-body-neutral-default\">\n        {t(`noumena.register.success_page.sub_title`)}\n      </TSpan>\n      <TSpan font=\"body-l\" $fill colorToken=\"--text-body-neutral-default\">\n        {t(`noumena.register.success_page.description`)}\n      </TSpan>\n      <ButtonContainer>\n        <Button\n          data-testid=\"stepFourButton\"\n          primary\n          size=\"full\"\n          onClick={buttonHandler}\n        >\n          {t(`noumena.continue_to_noumena`)}\n        </Button>\n      </ButtonContainer>\n    </PageStyled>\n  );\n};\n\nexport default SignFour;\n","import { Icon, TSpan } from '@/components';\nimport { Stack } from '@/layout';\nimport styled, { css } from 'styled-components';\n\nexport const Container = styled(Stack).attrs({\n  align: 'center',\n  justify: 'start',\n  fullWidth: true,\n  vertical: true,\n})`\n  position: relative;\n  height: 100%;\n`;\n\nexport const LogoWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\n\nexport const Header = styled(Stack).attrs({\n  vertical: true,\n  align: 'center',\n  justify: 'center',\n  gap: 16,\n})``;\n\nexport const FormWrapper = styled(Stack).attrs({\n  vertical: true,\n  align: 'center',\n  gap: 12,\n})`\n  width: 450px;\n  box-sizing: border-box;\n  padding: 24px;\n`;\n\nexport const PasswordHelperWrapper = styled(Stack).attrs({\n  vertical: true,\n  gap: 8,\n})`\n  width: 240px;\n`;\n\nexport const PasswordCheck = styled(TSpan).attrs({\n  font: 'footnote',\n})<{ successful: boolean }>`\n  ${({ successful }) =>\n    successful &&\n    css`\n      color: var(--text-button-success-secondary-default);\n    `}\n  ${({ successful }) =>\n    !successful &&\n    css`\n      color: var(--text-body-neutral-default);\n    `};\n\n  display: inline-flex;\n  align-items: center;\n`;\n\nexport const CheckIconStyled = styled(Icon)`\n  margin-right: 4px;\n`;\n\nexport const PasswordContainer = styled.div`\n  position: relative;\n  width: 100%;\n`;\n\nexport const TooltipContainer = styled.div`\n  position: absolute;\n  z-index: 2;\n  background: while;\n  top: -120%;\n  right: -75%;\n  padding: 12px;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: -15px;\n    transform: translateY(-50%);\n    border-style: solid;\n    border-width: 8px;\n    border-color: transparent white transparent transparent;\n  }\n`;\n\nexport const AuthenticationWrapper = styled(Stack).attrs({\n  vertical: true,\n  fullWidth: true,\n  gap: 12,\n})`\n  margin-bottom: 12px;\n`;\n\nexport const LoginLink = styled(TSpan).attrs({\n  font: 'body-m',\n  colorToken: '--text-card-header-neutral-highlighted',\n})`\n  cursor: pointer;\n`;\n\nexport const SignupTitle = styled(TSpan).attrs({\n  font: 'heading-m-bold',\n  colorToken: '--text-modal-header-neutral-default',\n})``;\n\nexport const SignupSubTitle = styled(TSpan).attrs({\n  font: 'body-l',\n  colorToken: '--text-card-header-neutral-default',\n})``;\n\nexport const Note = styled(TSpan).attrs({\n  font: 'body-m',\n  colorToken: '--text-card-header-neutral-default',\n})``;\n\nexport const FooterNote = styled(TSpan).attrs({\n  font: 'body-m',\n  colorToken: '--text-card-header-neutral-disabled',\n})``;\n","import { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { type ObjectShape } from 'yup/lib/object';\nimport { useForm } from 'react-hook-form';\nimport { t } from 'i18next';\n\nimport {\n  NAME_REGEX,\n  REFFERAL_CODE_REGEX,\n  TWO_LETTERED_NAME_REGEX,\n  PASSWORD_REGEX,\n} from '@/constants/regex';\nimport { isValidEmail } from '@/utils/email';\nimport { type Maybe } from 'graphql/jsutils/Maybe';\nimport { type SignUpValuesV2 } from './types';\n\ninterface UseSignUpFormProps {\n  userInfo: Maybe<SignUpValuesV2>;\n}\n\nexport const useSignUpForm = ({ userInfo }: UseSignUpFormProps) => {\n  const schemaObj: ObjectShape = {\n    firstName: yup\n      .string()\n      .trim()\n      .required(t(`noumena.input.complete_field`))\n      .max(20, t(`noumena.signup.first_name.too_long`))\n      .min(2, t(`noumena.signup.first_name.too_short`))\n      .test(\n        'Two letter name validation',\n        t('noumena.signup.two_digit_first_name.incorrect'),\n        (value) => {\n          if (value && value.length <= 2) {\n            return TWO_LETTERED_NAME_REGEX.test(value);\n          }\n          return true;\n        },\n      )\n      .matches(NAME_REGEX, t(`noumena.signup.first_name.incorrect`)),\n    lastName: yup\n      .string()\n      .trim()\n      .required(t(`noumena.input.complete_field`))\n      .max(20, t(`noumena.signup.last_name.too_long`))\n      .min(2, t(`noumena.signup.last_name.too_short`))\n      .test(\n        'Two letter name validation',\n        t('noumena.signup.two_digit_last_name.incorrect'),\n        (value) => {\n          if (value && value.length <= 2) {\n            return TWO_LETTERED_NAME_REGEX.test(value);\n          }\n          return true;\n        },\n      )\n      .matches(NAME_REGEX, t(`noumena.signup.last_name.incorrect`)),\n    email: yup\n      .string()\n      .trim()\n      .email(t('noumena.signup.error.incorrect_email'))\n      .required(t('noumena.input.complete_field'))\n      .test(\n        'validateEmail',\n        t('noumena.signup.error.incorrect_email'),\n        (value) => isValidEmail(value || ''),\n      ),\n    password: yup\n      .string()\n      .trim()\n      .required(t('noumena.input.complete_field'))\n      .matches(PASSWORD_REGEX),\n\n    referralCode: yup\n      .string()\n      .trim()\n      .when('referralCode', (value) =>\n        value?.length\n          ? yup\n              .string()\n              .test(\n                'validateReferralCode',\n                t(`noumena.signup.referral_code.incorrect`),\n                (code) => !!(code && code.trim().length === code.length),\n              )\n              .min(4, t(`noumena.signup.referral_code.min_error`))\n              .max(5, t(`noumena.signup.referral_code.max_error`))\n              .matches(\n                REFFERAL_CODE_REGEX,\n                t(`noumena.signup.referral_code.incorrect`),\n              )\n          : yup.string().notRequired(),\n      ),\n  };\n  const signUpFormSchema = yup\n    .object()\n    .shape(schemaObj, [\n      ['referralCode', 'referralCode'],\n      ['phone', 'phone'],\n    ])\n    .required();\n\n  const {\n    control,\n    handleSubmit,\n    getValues,\n    reset,\n    setError,\n    clearErrors,\n    watch,\n    formState: { errors, isValid },\n  } = useForm<SignUpValuesV2>({\n    resolver: yupResolver(signUpFormSchema),\n    mode: 'all',\n    reValidateMode: 'onBlur',\n    defaultValues: {\n      email: userInfo?.email || '',\n      firstName: userInfo?.firstName || '',\n      lastName: userInfo?.lastName || '',\n      referralCode: userInfo?.referralCode || '',\n      password: '',\n    },\n  });\n\n  return {\n    control,\n    errors,\n    isValid,\n    getValues,\n    handleSubmit,\n    reset,\n    setError,\n    clearErrors,\n    watch,\n  };\n};\n","import { type PasswordError } from './types';\n\nexport const getPasswordInitialState = (): PasswordError => ({\n  hasLowerCaseCharacter: false,\n  hasNumber: false,\n  hasSixCharacters: false,\n  hasSpecialCharacter: false,\n  hasUpperCaseCharacter: false,\n});\n","import {\n  type ChangeEvent,\n  useCallback,\n  useState,\n  useMemo,\n  useEffect,\n  useRef,\n} from 'react';\nimport EVENTS from '@/constants/trackingEvents';\nimport { trackEvent } from '@/utils/tracking';\nimport { useInitialSignUp } from '@/features/onboarding/hooks';\nimport {\n  UPPERCASE_REGEX,\n  LOWERCASE_REGEX,\n  NUMBER_REGEX,\n  SPECIAL_CHARACTER_REGEX,\n} from '@/constants/regex';\nimport ROUTES from '@/constants/routes';\nimport { LINKS } from '@/constants/links';\nimport { useNavigate } from 'react-router';\nimport IdentityServices from '@/services/rest/identity';\nimport { useSearchParams } from 'react-router-dom';\nimport { useSignUpForm } from './useSignUpFormHookV2';\nimport { type SignUpValuesV2, type PasswordError } from './types';\nimport { getPasswordInitialState } from './helpers';\nimport { handleBackendError } from '../../helpers';\n\nexport const useSignupFormV2 = () => {\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const {\n    userInfo,\n    recaptchaToken,\n    setUserInfo,\n    showBlockedErrorMsg,\n    signUpEmail,\n    isSigningUpFromNextApp: isSignUpInitiatedFromNextApp,\n  } = useInitialSignUp();\n  const {\n    control,\n    errors,\n    isValid,\n    handleSubmit,\n    setError,\n    clearErrors,\n    watch,\n  } = useSignUpForm({ userInfo });\n\n  const [loading, setLoading] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [passwordFieldFocused, setPasswordFieldFocused] = useState(false);\n  const [passwordErrorStates, setPasswordErrorStates] = useState<PasswordError>(\n    getPasswordInitialState(),\n  );\n  const subscribe = useRef(true);\n  const [isValidReferral, setIsValidReferral] = useState(false);\n  const { serviceValidateReferralCode, validateContact } = IdentityServices;\n  const referralCodeParam = searchParams.get('referral-code') || '';\n  const referralCode = referralCodeParam.replace(/[^a-zA-Z0-9]/g, '');\n\n  const utmParams: Record<string, string> = useMemo(() => {\n    const params: Record<string, string> = {};\n    searchParams.forEach((v, k) => {\n      if (k.startsWith('utm_')) {\n        params[k] = v;\n      }\n    });\n    return params;\n  }, [searchParams]);\n\n  const handleFocus = useCallback((e: React.FocusEvent<HTMLInputElement>) => {\n    let event = '';\n    switch (e.target.name) {\n      case 'email':\n        event = EVENTS.ONBOARDING.INITIAL_SIGNUP_SCREEN.EMAIL;\n        break;\n      case 'firstName':\n        event = EVENTS.ONBOARDING.INITIAL_SIGNUP_SCREEN.FIRST_NAME;\n        break;\n      case 'lastName':\n        event = EVENTS.ONBOARDING.INITIAL_SIGNUP_SCREEN.LAST_NAME;\n        break;\n      case 'referralCode':\n        event = EVENTS.ONBOARDING.INITIAL_SIGNUP_SCREEN.REFERRAL_CODE;\n        break;\n      default:\n        break;\n    }\n    trackEvent(event);\n  }, []);\n\n  const toggleVisibility = () => setShowPassword((previous) => !previous);\n\n  const analyzePassword = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const password = e.target.value;\n    setPasswordErrorStates({\n      hasSixCharacters: password.length >= 6,\n      hasNumber: NUMBER_REGEX.test(password),\n      hasSpecialCharacter: SPECIAL_CHARACTER_REGEX.test(password),\n      hasLowerCaseCharacter: LOWERCASE_REGEX.test(password),\n      hasUpperCaseCharacter: UPPERCASE_REGEX.test(password),\n    });\n  }, []);\n\n  const togglePasswordFiledFocus = () =>\n    setPasswordFieldFocused((previous) => !previous);\n\n  const login = useCallback(() => {\n    navigate(ROUTES.LOGIN);\n  }, [navigate]);\n\n  const termsOfUse = useCallback(() => {\n    window.open(LINKS.TERMS_OF_USE, '_blank');\n  }, []);\n\n  const showHelper = !!(watch('password') || '').length && passwordFieldFocused;\n\n  const setFormError = useCallback(\n    (name: keyof SignUpValuesV2, error: unknown) => {\n      setError(\n        name,\n        {\n          type: 'focus',\n          message: handleBackendError(error),\n        },\n        { shouldFocus: true },\n      );\n    },\n    [setError],\n  );\n\n  const checkReferralCode = useCallback(\n    async (code: string): Promise<'valid' | 'invalid'> => {\n      const resp = await serviceValidateReferralCode(code);\n\n      if (!resp?.errorMessage && resp?.isValid && !resp?.countExceed) {\n        clearErrors('referralCode');\n        return 'valid';\n      }\n      if (resp?.errorStatus === 102) {\n        showBlockedErrorMsg();\n      }\n      setFormError('referralCode', resp);\n      return 'invalid';\n    },\n    [\n      clearErrors,\n      serviceValidateReferralCode,\n      setFormError,\n      showBlockedErrorMsg,\n    ],\n  );\n\n  const checkEmail = useCallback(\n    async (enteredEmail: string): Promise<'available' | 'not-available'> => {\n      const resp = await validateContact('email', enteredEmail);\n\n      if (resp && !resp?.errorMessage) {\n        clearErrors('email');\n        return 'available';\n      }\n      if (resp?.errorStatus === 102) {\n        showBlockedErrorMsg();\n      }\n      setFormError('email', resp);\n      return 'not-available';\n    },\n    [clearErrors, setFormError, showBlockedErrorMsg, validateContact],\n  );\n\n  const checkReferralCodeFromParams = useCallback(async () => {\n    const codeStatus = await checkReferralCode(referralCode);\n    if (codeStatus === 'valid') {\n      setIsValidReferral(true);\n    }\n  }, [checkReferralCode, referralCode]);\n\n  const submit = useCallback(\n    async (val: SignUpValuesV2) => {\n      setLoading(true);\n      if (val.referralCode) {\n        const codeStatus = await checkReferralCode(val.referralCode);\n        if (codeStatus === 'invalid') {\n          setLoading(false);\n          return;\n        }\n      }\n      const emailStatus = await checkEmail(val.email);\n      if (emailStatus === 'not-available') {\n        setLoading(false);\n        return;\n      }\n      setUserInfo((previousInfo) => ({ ...previousInfo, ...val }));\n      trackEvent(EVENTS.ONBOARDING.INITIAL_SIGNUP_SCREEN.SUBMIT, {\n        Email: userInfo?.email,\n        Phone: userInfo?.phone,\n        FirstName: userInfo?.firstName,\n        LastName: userInfo?.lastName,\n        DateOfBirth: userInfo?.dob,\n        ReferralCode: userInfo?.referralCode,\n        ...utmParams,\n      });\n      const isSignUpSuccess = await signUpEmail(val.email);\n      if (isSignUpSuccess) {\n        if (isSignUpInitiatedFromNextApp) {\n          navigate(ROUTES.SIGN_UP_OTP);\n        } else {\n          navigate(ROUTES.SIGN_UP_OTP, { replace: true });\n        }\n      }\n    },\n    [\n      checkEmail,\n      checkReferralCode,\n      isSignUpInitiatedFromNextApp,\n      navigate,\n      setUserInfo,\n      signUpEmail,\n      userInfo,\n      utmParams,\n    ],\n  );\n\n  useEffect(() => {\n    if (referralCode && subscribe.current) {\n      checkReferralCodeFromParams();\n    }\n    return () => {\n      subscribe.current = false;\n    };\n  }, [checkReferralCodeFromParams, referralCode]);\n\n  return {\n    loading,\n    recaptchaToken,\n    isValidReferral,\n    navigateTo: {\n      login,\n      termsOfUse,\n    },\n    form: {\n      control,\n      errors,\n      isValid,\n      setError,\n      clearErrors,\n      handleFocus,\n      handleSubmit: handleSubmit(submit),\n    },\n    password: {\n      toggleVisibility,\n      showPassword,\n      analyzePassword,\n      passwordErrorStates,\n      showHelper,\n      togglePasswordFiledFocus,\n    },\n  };\n};\n","import { t } from 'i18next';\nimport { TSpan } from '@/components';\nimport { Spacer } from '@/layout';\nimport {\n  PasswordHelperWrapper,\n  PasswordCheck,\n  CheckIconStyled,\n} from './stylesV2';\nimport { type PasswordError } from './types';\n\ntype PasswordHelperProps = {\n  passwordStates: PasswordError;\n};\n\nconst CheckIcon = () => (\n  <>\n    <CheckIconStyled\n      name=\"check_xs\"\n      size={16}\n      color=\"--icon-button-success-secondary-default\"\n    />\n  </>\n);\n\nexport const PasswordHelper = ({ passwordStates }: PasswordHelperProps) => {\n  const isPasswordWeak = Object.values(passwordStates).some((state) => !state);\n\n  const {\n    hasLowerCaseCharacter,\n    hasNumber,\n    hasSixCharacters,\n    hasSpecialCharacter,\n    hasUpperCaseCharacter,\n  } = passwordStates;\n  return (\n    <>\n      <TSpan font=\"footnote\" colorToken=\"--text-body-neutral-default\">\n        Password strength:{' '}\n        <TSpan\n          font=\"footnote\"\n          colorToken={\n            isPasswordWeak\n              ? '--bg-button-danger-primary-default'\n              : '--text-button-success-secondary-default'\n          }\n        >\n          {isPasswordWeak ? 'Weak' : 'Strong'}\n        </TSpan>\n      </TSpan>\n      <Spacer height={16} />\n      <PasswordHelperWrapper>\n        <PasswordCheck successful={hasSixCharacters}>\n          {hasSixCharacters && <CheckIcon />}\n          {t('noumena.password.hint.six.characters')}\n        </PasswordCheck>\n        <PasswordCheck successful={hasLowerCaseCharacter}>\n          {hasLowerCaseCharacter && <CheckIcon />}\n          {t('noumena.password.hint.lowercase.character')}\n        </PasswordCheck>\n        <PasswordCheck successful={hasUpperCaseCharacter}>\n          {hasUpperCaseCharacter && <CheckIcon />}\n          {t('noumena.password.hint.uppercase.character')}\n        </PasswordCheck>\n        <PasswordCheck successful={hasSpecialCharacter}>\n          {hasSpecialCharacter && <CheckIcon />}\n          {t('noumena.password.hint.special.character')}\n        </PasswordCheck>\n        <PasswordCheck successful={hasNumber}>\n          {hasNumber && <CheckIcon />}\n          {t('noumena.password.hint.one.number')}\n        </PasswordCheck>\n      </PasswordHelperWrapper>\n    </>\n  );\n};\n","import { Button, Icon } from '@/components';\nimport { type ButtonProps } from '@/components/Button/types';\nimport { type IconProps } from '@/components/Icon/Icon';\n\ntype SocialAuthenticationProps = ButtonProps & {\n  name: IconProps['name'];\n  label: string;\n};\n\nexport const SocialAuthentication = ({\n  name,\n  label,\n  ...rest\n}: SocialAuthenticationProps) => (\n  <Button leftIcon={<Icon name={name} size={24} />} size=\"full\" {...rest}>\n    {label}\n  </Button>\n);\n","import Logo from '@/components/Logo';\nimport { Button, Icon, TSpan } from '@/components';\nimport { t } from 'i18next';\nimport { Controller } from 'react-hook-form';\nimport { TextField } from '@/components/TextField';\nimport { Spacer, Stack } from '@/layout';\nimport * as S from './stylesV2';\nimport { useSignupFormV2 } from './useSignupFormV2';\nimport { PasswordHelper } from './PasswordHelper';\nimport { SocialAuthentication } from './SocialAuthentication';\n\nexport const SignUpFormV2 = () => {\n  const { form, password, recaptchaToken, loading, navigateTo } =\n    useSignupFormV2();\n  const { control, errors, handleFocus, handleSubmit, isValid } = form;\n  const {\n    showPassword,\n    toggleVisibility,\n    analyzePassword,\n    passwordErrorStates,\n    showHelper,\n    togglePasswordFiledFocus,\n  } = password;\n\n  return (\n    <S.Container>\n      <S.LogoWrapper>\n        <Logo />\n      </S.LogoWrapper>\n      <S.Header>\n        <S.SignupTitle>{t('noumena.sign_up.title')}</S.SignupTitle>\n        <S.SignupSubTitle>{t('noumena.sign_up.subtitle')}</S.SignupSubTitle>\n      </S.Header>\n      <form onSubmit={handleSubmit}>\n        <S.FormWrapper>\n          <S.AuthenticationWrapper>\n            <SocialAuthentication\n              name=\"google_logo\"\n              label={t('noumena.signup.continue.with.google')}\n            />\n          </S.AuthenticationWrapper>\n          <TSpan font=\"body-m\" colorToken=\"--text-card-neutral-disabled\">\n            Or\n          </TSpan>\n          <Stack gap={12}>\n            <Controller\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <TextField\n                  name=\"firstName\"\n                  value={value || ''}\n                  label={t(`noumena.first_name`)}\n                  error={!!errors.firstName}\n                  onChange={onChange}\n                  helperText={errors.firstName?.message}\n                  data-testid=\"firstNameInput\"\n                  onFocus={handleFocus}\n                />\n              )}\n              name=\"firstName\"\n            />\n            <Controller\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <TextField\n                  name=\"lastName\"\n                  value={value || ''}\n                  label={t(`noumena.last_name`)}\n                  error={!!errors.lastName}\n                  onChange={onChange}\n                  helperText={errors.lastName?.message}\n                  data-testid=\"lastNameInput\"\n                  onFocus={handleFocus}\n                />\n              )}\n              name=\"lastName\"\n            />\n          </Stack>\n          <Controller\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextField\n                name=\"email\"\n                value={value || ''}\n                label={t('noumena.email_address')}\n                error={!!errors.email}\n                onChange={onChange}\n                helperText={errors.email?.message}\n                data-testid=\"emailInput\"\n                onFocus={handleFocus}\n              />\n            )}\n            name=\"email\"\n          />\n          <Controller\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <S.PasswordContainer>\n                <TextField\n                  name=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  value={value || ''}\n                  label={t('noumena.password')}\n                  error={\n                    errors.password?.type === 'required'\n                      ? !!errors.password\n                      : undefined\n                  }\n                  onChange={(e) => {\n                    analyzePassword(e);\n                    onChange(e);\n                  }}\n                  helperText={\n                    errors.password?.type === 'required'\n                      ? errors.password.message\n                      : undefined\n                  }\n                  data-testid=\"passwordInput\"\n                  onFocus={(e) => {\n                    togglePasswordFiledFocus();\n                    handleFocus(e);\n                  }}\n                  onBlur={togglePasswordFiledFocus}\n                  rightIcon={\n                    <Icon\n                      name={showPassword ? 'eye_off_m' : 'eye_on_m'}\n                      size={24}\n                      onClick={toggleVisibility}\n                    />\n                  }\n                />\n                {showHelper && (\n                  <S.TooltipContainer>\n                    <PasswordHelper passwordStates={passwordErrorStates} />\n                  </S.TooltipContainer>\n                )}\n              </S.PasswordContainer>\n            )}\n            name=\"password\"\n          />\n          <Controller\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextField\n                name=\"referralCode\"\n                value={value || ''}\n                label={t(`noumena.referral_code.optional`)}\n                error={!!errors.referralCode}\n                onChange={onChange}\n                helperText={\n                  errors.referralCode\n                    ? errors.referralCode?.message\n                    : t('noumena.referral_code.helper')\n                }\n                data-testid=\"referralCodeInput\"\n                // disabled={isValidReferral}\n                onFocus={handleFocus}\n                style={{ color: 'gray' }}\n              />\n            )}\n            name=\"referralCode\"\n          />\n          <>\n            <Spacer height={8} />\n            <Button\n              primary\n              size=\"full\"\n              type=\"submit\"\n              disabled={!recaptchaToken || !isValid || loading}\n              loading={loading}\n              data-testid=\"submitBtn\"\n            >\n              {t('noumena.signup.title.v2')}\n            </Button>\n          </>\n          <S.Note>\n            {t('noumena.signup.login.v2')}\n            <S.LoginLink onClick={navigateTo.login}>Log in</S.LoginLink>\n          </S.Note>\n        </S.FormWrapper>\n      </form>\n      <S.FooterNote>\n        {t('noumena.signup.term.and.condition.v2')}\n        <S.LoginLink onClick={navigateTo.termsOfUse}>Terms of Use</S.LoginLink>\n      </S.FooterNote>\n      <Spacer height={16} />\n      <S.FooterNote>\n        {t('noumena.signup.google.privacy.policy.v2')}\n      </S.FooterNote>\n    </S.Container>\n  );\n};\n","import { useState } from 'react';\nimport { t } from 'i18next';\nimport { Chips } from '@/components/Chips/Chips';\nimport { type UserOutput } from '@/apollo/generated/types';\nimport { useLaunchDarkly } from '@/hooks';\nimport StepTwo from './Steps/StepTwo';\nimport StepThree from './Steps/StepThree';\nimport StepFour from './Steps/StepFour';\nimport { SignUpForm } from './Steps/StepOne';\nimport { AppStyled, StyledStep } from './styles';\nimport { type SignUpValues } from './types';\nimport { OnboardingScreenLayout } from './OnboardingScreenLayout';\nimport { SignUpFormV2 } from './Steps/StepOne/SignUpFormV2';\n\nconst SignUp = () => {\n  const [step, setStep] = useState(1);\n  const [userOutput, setUserOutput] = useState<UserOutput>();\n  const {\n    flags: { newSignUp },\n  } = useLaunchDarkly();\n  const [userInfo, setUserInfo] = useState<SignUpValues>({\n    email: '',\n    firstName: '',\n    lastName: '',\n    profile: {\n      socialLinks: [],\n    },\n  });\n\n  const getSignUpForm = () => {\n    switch (step) {\n      case 1:\n        return newSignUp ? <SignUpFormV2 /> : <SignUpForm />;\n      case 2:\n        return (\n          <StepTwo\n            setUserInfo={setUserInfo}\n            userInfo={userInfo}\n            setStep={setStep}\n          />\n        );\n      case 3:\n        return (\n          <StepThree\n            setStep={setStep}\n            setUserInfo={setUserInfo}\n            userInfo={userInfo}\n            setUserOutput={setUserOutput}\n          />\n        );\n      case 4:\n        return <StepFour userInfo={userInfo} userOutput={userOutput} />;\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <OnboardingScreenLayout>\n      <AppStyled data-testid=\"SIGN_UP\" className=\"App\" fullWidth={newSignUp}>\n        {step < 3 && !newSignUp && (\n          <StyledStep>\n            <Chips primary size=\"medium\">\n              {t('noumena.sign_up.stepper', { currentStep: step, allSteps: 2 })}\n            </Chips>\n          </StyledStep>\n        )}\n        {getSignUpForm()}\n      </AppStyled>\n    </OnboardingScreenLayout>\n  );\n};\n\nexport default SignUp;\n"],"names":["FormStyled","styled","div","CheckboxStyle","p","checked","FullWidthStack","Stack","Form","form","useSignUpForm","userInfo","onSetStep","onChangeUserInfo","hasRefCode","loading","setLoading","useState","formSchema","useMemo","schema","firstName","yup","trim","required","t","max","min","test","value","length","TWO_LETTERED_NAME_REGEX","matches","NAME_REGEX","lastName","referralCode","REFFERAL_CODE_REGEX","control","setError","setValue","trigger","handleSubmit","formState","errors","isValid","useForm","resolver","yupResolver","mode","reValidateMode","defaultValues","useEffect","onSubmit","useCallback","data","resp","IdentityServices","serviceValidateReferralCode","errorMessage","countExceed","errorStatus","Error","Errors","BLOCKED_IP","type","message","handleBackendError","shouldFocus","omit","SignUpForm","setStep","setUserInfo","hasReferralCode","setHasReferralCode","searchParams","useSearchParams","referralCodeFromParam","get","replace","jsxs","jsx","Spacer","TSpan","Controller","field","onChange","TextField","e","target","Fragment","Button","Icon","minWidth","Screen","SignUpStepTwo","setUserOutput","addToast","useToast","useTranslation","isURL","setIsURL","register","clearErrors","getValues","additionalInfo","profile","validateURL","url","index","isValidURL","currentData","socialLinks","filter","link","map","name","toLowerCase","payload","serviceSignup","setLocalStorage","accessLocalStorage","ACCESS_TOKEN","token","accessToken","REFRESH_TOKEN","refreshToken","user","fields","profileLinksFields","append","profileLinksAppend","remove","profileLinksRemove","useFieldArray","IconWrapper","Point","pattern","undefined","id","AddButtonStyle","TextArea","maxLength","SignUpStepThree","PageStyled","ButtonContainer","SignFour","userOutput","signUp","useAuth","buttonHandler","Container","attrs","align","justify","fullWidth","vertical","LogoWrapper","Header","gap","FormWrapper","PasswordHelperWrapper","PasswordCheck","font","successful","css","CheckIconStyled","PasswordContainer","TooltipContainer","AuthenticationWrapper","LoginLink","colorToken","SignupTitle","SignupSubTitle","Note","FooterNote","schemaObj","email","isValidEmail","password","PASSWORD_REGEX","string","when","code","notRequired","signUpFormSchema","object","shape","reset","watch","getPasswordInitialState","hasLowerCaseCharacter","hasNumber","hasSixCharacters","hasSpecialCharacter","hasUpperCaseCharacter","useSignupFormV2","navigate","useNavigate","recaptchaToken","showBlockedErrorMsg","signUpEmail","isSigningUpFromNextApp","isSignUpInitiatedFromNextApp","useInitialSignUp","showPassword","setShowPassword","passwordFieldFocused","setPasswordFieldFocused","passwordErrorStates","setPasswordErrorStates","subscribe","useRef","isValidReferral","setIsValidReferral","validateContact","utmParams","params","forEach","v","k","startsWith","handleFocus","event","EVENTS","ONBOARDING","INITIAL_SIGNUP_SCREEN","EMAIL","FIRST_NAME","LAST_NAME","REFERRAL_CODE","trackEvent","toggleVisibility","previous","analyzePassword","NUMBER_REGEX","SPECIAL_CHARACTER_REGEX","LOWERCASE_REGEX","UPPERCASE_REGEX","togglePasswordFiledFocus","login","ROUTES","LOGIN","termsOfUse","open","LINKS","TERMS_OF_USE","showHelper","setFormError","error","checkReferralCode","checkEmail","enteredEmail","checkReferralCodeFromParams","submit","val","previousInfo","SUBMIT","Email","Phone","phone","FirstName","LastName","DateOfBirth","dob","ReferralCode","SIGN_UP_OTP","current","navigateTo","CheckIcon","PasswordHelper","passwordStates","isPasswordWeak","Object","values","some","state","SocialAuthentication","label","rest","SignUpFormV2","S.Container","S.LogoWrapper","Logo","S.Header","S.SignupTitle","S.SignupSubTitle","S.FormWrapper","S.AuthenticationWrapper","S.PasswordContainer","S.TooltipContainer","color","S.Note","S.LoginLink","S.FooterNote","SignUp","step","flags","newSignUp","useLaunchDarkly","getSignUpForm","StepTwo","StepThree","StepFour","OnboardingScreenLayout","AppStyled","StyledStep","Chips","currentStep","allSteps"],"mappings":"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"}