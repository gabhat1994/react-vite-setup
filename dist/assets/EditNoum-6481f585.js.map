{"version":3,"file":"EditNoum-6481f585.js","sources":["../../src/features/noums/hooks/spaceQuery/useRestoreSpaceHelper.ts","../../src/features/noums/hooks/spaceQuery/useSaveAsDraftSpaceHelper.ts","../../src/features/noums/hooks/spaceQuery/useAddNoumLayoutToolHelper.ts","../../src/features/noums/hooks/spaceQuery/useMoveToolToNoumLayoutColumnHelper.ts","../../src/features/noums/hooks/spaceQuery/useSectionPositionHelper.ts","../../src/features/noums/hooks/spaceQuery/useRemoveToolFromNoumLayoutHelper.ts","../../src/features/noums/hooks/spaceQuery/useUpdateNoumSectionLayoutHelper.ts","../../src/features/noums/hooks/spaceQuery/useNoumLayoutAsDraftHelper.ts","../../src/features/noums/hooks/spaceQuery/useCancelNoumLayoutChangesHelper.ts","../../src/features/noums/hooks/noums/projectNoum/useUpdateConnectionPermissionHelper.tsx","../../src/features/money/hooks/useCheckChamberCanBePublished.ts","../../src/screens/Chamber/components/AddSection/AddSectionComponent.tsx","../../src/features/noums/components/NoumEditor2.0/Toolbox/ToolbooxItem.tsx","../../src/features/noums/components/NoumEditor2.0/Toolbox/DisbleDToolTipSubWallet.tsx","../../src/features/noums/components/NoumEditor2.0/Toolbox/ToolboxTabContent.tsx","../../src/features/noums/components/NoumEditor2.0/Toolbox/Toolbox.tsx","../../src/features/noums/components/NoumEditor2.0/Toolbox/AddToolPopover.tsx","../../src/screens/Chamber/components/modals/ChamberArchive/ChamberArchiveModal.tsx","../../src/screens/Chamber/components/modals/ChamberEditMode/Modal.tsx","../../src/screens/Chamber/components/modals/ChamberPermission/styles.tsx","../../src/screens/Chamber/components/modals/ChamberPermission/ChangePermissionsConfirmationModal.tsx","../../src/screens/Chamber/components/modals/ChamberPermission/data.ts","../../src/screens/Chamber/components/modals/ChamberPermission/ChamberConnectedUser.tsx","../../src/screens/Chamber/components/modals/ChamberPermission/ChamberConnectedUsers.tsx","../../src/screens/Chamber/components/modals/ChamberPermission/ChamberPermissionModal.tsx","../../src/screens/Chamber/components/modals/ChamberBroadcast/styles.tsx","../../src/screens/Chamber/components/modals/ChamberBroadcast/CreateBroadcast/data.ts","../../src/screens/Chamber/components/modals/ChamberBroadcast/CreateBroadcast/CreateBroadcastModal.tsx","../../src/features/noumCampaigns/components/Campaign/styles.tsx","../../src/features/noumCampaigns/components/Campaign/types.ts","../../src/features/noumCampaigns/components/Campaign/data.ts","../../src/features/noumCampaigns/components/Campaign/Campaign.tsx","../../src/screens/Chamber/components/modals/ChamberBroadcast/DeleteBroadcast/DeleteBroadcastModal.tsx","../../src/screens/Chamber/components/modals/ChamberBroadcast/ViewBroadcast/ViewBroadcastModal.tsx","../../src/screens/Chamber/components/modals/LinkNoum/UnlinkOnArchiveNoumModal/UnlinkOnArchiveNoumModal.tsx","../../src/screens/Chamber/components/NoumenaCopilot/styles.ts","../../src/screens/Chamber/components/NoumenaCopilot/index.tsx","../../src/screens/Chamber/components/ThemePanel/styles.ts","../../src/assets/images/check-m.svg","../../src/screens/Chamber/components/ThemePanel/ThemeItem.tsx","../../src/screens/Chamber/components/ThemePanel/ThemePicker.tsx","../../src/screens/Chamber/components/ThemePanel/types.ts","../../src/screens/Chamber/components/ThemePanel/FontPicker.tsx","../../src/screens/Chamber/components/ThemePanel/RevertModal.tsx","../../src/screens/Chamber/components/ThemePanel/index.tsx","../../src/screens/Chamber/components/modals/ChamberPublish/styles.ts","../../src/screens/Chamber/components/modals/ChamberPublish/Modal.tsx","../../src/screens/Chamber/components/modals/ChamberSaveAsDraft/Modal.tsx","../../src/screens/Chamber/components/modals/ChamberDiscardChange/Modal.tsx","../../src/screens/Chamber/components/modals/ChamberActionModal/Restore/ChamberRestoreModal.tsx","../../src/screens/Chamber/components/modals/ChamberPublishVisibilityInfo/index.tsx","../../src/screens/Chamber/EditChamber/EditHeader.tsx","../../src/screens/Chamber/EditChamber/EditChamber.tsx","../../src/screens/Chamber/components/RightPanel/elements/NoumEditOptions/NoumEditOptionsNew.tsx","../../src/screens/Chamber/EditChamber/EditHeaderNew.tsx","../../src/screens/Chamber/components/DeleteModal/DeleteModal.tsx","../../src/components/Switch/styles.ts","../../src/components/Switch/index.tsx","../../src/screens/Chamber/components/NoumSidePanel/constants.ts","../../src/screens/Chamber/components/NoumSidePanel/styles.ts","../../src/screens/Chamber/components/NoumSidePanel/ColumnOptions.tsx","../../src/screens/Chamber/components/NoumSidePanel/ColumnPicker.tsx","../../src/screens/Chamber/components/NoumSidePanel/NoumEditSection.tsx","../../src/components/Slider/styles.ts","../../src/components/Slider/Slider.tsx","../../src/screens/Chamber/components/NoumSidePanel/EditBlockWrapper.tsx","../../src/screens/Chamber/components/NoumSidePanel/UploadFile/styles.ts","../../src/screens/Chamber/components/NoumSidePanel/UploadFile/UploadFileButton.tsx","../../src/screens/Chamber/components/NoumSidePanel/UploadFile/MediaPreview.tsx","../../src/screens/Chamber/components/NoumSidePanel/UploadFile/index.tsx","../../src/screens/Chamber/components/NoumSidePanel/EditTool.tsx","../../src/screens/Chamber/components/NoumSidePanel/index.tsx","../../src/screens/Chamber/components/AddSection/AddSectionPopover.tsx","../../src/screens/Chamber/EditChamber/mockdata.ts","../../src/screens/Chamber/components/NoumContentElement/styles.tsx","../../src/screens/Chamber/components/NoumContentElement/NoumContentElement.tsx","../../src/hooks/useWindowMoueMove.ts","../../src/screens/Chamber/components/SectionElementRearrange/DragableElement.tsx","../../src/screens/Chamber/components/SectionElementRearrange/DragableElementArea.tsx","../../src/screens/Chamber/components/SectionElementRearrange/types.ts","../../src/screens/Chamber/components/SectionElementRearrange/DroppableElementArea.tsx","../../src/screens/Chamber/components/NoumSections/NoumSections.tsx","../../src/screens/Chamber/components/SectionElementRearrange/DragableSection.tsx","../../src/screens/Chamber/components/SectionElementRearrange/DragableSectionArea.tsx","../../src/screens/Chamber/components/SectionElementRearrange/DroppableSectionArea.tsx","../../src/screens/Chamber/components/SectionElementRearrange/Rearrange.tsx","../../src/screens/Chamber/EditChamber/EditNoumBody.tsx","../../src/screens/Chamber/EditChamber/EditNoum.tsx"],"sourcesContent":["import { useCallback } from 'react';\nimport * as Sentry from '@sentry/react';\nimport { t } from 'i18next';\nimport { useRemoveUnsavedAndDraftedDataMutation } from '@/apollo/graphql';\nimport { useToast } from '@/hooks/toast';\nimport { getTimeStampForDisplaying } from '@/utils/getTimeStampForDisplaying';\n\nexport function useRestoreSpaceHelper() {\n  const { addToast } = useToast();\n\n  const [removeUnsavedAndDraftedDataMutation, { loading }] =\n    useRemoveUnsavedAndDraftedDataMutation();\n\n  const restoreSpaceHelper = useCallback(\n    async (spaceId: string) => {\n      let isSuccess;\n      try {\n        const { data } = await removeUnsavedAndDraftedDataMutation({\n          variables: {\n            spaceId,\n          },\n        });\n        addToast(\n          'success',\n          'icon',\n          t(`noumena.container.chamber.restore.success`, {\n            date: getTimeStampForDisplaying(\n              data?.removeUnsavedAndDraftedData?.publishedAt,\n            ),\n          }),\n        );\n        isSuccess = true;\n      } catch (error) {\n        let message = 'Unknown';\n        if (error instanceof Error) {\n          message = error.message;\n        }\n        addToast('error', 'none', message);\n        Sentry.captureException(new Error(message), {\n          tags: {\n            section: 'removeUnsavedAndDraftedDataMutation',\n          },\n        });\n        isSuccess = false;\n      }\n\n      return isSuccess;\n    },\n    [addToast, removeUnsavedAndDraftedDataMutation],\n  );\n\n  return {\n    loading,\n    restoreSpaceHelper,\n  };\n}\n\nexport default useRestoreSpaceHelper;\n","import { ElementStatusEnum, SpaceStatusEnum } from '@/apollo/generated/types';\nimport {\n  type SpaceOutputFragment,\n  useChangeProjectChamberStatusMutation,\n  usePublishElementStateMutation,\n} from '@/apollo/graphql';\nimport { SpaceUtils } from '@/utils/space';\nimport * as Sentry from '@sentry/react';\nimport { t } from 'i18next';\nimport { useCallback } from 'react';\nimport { useToast } from '@/hooks/toast';\n\nexport function useSaveAsDraftSpaceHelper() {\n  const { addToast } = useToast();\n\n  const [publishElementState, { loading }] = usePublishElementStateMutation();\n  const [changeProjectChamberStatus, { loading: isLoading }] =\n    useChangeProjectChamberStatusMutation();\n  const saveAsDraftSpaceHelper = useCallback(\n    async (spaceId: string, space?: SpaceOutputFragment) => {\n      let isSuccess;\n      try {\n        await publishElementState({\n          variables: {\n            spaceId,\n            prevStates: [ElementStatusEnum.Unsaved],\n            currentState: ElementStatusEnum.Draft,\n          },\n        });\n        if (space && SpaceUtils.hasUnsavedSetting(space))\n          await changeProjectChamberStatus({\n            variables: { spaceId, status: SpaceStatusEnum.Draft },\n          });\n        addToast(\n          'success',\n          'icon',\n          t(`noumena.container.chamber_save_as_draft.success`),\n        );\n        isSuccess = true;\n      } catch (error) {\n        let message = 'Unknown';\n        if (error instanceof Error) {\n          message = error.message;\n        }\n        addToast('error', 'none', message);\n        if (\n          message !== t('noumena.container.chamber_business_brief_error') &&\n          message !== t('noumena.container.chamber_experience_error')\n        ) {\n          Sentry.captureException(new Error(message), {\n            tags: {\n              section: 'publishElementStateMutation',\n            },\n          });\n        }\n        isSuccess = false;\n      }\n\n      return isSuccess;\n    },\n    [addToast, changeProjectChamberStatus, publishElementState],\n  );\n\n  return {\n    loading: loading || isLoading,\n    saveAsDraftSpaceHelper,\n  };\n}\n\nexport default useSaveAsDraftSpaceHelper;\n","import { useCallback } from 'react';\nimport * as Sentry from '@sentry/react';\nimport { cloneDeep } from 'lodash';\nimport {\n  GetSpaceByIdDocument,\n  type GetSpaceByIdQuery,\n  type GetSpaceByIdQueryVariables,\n  useAddNoumLayoutToolMutation,\n} from '@/apollo/graphql';\nimport {\n  type AddNoumLayoutToolInput,\n  type ElementOutput,\n  NoumLayoutStatusFilter,\n} from '@/apollo/generated/types';\nimport { useToast } from '@/hooks/toast';\nimport {\n  getColumn,\n  getSection,\n} from '@/screens/Chamber/components/SectionElementRearrange/rearrangeHelper';\n\nexport function useAddNoumLayoutToolHelper() {\n  const { addToast } = useToast();\n  const [addNoumLayoutTool, { loading }] = useAddNoumLayoutToolMutation();\n\n  const addNoumLayoutToolHelper = useCallback(\n    async (\n      spaceId: string,\n      input: AddNoumLayoutToolInput,\n      baseElementId?: string,\n      newPosition?: number,\n    ): Promise<ElementOutput | undefined> => {\n      let newElement;\n      try {\n        await addNoumLayoutTool({\n          variables: { input },\n          update: (cache, { data }) => {\n            if (!data || !data.addNoumLayoutTool) return;\n\n            const variables: GetSpaceByIdQueryVariables = {\n              id: spaceId,\n              editorV2Enabled: true,\n              status: NoumLayoutStatusFilter.Unpublished,\n            };\n\n            const cacheResult = cache.readQuery<GetSpaceByIdQuery>({\n              query: GetSpaceByIdDocument,\n              variables,\n            });\n\n            if (!cacheResult) return;\n\n            const { getSpaceById: spaceData } = cacheResult;\n\n            const cloneSpaceData = cloneDeep(spaceData); // spaceData is the read only object\n\n            if (!cloneSpaceData?.layout) return;\n            const {\n              section: updatedSection,\n              sectionIndex: updatedSectionIndex,\n            } = getSection(\n              input.columnId,\n              cloneSpaceData?.layout?.sections || [],\n            );\n            const { column: updatedColumn, columnIndex } = getColumn(\n              input.columnId,\n              updatedSection?.columns || [],\n            );\n            if (!updatedSection || !updatedColumn) return;\n            if (baseElementId) {\n              const elementIndex = updatedColumn.tools.findIndex(\n                (element) => element._id === baseElementId,\n              );\n              const baseElement = updatedColumn.tools[elementIndex];\n              if (\n                baseElement?.position &&\n                newPosition &&\n                baseElement.position < newPosition\n              )\n                updatedColumn.tools.splice(elementIndex + 1, 0, {\n                  ...data.addNoumLayoutTool,\n                  position: newPosition,\n                });\n              else {\n                updatedColumn.tools.splice(elementIndex, 0, {\n                  ...data.addNoumLayoutTool,\n                  position: newPosition,\n                });\n              }\n            } else updatedColumn.tools.push(data.addNoumLayoutTool);\n            updatedSection.columns[columnIndex] = updatedColumn;\n            cloneSpaceData.layout.sections[updatedSectionIndex] =\n              updatedSection;\n\n            cache.writeQuery({\n              query: GetSpaceByIdDocument,\n              variables,\n              data: {\n                getSpaceById: cloneSpaceData,\n              },\n            });\n\n            newElement = data.addNoumLayoutTool;\n          },\n        });\n      } catch (error) {\n        let message = 'Unknown';\n        if (error instanceof Error) {\n          message = error.message;\n        }\n        addToast('error', 'none', message, false);\n        Sentry.captureException(new Error(message), {\n          tags: {\n            section: 'addElementMutation',\n          },\n        });\n      }\n\n      return newElement;\n    },\n    [addNoumLayoutTool, addToast],\n  );\n\n  return {\n    loading,\n    addNoumLayoutToolHelper,\n  };\n}\n\nexport default useAddNoumLayoutToolHelper;\n","import { useCallback } from 'react';\nimport * as Sentry from '@sentry/react';\nimport {\n  NoumLayoutStatusFilter,\n  type MoveToolToNoumLayoutColumnInput,\n  NoumLayoutStatus,\n  type ElementOutput,\n} from '@/apollo/generated/types';\nimport {\n  GetSpaceByIdDocument,\n  type GetSpaceByIdQuery,\n  type GetSpaceByIdQueryVariables,\n  useMoveToolToNoumLayoutColumnMutation,\n} from '@/apollo/graphql';\nimport { useToast } from '@/hooks/toast';\nimport { cloneDeep } from 'lodash';\nimport {\n  getColumn,\n  getSection,\n} from '@/screens/Chamber/components/SectionElementRearrange/rearrangeHelper';\nimport { type DraggableLocation } from 'react-beautiful-dnd';\nimport { ElementUtils } from '@/utils/element';\n\nexport function useMoveToolToNoumLayoutColumnHelper() {\n  const { addToast } = useToast();\n\n  const [moveToolToNoumLayoutColumn, { loading }] =\n    useMoveToolToNoumLayoutColumnMutation();\n\n  const moveToolToNoumLayoutColumnHelper = useCallback(\n    async (\n      input: MoveToolToNoumLayoutColumnInput,\n      spaceId: string,\n      source: DraggableLocation,\n      dest: DraggableLocation,\n    ) => {\n      let isSuccess;\n      try {\n        isSuccess = await moveToolToNoumLayoutColumn({\n          variables: { input },\n          update: (cache, { data }) => {\n            if (!data || !data.moveToolToNoumLayoutColumn) return;\n\n            const variables: GetSpaceByIdQueryVariables = {\n              id: spaceId,\n              editorV2Enabled: true,\n              status: NoumLayoutStatusFilter.Unpublished,\n            };\n\n            const cacheResult = cache.readQuery<GetSpaceByIdQuery>({\n              query: GetSpaceByIdDocument,\n              variables,\n            });\n\n            if (!cacheResult) return;\n\n            const { getSpaceById: spaceData } = cacheResult;\n\n            if (!spaceData) return;\n\n            const cloneSpaceData = cloneDeep(spaceData);\n            if (!cloneSpaceData?.layout) return;\n            cloneSpaceData.layout.status = NoumLayoutStatus.Unsaved;\n            const { section: sourceSection } = getSection(\n              source.droppableId,\n              cloneSpaceData?.layout.sections,\n            );\n            const { column: sourceColumn } = getColumn(\n              source.droppableId,\n              sourceSection?.columns,\n            );\n            if (!sourceColumn) return;\n            const elementIndex = sourceColumn.tools.findIndex(\n              (element) => element._id === input.toolId,\n            );\n            const [tool] = sourceColumn.tools.splice(elementIndex, 1);\n            const { section: destSection, sectionIndex: destSectionIndex } =\n              getSection(dest.droppableId, cloneSpaceData?.layout.sections);\n            const { column: destColumn, columnIndex: destColumnIndex } =\n              getColumn(dest.droppableId, destSection?.columns);\n            if (!destColumn?.tools) return;\n\n            destColumn?.tools.sort(ElementUtils.sortPublished);\n            const sortedPosition = destColumn.tools[dest.index]?.position || 0;\n            destColumn?.tools.splice(dest.index, 0, {\n              ...tool,\n              position: sortedPosition,\n            });\n\n            if (!destColumn || !destSection) return;\n            destColumn.tools.reduce((acc: ElementOutput[], obj) => {\n              if (obj.position && sortedPosition) {\n                if (obj.position >= sortedPosition && tool._id !== obj._id) {\n                  const cloneObj = obj;\n                  if (cloneObj.position) cloneObj.position += 1;\n                }\n              }\n              acc.push(obj);\n              return acc;\n            }, []);\n            destSection.columns[destColumnIndex] = destColumn;\n            cloneSpaceData.layout.sections[destSectionIndex] = destSection;\n            cache.writeQuery({\n              query: GetSpaceByIdDocument,\n              variables,\n              data: {\n                getSpaceById: cloneSpaceData,\n              },\n            });\n          },\n        });\n      } catch (error) {\n        let message = 'Unknown';\n        if (error instanceof Error) {\n          message = error.message;\n        }\n        addToast('error', 'none', message);\n        Sentry.captureException(new Error(message), {\n          tags: {\n            section: 'moveToolToNoumLayoutColumnMutation',\n          },\n        });\n\n        isSuccess = false;\n      }\n\n      return isSuccess;\n    },\n    [addToast, moveToolToNoumLayoutColumn],\n  );\n\n  return {\n    loading,\n    moveToolToNoumLayoutColumnHelper,\n  };\n}\n\nexport default useMoveToolToNoumLayoutColumnHelper;\n","import { useCallback } from 'react';\nimport {\n  GetSpaceByIdDocument,\n  type GetSpaceByIdQuery,\n  type GetSpaceByIdQueryVariables,\n  useRearrangeSectionInNoumLayoutMutation,\n} from '@/apollo/graphql';\nimport { cloneDeep, remove as _remove } from 'lodash';\n\nimport {\n  NoumLayoutStatus,\n  NoumLayoutStatusFilter,\n  type RearrangeSectionInNoumLayoutInput,\n} from '@/apollo/generated/types';\nimport { useToast } from '@/hooks/toast';\nimport { ElementUtils } from '@/utils/element';\n\nexport function useSectionPositionHelper() {\n  const { addToast } = useToast();\n\n  const [updateSectionPosition, { loading }] =\n    useRearrangeSectionInNoumLayoutMutation();\n\n  const updateSectionPositionHelper = useCallback(\n    async (\n      input: RearrangeSectionInNoumLayoutInput,\n      spaceId: string,\n      sourceElementIndex: number,\n      destElementIndex: number,\n    ) => {\n      let isSuccess;\n      try {\n        await updateSectionPosition({\n          variables: { input },\n          update: (cache, { data }) => {\n            if (!data || !data.rearrangeSectionInNoumLayout) return;\n\n            const variables: GetSpaceByIdQueryVariables = {\n              id: spaceId,\n              editorV2Enabled: true,\n              status: NoumLayoutStatusFilter.Unpublished,\n            };\n\n            const cacheResult = cache.readQuery<GetSpaceByIdQuery>({\n              query: GetSpaceByIdDocument,\n              variables,\n            });\n\n            if (!cacheResult) return;\n\n            const { getSpaceById: spaceData } = cacheResult;\n\n            const cloneSpaceData = cloneDeep(spaceData);\n            if (!cloneSpaceData?.layout) return;\n            cloneSpaceData.layout.sections = _remove(\n              cloneSpaceData?.layout.sections,\n              (el) => el.visible,\n            );\n            cloneSpaceData?.layout?.sections.sort(\n              ElementUtils.sortSectionUnPublished,\n            );\n            const sectionSourcePosition =\n              cloneSpaceData.layout.sections[sourceElementIndex].position;\n            cloneSpaceData.layout.sections[sourceElementIndex].position =\n              cloneSpaceData.layout.sections[destElementIndex].position;\n            cloneSpaceData.layout.sections[destElementIndex].position =\n              sectionSourcePosition;\n\n            cloneSpaceData.layout.status = NoumLayoutStatus.Unsaved;\n            cache.writeQuery({\n              query: GetSpaceByIdDocument,\n              variables,\n              data: {\n                getSpaceById: cloneSpaceData,\n              },\n            });\n          },\n        });\n\n        isSuccess = true;\n      } catch (error) {\n        let message = 'Unknown';\n        if (error instanceof Error) {\n          message = error.message;\n        }\n        addToast('error', 'none', message);\n        isSuccess = false;\n      }\n\n      return isSuccess;\n    },\n    [addToast, updateSectionPosition],\n  );\n\n  return {\n    loading,\n    updateSectionPositionHelper,\n  };\n}\n\nexport default useSectionPositionHelper;\n","import { useCallback } from 'react';\nimport * as Sentry from '@sentry/react';\nimport { t } from 'i18next';\nimport {\n  GetSpaceByIdDocument,\n  type GetSpaceByIdQuery,\n  type GetSpaceByIdQueryVariables,\n  useRemoveToolFromNoumLayoutMutation,\n} from '@/apollo/graphql';\nimport { useToast } from '@/hooks/toast';\nimport {\n  NoumLayoutStatus,\n  NoumLayoutStatusFilter,\n} from '@/apollo/generated/types';\nimport { cloneDeep, remove as _remove } from 'lodash';\nimport {\n  getColumn,\n  getColumnId,\n  getSection,\n} from '@/screens/Chamber/components/SectionElementRearrange/rearrangeHelper';\n\nexport function useRemoveToolFromNoumLayoutHelper() {\n  const { addToast } = useToast();\n  const [removeToolFromNoumLayout, { loading }] =\n    useRemoveToolFromNoumLayoutMutation();\n\n  const removeToolFromNoumLayoutHelper = useCallback(\n    async (toolId: string, spaceId: string) => {\n      let isSuccess;\n      try {\n        await removeToolFromNoumLayout({\n          variables: { id: toolId },\n          update: (cache, { data }) => {\n            if (!data || !data.removeToolFromNoumLayout) return;\n\n            const variables: GetSpaceByIdQueryVariables = {\n              id: spaceId,\n              editorV2Enabled: true,\n              status: NoumLayoutStatusFilter.Unpublished,\n            };\n\n            const cacheResult = cache.readQuery<GetSpaceByIdQuery>({\n              query: GetSpaceByIdDocument,\n              variables,\n            });\n\n            if (!cacheResult) return;\n\n            const { getSpaceById: spaceData } = cacheResult;\n\n            if (!spaceData) return;\n\n            const cloneSpaceData = cloneDeep(spaceData);\n            if (!cloneSpaceData?.layout) return;\n            cloneSpaceData.layout.status = NoumLayoutStatus.Unsaved;\n            const columnId = getColumnId(\n              toolId,\n              cloneSpaceData?.layout?.sections || [],\n            );\n            if (!columnId) return;\n\n            const {\n              section: updatedSection,\n              sectionIndex: updatedSectionIndex,\n            } = getSection(columnId, cloneSpaceData?.layout?.sections || []);\n            const { column: updatedColumn, columnIndex } = getColumn(\n              columnId,\n              updatedSection?.columns || [],\n            );\n            if (!updatedSection || !updatedColumn) return;\n\n            updatedColumn.tools = _remove(\n              updatedColumn.tools,\n              (el) => el?._id !== toolId,\n            );\n\n            updatedSection.columns[columnIndex] = updatedColumn;\n            cloneSpaceData.layout.sections[updatedSectionIndex] =\n              updatedSection;\n\n            cache.writeQuery({\n              query: GetSpaceByIdDocument,\n              variables,\n              data: {\n                getSpaceById: cloneSpaceData,\n              },\n            });\n          },\n        });\n\n        addToast('success', 'none', t(`noumena.container.tool_delete.success`));\n\n        isSuccess = true;\n      } catch (error) {\n        let message = 'Unknown';\n        if (error instanceof Error) {\n          message = error.message;\n        }\n\n        Sentry.captureException(new Error(message), {\n          tags: {\n            section: 'removeToolFromNoumLayoutMutation',\n          },\n        });\n\n        isSuccess = false;\n      }\n\n      return isSuccess;\n    },\n    [addToast, removeToolFromNoumLayout],\n  );\n\n  return {\n    loading,\n    removeToolFromNoumLayoutHelper,\n  };\n}\n\nexport default useRemoveToolFromNoumLayoutHelper;\n","import { useCallback } from 'react';\nimport * as Sentry from '@sentry/react';\nimport { cloneDeep } from 'lodash';\nimport {\n  GetSpaceByIdDocument,\n  type GetSpaceByIdQuery,\n  useUpdateNoumLayoutSectionMutation,\n  type GetSpaceByIdQueryVariables,\n} from '@/apollo/graphql';\nimport {\n  NoumLayoutStatusFilter,\n  type UpdateNoumLayoutSectionInput,\n} from '@/apollo/generated/types';\nimport { useToast } from '@/hooks/toast';\n\nexport function useUpdateNoumSectionHelper() {\n  const { addToast } = useToast();\n\n  const [updateSectionLayout, { loading }] =\n    useUpdateNoumLayoutSectionMutation();\n\n  const updateNoumSectionHelper = useCallback(\n    async (spaceId: string, input: UpdateNoumLayoutSectionInput) => {\n      let isSuccess;\n\n      try {\n        await updateSectionLayout({\n          variables: { input },\n          update: (cache, { data }) => {\n            if (!data || !data.updateNoumLayoutSection) return;\n\n            const variables: GetSpaceByIdQueryVariables = {\n              id: spaceId,\n              editorV2Enabled: true,\n              status: NoumLayoutStatusFilter.Unpublished,\n            };\n\n            const cacheResult = cache.readQuery<GetSpaceByIdQuery>({\n              query: GetSpaceByIdDocument,\n              variables,\n            });\n\n            if (!cacheResult) return;\n\n            const { getSpaceById: spaceData } = cacheResult;\n\n            if (!spaceData) return;\n\n            const cloneSpaceData = cloneDeep(spaceData); // spaceData is the read only object\n\n            cache.writeQuery({\n              query: GetSpaceByIdDocument,\n              variables,\n              data: {\n                getSpaceById: cloneSpaceData,\n              },\n            });\n          },\n        });\n        isSuccess = true;\n      } catch (error) {\n        let message = 'Unknown';\n        if (error instanceof Error) {\n          message = error.message;\n        }\n        addToast('error', 'none', message);\n        Sentry.captureException(new Error(message), {\n          tags: {\n            section: 'updateNoumLayoutSectionMutation',\n          },\n        });\n\n        isSuccess = false;\n      }\n\n      return isSuccess;\n    },\n    [addToast, updateSectionLayout],\n  );\n  return {\n    loading,\n    updateNoumSectionHelper,\n  };\n}\n\nexport default useUpdateNoumSectionHelper;\n","import { useCallback } from 'react';\nimport * as Sentry from '@sentry/react';\nimport { useSaveNoumLayoutAsDraftMutation } from '@/apollo/graphql';\n\nexport function useNoumLayoutAsDraftHelper() {\n  const [noumLayoutAsDraft, { loading }] = useSaveNoumLayoutAsDraftMutation();\n\n  const noumLayoutAsDraftHelper = useCallback(\n    async (spaceId: string) => {\n      let isSuccess;\n      try {\n        await noumLayoutAsDraft({\n          variables: {\n            ID: spaceId,\n          },\n        });\n\n        isSuccess = true;\n      } catch (error) {\n        let message = 'Unknown';\n        if (error instanceof Error) {\n          message = error.message;\n        }\n\n        Sentry.captureException(new Error(message), {\n          tags: {\n            section: 'noumLayoutAsDraftMutation',\n          },\n        });\n        isSuccess = false;\n      }\n\n      return isSuccess;\n    },\n    [noumLayoutAsDraft],\n  );\n\n  return {\n    loading,\n    noumLayoutAsDraftHelper,\n  };\n}\n\nexport default useNoumLayoutAsDraftHelper;\n","import { useCallback } from 'react';\nimport * as Sentry from '@sentry/react';\nimport { useCancelNoumLayoutChangesMutation } from '@/apollo/graphql';\n\nexport function useCancelNoumLayoutChangesHelper() {\n  const [cancelNoumLayoutChanges, { loading }] =\n    useCancelNoumLayoutChangesMutation();\n\n  const cancelNoumLayoutChangesHelper = useCallback(\n    async (spaceId: string) => {\n      let isSuccess;\n      try {\n        await cancelNoumLayoutChanges({\n          variables: {\n            ID: spaceId,\n          },\n        });\n\n        isSuccess = true;\n      } catch (error) {\n        let message = 'Unknown';\n        if (error instanceof Error) {\n          message = error.message;\n        }\n\n        Sentry.captureException(new Error(message), {\n          tags: {\n            section: 'cancelNoumLayoutChangesMutation',\n          },\n        });\n        isSuccess = false;\n      }\n\n      return isSuccess;\n    },\n    [cancelNoumLayoutChanges],\n  );\n\n  return {\n    loading,\n    cancelNoumLayoutChangesHelper,\n  };\n}\n\nexport default useCancelNoumLayoutChangesHelper;\n","import { useCallback } from 'react';\nimport { t } from 'i18next';\nimport * as Sentry from '@sentry/react';\nimport { useToast } from '@/hooks/toast';\nimport { useUpdateConnectionPermissionMutation } from '@/apollo/graphql';\nimport { type ConnectionPermissionInput } from '@/apollo/generated/types';\n\nexport function useUpdateConnectionPermissionHelper() {\n  const { addToast } = useToast();\n\n  const handleError = useCallback(\n    (networkError: String | Error | null) => {\n      addToast(\n        'error',\n        'none',\n        `${t('noumena.toast_error.text')}: ${networkError}`,\n      );\n    },\n    [addToast],\n  );\n\n  const handleSuccess = useCallback(() => {\n    addToast(\n      'success',\n      'icon',\n      `${t('noumena.chamber_edit.permission.save_success_message')}`,\n    );\n  }, [addToast]);\n\n  const [updateConnectionPermission, { loading }] =\n    useUpdateConnectionPermissionMutation();\n\n  const updateConnectionPermissionHelper = useCallback(\n    async (input: ConnectionPermissionInput) => {\n      await updateConnectionPermission({\n        variables: { input },\n        onError: ({ networkError = null, graphQLErrors = [] }) => {\n          const [err] = graphQLErrors;\n          handleError(err?.message ?? networkError);\n          Sentry.captureException(new Error(err?.message ?? networkError), {\n            tags: {\n              section: 'updateConnectionPermissionMutation',\n            },\n          });\n        },\n        onCompleted: () => {\n          handleSuccess();\n        },\n      });\n    },\n    [updateConnectionPermission, handleError, handleSuccess],\n  );\n\n  return { loading, updateConnectionPermissionHelper };\n}\n\nexport default useUpdateConnectionPermissionHelper;\n","import { useCallback } from 'react';\nimport { t } from 'i18next';\nimport * as Sentry from '@sentry/react';\nimport { useLaunchDarkly } from '@/hooks/launchDarkly';\nimport { useToast } from '@/hooks/toast';\nimport { useGetNoumTransactionFeeDetailsLazyQuery } from '@/apollo/graphql';\nimport { Status_Noum } from '@/apollo/generated/types';\n\nexport function useCheckChamberCanBePublished() {\n  const { addToast } = useToast();\n  const { flags } = useLaunchDarkly();\n\n  const handleError = useCallback(\n    (networkError: String | Error | null) => {\n      addToast(\n        'error',\n        'none',\n        `${t('noumena.toast_error.text')}: ${networkError}`,\n      );\n    },\n    [addToast],\n  );\n\n  const handleSuspendedNoum = useCallback(\n    (status: string) => {\n      addToast('error', 'none', `This Noum is ${status} by Admin`);\n    },\n    [addToast],\n  );\n\n  const handleDeliquentNoum = useCallback(() => {\n    addToast(\n      'error',\n      'none',\n      `${t('noumena.money.myplans.handleExpiredNoum')}`,\n    );\n  }, [addToast]);\n\n  const [gqlGetNoumTransactionFeeDetails] =\n    useGetNoumTransactionFeeDetailsLazyQuery();\n\n  const checkChamberCanBePublished = useCallback(\n    async (\n      chamberId: string | undefined | null,\n      followRegularPublishFLow: Function,\n      setSetUpSlotForNoum: Function,\n      handleClosePublish: Function,\n    ) => {\n      if (flags.paymentSubscriptions && chamberId) {\n        await gqlGetNoumTransactionFeeDetails({\n          fetchPolicy: 'network-only',\n          variables: { noumDetailInput: { chamber_id: chamberId } },\n          onError: ({ networkError = null, graphQLErrors = [] }) => {\n            const [err] = graphQLErrors;\n            handleError(err?.message ?? networkError);\n            Sentry.captureException(new Error(err?.message ?? networkError), {\n              tags: {\n                section: 'gqlGetNoumTransactionFeeDetails',\n              },\n            });\n          },\n          onCompleted: (response) => {\n            switch (response?.getNoumTransactionFeeDetails[0]?.status) {\n              case Status_Noum.Suspended:\n                handleSuspendedNoum(\n                  response?.getNoumTransactionFeeDetails[0]?.status,\n                );\n                break;\n              case Status_Noum.Inactive:\n                handleSuspendedNoum(\n                  response?.getNoumTransactionFeeDetails[0]?.status,\n                );\n                break;\n              case Status_Noum.Active:\n                if (response?.getNoumTransactionFeeDetails[0]?.is_publishable) {\n                  followRegularPublishFLow();\n                } else {\n                  setSetUpSlotForNoum(true);\n                }\n                break;\n              case Status_Noum.Delinquent:\n                handleDeliquentNoum();\n                break;\n              case Status_Noum.Archived:\n                handleDeliquentNoum();\n                break;\n              default:\n                handleClosePublish();\n                setSetUpSlotForNoum(true);\n                break;\n            }\n          },\n        });\n      } else {\n        followRegularPublishFLow();\n      }\n    },\n    [\n      flags.paymentSubscriptions,\n      gqlGetNoumTransactionFeeDetails,\n      handleDeliquentNoum,\n      handleError,\n      handleSuspendedNoum,\n    ],\n  );\n\n  return { checkChamberCanBePublished };\n}\n\nexport default useCheckChamberCanBePublished;\n","import { t } from 'i18next';\nimport { type FC } from 'react';\nimport { Icon } from '@/components/Icon';\nimport { CenterIcon, AddSectionComponentWrapper } from './styles';\nimport { type AddSectionComponentProps } from './types';\n\nexport const AddSectionComponent: FC<AddSectionComponentProps> = ({\n  onClick,\n  iconSize = 16,\n}) => (\n  <AddSectionComponentWrapper\n    aria-label=\"add_content\"\n    data-title={t('noumena.noum_editor.add_section')}\n    onClick={(e) => (onClick ? onClick() : e.stopPropagation())}\n  >\n    <CenterIcon>\n      <Icon name=\"plus_icon\" size={iconSize} />\n    </CenterIcon>\n  </AddSectionComponentWrapper>\n);\n\nexport default AddSectionComponent;\n","import { t } from 'i18next';\nimport { Icon } from '@/components/Icon';\nimport { type ToolboxItemProps } from './types';\nimport {\n  ToolboxItemWrapper,\n  ToolboxItemTextContainer,\n  ToolboxItemText,\n  ToolTip,\n  ToolboxItemComingSoonText,\n} from './styles';\n\nconst ToolboxItem = ({\n  name,\n  size,\n  text,\n  isDisabled,\n  isComingSoon,\n  toolTipText,\n  onClick,\n  childIndex,\n}: ToolboxItemProps) => (\n  <ToolboxItemWrapper\n    disabled={isDisabled}\n    onClick={onClick}\n    data-testid={`ToolboxItemwrapper-${name}`}\n  >\n    {toolTipText && (\n      <ToolTip\n        childIndex={childIndex}\n        className=\"toolbox-tooltip\"\n        font=\"systemInfo-s\"\n        colorToken=\"--text-tooltip-neutral-alt-default\"\n      >\n        {toolTipText}\n      </ToolTip>\n    )}\n    <Icon\n      name={name}\n      size={size}\n      color={\n        isDisabled || Boolean(isComingSoon)\n          ? '--icon-button-neutral-disabled'\n          : '--icon-button-neutral-default'\n      }\n    />\n    <ToolboxItemTextContainer>\n      <ToolboxItemText\n        overflow=\"ellipsis\"\n        font=\"body-m\"\n        isDisabled={isDisabled || Boolean(isComingSoon)}\n      >\n        {text}\n      </ToolboxItemText>\n      {!!isComingSoon && (\n        <ToolboxItemComingSoonText\n          isDisabled={isDisabled || Boolean(isComingSoon)}\n        >\n          {t('noumena.comingVerySoon')}\n        </ToolboxItemComingSoonText>\n      )}\n    </ToolboxItemTextContainer>\n  </ToolboxItemWrapper>\n);\n\nexport default ToolboxItem;\n","import { type FC } from 'react';\nimport { t } from 'i18next';\nimport { TSpan } from '@/components/Typography';\nimport { SubWalletDisabledToolTip } from './styles';\n\nexport const DisbledToolTipSubWallet: FC = () => (\n  <SubWalletDisabledToolTip>\n    <TSpan font=\"footnote\" colorToken=\"--text-tooltip-neutral-alt-default\">\n      {t('noumena.noumEditorv2.subwallet.cannot_be_created_text1')}{' '}\n    </TSpan>\n    <TSpan font=\"footnote-bold\" colorToken=\"--text-tooltip-neutral-alt-default\">\n      {t('noumena.noumEditorv2.subwallet.cannot_be_created_text2')}{' '}\n    </TSpan>\n    <TSpan font=\"footnote\" colorToken=\"--text-tooltip-neutral-alt-default\">\n      {t('noumena.noumEditorv2.subwallet.cannot_be_created_text3')}{' '}\n    </TSpan>\n    <TSpan font=\"footnote-bold\" colorToken=\"--text-tooltip-neutral-alt-default\">\n      {t('noumena.noumEditorv2.subwallet.cannot_be_created_text4')}{' '}\n    </TSpan>\n    <TSpan font=\"footnote\" colorToken=\"--text-tooltip-neutral-alt-default\">\n      {t('noumena.noumEditorv2.subwallet.cannot_be_created_text5')}\n    </TSpan>\n  </SubWalletDisabledToolTip>\n);\n\nexport default DisbledToolTipSubWallet;\n","import { Fragment, useState } from 'react';\nimport { t } from 'i18next';\nimport { Separator } from '@/components/Separator/Separator';\nimport { type ListOfOptionsTypes } from '@/features/noums/components/Toolbox';\nimport { useToast } from '@/hooks';\nimport { ElementTypeEnum } from '@/apollo/generated/types';\nimport { useEditChamberState } from '@/screens/Chamber/EditChamber/provider';\nimport { NoumWalletCreateModal } from '@/screens/Chamber/components/modals/NoumWalletCreateModal/Modal';\nimport { useToolbox } from '@/features/noums/hooks/Toolbox';\nimport { useCheckWalletStatus } from '@/features/money/hooks';\nimport { WALLET_CREATED } from '@/screens/Money/Payments/Wallets/types';\nimport ToolboxItem from './ToolbooxItem';\nimport { type ToolboxTabContentProps } from './types';\nimport { ToolboxItemsRow, ToolboxTabContentWrapper } from './styles';\nimport DisbleDToolTipSubWallet from './DisbleDToolTipSubWallet';\n\nexport const ToolboxTabContent = ({\n  activeTab,\n  handleSelectElementType,\n}: ToolboxTabContentProps) => {\n  const { addToast } = useToast();\n  const { listOfOptionsV2 } = useToolbox(activeTab.group);\n  const { hasWalletElement } = useEditChamberState();\n  const { walletStatus } = useCheckWalletStatus();\n  const handleCloseNoumWalletCreateModal = () => {\n    setShowNoumWalletCreateModal(false);\n  };\n  const [showNoumWalletCreateModal, setShowNoumWalletCreateModal] =\n    useState<boolean>(false);\n  const itemClicked: { [key: string]: boolean } = {};\n  const manageItemClicked = (type: string) => {\n    itemClicked[type] = true;\n    const clickTimeout = setTimeout(() => {\n      itemClicked[type] = false;\n      clearInterval(clickTimeout);\n    }, 3600);\n  };\n  const handleClick = (element: ListOfOptionsTypes) => {\n    if (element.isComingSoon) return;\n    if (element.disabled) {\n      if (itemClicked[element.type]) return;\n      switch (element.type) {\n        case ElementTypeEnum.Wallet:\n          addToast(\n            'primary',\n            'icon',\n            WALLET_CREATED.includes(walletStatus)\n              ? `${t('noumena.chambers.toolbox.element_exist_first')} ${\n                  element.text\n                } ${t('noumena.chambers.toolbox.element_exist_last')}`\n              : `${t('noumena.noumEditorv2.subwallet.cannot_be_created_text')}`,\n          );\n          break;\n        default:\n          addToast(\n            'primary',\n            'icon',\n            `${t('noumena.chambers.toolbox.element_exist_first')} ${\n              element.text\n            } ${t('noumena.chambers.toolbox.element_exist_last')}`,\n          );\n      }\n\n      manageItemClicked(element.type);\n      return;\n    }\n\n    if (handleSelectElementType) {\n      if (element.type === ElementTypeEnum.Wallet && hasWalletElement) {\n        addToast(\n          'error',\n          'none',\n          t('noumena.chambers.toolbox.subwaleet_element_exists'),\n        );\n        return;\n      }\n      if (element.type === ElementTypeEnum.Wallet && !hasWalletElement) {\n        setShowNoumWalletCreateModal(true);\n      } else {\n        handleSelectElementType(element.type);\n      }\n    }\n  };\n  return (\n    <ToolboxTabContentWrapper>\n      {listOfOptionsV2.length > 0 && (\n        <>\n          {listOfOptionsV2.map(\n            (list) =>\n              list.items.length > 0 && (\n                <Fragment key={list.groupName}>\n                  <Separator\n                    data-content={list.groupName}\n                    isWithText={activeTab.group === 'all'}\n                  />\n                  <ToolboxItemsRow>\n                    {list.items.map((el, index) => (\n                      <ToolboxItem\n                        toolTipText={\n                          el.type === ElementTypeEnum.Wallet &&\n                          !WALLET_CREATED.includes(walletStatus) ? (\n                            <DisbleDToolTipSubWallet />\n                          ) : (\n                            el.toolTipText\n                          )\n                        }\n                        key={el.type}\n                        name={el.name}\n                        size={el.size}\n                        text={el.text}\n                        isDisabled={el.disabled}\n                        isComingSoon={el.isComingSoon}\n                        onClick={() => handleClick(el)}\n                        childIndex={index}\n                      />\n                    ))}\n                  </ToolboxItemsRow>\n                </Fragment>\n              ),\n          )}\n        </>\n      )}\n      <NoumWalletCreateModal\n        isOpen={showNoumWalletCreateModal}\n        handleClose={handleCloseNoumWalletCreateModal}\n        handleSelectElementType={handleSelectElementType}\n      />\n    </ToolboxTabContentWrapper>\n  );\n};\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport BasicChipsTabsForm from '@/components/Tabs/TabsForm';\nimport { type TabsHeaderTypes } from '@/features/noums/components/Toolbox';\nimport {\n  type AddNoumLayoutToolInput,\n  ElementTypeEnum,\n  SpaceTypeEnum,\n} from '@/apollo/generated/types';\nimport { ElementUtils } from '@/utils/element';\nimport { Spinner } from '@/components/Spinner';\nimport { useEditChamberState } from '@/screens/Chamber/EditChamber/provider';\nimport {\n  SectionToolType,\n  TextAlignType,\n} from '@/screens/Chamber/components/NoumSections/constants';\nimport { Tabs } from '@/features/noums/hooks/Toolbox/constants';\nimport {\n  useAddNoumLayoutToolHelper,\n  useUpdateNoumSectionHelper,\n} from '@/features/noums/hooks/spaceQuery';\nimport { type ToolboxProps } from './types';\nimport { ToolboxTabContent } from './ToolboxTabContent';\nimport { ToolboxLoader, ToolboxTabs, ToolboxWrapper } from './styles';\n\nexport const Toolbox = ({\n  spaceId,\n  columnId,\n  handleSelectElementType,\n  position = 1,\n  baseElementId,\n  sectionId,\n}: ToolboxProps) => {\n  const { handleEditModal, setsectionSideBarOptions, sections, space } =\n    useEditChamberState();\n  const [selectedId, setSelectedId] = useState(Tabs[0].id);\n  const [activeTab, setActiveTab] = useState(Tabs[0]);\n  const handleChange = useCallback(\n    (id: string) => {\n      if (id && id !== selectedId) {\n        setSelectedId(id);\n      }\n    },\n    [selectedId],\n  );\n  const listOfTabs: TabsHeaderTypes[] = useMemo(\n    () =>\n      Tabs.filter(\n        (tab) =>\n          !(space?.type === SpaceTypeEnum.Home && tab.group === 'finance'),\n      ).map((tab) => ({ ...tab, labelSize: 'auto' })),\n    [space?.type],\n  );\n\n  const isSectionBackground = useMemo(\n    () =>\n      sections.find((section) => section._id === sectionId)?.background ===\n      false,\n    [sectionId, sections],\n  );\n\n  useEffect(() => {\n    const selectedTab = Tabs.find((tab) => tab.id === selectedId);\n    setActiveTab(selectedTab || Tabs[0]);\n  }, [selectedId]);\n\n  const { addNoumLayoutToolHelper, loading: addNoumLayoutToolLoading } =\n    useAddNoumLayoutToolHelper();\n  const { updateNoumSectionHelper } = useUpdateNoumSectionHelper();\n  const onSelectElementType = useCallback(\n    async (elementType: ElementTypeEnum) => {\n      if (spaceId) {\n        const newElementInput: AddNoumLayoutToolInput = {\n          elementType,\n          bodyContentType:\n            ElementUtils.getBodyContentTypeFromElementType(elementType),\n          columnId,\n          position: Math.round(position),\n        };\n        if (\n          elementType === ElementTypeEnum.Image ||\n          elementType === ElementTypeEnum.Video\n        ) {\n          newElementInput.meta = {\n            percentageSize: 30,\n            align: TextAlignType.CENTER,\n          };\n        }\n        const newElement = await addNoumLayoutToolHelper(\n          spaceId,\n          newElementInput,\n          baseElementId,\n          position,\n        );\n        if (newElement) {\n          if (isSectionBackground) {\n            setsectionSideBarOptions?.({\n              sectionBackgroud: { id: sectionId!, background: true },\n            });\n            await updateNoumSectionHelper(spaceId, {\n              sectionId,\n              background: true,\n            });\n          }\n          if (!addNoumLayoutToolLoading) {\n            handleSelectElementType();\n          }\n          if (\n            elementType === ElementTypeEnum.Image ||\n            elementType === ElementTypeEnum.Video\n          )\n            return;\n          handleEditModal?.(\n            SectionToolType.TOOL_TYPE,\n            newElement?._id || '',\n            newElement,\n          );\n        }\n      }\n    },\n    [\n      spaceId,\n      columnId,\n      position,\n      addNoumLayoutToolHelper,\n      baseElementId,\n      addNoumLayoutToolLoading,\n      handleEditModal,\n      isSectionBackground,\n      handleSelectElementType,\n      setsectionSideBarOptions,\n      sectionId,\n      updateNoumSectionHelper,\n    ],\n  );\n\n  return (\n    <ToolboxWrapper>\n      {addNoumLayoutToolLoading && (\n        <ToolboxLoader>\n          <Spinner />\n        </ToolboxLoader>\n      )}\n      <ToolboxTabs>\n        <BasicChipsTabsForm\n          onChange={handleChange}\n          inputList={listOfTabs}\n          selectedId={selectedId}\n          mode=\"isBackground\"\n          isWithoutImage\n          fontSize=\"--font-input-small-size\"\n        />\n      </ToolboxTabs>\n      <ToolboxTabContent\n        handleSelectElementType={onSelectElementType}\n        activeTab={activeTab}\n      />\n    </ToolboxWrapper>\n  );\n};\n\nexport default Toolbox;\n","import { type FC, useCallback, useState } from 'react';\nimport { AddSectionComponent } from '@/screens/Chamber/components/AddSection/AddSectionComponent';\nimport { PopoverWrapper } from '../PopoverWrapper';\nimport { Toolbox } from './Toolbox';\n\ntype AddToolPopoverProps = {\n  spaceId?: string;\n  baseElementId?: string;\n  columnId: string;\n  isOpen?: boolean;\n  onClose?: () => void;\n  position?: number;\n};\n\nexport const AddToolPopover: FC<AddToolPopoverProps> = ({\n  spaceId,\n  columnId,\n  isOpen = false,\n  onClose,\n  position = 1,\n  baseElementId,\n}) => {\n  const [isPopover, setIsPopover] = useState(isOpen);\n\n  const onSelectElementType = useCallback(() => {\n    setIsPopover(false);\n    onClose!();\n  }, [onClose]);\n\n  return (\n    <PopoverWrapper\n      width={500}\n      offsetY={68}\n      isOpen={isPopover}\n      onClose={() => {\n        setIsPopover(false);\n        onClose!();\n      }}\n      renderPopoverContent={() => (\n        <Toolbox\n          spaceId={spaceId || ''}\n          handleSelectElementType={onSelectElementType}\n          columnId={columnId || ''}\n          position={position}\n          baseElementId={baseElementId}\n        />\n      )}\n      renderTargetContent={() => (\n        <AddSectionComponent onClick={() => setIsPopover(true)} />\n      )}\n    />\n  );\n};\n\nexport default AddToolPopover;\n","import { type CSSProperties, memo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { TSpan } from '@/components/Typography';\nimport { type ChamberArchiveModalProps } from './types';\nimport * as S from './styles';\n\nconst style = { maxWidth: '30em' } as CSSProperties;\n\nexport const ChamberArchiveModal = memo(\n  ({ noumName, isOpen, handleClose, onArchive }: ChamberArchiveModalProps) => {\n    const { t } = useTranslation();\n    return (\n      <Modal\n        isFullScreen={false}\n        testId=\"chamberArchiveModal\"\n        open={isOpen}\n        onClose={handleClose}\n        style={style}\n        size={ModalSize.S}\n        disableBackdropClick\n      >\n        <ModalHeader isFullScreen={false}>\n          {t(`noumena.chamber_edit.archive.title`)}\n        </ModalHeader>\n        <ModalBody isFullScreen={false}>\n          <TSpan\n            colorToken=\"--text-modal-neutral-default\"\n            font=\"body-l\"\n            textAlign=\"center\"\n          >\n            {t(`noumena.chamber.edit.archive_description`).replace(\n              '{0}',\n              noumName,\n            )}\n          </TSpan>\n        </ModalBody>\n        <ModalFooter isFullScreen={false} flexDirection=\"column\" gap={16}>\n          <S.ModalButtons primary intent=\"negative\" onClick={onArchive}>\n            {t(`noumena.chamber_edit.archive`)}\n          </S.ModalButtons>\n          <S.ModalButtons tertiary onClick={handleClose}>\n            {t(`noumena.close`)}\n          </S.ModalButtons>\n        </ModalFooter>\n      </Modal>\n    );\n  },\n);\n\nexport default ChamberArchiveModal;\n","import { memo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from '@/components/Button';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { TSpan } from '@/components/Typography';\nimport { Spacer } from '@/layout';\n\nexport interface ChamberEditModeProps {\n  isOpen: boolean;\n  handleClose: () => void;\n  handleMarkAsVisited: () => void;\n  markSpaceAsEditedLoading: boolean;\n}\n\nconst ChamberEditMode = memo((props: ChamberEditModeProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <Modal\n      testId=\"testChamberEditMode\"\n      open={props.isOpen}\n      onClose={props.handleClose}\n      size={ModalSize.S}\n      disableBackdropClick\n    >\n      <ModalHeader data-testid=\"titleChamberEditMode\">\n        {t(`noumena.container.chamber_edit_mode.title`)}\n      </ModalHeader>\n      <ModalBody align=\"center\">\n        <TSpan\n          data-testid=\"bodyChamberEditMode\"\n          font=\"body-l\"\n          colorToken=\"--text-modal-neutral-default\"\n          textAlign=\"center\"\n        >\n          {t(`noumena.container.chamber_edit_mode.body`)}\n        </TSpan>\n        <Spacer height={12} />\n        <TSpan\n          colorToken=\"—text-modal-header-neutral-default\"\n          data-testid=\"bodyRememberChamberEditMode\"\n          font=\"body-l-bold\"\n          textAlign=\"center\"\n        >\n          {t(`noumena.container.chamber_edit_mode.body.remember`)}\n        </TSpan>\n      </ModalBody>\n      <ModalFooter flexDirection=\"column\">\n        <Button\n          data-testid=\"closeChamberEditMode\"\n          primary\n          size=\"full\"\n          onClick={props.handleMarkAsVisited}\n          loading={props.markSpaceAsEditedLoading}\n        >\n          {t(`noumena.container.chamber_edit_mode.start`)}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n});\n\nexport default ChamberEditMode;\n","import styled from 'styled-components';\nimport { TSpan } from '@/components/Typography';\nimport { sizes } from '@/constants/devices';\nimport { Button } from '@/components/Button';\nimport { singleLineEllipisText } from '@/common/globalStyles';\n\nexport const LoadingWrapper = styled.div`\n  padding: 20px;\n  @media (max-width: ${sizes.MOBILE_L}) {\n    position: initial;\n    padding: unset;\n  }\n`;\n\nexport const NoUser = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n`;\n\nexport const NoUserWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  @media (max-width: ${sizes.MOBILE_L}) {\n    height: calc(100vh - 225px);\n  }\n`;\n\nexport const NoUserDescription = styled(TSpan)`\n  text-align: center;\n`;\n\nexport const UserWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  align-items: center;\n  min-height: 86px;\n  border-bottom: 1px solid var(--bg-separator-neutral-default);\n`;\n\nexport const UserBody = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex: 1;\n  justify-content: space-between;\n  align-items: center;\n  padding-left: 16px;\n`;\n\nexport const UserName = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const UserTitle = styled(TSpan)`\n  width: 100%;\n  max-width: 100%;\n  ${singleLineEllipisText}\n  word-break: break-word;\n  white-space: break-spaces;\n`;\nexport const DropdownPicker = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  cursor: pointer;\n`;\n\nexport const PickedPermission = styled(TSpan)`\n  margin-right: 12px;\n`;\n\nexport const ModalButtons = styled(Button)`\n  width: 100%;\n`;\n","import React from 'react';\nimport { t } from 'i18next';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { TSpan } from '@/components/Typography';\nimport { ModalButtons } from './styles';\nimport { type ChangePermissionsConfirmationModalProps } from './types';\n\nexport const ChangePermissionsConfirmationModal = ({\n  isOpen,\n  handleClose,\n  handleConfirm,\n  count,\n}: ChangePermissionsConfirmationModalProps) => (\n  <Modal\n    testId=\"change-permissions-confirmation-modal\"\n    open={isOpen}\n    onClose={handleClose}\n    size={ModalSize.S}\n  >\n    <ModalHeader>\n      {t(`noumena.link_noums.change_permissions_modal.title`)}\n    </ModalHeader>\n    <ModalBody>\n      <TSpan\n        font=\"body-l\"\n        textAlign=\"center\"\n        colorToken=\"--text-modal-neutral-default\"\n      >\n        {t(`noumena.link_noums.change_permissions_modal.description`, {\n          count,\n        })}\n      </TSpan>\n    </ModalBody>\n    <ModalFooter flexDirection=\"column\" gap={16}>\n      <ModalButtons primary onClick={handleConfirm}>\n        {t(`noumena.link_noums.change_permissions_modal.button.text`)}\n      </ModalButtons>\n      <ModalButtons tertiary onClick={handleClose}>\n        {t(`noumena.cancel`)}\n      </ModalButtons>\n    </ModalFooter>\n  </Modal>\n);\n","import generate from 'uniqid';\nimport { t } from 'i18next';\nimport { ConnectionPermissionTypeEnum } from '@/apollo/generated/types';\n\nimport { type PermissionProps } from './types';\n\nexport const options: PermissionProps[] = [\n  {\n    key: generate(),\n    label: t('noumena.chamber_edit.permission.guest'),\n    type: 'value',\n    value: ConnectionPermissionTypeEnum.Guest,\n    description: t('noumena.chamber_edit.permission.guest_description'),\n    labelColor: '--text-tablecell-header-neutral-highlighted',\n  },\n  {\n    key: generate(),\n    label: t('noumena.chamber_edit.permission.favorite'),\n    type: 'value',\n    value: ConnectionPermissionTypeEnum.Favorite,\n    description: t('noumena.chamber_edit.permission.favorite_description'),\n    labelColor: '--text-tablecell-header-neutral-highlighted',\n  },\n  {\n    key: generate(),\n    label: t('noumena.chamber_edit.permission.disconnect'),\n    type: 'value',\n    value: ConnectionPermissionTypeEnum.Disconnect,\n    description: t('noumena.chamber_edit.permission.disconnect_description'),\n    labelColor: '--text-tablecell-header-danger-primary-highlighted',\n  },\n];\n","import { useCallback, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { ConnectionPermissionTypeEnum } from '@/apollo/generated/types';\nimport { TSpan } from '@/components/Typography';\nimport { Avatar } from '@/components/Avatar/Avatar';\nimport { Icon } from '@/components/Icon';\nimport { Dropdown, type DropdownTargetProps } from '@/components/Dropdown';\nimport { useWindowDimensions } from '@/hooks';\nimport { getFullName } from '@/utils/fullName';\nimport { UserUtil } from '@/utils/user';\nimport { options } from './data';\nimport {\n  type PermissionDropdownProps,\n  type ChamberConnectedUserProps,\n} from './types';\nimport {\n  DropdownPicker,\n  UserBody,\n  UserTitle,\n  UserName,\n  UserWrapper,\n  PickedPermission,\n} from './styles';\n\nexport const ChamberConnectedUser: React.FC<ChamberConnectedUserProps> = ({\n  user,\n  currentPermission,\n  onChangePermission,\n  isNonMember = false,\n}) => {\n  const { t } = useTranslation();\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const window = useWindowDimensions();\n\n  const selected = useMemo(\n    () =>\n      currentPermission\n        ? (currentPermission as ConnectionPermissionTypeEnum)\n        : ConnectionPermissionTypeEnum.Guest,\n    [currentPermission],\n  );\n  const isMobile = useMemo(() => window.width < 768, [window]);\n  const selectableOptions: PermissionDropdownProps[] = useMemo(() => {\n    const opts: PermissionDropdownProps[] = [];\n    options.forEach((o) => {\n      if (!(isNonMember && o.value === ConnectionPermissionTypeEnum.Favorite))\n        opts.push({\n          ...o,\n          selected: selected === o.value,\n        });\n    });\n    return opts;\n  }, [isNonMember, selected]);\n  const onSelect = useCallback(\n    (option: PermissionDropdownProps) => {\n      onChangePermission(option.value);\n    },\n    [onChangePermission],\n  );\n  return (\n    <UserWrapper>\n      <Avatar url={UserUtil.getProfilePicture(user) ?? ''} />\n      <UserBody>\n        <UserName>\n          <TSpan\n            font=\"body-l-bold\"\n            colorToken=\"--text-tablecell-header-neutral-highlighted\"\n          >\n            {getFullName(user.firstName, user.middleName, user.lastName)}\n          </TSpan>\n          {isNonMember ? (\n            <UserTitle\n              font=\"body-m\"\n              colorToken=\"--text-tablecell-body-neutral-default\"\n            >\n              {t('noumena.chamber_edit.permission.non_member')}\n            </UserTitle>\n          ) : (\n            <>\n              {!!user.title && (\n                <UserTitle\n                  font=\"body-m\"\n                  colorToken=\"--text-tablecell-body-neutral-default\"\n                >\n                  {user.title}\n                </UserTitle>\n              )}\n            </>\n          )}\n        </UserName>\n        <Dropdown\n          hideIcons\n          closeOnSelect\n          placement=\"bottom-end\"\n          options={selectableOptions}\n          leftIcon={\n            <Icon\n              name=\"tick_m\"\n              size={24}\n              color=\"--icon-tablecell-neutral-highlighted\"\n            />\n          }\n          containerWidth={isMobile ? '100%' : '440px'}\n          onSelectOption={onSelect}\n          onOpen={() => setIsOpen(true)}\n          onClose={() => setIsOpen(false)}\n          usePortal\n          calRefTop={true}\n          isAnimation={false}\n          usePopStyle\n          minHeight=\"fit-content\"\n          observerMinHeight=\"0px\"\n        >\n          {({\n            targetProps,\n            targetRef,\n            toggle,\n          }: DropdownTargetProps<HTMLDivElement>) => (\n            <DropdownPicker ref={targetRef} {...targetProps} onClick={toggle}>\n              <PickedPermission\n                font=\"body-m-bold\"\n                colorToken=\"--text-tablecell-body-neutral-default\"\n              >\n                {t(`noumena.chamber_edit.permission.${selected.toLowerCase()}`)}\n              </PickedPermission>\n              <Icon\n                name={`chevron_small_${isOpen ? 'up' : 'down'}_m`}\n                size={16}\n                color=\"--icon-tablecell-neutral-highlighted\"\n              />\n            </DropdownPicker>\n          )}\n        </Dropdown>\n      </UserBody>\n    </UserWrapper>\n  );\n};\n","import { memo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport {\n  type Maybe,\n  type SpaceConnection,\n  type ConnectionPermissionTypeEnum,\n  ConnectionTypeEnum,\n} from '@/apollo/generated/types';\nimport { Icon } from '@/components/Icon';\nimport { Button } from '@/components/Button';\nimport { Spacer } from '@/layout';\nimport { UserUtil } from '@/utils/user';\nimport { ChamberConnectedUser } from './ChamberConnectedUser';\nimport { type ChamberConnectedUsersProps } from './types';\nimport { NoUser, NoUserDescription, NoUserWrapper } from './styles';\n\nexport const ChamberConnectedUsers = memo(\n  ({\n    spaceId,\n    connections,\n    onChangePermission,\n    onClose,\n    onInvite,\n  }: ChamberConnectedUsersProps) => {\n    const { t } = useTranslation();\n\n    if (connections?.length) {\n      return (\n        <>\n          {connections.map((c: Maybe<SpaceConnection>) => {\n            const user =\n              c?.type === ConnectionTypeEnum.Connection\n                ? c?.requestFrom?._id === spaceId\n                  ? c?.requestTo?.uid\n                  : c?.requestFrom?.uid\n                : c?.requestTo?.uid;\n            return (\n              c &&\n              user &&\n              !UserUtil.isInactive(user) && (\n                <ChamberConnectedUser\n                  key={`${user._id}-${c?.requestTo?.uid?._id}`}\n                  user={user}\n                  currentPermission={c?.draft?.permission || c?.permission}\n                  onChangePermission={(v: ConnectionPermissionTypeEnum) =>\n                    onChangePermission(c._id, v)\n                  }\n                  isNonMember={\n                    c?.requestTo?.uid?.userStatus === 'UNREGISTERED' ||\n                    c?.requestTo?.uid?.userStatus === 'REGISTERED'\n                  }\n                />\n              )\n            );\n          })}\n        </>\n      );\n    }\n\n    return (\n      <NoUser data-testid=\"chamber-permission-no-user-wrap\">\n        <NoUserWrapper>\n          <Icon\n            color=\"--icon-placeholder-neutral-default\"\n            name=\"groups_xxxxl\"\n            size={96}\n          />\n          <NoUserDescription\n            font=\"body-l\"\n            colorToken=\"--text-placeholder-neutral-default\"\n          >\n            {t(`noumena.chamber_edit.permission.no_user`)}\n          </NoUserDescription>\n          <Spacer height={16} />\n          <Button\n            secondary\n            size=\"small\"\n            onClick={() => {\n              onClose();\n              onInvite();\n            }}\n          >\n            {t(`noumena.chamber_edit.permission.invite_users`)}\n          </Button>\n        </NoUserWrapper>\n      </NoUser>\n    );\n  },\n);\n","import { useMemo, useCallback, useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { isEqual } from 'lodash';\nimport {\n  type Maybe,\n  type SpaceConnection,\n  type ConnectionPermissionTypeEnum,\n  type PermissionInput,\n  ConnectionRequestTypeEnum,\n} from '@/apollo/generated/types';\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { TSpan } from '@/components/Typography';\nimport { Spacer } from '@/layout';\nimport { useWindowDimensions } from '@/hooks';\n\nimport { Button } from '@/components/Button';\nimport { ChangePermissionsConfirmationModal } from '@/screens/Chamber/components/modals/ChamberPermission/ChangePermissionsConfirmationModal';\nimport { Infinite } from '@/components/Infinite';\nimport { useUpdateConnectionPermissionHelper } from '@/features/noums/hooks/noums';\nimport { type ChamberPermissionModalProps } from './types';\nimport { ChamberConnectedUsers } from './ChamberConnectedUsers';\n\nexport const ChamberPermissionModal = ({\n  spaceId,\n  connections: spaceConnections,\n  loading: loadingConnections,\n  isOpen,\n  onClose,\n  onInvite,\n  linkedCount,\n  infiniteState,\n  fetchMoreConnections,\n}: ChamberPermissionModalProps) => {\n  const [isConfirmationOpen, toggle] = useState(false);\n  const { t } = useTranslation();\n  const windowSize = useWindowDimensions();\n  const [connections, setConnections] = useState<\n    Maybe<SpaceConnection>[] | undefined\n  >([]);\n  const [permissionData, setPermissionData] = useState<\n    Record<string, ConnectionPermissionTypeEnum>\n  >({});\n\n  const { updateConnectionPermissionHelper, loading: updating } =\n    useUpdateConnectionPermissionHelper();\n\n  const originalData: SpaceConnection[] = useMemo(\n    () =>\n      spaceConnections?.filter(\n        (connection) =>\n          connection.status === ConnectionRequestTypeEnum.Approved,\n      ) || [],\n    [spaceConnections],\n  );\n\n  /**\n   * Set initial data\n   */\n  useEffect(() => {\n    if (loadingConnections) return;\n    setConnections((con) =>\n      originalData.map((obj) => con?.find((o) => o?._id === obj?._id) || obj),\n    );\n  }, [originalData, loadingConnections]);\n\n  /**\n   * Set original(unchanged) data when close\n   */\n  useEffect(() => {\n    if (!isOpen) {\n      setConnections(originalData);\n    }\n  }, [isOpen, originalData]);\n\n  const isMobile = useMemo(() => windowSize.width < 768, [windowSize]);\n\n  const hasConnections = useMemo(() => connections?.length, [connections]);\n\n  const softDisabled = useMemo(\n    () => isEqual(originalData, connections),\n    [connections, originalData],\n  );\n\n  const onChangePermission = useCallback(\n    (\n      connectionId: Maybe<string> | undefined,\n      permission: ConnectionPermissionTypeEnum,\n    ) => {\n      if (!connections || !connectionId) return;\n\n      const index = connections.findIndex(\n        (c: Maybe<SpaceConnection>) => connectionId === c?._id,\n      );\n\n      setConnections((prev) => {\n        const tempUsers = [...(prev || [])];\n        tempUsers[index] = {\n          ...tempUsers[index],\n          draft: {\n            permission,\n          },\n        };\n        return tempUsers;\n      });\n      setPermissionData((p) => ({ ...p, [connectionId]: permission }));\n    },\n    [connections],\n  );\n\n  const onSavePermissions = useCallback(async () => {\n    const input: PermissionInput[] = Object.entries(permissionData).map(\n      ([connectionId, permission]) => ({ connectionId, permission }),\n    );\n    await updateConnectionPermissionHelper({\n      connectionsPermissions: input,\n    });\n    setPermissionData({});\n    onClose();\n    toggle(false);\n  }, [onClose, permissionData, updateConnectionPermissionHelper]);\n\n  if (isConfirmationOpen && linkedCount) {\n    return (\n      <ChangePermissionsConfirmationModal\n        isOpen={isConfirmationOpen}\n        handleConfirm={onSavePermissions}\n        handleClose={() => {\n          toggle(false);\n        }}\n        count={linkedCount}\n      />\n    );\n  }\n\n  return (\n    <Modal\n      testId=\"chamber-permission-modal\"\n      open={isOpen}\n      onClose={onClose}\n      enableAnimation\n      enableCloseButton\n      size={ModalSize.L}\n      disableBackdropClick\n    >\n      <ModalHeader justifyContent={isMobile ? 'flex-start' : 'center'}>\n        {t(`noumena.chamber_edit.permission.title`)}\n      </ModalHeader>\n      <ModalBody mobileFlex maxHeight=\"540px\">\n        <TSpan colorToken=\"--text-modal-neutral-default\" font=\"body-m\">\n          {t(`noumena.chamber_edit.permission.description`)}\n        </TSpan>\n        <Spacer height=\"16px\" />\n        <Infinite\n          onFetchMore={fetchMoreConnections}\n          status={infiniteState}\n          scrollbarWidth={0}\n          isSpinnerRelative\n          width=\"100%\"\n        >\n          <ChamberConnectedUsers\n            spaceId={spaceId}\n            connections={connections || []}\n            loading={loadingConnections}\n            onChangePermission={onChangePermission}\n            onClose={onClose}\n            onInvite={onInvite}\n          />\n        </Infinite>\n      </ModalBody>\n      <ModalFooter\n        justifyContent={!hasConnections ? 'center' : 'space-between'}\n        gap={16}\n      >\n        {(hasConnections || loadingConnections) && (\n          <>\n            <Button tertiary size=\"full\" onClick={onClose}>\n              {t(`noumena.chamber_edit.permission.cancel`)}\n            </Button>\n            <Button\n              primary\n              softDisabled={softDisabled}\n              loading={updating}\n              size=\"full\"\n              onClick={() => {\n                if (linkedCount) {\n                  toggle(true);\n                } else {\n                  onSavePermissions();\n                }\n              }}\n            >\n              {t(`noumena.chamber_edit.permission.save_changes`)}\n            </Button>\n          </>\n        )}\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default ChamberPermissionModal;\n","import styled from 'styled-components';\nimport { Button } from '@/components/Button';\nimport { TSpan } from '@/components/Typography';\nimport { mediaSizes, sizes } from '@/constants/devices';\nimport { noScrollBar } from '@/common/globalStyles';\n\nexport const ModalWrapper = styled.div<{ isIPhone: boolean }>`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  @media (min-width: ${mediaSizes.TABLET_MIN}) {\n    width: 704px;\n    max-height: 728px;\n    padding: 0;\n  }\n  @media (min-width: ${mediaSizes.LAPTOP_MIN}) {\n    width: 704px;\n  }\n  @media (max-width: ${sizes.MOBILE_XL}) {\n    ${({ isIPhone }) => (isIPhone ? 'margin-top: 25px; height: 95vh;' : '')};\n  }\n  @media (max-width: ${sizes.TABLET}) {\n    width: 100vw;\n  }\n`;\n\nexport const ModalHeader = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column-reverse;\n  @media (min-width: ${mediaSizes.TABLET_MIN}) {\n    flex-direction: row-reverse;\n  }\n  @media (min-width: ${mediaSizes.LAPTOP_MIN}) {\n    flex-direction: row;\n  }\n`;\n\nexport const ModalSubHeader = styled.div<{ left?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  margin-bottom: 16px;\n  @media (min-width: ${mediaSizes.TABLET_MAX}) {\n    flex-direction: ${({ left }) => (left ? 'row' : 'row-reverse')};\n  }\n`;\n\nexport const ModalDescription = styled(TSpan)`\n  white-space: pre-line;\n`;\n\nexport const BodyWrapper = styled.div<{ justifyContent?: boolean }>`\n  display: flex;\n  height: 100%;\n  width: 100%;\n  overflow-y: auto;\n  ${noScrollBar};\n  justify-content: ${({ justifyContent }) =>\n    justifyContent ? 'center' : undefined};\n  flex-direction: column;\n  @media (min-width: ${mediaSizes.MOBILE_L_MAX}) {\n    justify-content: flex-start;\n  }\n`;\n\nexport const CreateBodyWrapper = styled(BodyWrapper)`\n  @media (min-width: ${mediaSizes.LAPTOP_MIN}) {\n    justify-content: space-between;\n  }\n  @media (max-width: ${mediaSizes.MOBILE_M_MIN}) {\n    padding-top: 100px;\n  }\n`;\n\nexport const NoCampaign = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: auto;\n  gap: 16px;\n`;\n\nexport const ViewCampaignsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  padding: 0px;\n  gap: 14px;\n  height: 100%;\n  overflow-y: scroll;\n  align-self: stretch;\n  flex-wrap: wrap;\n  width: 100%;\n  transition: all 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  @media (max-width: ${mediaSizes.MOBILE_L_MAX}) {\n    justify-content: center;\n  }\n`;\n\nexport const EmptyCampaignsContainer = styled.div`\n  width: 343px;\n`;\n\nexport const NoCampaignDescription = styled(TSpan)`\n  text-align: center;\n  white-space: pre-line;\n`;\n\nexport const ButtonWrapper = styled.div<{\n  justifyCenter?: boolean;\n  flexDirection?: 'row' | 'column';\n}>`\n  display: flex;\n  align-items: center;\n  justify-content: ${(props) =>\n    props.justifyCenter ? 'center' : 'space-between'};\n  flex-direction: ${({ flexDirection }) => flexDirection || 'row'};\n  gap: 16px;\n  width: 100%;\n  @media (min-width: ${mediaSizes.MOBILE_L_MAX}) {\n    margin-top: 16px;\n  }\n  @media (max-width: ${mediaSizes.MOBILE_L_MAX}) {\n    margin-bottom: 24px;\n  }\n`;\nexport const ModalButton = styled(Button)<{ flex?: boolean }>`\n  flex: 1;\n`;\n\nexport const MainOptionWrapper = styled.div`\n  width: 100%;\n  margin: 20px auto;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n`;\nexport const MainOptionSeparator = styled.div`\n  height: 1px;\n  width: 100%;\n  background-color: var(--bg-separator-neutral-default);\n`;\nexport const OptionWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\nexport const OptionHeader = styled(ModalHeader)`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  height: 40px;\n  justify-content: center;\n`;\n\nexport const OptionDescription = styled(ModalDescription)``;\n\nexport const ModalContainer = styled.div<{ padding?: number }>`\n  display: flex;\n  height: 255px;\n  text-align: center;\n  flex-direction: column;\n  justify-content: space-between;\n  padding-bottom: ${({ padding }) => (padding ? `${padding}px` : '30px')};\n`;\n\nexport const DeleteModalContainer = styled.div<{ padding?: number }>`\n  display: flex;\n  height: 255px;\n  width: 279px;\n  text-align: center;\n  flex-direction: column;\n  justify-content: space-between;\n  padding-bottom: ${({ padding }) => (padding ? `${padding}px` : '30px')};\n`;\n","import { CampaignAudienceTarget } from '@/apollo/generated/types';\n\nexport const campaignOptions = [\n  {\n    id: CampaignAudienceTarget.EntireCommunity,\n    heading: 'noumena.chamber_edit.new_broadcasting.list_header_1',\n    description: 'noumena.chamber_edit.new_broadcasting.list_description_1',\n  },\n  {\n    id: CampaignAudienceTarget.MyCircle,\n    heading: 'noumena.chamber_edit.new_broadcasting.list_header_2',\n    description: 'noumena.chamber_edit.new_broadcasting.list_description_2',\n  },\n  {\n    id: CampaignAudienceTarget.MyNoums,\n    heading: 'noumena.chamber_edit.new_broadcasting.list_header_3',\n    description: 'noumena.chamber_edit.new_broadcasting.list_description_3',\n  },\n  {\n    id: CampaignAudienceTarget.FollowersOfMyNoums,\n    heading: 'noumena.chamber_edit.new_broadcasting.list_header_4',\n    description: 'noumena.chamber_edit.new_broadcasting.list_description_4',\n  },\n];\n","import React, { useMemo, useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { TSpan } from '@/components/Typography';\nimport { Spacer } from '@/layout';\nimport { Icon } from '@/components/Icon';\nimport { useToast } from '@/hooks';\nimport { Checkbox } from '@/components/Checkbox';\nimport { useCreateProjectNoumCampaignMutation } from '@/apollo/graphql';\nimport { CampaignAudienceTarget } from '@/apollo/generated/types';\nimport { type NewBroadcastModalProps } from '../types';\nimport * as S from '../styles';\nimport { campaignOptions } from './data';\n\nexport const CreateBroadcastModal = ({\n  isOpen,\n  onClose,\n  noumId,\n  noumType,\n  onSuccessfulCampaignCreation,\n}: NewBroadcastModalProps) => {\n  const { addToast } = useToast();\n  const { t } = useTranslation();\n  const isIPhone = !!window?.navigator.userAgent.match(/iPhone/i);\n  const [createProjectNoumCampaignMutation, { loading }] =\n    useCreateProjectNoumCampaignMutation({\n      onCompleted: (response) => {\n        if (response.createProjectNoumCampaign) {\n          onClose();\n          if (onSuccessfulCampaignCreation) onSuccessfulCampaignCreation();\n          addToast(\n            'success',\n            'icon',\n            t('noumena.chamber_edit.new_broadcasting.started'),\n          );\n        }\n      },\n      onError: (err) => {\n        addToast('error', 'none', err.message);\n      },\n    });\n\n  const [optionChecked, setOptionChecked] = useState(\n    campaignOptions.map((item) => ({\n      ...item,\n      checked: false,\n      show: false,\n    })),\n  );\n\n  useEffect(() => {\n    const newOptions = optionChecked.map((item) => ({\n      ...item,\n      show: !(\n        noumType === 'SECRET' &&\n        item.id === CampaignAudienceTarget.EntireCommunity\n      ),\n    }));\n    setOptionChecked(newOptions);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [noumType]);\n\n  const disableOtherOptions = useMemo(() => {\n    const foundEntireCommunity = optionChecked.find(\n      (item) => item.id === CampaignAudienceTarget.EntireCommunity,\n    );\n    return foundEntireCommunity && foundEntireCommunity.checked;\n  }, [optionChecked]);\n  const softDisabled = useMemo(\n    () => optionChecked.every((item) => !item.checked),\n    [optionChecked],\n  );\n\n  const toggleOption = (id: CampaignAudienceTarget) => () => {\n    if (disableOtherOptions && id !== CampaignAudienceTarget.EntireCommunity)\n      return;\n\n    let filteredCheckOption = [...optionChecked];\n    const foundEntireCommunityIdx = filteredCheckOption.findIndex(\n      (item) => item.id === CampaignAudienceTarget.EntireCommunity,\n    );\n    const foundEntireCommunity = filteredCheckOption[foundEntireCommunityIdx];\n    if (id === CampaignAudienceTarget.EntireCommunity) {\n      filteredCheckOption = filteredCheckOption.map((item) => ({\n        ...item,\n        checked: false,\n      }));\n      filteredCheckOption.splice(foundEntireCommunityIdx, 1, {\n        ...foundEntireCommunity,\n        checked: !foundEntireCommunity.checked,\n      });\n    } else {\n      filteredCheckOption.splice(foundEntireCommunityIdx, 1, {\n        ...foundEntireCommunity,\n        checked: false,\n      });\n      const foundIdx = filteredCheckOption.findIndex((item) => item.id === id);\n      if (foundIdx > -1) {\n        filteredCheckOption.splice(foundIdx, 1, {\n          ...filteredCheckOption[foundIdx],\n          id,\n          checked: !filteredCheckOption[foundIdx].checked,\n        });\n      }\n    }\n    setOptionChecked(filteredCheckOption);\n  };\n\n  const onSubmit = () => {\n    createProjectNoumCampaignMutation({\n      variables: {\n        spaceId: noumId,\n        targets: optionChecked\n          .filter((item) => item.checked)\n          .map((item) => item.id) as CampaignAudienceTarget[],\n      },\n    });\n  };\n\n  return (\n    <Modal\n      testId=\"chamber-campaign-create-modal\"\n      open={isOpen}\n      onClose={onClose}\n      size={ModalSize.XL}\n      hasBackButton\n      disableBackdropClick\n      closeButtonStyles={{\n        enforceLeft: true,\n      }}\n    >\n      <ModalHeader>\n        {t(`noumena.chamber_edit.new_broadcasting.title`)}\n      </ModalHeader>\n      <ModalBody\n        loading={loading}\n        loadingDescription={t(\n          'noumena.chamber_edit.new_broadcasting.loading_description',\n        )}\n      >\n        <S.ModalDescription\n          colorToken=\"--text-modal-neutral-default\"\n          font=\"body-l\"\n          textAlign=\"left\"\n        >\n          {t(`noumena.chamber_edit.new_broadcasting.description`)}\n        </S.ModalDescription>\n        {optionChecked.map(({ heading, description, id, checked, show }, idx) =>\n          show ? (\n            <React.Fragment key={id}>\n              <S.MainOptionWrapper>\n                <S.OptionWrapper onClick={toggleOption(id)}>\n                  <TSpan\n                    font=\"body-l-bold\"\n                    colorToken=\"--text-tablecell-header-neutral-highlighted\"\n                  >\n                    {t(heading)}\n                  </TSpan>\n                  <S.OptionDescription\n                    colorToken=\"--text-tablecell-body-neutral-default\"\n                    font=\"body-m\"\n                  >\n                    {t(description)}\n                  </S.OptionDescription>\n                </S.OptionWrapper>\n                <Checkbox\n                  disableClick={\n                    id !== CampaignAudienceTarget.EntireCommunity\n                      ? disableOtherOptions\n                      : undefined\n                  }\n                  onChange={toggleOption(id)}\n                  icon={\n                    <Icon\n                      name=\"tick_m\"\n                      size={checked ? 24 : 0}\n                      color=\"--icon-checkbox-neutral-alt-default\"\n                    />\n                  }\n                  isChecked={checked}\n                />\n              </S.MainOptionWrapper>\n              {idx !== optionChecked.length - 1 && <S.MainOptionSeparator />}\n            </React.Fragment>\n          ) : undefined,\n        )}\n      </ModalBody>\n      <ModalFooter loading={loading}>\n        <S.ButtonWrapper>\n          <S.ModalButton\n            tertiary\n            testId=\"chamber-campaign-cancel-action\"\n            onClick={onClose}\n          >\n            {t(`noumena.chamber_edit.new_broadcasting.cancel_action`)}\n          </S.ModalButton>\n          <S.ModalButton\n            testId=\"chamber-campaign-create-action\"\n            primary\n            softDisabled={softDisabled}\n            onClick={onSubmit}\n          >\n            {t(`noumena.chamber_edit.new_broadcasting.complete_action`)}\n          </S.ModalButton>\n        </S.ButtonWrapper>\n        {isIPhone ? <Spacer height={16} /> : undefined}\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default CreateBroadcastModal;\n","import styled, { css } from 'styled-components';\nimport { sizes } from '@/constants/devices';\n\ninterface TagLabelProps {\n  bgColor: string;\n  color: string;\n}\n\ninterface TopBackgroundProps {\n  bgColor: string;\n}\n\nexport const tagText = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  padding: 0 8px;\n  height: 22px;\n  font-weight: 600;\n  font-size: 12px;\n  text-align: center;\n`;\n\nexport const StoriesCnt = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 5px;\n  margin: 0 auto;\n  font-family: var(--font-family);\n`;\n\nexport const StoriesWrapper = styled.div`\n  display: flex;\n  height: 254px;\n`;\n\nexport const CampaignContainer = styled.div`\n  font-family: var(--font-family);\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  width: 343px;\n  background: var(--bg-card-neutral-alt-default);\n  border: 1px solid var(--border-card-neutral-highlighted);\n  border-radius: 12px;\n  box-sizing: border-box;\n  cursor: pointer;\n  gap: 12px;\n\n  @media (min-width: ${sizes.MOBILE_MAX}) and (max-width: ${sizes.TABLET_L}) {\n    width: 359.5px;\n  }\n`;\n\nexport const CampaignSummaryContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 0px;\n  gap: 8px;\n\n  flex: none;\n  order: 3;\n  align-self: stretch;\n  flex-grow: 0;\n  z-index: 3;\n\n  & :last-child {\n    border: none;\n  }\n`;\n\nexport const CampaiginSummaryItem = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: space-between;\n  padding: 0px 0px 8px;\n  height: 27px;\n  border-bottom: 1px solid var(--bg-separator-neutral-default);\n  flex: none;\n  order: 0;\n  align-self: stretch;\n  flex-grow: 0;\n`;\nexport const TabsFont = '--font-input-small-size';\n\nexport const CampaignHeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  box-sizing: border-box;\n  row-gap: 4px;\n  min-height: 64px;\n  width: 100%;\n`;\n\nexport const CampaignHeaderTitleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  width: 100%;\n`;\n\nexport const CampaignBodyContainer = styled.div<{ spaceBetween?: boolean }>`\n  display: flex;\n  align-items: center;\n  justify-content: ${({ spaceBetween }) =>\n    spaceBetween ? 'space-between' : 'flex-start'};\n`;\n\nexport const CampaignFilterTabsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 8px;\n  flex-wrap: wrap;\n`;\n\nexport const CampaignFiltersContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 0px;\n  gap: 8px;\n  flex: none;\n  order: 2;\n  align-self: stretch;\n  flex-grow: 0;\n  z-index: 2;\n`;\n\nexport const TopBackground = styled.div<TopBackgroundProps>`\n  height: 56px;\n  background: ${({ bgColor }) => bgColor};\n  border-radius: 12px;\n  width: calc(100% -16px);\n  box-sizing: content-box;\n`;\n\nexport const TagLabel = styled.div<TagLabelProps>`\n  background-color: ${({ bgColor }) => bgColor};\n  color: ${({ color }) => color};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  padding: 0 8px;\n  min-height: 22px;\n  font-weight: var(--font-body-small-bold-weight);\n  font-size: 12px;\n  text-align: center;\n`;\n","import { type ProjectNoumCampaignStatus } from '@/apollo/generated/types';\n\nexport type Actions = 'Refresh' | 'Cancel';\n\nexport type CampaignHeaderProps = Pick<\n  CampaignComponentProps,\n  | 'id'\n  | 'status'\n  | 'startedAt'\n  | 'onDelete'\n  | 'selectBroadcast'\n  | 'unformattedStartTime'\n>;\n\nexport type CampaignProps = {\n  id: string;\n  unformattedStartTime: string;\n  startedAt: string | null;\n  refreshedAt: string | null;\n  finishedAt: string | null;\n  status?: ProjectNoumCampaignStatus;\n  invitesSent: number;\n  views: number;\n  clicksToNoums: number;\n  connectionsMade: number;\n  connectionsDeclined: number;\n  followersGained: number;\n};\n\nexport type CampaignComponentProps = CampaignProps & {\n  onDelete: () => void;\n  selectBroadcast: (campaignId: string) => void;\n};\n\nexport type CampaignActionProps = {\n  key: string;\n  label: string;\n  type: 'value';\n  value: Actions;\n  description?: string;\n  selected?: boolean;\n  labelColor?: string;\n};\n\nexport enum CampaignSummaryItemMap {\n  INIVITES_SENT = 'invitesSent',\n  VIEWS = 'views',\n  CLICKS_TO_NOUMS = 'clicksToNoums',\n  CONNECTIONS_MADE = 'connectionsMade',\n  CONNECTIONS_DECLINED = 'connectionsDeclined',\n  FOLLOWERS_GAINED = 'followersGained',\n}\n\nexport type CampaignSummaryOption = {\n  translationKey: string;\n  mapKey: CampaignSummaryItemMap;\n};\n\nexport type CampaignSummaryItem = {\n  property: string;\n  value: number | string | null;\n};\n","import {\n  type CampaignActionProps,\n  CampaignSummaryItemMap,\n  type CampaignSummaryOption,\n} from './types';\n\nconst {\n  CLICKS_TO_NOUMS,\n  CONNECTIONS_DECLINED,\n  CONNECTIONS_MADE,\n  FOLLOWERS_GAINED,\n  INIVITES_SENT,\n  VIEWS,\n} = CampaignSummaryItemMap;\n\nconst enPrefixKey = 'noumena.chamber_edit.broadcasting.campaign.table.label';\n\nexport const campaignActionOptions: CampaignActionProps[] = [\n  {\n    key: 'invite-cancel',\n    label: 'Cancel Campaign',\n    type: 'value',\n    description: '',\n    value: 'Cancel',\n    labelColor: '--text-tablecell-header-danger-primary-highlighted',\n  },\n];\n\nexport const campaignSummaryOptions: CampaignSummaryOption[] = [\n  {\n    translationKey: `${enPrefixKey}.inivites_sent`,\n    mapKey: INIVITES_SENT,\n  },\n  {\n    translationKey: `${enPrefixKey}.views`,\n    mapKey: VIEWS,\n  },\n  {\n    translationKey: `${enPrefixKey}.clicks_to_noums`,\n    mapKey: CLICKS_TO_NOUMS,\n  },\n  {\n    translationKey: `${enPrefixKey}.connections_made`,\n    mapKey: CONNECTIONS_MADE,\n  },\n  {\n    translationKey: `${enPrefixKey}.connections_declined`,\n    mapKey: CONNECTIONS_DECLINED,\n  },\n  {\n    translationKey: `${enPrefixKey}.followers_gained`,\n    mapKey: FOLLOWERS_GAINED,\n  },\n];\n","import { type FC, useMemo } from 'react';\nimport { Trans } from 'react-i18next';\nimport { t } from 'i18next';\nimport { ProjectNoumCampaignStatus } from '@/apollo/generated/types';\nimport {\n  Dropdown,\n  DropdownPicker,\n  type DropdownTargetProps,\n} from '@/components/Dropdown';\nimport { useTimeIndicator } from '@/hooks';\nimport { TSpan } from '@/components/Typography';\nimport { Tag } from '@/components/Tag';\nimport Icon from '@/components/Icon/Icon';\nimport {\n  CampaiginSummaryItem,\n  CampaignBodyContainer,\n  CampaignContainer,\n  CampaignFiltersContainer,\n  CampaignFilterTabsContainer,\n  CampaignHeaderContainer,\n  CampaignHeaderTitleContainer,\n  CampaignSummaryContainer,\n} from './styles';\nimport {\n  type CampaignComponentProps,\n  type CampaignHeaderProps,\n  type CampaignProps,\n  type CampaignSummaryItem,\n} from './types';\nimport { campaignSummaryOptions, campaignActionOptions } from './data';\n\nconst CampaignActions: FC<{\n  onDelete: () => void;\n}> = ({ onDelete }) => (\n  <>\n    <div data-testid=\"campaign-actions-testid\">\n      <Dropdown\n        hideIcons\n        closeOnSelect\n        placement=\"bottom-end\"\n        options={campaignActionOptions}\n        containerWidth=\"auto\"\n        onSelectOption={onDelete}\n        usePortal={false}\n        calRefTop={false}\n        isAnimation={false}\n        usePopStyle={true}\n        observerMinHeight=\"0\"\n      >\n        {({\n          targetProps,\n          targetRef,\n          toggle,\n        }: DropdownTargetProps<HTMLDivElement>) => (\n          <DropdownPicker ref={targetRef} {...targetProps} onClick={toggle}>\n            <Icon\n              name=\"more_m\"\n              size={24}\n              color=\"--icon-button-brand-primary-default\"\n            />\n          </DropdownPicker>\n        )}\n      </Dropdown>\n    </div>\n  </>\n);\n\nconst CampaignHeader = ({\n  status,\n  id,\n  selectBroadcast,\n  onDelete,\n  startedAt = '',\n  unformattedStartTime,\n}: CampaignHeaderProps) => {\n  const stillOngoing = useMemo(\n    () =>\n      status === ProjectNoumCampaignStatus.Active ||\n      status === ProjectNoumCampaignStatus.Refreshed,\n    [status],\n  );\n\n  const [countDown] = useTimeIndicator(\n    stillOngoing ? unformattedStartTime : '',\n  );\n\n  return (\n    <CampaignHeaderContainer data-testid=\"campaign-header-testid\">\n      <CampaignHeaderTitleContainer>\n        <CampaignBodyContainer spaceBetween>\n          <TSpan\n            font=\"heading-xs-bold\"\n            colorToken=\"--text-card-header-neutral-highlighted\"\n          >\n            {startedAt}\n          </TSpan>\n          {stillOngoing && (\n            <CampaignActions\n              onDelete={() => {\n                selectBroadcast(id);\n                onDelete();\n              }}\n            />\n          )}\n        </CampaignBodyContainer>\n        <CampaignBodyContainer spaceBetween={stillOngoing}>\n          <Tag\n            tertiary={status === ProjectNoumCampaignStatus.Cancelled}\n            success={stillOngoing}\n          >\n            <Trans\n              i18nKey={`noumena.chamber_edit.broadcasting.campaign.status.${status?.toLowerCase()}`}\n            />\n          </Tag>\n          {stillOngoing ? (\n            <TSpan font=\"body-m\" colorToken=\"--text-body-neutral-default\">\n              {t('noumena.broadcasting.countdown', {\n                countDown,\n              })}\n            </TSpan>\n          ) : undefined}\n        </CampaignBodyContainer>\n      </CampaignHeaderTitleContainer>\n    </CampaignHeaderContainer>\n  );\n};\n\nconst CampaignFilters = () => (\n  <CampaignFiltersContainer data-testid=\"campaign-filters-testid\">\n    <Trans\n      i18nKey=\"noumena.chamber_edit.broadcasting.campaign.label.filters\"\n      components={{\n        note: (\n          <TSpan\n            font=\"footnote-bold\"\n            colorToken=\"--text-card-neutral-default\"\n          />\n        ),\n      }}\n    />\n    <CampaignFilterTabsContainer>\n      <Tag tertiary>\n        <Trans i18nKey=\"noumena.chamber_edit.broadcasting.campaign.tabs.my_connections\" />\n      </Tag>\n      <Tag tertiary>\n        <Trans i18nKey=\"noumena.chamber_edit.broadcasting.campaign.tabs.followers_of_my_noums\" />\n      </Tag>\n    </CampaignFilterTabsContainer>\n  </CampaignFiltersContainer>\n);\n\nconst SummaryItem = ({ property, value }: CampaignSummaryItem) => (\n  <>\n    <CampaiginSummaryItem data-testid=\"campaign-summary-item-testid\">\n      <Trans\n        i18nKey={property}\n        components={{\n          note: (\n            <TSpan\n              font=\"footnote-bold\"\n              colorToken=\"--text-body-neutral-default\"\n            />\n          ),\n        }}\n      />\n      <TSpan font=\"footnote-bold\" colorToken=\"--text-body-neutral-highlighted\">\n        {value}\n      </TSpan>\n    </CampaiginSummaryItem>\n  </>\n);\n\nconst CampaignSummary = (props: CampaignProps) => (\n  <CampaignSummaryContainer data-testid=\"campaign-summary-container-testid\">\n    {campaignSummaryOptions.map(({ translationKey, mapKey }) => (\n      <SummaryItem\n        key={mapKey}\n        property={translationKey}\n        value={\n          props.status !== ProjectNoumCampaignStatus.Cancelled\n            ? props[mapKey] ?? '-'\n            : '-'\n        }\n      />\n    ))}\n  </CampaignSummaryContainer>\n);\n\nexport default function Campaign(props: CampaignComponentProps) {\n  const {\n    id,\n    status,\n    startedAt,\n    onDelete,\n    selectBroadcast,\n    unformattedStartTime,\n  } = props;\n  return (\n    <CampaignContainer data-testid=\"campaign-testid\" key={id}>\n      <CampaignHeader\n        {...{\n          id,\n          status,\n          startedAt,\n          onDelete,\n          selectBroadcast,\n          unformattedStartTime,\n        }}\n      />\n      <CampaignFilters />\n      <CampaignSummary {...props} />\n    </CampaignContainer>\n  );\n}\n","import { useTranslation } from 'react-i18next';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { useCancelProjectNoumCampaignMutation } from '@/apollo/graphql';\nimport { useToast } from '@/hooks';\nimport { TSpan } from '@/components/Typography';\nimport { type DeleteChamberBroadcastModalProps } from '../types';\nimport * as S from '../styles';\n\nexport const DeleteChamberBroadcastModal = ({\n  isOpen,\n  onClose,\n  campaignId,\n  onRefetchCampaigns,\n}: DeleteChamberBroadcastModalProps) => {\n  const { t } = useTranslation();\n  const { addToast } = useToast();\n  const [cancelProjectNoumCampaignMutation, { loading }] =\n    useCancelProjectNoumCampaignMutation({\n      variables: {\n        campaignId,\n      },\n      onCompleted: (response) => {\n        if (response.cancelProjectNoumCampaign) {\n          onRefetchCampaigns();\n          onClose();\n          addToast(\n            'primary',\n            'icon',\n            t('noumena.chamber_edit.broadcasting.campaign.cancel_success'),\n          );\n        }\n      },\n      onError: (err) => {\n        addToast('error', 'none', err.message);\n      },\n    });\n\n  return (\n    <Modal\n      testId=\"chamber-campaign-delete-modal\"\n      open={isOpen}\n      onClose={onClose}\n      size={ModalSize.S}\n      disableBackdropClick\n    >\n      <ModalHeader>\n        {t(`noumena.chamber_edit.broadcasting.campaign.cancel`)}\n      </ModalHeader>\n      <ModalBody\n        loading={loading}\n        loadingDescription={t(\n          'noumena.chamber_edit.broadcasting.campaign.cancel.loading_description',\n        )}\n      >\n        <TSpan\n          font=\"body-l\"\n          colorToken=\"--text-modal-neutral-default\"\n          textAlign=\"center\"\n        >\n          {t(`noumena.chamber_edit.broadcasting.campaign.cancel_subheading`)}\n        </TSpan>\n      </ModalBody>\n      <ModalFooter flexDirection=\"column\" gap={16} loading={loading}>\n        <S.ModalButton\n          size=\"full\"\n          intent=\"negative\"\n          testId=\"chamber-broadcast-cancel-btn\"\n          onClick={() => cancelProjectNoumCampaignMutation()}\n        >\n          {t(`noumena.chamber_edit.broadcasting.campaign.cancel`)}\n        </S.ModalButton>\n        <S.ModalButton\n          size=\"full\"\n          tertiary\n          testId=\"chamber-broadcast-cancel-no-btn\"\n          onClick={onClose}\n        >\n          {t(`noumena.chamber_edit.broadcasting.campaign.dont_cancel`)}\n        </S.ModalButton>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default DeleteChamberBroadcastModal;\n","import { useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Spacer } from '@/layout';\nimport { Icon } from '@/components/Icon';\nimport { useWindowDimensions } from '@/hooks';\nimport { Campaign } from '@/features/noumCampaigns/components';\nimport { Infinite } from '@/components/Infinite';\nimport { Button } from '@/components/Button';\nimport {\n  Modal,\n  ModalBody,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { breakpoints } from '@/constants/devices';\nimport { DeleteChamberBroadcastModal } from '../DeleteBroadcast';\nimport { type BroadcastModalProps } from '../types';\nimport * as S from '../styles';\n\nexport const ViewBroadcastModal = ({\n  isOpen,\n  onClose,\n  onCampaign,\n  campaignsLoading,\n  campaigns,\n  fetchMoreCampaigns,\n  infiniteState,\n  onRefetchCampaigns,\n}: BroadcastModalProps) => {\n  const { t } = useTranslation();\n  const [currentSelectBroadcast, setCurrentSelectBroadcast] =\n    useState<string>('');\n  const [showDeleteBroadcastModal, setShowDeleteBroadcastModal] =\n    useState(false);\n  const { width } = useWindowDimensions();\n\n  const isMobile = useMemo(() => width < 768, [width]);\n  const isDesktop = useMemo(() => width >= breakpoints.LAPTOP, [width]);\n\n  const onCampaignClick = () => {\n    onClose();\n    onCampaign();\n  };\n\n  const toggleShowDeleteBroadcastModal = () => {\n    setShowDeleteBroadcastModal(!showDeleteBroadcastModal);\n  };\n\n  return (\n    <>\n      <Modal\n        isFullScreen={!isDesktop}\n        enableCloseButton\n        testId=\"chamber-broadcast-modal\"\n        open={isOpen}\n        onClose={onClose}\n        size={ModalSize.XL}\n        disableBackdropClick\n      >\n        <ModalHeader\n          action={\n            campaigns.length ? (\n              <Button\n                style={{\n                  marginLeft: !isDesktop ? 'auto' : 'none',\n                }}\n                secondary\n                size=\"small\"\n                onClick={onCampaignClick}\n                testId=\"chamber-broadcast-create-campaign-btn\"\n              >\n                {t(`noumena.chamber_edit.broadcasting.start_action_small`)}\n              </Button>\n            ) : undefined\n          }\n          isFullScreen={!isDesktop}\n          flexDirection={isDesktop ? 'row-reverse' : 'row'}\n          justifyContent={isDesktop ? 'space-between' : 'initial'}\n          rightMobileContainer\n        >\n          {t(`noumena.chamber_edit.broadcasting`)}\n        </ModalHeader>\n        <S.ModalDescription\n          colorToken=\"--text-modal-neutral-default\"\n          font=\"body-l\"\n          style={{\n            alignSelf: 'center',\n          }}\n        >\n          {t(`noumena.chamber_edit.broadcasting.description`)}\n        </S.ModalDescription>\n        <Spacer height=\"16px\" />\n        <ModalBody\n          isFullScreen={isMobile}\n          style={{ paddingRight: 0, paddingLeft: isMobile ? 0 : 12 }}\n          noFooter\n        >\n          {!campaignsLoading && campaigns?.length ? (\n            <Infinite\n              onFetchMore={fetchMoreCampaigns}\n              status={infiniteState}\n              testId=\"campaigns-container\"\n              paddingBottom=\"15px\"\n              style={{\n                flexWrap: 'wrap',\n                justifyContent: isMobile ? 'center' : undefined,\n                width: '100%',\n                overflow: 'unset',\n                flexDirection: 'row',\n                gap: 14,\n              }}\n            >\n              {campaigns.map((data) => (\n                <Campaign\n                  {...data}\n                  key={data.id}\n                  onDelete={toggleShowDeleteBroadcastModal}\n                  selectBroadcast={setCurrentSelectBroadcast}\n                />\n              ))}\n              {campaigns.length === 1 && isDesktop && (\n                <S.EmptyCampaignsContainer />\n              )}\n            </Infinite>\n          ) : (\n            <>\n              <S.NoCampaign data-testid=\"chamber-broadcast-no-broadcast\">\n                <Icon\n                  name=\"megaphone_xxxl\"\n                  size={80}\n                  color=\"--icon-placeholder-neutral-default\"\n                />\n                <S.NoCampaignDescription\n                  font=\"body-l\"\n                  colorToken=\"--text-placeholder-neutral-default\"\n                >\n                  {t(`noumena.chamber_edit.broadcasting.no_campaign.para_1`)}\n                  {t(`noumena.chamber_edit.broadcasting.no_campaign.para_2`)}\n                </S.NoCampaignDescription>\n                <S.ModalButton\n                  secondary\n                  size=\"small\"\n                  onClick={onCampaignClick}\n                  testId=\"chamber-broadcast-create-btn\"\n                >\n                  {t(`noumena.chamber_edit.broadcasting.start_action`)}\n                </S.ModalButton>\n              </S.NoCampaign>\n            </>\n          )}\n        </ModalBody>\n      </Modal>\n      <DeleteChamberBroadcastModal\n        onRefetchCampaigns={onRefetchCampaigns}\n        campaignId={currentSelectBroadcast}\n        isOpen={showDeleteBroadcastModal}\n        onClose={toggleShowDeleteBroadcastModal}\n      />\n    </>\n  );\n};\n\nexport default ViewBroadcastModal;\n","import React from 'react';\nimport { t } from 'i18next';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { TSpan } from '@/components/Typography';\nimport { Button } from '@/components/Button';\n\nexport const UnlinkOnArchiveNoumModal: React.FC<{\n  isOpen: boolean;\n  handleClose: () => void;\n  handleUnlinking: () => void;\n  loading: boolean;\n}> = ({ isOpen, handleClose, handleUnlinking, loading }) => (\n  <Modal\n    testId=\"unlink-archive-noum-modal\"\n    open={isOpen}\n    onClose={handleClose}\n    size={ModalSize.S}\n    disableBackdropClick\n  >\n    <ModalHeader>{t('noumena.link_archive_noums.Noum_is_linked')}</ModalHeader>\n    <ModalBody\n      isFullScreen={false}\n      style={{\n        alignItems: 'center',\n      }}\n    >\n      <TSpan\n        font=\"body-l\"\n        textAlign=\"center\"\n        colorToken=\"--text-modal-neutral-default\"\n      >\n        {t('noumena.link_archive_noums.description')}\n      </TSpan>\n    </ModalBody>\n    <ModalFooter flexDirection=\"column\" gap={16}>\n      <Button\n        testId=\"enable-linking\"\n        size=\"full\"\n        intent=\"negative\"\n        disabled={loading}\n        onClick={handleUnlinking}\n      >\n        {t('noumena.link_archive_noums.Noum_unlink')}\n      </Button>{' '}\n      <Button\n        tertiary\n        size=\"full\"\n        testId=\"cancel-linking\"\n        disabled={loading}\n        onClick={handleClose}\n      >\n        {t('noumena.link_archive_noums.Noum_cancel')}\n      </Button>\n    </ModalFooter>\n  </Modal>\n);\n","import styled from 'styled-components';\nimport { flexRow, borderBox } from '@/common/globalStyles';\n\nexport const NoumenaCopilotContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Header = styled.div`\n  padding: 12px 16px 0px;\n  gap: 12px;\n`;\n\nexport const ResultWrapper = styled.div`\n  border: solid 1px var(--border-card-neutral-highlighted);\n  padding: 16px;\n  gap: 16px;\n  margin: 16px;\n  border-radius: 16px;\n  background-color: #e2eef1;\n  color: var(--text-color);\n  ${flexRow}\n  ${borderBox}\n`;\nexport const StyledAvatar = styled.img`\n  min-width: 52px;\n  width: 52px;\n  height: 52px;\n  border-radius: 12px;\n`;\n\nexport const KeywordWrapper = styled.div`\n  border: solid 1px var(--border-card-neutral-highlighted);\n  padding: 16px;\n  gap: 16px;\n  margin: 16px;\n  border-radius: 16px;\n  background-color: #dff4df;\n  display: flex;\n  flex-direction: row-reverse;\n  color: var(--text-color);\n`;\n\nexport const RecentSearchWrapper = styled.div`\n  background-color: var(--background-color);\n  color: var(--text-color);\n  ${flexRow}\n`;\nexport const ButtonWrapper = styled.div`\n  margin: 16px;\n  display: flex;\n  align-self: flex-end;\n`;\n\nexport const NoResultWrapper = styled.div`\n  border: solid 1px var(--border-card-neutral-highlighted);\n  padding: 16px;\n  gap: 16px;\n  margin: 16px;\n  border-radius: 16px;\n  color: var(--text-color);\n  ${flexRow}\n  ${borderBox}\n`;\n","import { useTranslation } from 'react-i18next';\nimport { useCallback, useMemo, useState, type KeyboardEvent } from 'react';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport generate from 'uniqid';\nimport { SideModal } from '@/components/SideModal';\nimport { useAuth } from '@/features/auth/contexts';\nimport { TextField } from '@/components/TextField';\nimport { Icon } from '@/components/Icon';\nimport { useAdKeyWordsLazyQuery } from '@/apollo/graphql';\nimport { RichTextEditor } from '@/features/richTextEditor';\nimport { Button } from '@/components/Button';\nimport defaultProfile from '@/assets/images/profile_default.png';\nimport { useBreakpoints } from '@/hooks/useBreakpoints';\nimport * as S from './styles';\nimport {\n  type NoumenaCopilotInputs,\n  type NoumenaCopilotProps,\n  type SearchHistory,\n} from './types';\n\nexport const NoumenaCopilot = ({\n  open,\n  onClose,\n  noumId: nounId,\n  ...sideModalProps\n}: NoumenaCopilotProps) => {\n  const { t } = useTranslation();\n  const { user } = useAuth();\n  const [keyWord, setKeyWord] = useState<string>('');\n  const [searchHistory, setSearchHistory] = useState<SearchHistory[]>([]);\n  const { isDesktop } = useBreakpoints();\n  const [getkeyWords, { loading }] = useAdKeyWordsLazyQuery({\n    onCompleted: ({ getAdKeywords }) => {\n      const { choices = [] } = getAdKeywords;\n      if (!choices.length) return;\n      const text = ((choices[0].text || '') as string).trim();\n      const data = [...searchHistory];\n      data.unshift({\n        name: keyWord,\n        text,\n      });\n      setSearchHistory(data);\n      setKeyWord('');\n    },\n  });\n\n  const validationSchema = useMemo(\n    () =>\n      yup\n        .object({\n          keyWord: yup.string().required('Can Not be empty'),\n        })\n        .required(),\n    [],\n  );\n\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setKeyWord(e.currentTarget.value);\n    },\n    [setKeyWord],\n  );\n\n  const onIconClick = useCallback(() => {\n    if (loading) return;\n    getkeyWords({\n      variables: {\n        promptText: keyWord,\n        options: {\n          temperature: 0.5,\n          // model: \"gpt-3.5-turbo\"\n        },\n      },\n    });\n  }, [getkeyWords, keyWord, loading]);\n\n  const {\n    register,\n    formState: { errors },\n  } = useForm<NoumenaCopilotInputs>({\n    resolver: yupResolver(validationSchema),\n  });\n\n  const searchHistoryList = useMemo(\n    () =>\n      searchHistory.map((history) => (\n        <div key={generate()}>\n          <S.ResultWrapper>\n            <S.StyledAvatar src={defaultProfile} alt=\"addingUserAvatar\" />\n            <RichTextEditor\n              initialValue={\n                history.text ? (history.text as string) : 'Not Found'\n              }\n              editEnabled={false}\n              basicToolbar={true}\n            />\n          </S.ResultWrapper>\n          <S.KeywordWrapper>\n            <S.StyledAvatar\n              src={user?.profile?.profilePicture || defaultProfile}\n              alt=\"addingUserAvatar\"\n            />\n            <RichTextEditor\n              initialValue={history.name}\n              editEnabled={false}\n              basicToolbar={true}\n            />\n          </S.KeywordWrapper>\n        </div>\n      )),\n    [searchHistory, user?.profile?.profilePicture],\n  );\n\n  const handleEnterPress = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (!keyWord) return;\n      if (e.key === 'Enter') {\n        onIconClick();\n      }\n    },\n    [keyWord, onIconClick],\n  );\n  return (\n    <>\n      <SideModal\n        placement=\"right\"\n        showCloseButton\n        enableAnimation\n        nonBlockingModal={isDesktop}\n        disableEscapeKeyDown\n        isBackgroundOpacity={!isDesktop}\n        height=\"100%\"\n        padding={0}\n        title={t('noumena.chamber_edit.noumena_copilot')}\n        open={open}\n        onClose={onClose}\n        {...sideModalProps}\n        actionButton={\n          <Button\n            primary\n            size=\"small\"\n            onClick={() => {\n              setKeyWord('');\n              setSearchHistory([]);\n            }}\n          >\n            Clear\n          </Button>\n        }\n      >\n        <S.NoumenaCopilotContainer>\n          <S.Header>\n            <TextField\n              {...register('keyWord', {\n                required: {\n                  value: true,\n                  message: t(\n                    'noumena.email_login_form.valid_email.field_empty',\n                  ),\n                },\n                onChange: handleChange,\n              })}\n              value={keyWord}\n              label={t('noumena.chamber_edit.noumena_copilot_label')}\n              onKeyPress={handleEnterPress}\n              error={!!errors.keyWord}\n              helperText={errors.keyWord?.message}\n              data-testid=\"testEmailLoginTextField\"\n              rightIcon={\n                <Icon\n                  name=\"RocketIcon\"\n                  color=\"--icon-card-neutral-default\"\n                  size={24}\n                  onClick={() => onIconClick()}\n                />\n              }\n            />\n          </S.Header>\n          {loading ? (\n            <S.NoResultWrapper>\n              <RichTextEditor\n                initialValue=\"Fetching results...\"\n                editEnabled={false}\n                basicToolbar={true}\n              />\n            </S.NoResultWrapper>\n          ) : !searchHistory.length && !loading ? (\n            <S.NoResultWrapper>\n              <RichTextEditor\n                initialValue=\"No Chat History\"\n                editEnabled={false}\n                basicToolbar={true}\n              />\n            </S.NoResultWrapper>\n          ) : null}\n          {searchHistoryList}\n        </S.NoumenaCopilotContainer>\n      </SideModal>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { TSpan } from '@/components/Typography';\nimport { Icon } from '@/components/Icon';\nimport { Button } from '@/components/Button';\nimport { type NoumThemeItemWrapperProps } from './types';\n\nexport const ThemePanelContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\nexport const Header = styled.div`\n  padding: 12px 16px 0px;\n  gap: 12px;\n`;\n\nexport const ThemePickerContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n\nexport const PickerBody = styled.div`\n  padding: 16px 16px 16px 16px;\n  display: flex;\n  flex-grow: 1;\n  height: 0;\n  border-bottom: 1px solid var(--border-card-neutral-default);\n  align-items: flex-start;\n  overflow-y: auto;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: 16px;\n`;\n\nexport const PickerFooter = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 16px;\n  gap: 12px;\n`;\n\nexport const CheckLabelWrapper = styled.div``;\n\nexport const ThemeItemWrapper = styled.div<NoumThemeItemWrapperProps>`\n  position: relative;\n  border: 2px solid\n    ${({ isSelected }) =>\n      isSelected\n        ? 'var(--border-card-brand-primary-default)'\n        : 'var(--border-card-neutral-default)'};\n  border-radius: 8px;\n  height: 168px;\n  margin-bottom: 16px;\n  min-width: 40%;\n  flex: 1;\n  cursor: pointer;\n`;\n\nexport const StyledImage = styled.img`\n  width: 100%;\n  border-radius: 5px;\n`;\n\nexport const StyledCheckWrapper = styled.div`\n  position: absolute;\n  top: -1px;\n  left: -1px;\n`;\n\nexport const StyledCheck = styled.img`\n  width: 40px;\n  height: 40px;\n`;\n\nexport const StyledTitle = styled.div<NoumThemeItemWrapperProps>`\n  color: ${({ isSelected }) =>\n    isSelected\n      ? 'var(--text-card-brand-primary-default)'\n      : 'var(--text-card-neutral-highlighted)'};\n\n  font-size: var(--font-body-medium-bold-size);\n  font-family: var(--font-body-medium-bold-font);\n  padding: 12px 16px;\n  font-weight: var(--font-body-medium-bold-weight);\n`;\n\nexport const FontPickersBodyWrapper = styled.div`\n  overflow-y: auto;\n`;\n\nexport const FontPickerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-top: 16px;\n`;\n\nexport const FontTitle = styled(TSpan)`\n  padding: 16px;\n`;\n\nexport const SeparateLine = styled.div<{\n  width?: string;\n}>`\n  width: 100%;\n  height: ${({ width }) => width || '1px'};\n  background-color: var(--bg-separator-neutral-default);\n`;\n\nexport const FontPickerWrap = styled.div`\n  padding: 16px;\n`;\n\nexport const DropdownContainer = styled.div`\n  padding-top: 8px;\n`;\n\nexport const DropDownRightIcon = styled(Icon)<{ isOpen?: boolean }>`\n  transition: transform 0.3s;\n  ${({ isOpen }) => isOpen && 'transform: rotate(180deg)'};\n`;\n\nexport const FontItemOptionButton = styled(Button)`\n  border-radius: 0;\n  min-height: unset;\n  min-width: unset;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  height: max-content;\n  border-radius: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: transparent !important;\n`;\n\nexport const OptionIcon = styled.div<{ selected?: boolean }>`\n  width: 24px;\n  height: 24px;\n  box-sizing: border-box;\n  border: 1px solid var(--border-radiobutton-neutral-default);\n  border-radius: 100%;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &::before {\n    content: ' ';\n    border-radius: 100%;\n    transition: all 0.1s ease-in;\n    background-color: var(--icon-radiobutton-brand-primary-default);\n    ${({ selected }) =>\n      selected\n        ? `\n          width: 12px;\n          height: 12px;\n        `\n        : `\n          width: 0;\n          height: 0;\n        `}\n  }\n`;\n\nexport const FontDropdownRightIcon = styled(Icon)<{ isOpen?: boolean }>`\n  transition: transform 0.3s;\n  ${({ isOpen }) => isOpen && 'transform: rotate(180deg)'};\n`;\n","export default \"__VITE_ASSET__d655c42e__\"","import checkSVG from '@/assets/images/check-m.svg';\nimport { ThemeIcons } from './constants';\nimport * as S from './styles';\nimport { type ThemeItemProps } from './types';\n\nexport const ThemeItem = (props: ThemeItemProps) => {\n  const { isSelected, title, onChangeTheme } = props;\n  const icon = title as keyof typeof ThemeIcons;\n  return (\n    <S.ThemeItemWrapper isSelected={isSelected} onClick={onChangeTheme}>\n      <S.StyledImage src={ThemeIcons[icon]} alt=\"backgroundImage\" />\n      {isSelected && (\n        <S.StyledCheckWrapper>\n          <S.StyledCheck src={checkSVG} alt=\"checkSVG\" />\n        </S.StyledCheckWrapper>\n      )}\n      <S.StyledTitle isSelected={isSelected}>{title}</S.StyledTitle>\n    </S.ThemeItemWrapper>\n  );\n};\n","import { useThemeContext } from '@/providers';\nimport * as S from './styles';\nimport { ThemeItem } from './ThemeItem';\nimport { type ThemePickerProps } from './types';\n\nexport const ThemePicker = ({ themes, noumId }: ThemePickerProps) => {\n  const { selectedThemeId, onChangeTheme } = useThemeContext();\n  return (\n    <S.ThemePickerContainer>\n      <S.PickerBody>\n        {themes &&\n          themes.length &&\n          themes.map((theme) => (\n            <ThemeItem\n              key={`${theme?._id}`}\n              id={theme?._id}\n              title={theme?.name || ''}\n              isSelected={theme?._id === selectedThemeId}\n              onChangeTheme={() => onChangeTheme(noumId, theme?._id)}\n            />\n          ))}\n      </S.PickerBody>\n\n      {/* TODO for future */}\n      {/* <S.PickerFooter>\n        <Checkbox\n          isChecked={isApply}\n          icon={\n            <Icon\n              name=\"tick_m\"\n              size={isApply ? 24 : 0}\n              color=\"--icon-checkbox-neutral-alt-default\"\n            />\n          }\n          onChange={(val) => setIsApply(val)}\n        />\n        <S.CheckLabelWrapper>\n          <TSpan\n            colorToken=\"--text-tablecell-header-neutral-highlighted\"\n            font=\"body-m\"\n          >\n            {t('noumena.customize.theme_apply_label_1')}\n          </TSpan>\n          <br />\n          <TSpan\n            colorToken=\"--text-tablecell-header-neutral-default\"\n            font=\"footnote\"\n          >\n            {t('noumena.customize.theme_apply_label_2')}\n          </TSpan>\n        </S.CheckLabelWrapper>\n      </S.PickerFooter> */}\n    </S.ThemePickerContainer>\n  );\n};\n","import { type Dispatch, type SetStateAction } from 'react';\nimport { type SideModalProps } from '@/components/SideModal/types';\nimport { type ThemeOutput } from '@/apollo/generated/types';\n\nexport interface ThemePanelProps extends SideModalProps {\n  noumId: string;\n}\nexport type NoumThemeItemWrapperProps = {\n  isSelected: boolean;\n};\n\nexport type ThemeItemProps = {\n  id?: string;\n  isSelected: boolean;\n  title: string;\n  onChangeTheme: () => void;\n};\n\nexport type ThemePickerProps = {\n  isApply: boolean;\n  setIsApply: Dispatch<SetStateAction<boolean>>;\n  themes: Array<ThemeOutput | null | undefined>;\n  noumId: string;\n};\n\nexport type FontPickerProps = {\n  title: string;\n  isLastItem: boolean;\n  name: string;\n  selected: string;\n  setFonts: (name: string, value: string) => void;\n};\n\nexport type FontProps = {\n  name: string;\n  value: string;\n};\n\nexport type FontOptionProps = {\n  key: string;\n  label: string;\n  type: 'value';\n  value: FontProps;\n  fontFamily?: string;\n};\n\nexport type RevertModalProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onConfirm?: () => void;\n  onCloseModal?: () => void;\n};\n\nexport enum CustomizeOptions {\n  THEME = 'theme',\n  FONTS = 'fonts',\n}\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { t } from 'i18next';\nimport { TSpan } from '@/components/Typography';\nimport { Dropdown, type DropdownValueType } from '@/components/Dropdown';\nimport { TextField } from '@/components/TextField';\nimport * as S from './styles';\nimport { type FontPickerProps, type FontProps } from './types';\nimport { fontOptions } from './constants';\n\nexport const FontPicker = ({\n  title,\n  isLastItem,\n  name,\n  selected,\n  setFonts,\n}: FontPickerProps) => {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const [search, setSearch] = useState<string>('');\n  const [searchOptions, setOptions] = useState<DropdownValueType<FontProps>[]>(\n    [],\n  );\n  const [numberOfItems, setNumberOfItems] = useState(15);\n\n  const optionsWithIcons: DropdownValueType<FontProps>[] = useMemo(\n    () =>\n      fontOptions.map((option, index) => ({\n        ...option,\n        rightIcon: (\n          <S.FontItemOptionButton\n            neutral\n            leftIcon={\n              <S.OptionIcon selected={option.value.name === selected} />\n            }\n          />\n        ),\n        intent: index % 5 !== 0 ? 'default' : 'danger',\n        selected: false,\n      })),\n    [selected],\n  );\n\n  const selectedOption = useMemo(\n    () => optionsWithIcons.find((_option) => _option.value.name === selected),\n    [selected, optionsWithIcons],\n  );\n\n  const handleFetchMore = useCallback(\n    () => setNumberOfItems(numberOfItems + 15),\n    [numberOfItems],\n  );\n\n  const options = searchOptions.slice(\n    0,\n    Math.min(searchOptions.length, numberOfItems),\n  );\n\n  useEffect(() => {\n    const filteredOptions = optionsWithIcons.filter((option) => {\n      if (option && option.type === 'value' && option.value) {\n        return String(option.value.name)\n          ?.toLowerCase()\n          .includes(search.toLocaleLowerCase());\n      }\n      return true;\n    });\n    setOptions(filteredOptions);\n  }, [optionsWithIcons, search]);\n\n  const onInputChange = (val: string) => {\n    setSearch(val);\n  };\n\n  const onSelectOption = useCallback(\n    (option) => {\n      setFonts(name, option.value.name);\n      setSearch('');\n    },\n    [name, setFonts],\n  );\n\n  return (\n    <S.FontPickerContainer>\n      <S.FontTitle\n        font=\"body-l\"\n        colorToken=\"--text-tablecell-header-neutral-highlighted\"\n      >\n        {title}\n      </S.FontTitle>\n      <S.SeparateLine />\n      <S.FontPickerWrap>\n        <TSpan\n          font=\"footnote-bold\"\n          colorToken=\"--text-card-neutral-highlighted\"\n        >\n          {t('noumena.customize.font_family')}\n        </TSpan>\n        <br />\n        <TSpan font=\"footnote\" colorToken=\"--text-card-neutral-default\">\n          {t('noumena.customize.font_apply_to_all')}\n        </TSpan>\n        <S.DropdownContainer>\n          <Dropdown\n            inputValue={(selectedOption?.label as string) ?? ''}\n            options={optionsWithIcons}\n          >\n            <Dropdown\n              inputValue={search || ''}\n              options={options}\n              placement=\"bottom-start\"\n              usePortal={false}\n              onInputChange={onInputChange}\n              onFetchMore={handleFetchMore}\n              padding=\"0px\"\n              containerPadding=\"12.5px 10px 12.5px 0\"\n              iconColumnWidth={0}\n              minHeight=\"336px\"\n              containerHeight=\"336px\"\n              showInternalSearch\n              onOpen={() => setIsOpen(true)}\n              onClose={() => {\n                setSearch('');\n                setIsOpen(false);\n              }}\n              onSelectOption={onSelectOption}\n              noSearchOptionsText={t('noumena.dropdown.no_search_results.text')}\n              noSearchOptionsTextAlign=\"left\"\n            >\n              {({ inputProps, inputRef, toggle }) => (\n                <TextField\n                  readOnly={true}\n                  ref={inputRef}\n                  {...inputProps}\n                  value={selectedOption?.value.name}\n                  spellCheck=\"false\"\n                  rightIcon={\n                    <S.FontDropdownRightIcon\n                      name=\"chevron_down_m\"\n                      isOpen={isOpen}\n                      size={16}\n                      onClick={toggle}\n                      data-testid=\"styledCountryDownArrow\"\n                    />\n                  }\n                  rightIconColor=\"var(--icon-button-brand-primary-default)\"\n                  isAlwaysFocus={isOpen}\n                  inputSize=\"small\"\n                />\n              )}\n            </Dropdown>\n          </Dropdown>\n        </S.DropdownContainer>\n      </S.FontPickerWrap>\n      {!isLastItem && <S.SeparateLine width=\"3px\" />}\n    </S.FontPickerContainer>\n  );\n};\n","import { t } from 'i18next';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { TSpan } from '@/components/Typography';\nimport { Button } from '@/components/Button';\nimport { Spacer } from '@/layout';\nimport { type RevertModalProps } from './types';\n\nexport const RevertModal = ({\n  isOpen,\n  onClose,\n  onConfirm,\n  onCloseModal,\n}: RevertModalProps) => (\n  <Modal\n    open={isOpen}\n    size={ModalSize.S}\n    onClose={onCloseModal}\n    testId=\"default-theme-revert-modal\"\n  >\n    <ModalHeader>{t('noumena.customize.theme.revert_title')}</ModalHeader>\n    <ModalBody>\n      <TSpan\n        font=\"body-l\"\n        textAlign=\"center\"\n        colorToken=\"--text-modal-neutral-default\"\n        data-testid=\"theme-revert-confirmation-modal-description\"\n      >\n        {t('noumena.customize.theme.revert_description')}\n      </TSpan>\n    </ModalBody>\n    <Spacer height={16} />\n    <ModalFooter\n      isFullScreen={false}\n      gap={16}\n      flexDirection=\"column\"\n      marginTop={12}\n    >\n      <Button\n        primary\n        size=\"full\"\n        onClick={onConfirm}\n        data-testid=\"confirm-button\"\n      >\n        {t('noumena.customize.theme.revert_confirm')}\n      </Button>\n      <Button\n        tertiary\n        intent=\"negative\"\n        size=\"full\"\n        onClick={onClose}\n        data-testid=\"cancel-button\"\n      >\n        {t('noumena.customize.theme.revert_cancel')}\n      </Button>\n    </ModalFooter>\n  </Modal>\n);\n","import { t } from 'i18next';\nimport { useCallback, useMemo, useState } from 'react';\nimport { Button } from '@/components/Button';\nimport { SideModal } from '@/components/SideModal';\nimport { breakpoints } from '@/constants/devices';\nimport { useWindowDimensions } from '@/hooks';\nimport { useThemeContext } from '@/providers';\nimport BasicChipsTabsForm from '@/components/Tabs/TabsForm';\nimport { type TFonts } from '@/common/types';\nimport { ThemePicker } from './ThemePicker';\nimport { CustomizeOptions, type ThemePanelProps } from './types';\nimport * as S from './styles';\nimport { FontPicker } from './FontPicker';\nimport { fontLabels, customizeOptions, DefaultFont } from './constants';\nimport { RevertModal } from './RevertModal';\n\nexport const ThemePanel = ({\n  open,\n  onClose,\n  noumId: nounId,\n  ...sideModalProps\n}: ThemePanelProps) => {\n  const [customizeOption, setCustomizeOption] = useState(\n    CustomizeOptions.THEME,\n  );\n  const [isApply, setIsApply] = useState(true);\n  const [isOpenRevert, setIsOpenRevert] = useState(false);\n\n  const { width } = useWindowDimensions();\n  const { themes, selectedFonts, onChangeFonts, onReset } = useThemeContext();\n\n  const isDesktop = useMemo(() => width >= breakpoints.TABLET_L, [width]);\n\n  const handleCloseRevertModal = useCallback(() => setIsOpenRevert(false), []);\n  const handleConfirmRevert = useCallback(() => {\n    onReset(nounId);\n    setIsOpenRevert(false);\n  }, [nounId, onReset]);\n\n  const setFonts = useCallback(\n    (name: string, value: string) => {\n      let font = { [name]: value };\n      if (name === 'body') {\n        font = {\n          ...font,\n          footnote: value,\n          input: value,\n          link: value,\n          systeminfo: value,\n        };\n      }\n      onChangeFonts(nounId, { ...selectedFonts, ...font });\n    },\n    [nounId, onChangeFonts, selectedFonts],\n  );\n\n  return (\n    <>\n      <SideModal\n        className=\"theme_container\"\n        placement=\"right\"\n        showCloseButton\n        enableAnimation\n        nonBlockingModal={isDesktop}\n        disableEscapeKeyDown\n        isBackgroundOpacity={!isDesktop}\n        height=\"100%\"\n        padding={0}\n        title={t('noumena.customize.header')}\n        open={open}\n        onClose={onClose}\n        actionButton={\n          <Button textOnly size=\"small\" onClick={() => setIsOpenRevert(true)}>\n            {t('noumena.customize.reset_changes')}\n          </Button>\n        }\n        {...sideModalProps}\n      >\n        <S.ThemePanelContainer>\n          <S.Header>\n            <BasicChipsTabsForm\n              onChange={(v) => setCustomizeOption(v as CustomizeOptions)}\n              inputList={customizeOptions}\n              selectedId={customizeOption}\n              mode=\"isBackground\"\n              isWithoutImage\n              textFont=\"--font-body-medium-regular-font\"\n              fontSize=\"--font-body-medium-regular-size\"\n              fullWidth\n            />\n          </S.Header>\n          {customizeOption === CustomizeOptions.THEME && (\n            <ThemePicker\n              isApply={isApply}\n              setIsApply={setIsApply}\n              themes={themes}\n              noumId={nounId}\n            />\n          )}\n          {customizeOption === CustomizeOptions.FONTS && (\n            <S.FontPickersBodyWrapper>\n              {fontLabels.map((item, index) => (\n                <FontPicker\n                  key={`font-picker-${item.label}`}\n                  title={item.label}\n                  isLastItem={index === fontLabels.length - 1}\n                  name={item.name}\n                  selected={\n                    selectedFonts[item.name as keyof TFonts] ?? DefaultFont\n                  }\n                  setFonts={setFonts}\n                />\n              ))}\n            </S.FontPickersBodyWrapper>\n          )}\n        </S.ThemePanelContainer>\n      </SideModal>\n      <RevertModal\n        isOpen={isOpenRevert}\n        onClose={handleCloseRevertModal}\n        onCloseModal={handleCloseRevertModal}\n        onConfirm={handleConfirmRevert}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SettingsLink = styled.div`\n  cursor: pointer;\n  font-weight: bold;\n  display: inline-flex;\n  align-items: center;\n`;\n","import { SpaceStatusEnum, SpaceTypeEnum } from '@/apollo/generated/types';\nimport { type SpaceOutputFragment } from '@/apollo/graphql';\nimport { Button } from '@/components/Button';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { Icon } from '@/components/Icon';\nimport { Spinner } from '@/components/Spinner';\nimport { TSpan } from '@/components/Typography';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useLaunchDarkly, useToast } from '@/hooks';\nimport { useCheckChamberCanBePublished } from '@/features/money/hooks';\nimport { Spacer } from '@/layout';\nimport {\n  WrapperLoading,\n  WrapperSpinner,\n} from '@/screens/Chamber/components/ElementWrapper/styles';\nimport { trackEvent } from '@/utils/tracking';\nimport { capitalize } from 'lodash';\nimport { memo, useCallback, useState } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport {\n  usePublishNoumLayoutHelper,\n  usePublishSpaceHelper,\n  useRestoreSpaceHelper,\n} from '@/features/noums/hooks/spaceQuery';\nimport { SettingsLink } from './styles';\n\nexport interface ChamberPublishProps {\n  spaceId: string;\n  space?: SpaceOutputFragment;\n  isOpen: boolean;\n  handleClose: (isSuccess?: boolean) => void;\n  handleClickInfo: () => void;\n  emptyElementErrorMessage?: string | undefined | null;\n  isHomeNoum: boolean;\n  isRestored?: boolean;\n  setSetUpSlotForNoum: (arg0: boolean) => void;\n}\n\nconst ChamberPublish = memo((props: ChamberPublishProps) => {\n  const { t } = useTranslation();\n  const {\n    flags: { noumEditor2 },\n  } = useLaunchDarkly();\n  const { user } = useAuth();\n  const { addToast } = useToast();\n  const [waiting, setWaiting] = useState(false);\n  const { publishSpaceHelper, loading } = usePublishSpaceHelper();\n  const { restoreSpaceHelper, loading: restoreLoading } =\n    useRestoreSpaceHelper();\n  const { publishNoumLayoutHelper, loading: publishedLoading } =\n    usePublishNoumLayoutHelper();\n\n  const { checkChamberCanBePublished } = useCheckChamberCanBePublished();\n\n  const callPublishSpaceHelper = useCallback(async () => {\n    await publishSpaceHelper(props.spaceId, props.space, noumEditor2, () => {\n      if (props.space?.type === SpaceTypeEnum.Home) {\n        trackEvent(\n          props.space.status === SpaceStatusEnum.Draft\n            ? 'home_chamber_create'\n            : 'home_chamber_edit',\n          {\n            DeviceType: navigator.userAgent,\n            UUID: user?._id,\n            ChamberId: props.spaceId,\n          },\n        );\n        if (props.space.elements?.some((el) => !!el?.unSaved?.isDeleted)) {\n          trackEvent('home_chamber_delete_element', {\n            DeviceType: navigator.userAgent,\n            UUID: user?._id,\n            ChamberId: props.spaceId,\n          });\n        }\n      }\n    });\n  }, [noumEditor2, props.space, props.spaceId, publishSpaceHelper, user?._id]);\n\n  const makeCallPublishSpaceHelper = useCallback(() => {\n    callPublishSpaceHelper().then(() => {\n      setWaiting(false);\n      if (props.space?.type === SpaceTypeEnum.Project && !props?.isRestored) {\n        trackEvent('publishPN', {\n          UUID: user?._id,\n          ProjectNoumID: props.spaceId,\n        });\n      }\n      props.handleClose(true);\n    });\n  }, [callPublishSpaceHelper, props, user?._id]);\n\n  const followRegularPublishFLow = useCallback(() => {\n    setWaiting(true);\n    setTimeout(async () => {\n      if (props?.isRestored) {\n        await restoreSpaceHelper(props.spaceId);\n      } else if (noumEditor2) {\n        await publishNoumLayoutHelper(props.spaceId).then(async () => {\n          makeCallPublishSpaceHelper();\n        });\n      } else {\n        makeCallPublishSpaceHelper();\n      }\n    }, 1000);\n  }, [\n    noumEditor2,\n    props,\n    publishNoumLayoutHelper,\n    restoreSpaceHelper,\n    makeCallPublishSpaceHelper,\n  ]);\n  const handleConfirm = async () => {\n    if (props.emptyElementErrorMessage) {\n      addToast('error', 'none', props.emptyElementErrorMessage);\n      props.handleClose(false);\n    } else if (SpaceTypeEnum.Home === props.space?.type) {\n      //  for Home Noum Subscription is not required\n      followRegularPublishFLow();\n    } else {\n      //  check if already subscribed  -- then folow regular publish\n      // if not subscribed - show subscription flow\n      await checkChamberCanBePublished(\n        props.spaceId,\n        followRegularPublishFLow,\n        props.setSetUpSlotForNoum,\n        props.handleClose,\n      );\n    }\n  };\n\n  return (\n    <Modal\n      testId=\"testChamberPublish\"\n      open={props.isOpen || loading || restoreLoading || publishedLoading}\n      onClose={props.handleClose}\n      size={ModalSize.S}\n      disableBackdropClick\n    >\n      {waiting || loading || publishedLoading ? (\n        <WrapperLoading>\n          <WrapperSpinner>\n            <Spinner />\n            <Spacer height=\"20px\" />\n          </WrapperSpinner>\n          <Spacer height=\"16px\" />\n          <TSpan\n            data-testid=\"bodyChamberPublishSaving\"\n            font=\"body-l\"\n            colorToken=\"--text-modal-neutral-default\"\n          >\n            {t(`noumena.container.chamber_publish.body.loading`)}\n          </TSpan>\n        </WrapperLoading>\n      ) : (\n        <>\n          <ModalHeader data-testid=\"titleChamberPublish\">\n            {t(`noumena.container.chamber_publish.title`)}\n          </ModalHeader>\n          <ModalBody align=\"center\" hideScrollbar>\n            <TSpan\n              data-testid=\"bodyChamberPublishP1\"\n              font=\"body-l\"\n              colorToken=\"--text-modal-neutral-default\"\n              textAlign=\"center\"\n            >\n              {props?.isHomeNoum\n                ? t(`noumena.container.home_chamber_publish.body.p1`)\n                : t(`noumena.container.chamber_publish.body.p1`)}\n            </TSpan>\n            <TSpan\n              data-testid=\"bodyChamberPublishP2\"\n              font=\"body-l\"\n              colorToken=\"--text-modal-neutral-default\"\n              textAlign=\"center\"\n            >\n              {props?.isHomeNoum ? (\n                t(`noumena.container.home_chamber_publish.body.p2`)\n              ) : (\n                <Trans\n                  i18nKey=\"noumena.container.chamber_publish.body.p2\"\n                  components={{\n                    link: (\n                      <SettingsLink onClick={props.handleClickInfo}>\n                        <TSpan\n                          font=\"body-l\"\n                          colorToken=\"--text-modal-neutral-highlighted\"\n                          style={{ marginRight: '2px' }}\n                        >\n                          {capitalize(props.space?.projectType ?? '')}\n                        </TSpan>\n                        <Icon\n                          name=\"info_m\"\n                          size={20}\n                          color=\"--icon-modal-neutral-highlighted\"\n                        />\n                      </SettingsLink>\n                    ),\n                  }}\n                />\n              )}\n            </TSpan>\n          </ModalBody>\n          <ModalFooter flexDirection=\"column\" gap={16}>\n            <Button\n              data-testid=\"confirmChamberPublish\"\n              primary\n              size=\"full\"\n              intent=\"positive\"\n              onClick={handleConfirm}\n            >\n              {t(`noumena.container.chamber_publish.confirm`)}\n            </Button>\n            <Button\n              data-testid=\"cancelChamberPublish\"\n              tertiary\n              size=\"full\"\n              onClick={() => props.handleClose()}\n            >\n              {t(`noumena.container.chamber_publish.cancel`)}\n            </Button>\n          </ModalFooter>\n        </>\n      )}\n    </Modal>\n  );\n});\n\nexport default ChamberPublish;\n","import { type SpaceOutputFragment } from '@/apollo/graphql';\nimport { Button } from '@/components/Button';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { Spinner } from '@/components/Spinner';\nimport { TSpan } from '@/components/Typography';\nimport {\n  useNoumLayoutAsDraftHelper,\n  useSaveAsDraftSpaceHelper,\n} from '@/features/noums/hooks/spaceQuery';\nimport { useLaunchDarkly, useToast } from '@/hooks';\nimport { Spacer } from '@/layout';\nimport {\n  WrapperLoading,\n  WrapperSpinner,\n} from '@/screens/Chamber/components/ElementWrapper/styles';\nimport { memo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport interface ChamberSaveAsDraftProps {\n  spaceId: string;\n  isOpen: boolean;\n  space?: SpaceOutputFragment;\n  handleClose: () => void;\n  emptyElementErrorMessage?: string | undefined | null;\n}\n\nconst ChamberSaveAsDraft = memo((props: ChamberSaveAsDraftProps) => {\n  const {\n    flags: { noumEditor2 },\n  } = useLaunchDarkly();\n  const { t } = useTranslation();\n  const { addToast } = useToast();\n  const [waiting, setWaiting] = useState(false);\n  const { saveAsDraftSpaceHelper, loading } = useSaveAsDraftSpaceHelper();\n  const { noumLayoutAsDraftHelper, loading: saveAsDraftLoading } =\n    useNoumLayoutAsDraftHelper();\n\n  const handleConfirm = async () => {\n    if (props.emptyElementErrorMessage) {\n      addToast('error', 'none', props.emptyElementErrorMessage);\n      props.handleClose();\n    } else {\n      setWaiting(true);\n\n      setTimeout(async () => {\n        if (noumEditor2) await noumLayoutAsDraftHelper(props.spaceId);\n        await saveAsDraftSpaceHelper(props.spaceId, props.space);\n        setWaiting(false);\n        props.handleClose();\n      }, 1000);\n    }\n  };\n\n  return (\n    <Modal\n      testId=\"testChamberSaveAsDraft\"\n      open={props.isOpen || loading}\n      onClose={props.handleClose}\n      size={ModalSize.S}\n      disableBackdropClick\n    >\n      {waiting || loading || saveAsDraftLoading ? (\n        <WrapperLoading>\n          <WrapperSpinner>\n            <Spinner />\n            <Spacer height=\"20px\" />\n          </WrapperSpinner>\n          <Spacer height=\"16px\" />\n          <TSpan\n            data-testid=\"bodyChamberSaveAsDraftSaving\"\n            font=\"body-l\"\n            colorToken=\"--text-modal-neutral-default\"\n          >\n            {t(`noumena.container.chamber_save_as_draft.body.loading`)}\n          </TSpan>\n        </WrapperLoading>\n      ) : (\n        <>\n          <ModalHeader data-testid=\"titleChamberSaveAsDraft\">\n            {t(`noumena.container.chamber_save_as_draft.title`)}\n          </ModalHeader>\n          <ModalBody style={{ textAlign: 'center' }}>\n            <TSpan\n              colorToken=\"--text-modal-neutral-default\"\n              data-testid=\"bodyChamberSaveAsDraft\"\n              font=\"body-l\"\n            >\n              {t(`noumena.container.chamber_save_as_draft.body`)}\n            </TSpan>\n          </ModalBody>\n          <ModalFooter flexDirection=\"column\" gap={16}>\n            <Button\n              data-testid=\"confirmChamberSaveAsDraft\"\n              primary\n              size=\"full\"\n              onClick={handleConfirm}\n            >\n              {t(`noumena.container.chamber_save_as_draft.confirm`)}\n            </Button>\n            <Button\n              data-testid=\"cancelChamberSaveAsDraft\"\n              tertiary\n              size=\"full\"\n              onClick={props.handleClose}\n            >\n              {t(`noumena.container.chamber_save_as_draft.cancel`)}\n            </Button>\n          </ModalFooter>\n        </>\n      )}\n    </Modal>\n  );\n});\n\nexport default ChamberSaveAsDraft;\n","import { type SpaceOutputFragment } from '@/apollo/graphql';\nimport { Button } from '@/components/Button';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { Spinner } from '@/components/Spinner';\nimport { TSpan } from '@/components/Typography';\nimport {\n  useCancelNoumLayoutChangesHelper,\n  useDiscardSpaceChangeHelper,\n  useNoumLayoutAsDraftHelper,\n  useSaveAsDraftSpaceHelper,\n} from '@/features/noums/hooks/spaceQuery';\nimport { useLaunchDarkly } from '@/hooks';\nimport { Spacer } from '@/layout';\nimport {\n  WrapperLoading,\n  WrapperSpinner,\n} from '@/screens/Chamber/components/ElementWrapper/styles';\nimport { memo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport interface ChamberDiscardChangeProps {\n  spaceId: string;\n  space?: SpaceOutputFragment;\n  isOpen: boolean;\n  handleClose: (isSuccess?: boolean) => void;\n}\n\nexport const ChamberDiscardChange = memo((props: ChamberDiscardChangeProps) => {\n  const {\n    flags: { noumEditor2 },\n  } = useLaunchDarkly();\n  const { t } = useTranslation();\n  const [waiting, setWaiting] = useState(false);\n  const { discardSpaceChangeHelper, loading: discardLoading } =\n    useDiscardSpaceChangeHelper();\n  const { saveAsDraftSpaceHelper, loading: saveLoading } =\n    useSaveAsDraftSpaceHelper();\n  const { noumLayoutAsDraftHelper, loading: saveAsDraftLoading } =\n    useNoumLayoutAsDraftHelper();\n  const { cancelNoumLayoutChangesHelper, loading: cancelLoading } =\n    useCancelNoumLayoutChangesHelper();\n\n  const handleConfirm = async () => {\n    setWaiting(true);\n\n    setTimeout(async () => {\n      if (noumEditor2) await cancelNoumLayoutChangesHelper(props.spaceId);\n      await discardSpaceChangeHelper(props.spaceId);\n      setWaiting(false);\n      props.handleClose(true);\n    }, 1000);\n  };\n\n  const handleSaveAsDraft = async () => {\n    setWaiting(true);\n\n    setTimeout(async () => {\n      if (noumEditor2) await noumLayoutAsDraftHelper(props.spaceId);\n      await saveAsDraftSpaceHelper(props.spaceId, props.space);\n      setWaiting(false);\n      props.handleClose(true);\n    }, 1000);\n  };\n\n  const message = saveLoading\n    ? t(`noumena.container.chamber_save_as_draft.body.loading`)\n    : t(`noumena.container.chamber_discard_change.body.loading`);\n\n  return (\n    <Modal\n      testId=\"testChamberDiscardChange\"\n      open={props.isOpen || discardLoading || saveLoading}\n      onClose={props.handleClose}\n      size={ModalSize.S}\n      disableBackdropClick\n    >\n      {waiting ||\n      discardLoading ||\n      saveLoading ||\n      saveAsDraftLoading ||\n      cancelLoading ? (\n        <WrapperLoading>\n          <WrapperSpinner>\n            <Spinner />\n            <Spacer height=\"20px\" />\n          </WrapperSpinner>\n          <Spacer height=\"16px\" />\n\n          <TSpan\n            colorToken=\"--text-modal-neutral-default\"\n            data-testid=\"bodyChamberDiscardChangeSaving\"\n            font=\"body-l\"\n          >\n            {message}\n          </TSpan>\n        </WrapperLoading>\n      ) : (\n        <>\n          <ModalHeader data-testid=\"titleChamberDiscardChange\">\n            {t(`noumena.container.chamber_discard_change.title`)}\n          </ModalHeader>\n          <ModalBody align=\"center\">\n            <TSpan\n              colorToken=\"--text-modal-neutral-default\"\n              data-testid=\"bodyChamberDiscardChange\"\n              font=\"body-l\"\n              textAlign=\"center\"\n            >\n              {t(`noumena.container.chamber_discard_change.body`)}\n            </TSpan>\n          </ModalBody>\n          <ModalFooter flexDirection=\"column\" gap={16}>\n            <Button\n              data-testid=\"confirmChamberDiscardChange\"\n              primary\n              intent=\"negative\"\n              size=\"full\"\n              onClick={handleConfirm}\n            >\n              {t(`noumena.container.chamber_discard_change.discard_changes`)}\n            </Button>\n            <Button\n              data-testid=\"saveAsDraftChamberDiscardChange\"\n              tertiary\n              size=\"full\"\n              onClick={handleSaveAsDraft}\n            >\n              {t(`noumena.container.chamber_discard_change.save_as_a_draft`)}\n            </Button>\n            <Button\n              data-testid=\"continueEditingChamberDiscardChange\"\n              tertiary\n              size=\"full\"\n              onClick={() => props.handleClose()}\n            >\n              {t(`noumena.container.chamber_discard_change.continue_editing`)}\n            </Button>\n          </ModalFooter>\n        </>\n      )}\n    </Modal>\n  );\n});\n\nexport default ChamberDiscardChange;\n","import { type FC, memo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { TSpan } from '@/components/Typography/Typography';\nimport {\n  useCancelNoumLayoutChangesHelper,\n  useRestoreSpaceHelper,\n} from '@/features/noums/hooks/spaceQuery';\nimport { useLaunchDarkly } from '@/hooks/launchDarkly';\nimport { ChamberActionModal } from '../ActionModal/ChamberActionModal';\nimport {\n  type ChamberRestoreModalBodyProps,\n  type ChamberRestoreModalProps,\n} from './types';\n\nexport const ChamberRestoreModalBody: FC<ChamberRestoreModalBodyProps> = ({\n  version,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <TSpan\n        font=\"body-l\"\n        colorToken=\"--text-modal-neutral-default\"\n        data-testid=\"description1\"\n        style={{ paddingBottom: 12 }}\n      >\n        {t(`noumena.container.chamber.restore.modal.body.p1`)}{' '}\n        <TSpan\n          colorToken=\"--text-modal-neutral-highlighted\"\n          data-testid=\"description-restore-version\"\n          font=\"body-l-bold\"\n        >\n          {version}?\n        </TSpan>\n      </TSpan>\n      <TSpan\n        font=\"body-l\"\n        colorToken=\"--text-modal-neutral-default\"\n        data-testid=\"description2\"\n        style={{ paddingBottom: 12 }}\n      >\n        {t(`noumena.container.chamber.restore.modal.body.p2`)}\n      </TSpan>\n    </>\n  );\n};\n\nexport const ChamberRestoreModal = memo((props: ChamberRestoreModalProps) => {\n  const {\n    flags: { noumEditor2 },\n  } = useLaunchDarkly();\n  const { t } = useTranslation();\n  const { restoreSpaceHelper, loading: restoreLoading } =\n    useRestoreSpaceHelper();\n  const { cancelNoumLayoutChangesHelper, loading: cancelLoading } =\n    useCancelNoumLayoutChangesHelper();\n\n  const handleConfirm = async () => {\n    await restoreSpaceHelper(props.spaceId);\n    if (noumEditor2) {\n      await cancelNoumLayoutChangesHelper(props.spaceId);\n    }\n    props.sucessCallback();\n  };\n\n  const loading = restoreLoading || cancelLoading;\n\n  return (\n    <ChamberActionModal\n      {...props}\n      isOpen={props.isOpen || loading}\n      title={t(`noumena.container.chamber.restore.modal.title`)}\n      isWaiting={loading}\n      textForWaiting={t(\n        `noumena.container.chamber.restore.modal.restoring_previous_version`,\n      )}\n      positiveBtnLabel={t(\n        `noumena.container.chamber.restore.modal.button.restore`,\n      )}\n      negativeBtnLabel={t(`noumena.cancel`)}\n      positiveBtnType=\"primary\"\n      body={<ChamberRestoreModalBody version={props.version} />}\n      confirmCallback={handleConfirm}\n    />\n  );\n});\n\nexport default ChamberRestoreModal;\n","import React, { useCallback, useMemo } from 'react';\nimport { t } from 'i18next';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from '@/components/ExtendedModal';\nimport { Button } from '@/components/Button';\nimport { dropdownRenderOptions } from '@/components/Dropdown';\nimport { Icon } from '@/components/Icon';\nimport { useWindowDimensions } from '@/hooks';\nimport { visibilityOptions } from '../ChamberVisibilityInvite/data';\nimport { type VisibilityDropdownProps } from '../ChamberVisibilityInvite/types';\n\nexport const ChamberPublishVisibilityInfo: React.FC<{\n  isOpen: boolean;\n  handleClose: () => void;\n}> = ({ isOpen, handleClose }) => {\n  const { width } = useWindowDimensions();\n  const isMobile = useMemo(() => width < 768, [width]);\n\n  const optionIcon = useCallback((option: string) => {\n    switch (option) {\n      case 'PUBLIC':\n        return (\n          <Button\n            tertiary\n            size=\"small\"\n            icon={\n              <Icon\n                color=\"--icon-button-neutral-default\"\n                name=\"eye_on_m\"\n                size={24}\n              />\n            }\n          />\n        );\n      case 'PRIVATE':\n        return (\n          <Button\n            tertiary\n            size=\"small\"\n            icon={\n              <Icon\n                name=\"lock_m\"\n                color=\"--icon-button-neutral-default\"\n                size={24}\n              />\n            }\n          />\n        );\n      case 'SECRET':\n        return (\n          <Button\n            tertiary\n            size=\"small\"\n            icon={\n              <Icon\n                name=\"eye_off_m\"\n                color=\"--icon-button-neutral-default\"\n                size={24}\n              />\n            }\n          />\n        );\n      default:\n        return null;\n    }\n  }, []);\n\n  const selectableOptions: VisibilityDropdownProps[] = useMemo(\n    () =>\n      visibilityOptions.map((o) => ({\n        ...o,\n        icon: optionIcon(o.value),\n        selected: false,\n      })),\n    [optionIcon],\n  );\n\n  return (\n    <Modal\n      isFullScreen={isMobile}\n      testId=\"link-confirmation-modal\"\n      open={isOpen}\n      onClose={handleClose}\n      style={{\n        width: isMobile ? 'auto' : '450px',\n        maxWidth: '450px',\n      }}\n      closeButtonStyles={{\n        enforceRight: !isMobile,\n        horizontal: 24,\n      }}\n      enableCloseButton\n      disableBackdropClick\n    >\n      <ModalHeader isFullScreen={false}>\n        {t('noumena.container.chamber_publish_visibility.title')}\n      </ModalHeader>\n      <ModalBody\n        isFullScreen={false}\n        style={{\n          alignItems: 'center',\n        }}\n      >\n        {selectableOptions.map(\n          dropdownRenderOptions(\n            () => {},\n            null,\n            () => {},\n            {\n              activeSubItem: null,\n              iconColumnWidth: 40,\n              dropdownItemStyle: {\n                width: '100%',\n              },\n            },\n          ),\n        )}\n      </ModalBody>\n      <ModalFooter\n        isFullScreen={false}\n        marginTop={28}\n        flexDirection=\"column\"\n        gap={16}\n      >\n        <Button size=\"full\" tertiary onClick={handleClose}>\n          {t('noumena.close')}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n","import { forwardRef, type Ref, useCallback, useContext, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { type Transition } from 'history';\nimport { useParams } from 'react-router-dom';\nimport { Icon } from '@/components/Icon';\nimport ChamberPublish from '@/screens/Chamber/components/modals/ChamberPublish';\nimport ChamberSaveAsDraft from '@/screens/Chamber/components/modals/ChamberSaveAsDraft';\nimport { ChamberDiscardChange } from '@/screens/Chamber/components/modals/ChamberDiscardChange';\nimport { useWindowDimensions } from '@/hooks/dimensions';\nimport useBlocker from '@/hooks/useBlocker';\nimport { ChamberRestoreModal } from '@/screens/Chamber/components/modals/ChamberActionModal/Restore/ChamberRestoreModal';\nimport { useAuth } from '@/features/auth/contexts';\nimport {\n  // useCheckChamberCanBePublished,\n  useLaunchDarkly,\n} from '@/hooks';\nimport { DisablePublishOrDraftContext } from '@/providers';\nimport { ChamberPublishVisibilityInfo } from '@/screens/Chamber/components/modals/ChamberPublishVisibilityInfo';\nimport SetupNoumModal from '@/screens/Plan/SetupNoumModal';\nimport { useNoumContext } from '@/screens/Chamber/ViewChamber/ChamberProvider';\nimport { IconWrapper } from '@/components/Header/styles';\nimport {\n  EditHeaderWrapper,\n  StatusLabel,\n  StyledButton,\n  StatusWrapper,\n  MobileStatusWrapper,\n  EditChangeStatusText,\n  ButtonsWrapper,\n  LastUpdateLabel,\n} from './styles';\nimport { type EditHeaderProps } from './types';\n\nexport const EditHeader = forwardRef(\n  (\n    {\n      publishedDate = '',\n      lastChangedDate = '',\n      hasUnsaved = false,\n      hasUnsavedPermissions = false,\n      hasDraft = false,\n      hasPublished = false,\n      spaceId,\n      space,\n      emptyElementErrorMessage,\n      onChamberRestore,\n      isRestored = false,\n      isNavigateToCustomPreview,\n      cancelNavigateToCustomPreview,\n      onNavigate,\n    }: EditHeaderProps,\n    ref: Ref<HTMLDivElement>,\n  ) => {\n    const { t } = useTranslation();\n    const { id = '' } = useParams();\n    const { disableUpdate } = useContext(DisablePublishOrDraftContext);\n    const [isOpenPublishModal, togglePublishModal] = useState<boolean>(false);\n    const [isOpenVisibilityInfoModal, toggleVisibilityInfoModal] =\n      useState<boolean>(false);\n    const [isOpenSaDModal, toggleSaDModal] = useState<boolean>(false);\n    const [isOpenExitModal, toggleExitModal] = useState<boolean>(false);\n    const [isOpenRestoreModal, toggleRestoreModal] = useState<boolean>(false);\n    const { masterId: mainSpaceId, isPending: isUserPending } = useAuth();\n    const [setUpSlotForNoum, setSetUpSlotForNoum] = useState<boolean>(false);\n    const { onRefetchSpaceByConfig, onRefetchSpaceById } = useNoumContext();\n\n    // const { checkChamberCanBePublished } = useCheckChamberCanBePublished();\n\n    const { flags } = useLaunchDarkly();\n\n    const handleBlockNavigation = ({ retry }: Transition) => {\n      if (hasUnsaved) {\n        toggleExitModal(true);\n      } else {\n        retry();\n      }\n    };\n\n    useBlocker(handleBlockNavigation, hasUnsaved && !isNavigateToCustomPreview);\n\n    const handleClickPublish = async () => {\n      togglePublishModal(true);\n      // await checkChamberCanBePublished(\n      //   id,\n      //   togglePublishModal,\n      //   setSetUpSlotForNoum,\n      //   space?.type,\n      // );\n    };\n\n    const handleClickDraft = () => {\n      toggleSaDModal(true);\n    };\n\n    const handleClickExit = useCallback(() => {\n      if (hasUnsaved) {\n        toggleExitModal(true);\n      } else onNavigate(id);\n    }, [hasUnsaved, id, onNavigate]);\n\n    const handleClosePublishModal = useCallback(\n      (isSuccess?: boolean) => {\n        togglePublishModal(false);\n        if (isSuccess) {\n          onRefetchSpaceByConfig();\n          onRefetchSpaceById();\n          onNavigate(id, `/noum/${id}`);\n        }\n      },\n      [onRefetchSpaceByConfig, onRefetchSpaceById, onNavigate, id],\n    );\n\n    const handleCloseVisibilityInfoModal = () => {\n      toggleVisibilityInfoModal(false);\n      togglePublishModal(true);\n    };\n\n    const { width } = useWindowDimensions();\n\n    const isTablet = width > 768;\n\n    const handleCloseSaDModal = () => {\n      toggleSaDModal(false);\n    };\n\n    const handleCloseExitModal = useCallback(\n      (isSuccess?: boolean) => {\n        toggleExitModal(false);\n        if (isSuccess) {\n          onNavigate(id);\n        }\n        cancelNavigateToCustomPreview?.();\n      },\n      [cancelNavigateToCustomPreview, id, onNavigate],\n    );\n\n    const handleClickRestore = () => {\n      toggleRestoreModal(true);\n    };\n\n    const RenderMobileStatus = () => (\n      <StatusWrapper className=\"xs-block\">\n        <MobileStatusWrapper>\n          {hasUnsaved || hasDraft ? (\n            <>\n              {hasUnsaved || (hasUnsaved && hasDraft) ? (\n                <EditChangeStatusText colorToken=\"--text-top-nav-danger-primary-default\">\n                  {t('noumena.header.unsaved_changes.text')}\n                </EditChangeStatusText>\n              ) : hasDraft && !hasUnsaved ? (\n                <EditChangeStatusText colorToken=\"--text-top-nav-neutral-default\">\n                  {t('noumena.header.drafted_changes.text')}\n                </EditChangeStatusText>\n              ) : (\n                <></>\n              )}\n              {hasPublished && !isRestored && (\n                <LastUpdateLabel onClick={handleClickRestore}>\n                  {t('noumena.header.restore_last_saved.text')}\n                  <br />\n                </LastUpdateLabel>\n              )}\n            </>\n          ) : (\n            <></>\n          )}\n        </MobileStatusWrapper>\n      </StatusWrapper>\n    );\n\n    const RenderStatus = ({ className: name = 'xs-hidden' }) => (\n      <StatusWrapper className={`xs-${name}`}>\n        {hasUnsaved || hasDraft || isRestored ? (\n          <>\n            <StatusLabel\n              data-testid={`lastChangedLabel_xs_${name}`}\n              labelSize=\"small\"\n            >\n              {t('noumena.header.last_changed.text')}: {lastChangedDate}\n              {hasUnsaved || (hasUnsaved && hasDraft) ? (\n                <EditChangeStatusText colorToken=\"--text-top-nav-danger-primary-default\">\n                  {t('noumena.header.unsaved_changes.text')}\n                </EditChangeStatusText>\n              ) : hasDraft && !hasUnsaved ? (\n                <EditChangeStatusText colorToken=\"--text-top-nav-neutral-default\">\n                  {t('noumena.header.drafted_changes.text')}\n                </EditChangeStatusText>\n              ) : (\n                <></>\n              )}\n            </StatusLabel>\n            {hasPublished && (hasUnsaved || hasDraft) && (\n              <LastUpdateLabel\n                data-testid={`publishedDateLabel_xs_${name}`}\n                onClick={handleClickRestore}\n              >\n                {t('noumena.header.restore_last_saved.text')} ({publishedDate}\n                )\n                <br />\n              </LastUpdateLabel>\n            )}\n          </>\n        ) : (\n          (hasPublished || isRestored) && (\n            <StatusLabel\n              labelSize=\"small\"\n              data-testid={`lastPublishedLabel_xs_${name}`}\n              className={`xs-${name}`}\n            >\n              {t('noumena.header.last_published.text')}: {publishedDate}\n              <EditChangeStatusText colorToken=\"--text-top-nav-neutral-default\">\n                {t('noumena.header.all_changes_saved.text')}\n              </EditChangeStatusText>\n            </StatusLabel>\n          )\n        )}\n      </StatusWrapper>\n    );\n\n    return (\n      <EditHeaderWrapper ref={ref} data-testid=\"Edit-Header\">\n        <IconWrapper>\n          <Icon\n            data-testid=\"Header-Back-Button\"\n            name=\"arrow_left_m\"\n            color=\"--icon-button-neutral-default\"\n            size={24}\n            onClick={handleClickExit}\n          />\n        </IconWrapper>\n        <RenderStatus className=\"hidden\" />\n        <ButtonsWrapper>\n          <StyledButton\n            data-testid=\"Header-SaveAsADraft\"\n            secondary\n            size=\"small\"\n            onClick={handleClickDraft}\n            disabled={!hasUnsaved || disableUpdate}\n          >\n            {t('noumena.header.draft_button.text')}\n          </StyledButton>\n          <StyledButton\n            data-testid=\"Header-Publish-Button\"\n            primary\n            intent=\"positive\"\n            size=\"small\"\n            onClick={handleClickPublish}\n            disabled={\n              (!hasUnsaved &&\n                !hasDraft &&\n                !hasUnsavedPermissions &&\n                !isRestored) ||\n              disableUpdate ||\n              isUserPending\n            }\n          >\n            {t('noumena.header.publish_button.text')}\n          </StyledButton>\n        </ButtonsWrapper>\n\n        {isTablet ? <RenderStatus className=\"block\" /> : <RenderMobileStatus />}\n        <ChamberPublish\n          spaceId={spaceId}\n          space={space}\n          isOpen={isOpenPublishModal}\n          handleClose={handleClosePublishModal}\n          setSetUpSlotForNoum={setSetUpSlotForNoum}\n          handleClickInfo={() => {\n            toggleVisibilityInfoModal(true);\n          }}\n          emptyElementErrorMessage={emptyElementErrorMessage}\n          isHomeNoum={space?._id === mainSpaceId}\n        />\n        <ChamberPublishVisibilityInfo\n          isOpen={isOpenVisibilityInfoModal}\n          handleClose={handleCloseVisibilityInfoModal}\n        />\n        <ChamberSaveAsDraft\n          spaceId={spaceId}\n          space={space}\n          isOpen={isOpenSaDModal}\n          handleClose={handleCloseSaDModal}\n          emptyElementErrorMessage={emptyElementErrorMessage}\n        />\n        <ChamberDiscardChange\n          spaceId={spaceId}\n          space={space}\n          isOpen={\n            isOpenExitModal || (hasUnsaved && !!isNavigateToCustomPreview)\n          }\n          handleClose={handleCloseExitModal}\n        />\n        <ChamberRestoreModal\n          spaceId={spaceId}\n          isOpen={isOpenRestoreModal}\n          version={publishedDate}\n          cancelCallback={() => toggleRestoreModal(false)}\n          sucessCallback={() => {\n            toggleRestoreModal(false);\n            onChamberRestore?.();\n          }}\n          emptyElementErrorMessage={emptyElementErrorMessage}\n        />\n        {flags.paymentSubscriptions && setUpSlotForNoum && (\n          <SetupNoumModal\n            open={setUpSlotForNoum}\n            onClose={() => setSetUpSlotForNoum(false)}\n            chamberIdAfterCreatingNoum={id}\n          />\n        )}\n      </EditHeaderWrapper>\n    );\n  },\n);\n","import { ElementTypeEnum } from '@/apollo/generated/types';\nimport { Header } from '@/components/Header';\nimport { Spinner } from '@/components/Spinner';\nimport { useNoumEdit } from '@/features/noums/hooks/noums';\nimport { Stack } from '@/layout';\nimport ChamberViewLayout from '@/layout/ChamberViewLayout';\nimport { ChamberArchiveModal } from '@/screens/Chamber/components/modals/ChamberArchive';\nimport ChamberEditMode from '@/screens/Chamber/components/modals/ChamberEditMode';\nimport { ChamberPermissionModal } from '@/screens/Chamber/components/modals/ChamberPermission';\nimport { ChamberVisibilityInviteModal } from '@/screens/Chamber/components/modals/ChamberVisibilityInvite';\nimport { NoumAdsModal } from '@/screens/Chamber/components/modals/NoumAds';\nimport { type LinkedNoumOptionType } from '@/screens/LinkNoum/components/types';\nimport { ElementUtils } from '@/utils/element';\nimport { useCallback, useEffect, useMemo, useState, type FC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation, useNavigate } from 'react-router';\nimport generate from 'uniqid';\nimport { CreateBroadcastModal } from '../components/modals/ChamberBroadcast/CreateBroadcast';\nimport { ViewBroadcastModal } from '../components/modals/ChamberBroadcast/ViewBroadcast';\nimport UnlinkOnArchiveNoumModal from '../components/modals/LinkNoum/UnlinkOnArchiveNoumModal';\nimport { ManageMembersModal } from '../components/modals/ManageMembersModal';\nimport { NoumenaCopilot } from '../components/NoumenaCopilot';\nimport { ThemePanel } from '../components/ThemePanel';\nimport errorMessage from './constants';\nimport { EditChamberBody } from './EditChamberBody';\nimport { EditChamberHeader } from './EditChamberHeader';\nimport { EditChamberProvider } from './provider';\nimport { AppStyled } from './styles';\nimport { type IEditChamber } from './types';\nimport { EditHeader } from './EditHeader';\n\nconst EditChamber: FC<IEditChamber> = ({ id }) => {\n  const {\n    space,\n    hasUnsaved,\n    hasUnsavedPermissions,\n    loading,\n    publishedDate,\n    lastChangedDate,\n    hasDraft,\n    isOpen,\n    isOwner,\n    isArchived,\n    setOpenArchive,\n    isOnLoad,\n    hasPublished,\n    openArchive,\n    archiving,\n    handleClose,\n    sideBarOptionSelected,\n    onArchive,\n    openInvites,\n    setOpenInvites,\n    openPermission,\n    setOpenPermission,\n    openManageMembers,\n    setOpenManageMembers,\n    openNoumAds,\n    setOpenNoumAds,\n    openBroadcast,\n    setOpenBroadcast,\n    isVisited,\n    handleMarkAsVisited,\n    campaigns,\n    campaignsLoading,\n    fetchMoreCampaigns,\n    infiniteState,\n    onRefetchCampaigns,\n    setIsRestored,\n    isRestored,\n    linkedNoumsCount,\n    unlinkOnArchive,\n    unlinkArchivingLoader,\n    links,\n    openThemePanel,\n    setOpenThemePanel,\n    isNavigateToCustomPreview,\n    setNavigateToCustomPreview,\n    isSettingTheme,\n    markSpaceAsEditedLoading,\n    connections,\n    approvedConnectionsLoading,\n    approvedConnections,\n    approvedInfiniteState,\n    fetchMoreApprovedConnections,\n    refetchSpaceById,\n    openNoumenaCopilot,\n    setOpenNoumenaCopilot,\n  } = useNoumEdit(id);\n  const { t } = useTranslation();\n  const [showNewBroadcast, setShowNewBroadcast] = useState(false);\n  const [emptyElementErrorMessage, setEmptyElement] = useState<string>('');\n  const [key, setKey] = useState(generate());\n  const navigate = useNavigate();\n  const { state } = useLocation();\n\n  useEffect(() => {\n    setEmptyElement('');\n    const invalidElements = space?.elements?.filter(\n      ElementUtils.isInvalidElement,\n    );\n    if (invalidElements?.length) {\n      setEmptyElement(errorMessage(invalidElements?.[0]?.elementType));\n    }\n  }, [space, t]);\n\n  const closeNewBroadcast = () => {\n    setOpenBroadcast(true);\n    setShowNewBroadcast(false);\n  };\n\n  const handleChamberRestore = () => {\n    setKey(generate());\n    setIsRestored(true);\n  };\n\n  const linkedNoums = useMemo(\n    () =>\n      links?.linkedNoums.map(\n        (item) =>\n          ({\n            ...item,\n          } as LinkedNoumOptionType),\n      ) || [],\n    [links],\n  );\n\n  const handleNavigate = useCallback(\n    (noumId: string, route?: string) => {\n      if (noumId && isNavigateToCustomPreview)\n        navigate(`/noum/${id}/edit/custom_preview`);\n      else if (route && state?.prevPath) {\n        navigate(route, { replace: true });\n      } else navigate(-1);\n    },\n    [id, isNavigateToCustomPreview, navigate, state?.prevPath],\n  );\n\n  if (loading || !space) {\n    return <Spinner />;\n  }\n\n  return (\n    <EditChamberProvider space={space} loading={loading} id={id}>\n      {space && isOwner && !isArchived && (\n        <AppStyled\n          data-testid=\"EDIT-CHAMBER\"\n          className=\"App\"\n          applyMinHeight={\n            (space?.elements && space?.elements?.length < 3) || false\n          }\n        >\n          <Header isBorderRadius={false}>\n            <EditHeader\n              publishedDate={publishedDate}\n              lastChangedDate={lastChangedDate}\n              hasUnsaved={hasUnsaved}\n              hasUnsavedPermissions={hasUnsavedPermissions}\n              hasDraft={hasDraft}\n              hasPublished={hasPublished}\n              spaceId={id}\n              space={space}\n              emptyElementErrorMessage={emptyElementErrorMessage}\n              onChamberRestore={handleChamberRestore}\n              isRestored={isRestored}\n              isNavigateToCustomPreview={isNavigateToCustomPreview}\n              cancelNavigateToCustomPreview={() =>\n                setNavigateToCustomPreview(false)\n              }\n              onNavigate={handleNavigate}\n            />\n          </Header>\n\n          <ChamberViewLayout\n            isEditing\n            header={<EditChamberHeader />}\n            hasSideBar={\n              !loading &&\n              !archiving &&\n              space?.type !== ElementTypeEnum.Home &&\n              !openThemePanel &&\n              !openNoumenaCopilot\n            }\n            onSelectEditOption={sideBarOptionSelected}\n            hasThemePanel={openThemePanel || openNoumenaCopilot}\n          >\n            {loading || isOnLoad ? (\n              <Stack>\n                <Spinner />\n              </Stack>\n            ) : (\n              <>\n                <EditChamberBody space={space} key={key} />\n              </>\n            )}\n          </ChamberViewLayout>\n\n          <ChamberEditMode\n            isOpen={isOpen && !isVisited}\n            handleClose={handleClose}\n            handleMarkAsVisited={handleMarkAsVisited}\n            markSpaceAsEditedLoading={markSpaceAsEditedLoading}\n          />\n          {space.link ? (\n            <UnlinkOnArchiveNoumModal\n              isOpen={openArchive}\n              handleClose={() => setOpenArchive(false)}\n              handleUnlinking={unlinkOnArchive}\n              loading={unlinkArchivingLoader}\n            />\n          ) : (\n            space?.name && (\n              <ChamberArchiveModal\n                noumName={space?.name}\n                isOpen={openArchive}\n                handleClose={() => setOpenArchive(false)}\n                onArchive={onArchive}\n              />\n            )\n          )}\n          {space?.projectType && (\n            <ChamberVisibilityInviteModal\n              spaceId={id}\n              connections={connections}\n              linkedNoums={linkedNoums}\n              visibility={space?.projectType}\n              isOpen={openInvites}\n              isSEOEnabled={!!space?.enableAds}\n              handleClose={() => setOpenInvites(false)}\n            />\n          )}\n          <ChamberPermissionModal\n            spaceId={id}\n            connections={approvedConnections!}\n            loading={approvedConnectionsLoading}\n            isOpen={openPermission}\n            onClose={() => setOpenPermission(false)}\n            onInvite={() => sideBarOptionSelected('invites')}\n            linkedCount={linkedNoumsCount}\n            infiniteState={approvedInfiniteState}\n            fetchMoreConnections={fetchMoreApprovedConnections}\n          />\n          {openNoumAds && (\n            <NoumAdsModal\n              isOpen={openNoumAds}\n              onClose={() => setOpenNoumAds(false)}\n              refetchSpaceById={refetchSpaceById}\n            />\n          )}\n          <ViewBroadcastModal\n            infiniteState={infiniteState}\n            campaigns={campaigns}\n            campaignsLoading={campaignsLoading}\n            fetchMoreCampaigns={fetchMoreCampaigns}\n            spaceId={id}\n            isOpen={openBroadcast}\n            onRefetchCampaigns={onRefetchCampaigns}\n            onClose={() => setOpenBroadcast(false)}\n            onCampaign={() => setShowNewBroadcast(true)}\n          />\n          {showNewBroadcast && (\n            <CreateBroadcastModal\n              noumType={space.projectType}\n              noumId={id}\n              isOpen={showNewBroadcast}\n              onClose={closeNewBroadcast}\n              onSuccessfulCampaignCreation={onRefetchCampaigns}\n            />\n          )}\n          <ThemePanel\n            noumId={id}\n            open={openThemePanel}\n            onClose={() => setOpenThemePanel(false)}\n          />\n          {openNoumenaCopilot && (\n            <NoumenaCopilot\n              noumId={id}\n              open={openNoumenaCopilot}\n              onClose={() => setOpenNoumenaCopilot(false)}\n            />\n          )}\n          {openManageMembers && (\n            <ManageMembersModal\n              isOpen={openManageMembers}\n              handleClose={() => setOpenManageMembers(false)}\n            />\n          )}\n        </AppStyled>\n      )}\n      {isSettingTheme && <Spinner />}\n    </EditChamberProvider>\n  );\n};\n\nexport default EditChamber;\n","import { type FC, useCallback, useMemo } from 'react';\nimport generate from 'uniqid';\nimport { t } from 'i18next';\nimport { TSpan } from '@/components/Typography';\nimport { useLaunchDarkly } from '@/hooks/launchDarkly';\n\nimport {\n  Dropdown,\n  type DropdownTargetProps,\n  type DropdownValueType,\n} from '@/components/Dropdown';\nimport { Icon } from '@/components/Icon';\nimport { useWindowDimensions } from '@/hooks';\nimport { Stack } from '@/layout';\nimport { useEditChamberState } from '@/screens/Chamber/EditChamber/provider';\nimport { getTimeStampForDisplaying } from '@/utils/getTimeStampForDisplaying';\nimport {\n  EditOptions,\n  EditOptionsContainer,\n  ThreeDotsIconWrapper,\n} from './styles';\nimport { NavigationItems } from './constants';\nimport { type NoumEditOptionsProps, type TNoumEditModal } from './types';\n\nexport const NoumEditOptionsNew: FC<NoumEditOptionsProps> = ({\n  onSelect,\n  isNoumPublishedAtAll,\n  isShowRestore,\n}) => {\n  const { space } = useEditChamberState();\n  const publishedDate = useMemo(\n    () =>\n      space?.publishedAt\n        ? getTimeStampForDisplaying(space.publishedAt, true)\n        : undefined,\n    [space?.publishedAt],\n  );\n  const { flags } = useLaunchDarkly();\n  const { width } = useWindowDimensions();\n  const navItemCount = useMemo(\n    () => (width < 1280 ? 3 : width < 1440 ? 5 : 6),\n    [width],\n  );\n\n  const onItemClick = useCallback(\n    (v: TNoumEditModal | DropdownValueType<string>) => {\n      if (typeof v === 'object') {\n        onSelect?.(v.value as TNoumEditModal);\n      }\n      onSelect?.(v);\n    },\n\n    [onSelect],\n  );\n\n  const showNavigationItems = useMemo(\n    () =>\n      NavigationItems.map((item) => ({\n        ...item,\n        show:\n          item.value === 'manage_members'\n            ? flags.elementPermission\n            : ['invites', 'permission'].includes(item.value)\n            ? !flags.elementPermission\n            : item.value === 'broadcasting'\n            ? flags.broadcast\n            : item.value === 'custom_preview'\n            ? flags.customNoums\n            : item.value === 'noum_ads'\n            ? flags.noumAds\n            : item.value === 'noumena_copilot'\n            ? flags.noumAds\n            : true,\n      })).filter((item, index) => item && index < navItemCount),\n    [flags, navItemCount],\n  );\n\n  const moreItems: DropdownValueType<string>[] = useMemo(\n    () =>\n      NavigationItems.filter(\n        (item) =>\n          item.value !== 'restore_last_published_version' || isShowRestore,\n      )\n        .filter(\n          (item) =>\n            showNavigationItems.findIndex(\n              (sItem) => sItem.value === item.value,\n            ) < 0 &&\n            item.value !== 'save_as_a_template' &&\n            // item.value !== 'noum_ads' &&\n            item.value !== 'noumena_copilot',\n        )\n        .map((item) => ({\n          ...item,\n          type: 'value',\n          key: item.label,\n          label:\n            item.value === 'restore_last_published_version' ? (\n              <Stack vertical aria-label=\"noum-edit-mode-header-options\">\n                <TSpan>{item.label}</TSpan>\n                {publishedDate && (\n                  <TSpan\n                    font=\"footnote\"\n                    colorToken=\"--text-tablecell-body-neutral-default\"\n                  >\n                    {t(`noumena.noum_editor.published_on`, { publishedDate })}\n                  </TSpan>\n                )}\n              </Stack>\n            ) : item.value === 'archive' ? (\n              <TSpan colorToken=\"--text-tablecell-danger-primary-default\">\n                {item.label}\n              </TSpan>\n            ) : (\n              item.label\n            ),\n        })),\n    [isShowRestore, publishedDate, showNavigationItems],\n  );\n\n  return (\n    <>\n      <EditOptionsContainer\n        data-testid=\"sideBar\"\n        aria-label=\"noum-edit-mode-options-container\"\n      >\n        {showNavigationItems.map(\n          ({ label, type, value, show, disableBeforeFirstPublish }) =>\n            show ? (\n              <EditOptions\n                key={generate()}\n                onClick={() => {\n                  if (!(disableBeforeFirstPublish && isNoumPublishedAtAll)) {\n                    onItemClick(value);\n                  }\n                }}\n                data-testid=\"navItem\"\n                disabled={disableBeforeFirstPublish && isNoumPublishedAtAll}\n              >\n                <TSpan\n                  data-testid={`noum-edit-option-${label}`}\n                  font=\"body-m-bold\"\n                  colorToken={\n                    disableBeforeFirstPublish && isNoumPublishedAtAll\n                      ? '--text-button-neutral-disabled'\n                      : type === 'error'\n                      ? '--text-tablecell-header-danger-primary-highlighted'\n                      : '--text-button-brand-primary-default'\n                  }\n                >\n                  {label}\n                </TSpan>\n              </EditOptions>\n            ) : undefined,\n        )}\n        <Dropdown\n          containerWidth=\"max-content\"\n          hideIcons\n          closeOnSelect\n          onSelectOption={(value) => onItemClick(value)}\n          options={moreItems}\n          usePortal={false}\n          isAnimation={false}\n          observerMinHeight=\"0\"\n          placement=\"auto\"\n        >\n          {({\n            targetRef,\n            targetProps,\n            toggle,\n          }: DropdownTargetProps<HTMLDivElement>) => (\n            <ThreeDotsIconWrapper\n              ref={targetRef}\n              onClick={toggle}\n              {...targetProps}\n            >\n              <Icon\n                name=\"more_m\"\n                size={24}\n                color=\"--icon-button-brand-primary-default\"\n              />\n            </ThreeDotsIconWrapper>\n          )}\n        </Dropdown>\n      </EditOptionsContainer>\n    </>\n  );\n};\n","import {\n  forwardRef,\n  type Ref,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n  type Dispatch,\n  type SetStateAction,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { type Transition } from 'history';\nimport { useParams } from 'react-router-dom';\nimport useBlocker from '@/hooks/useBlocker';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useLaunchDarkly } from '@/hooks';\nimport { DisablePublishOrDraftContext } from '@/providers';\nimport SetupNoumModal from '@/screens/Plan/SetupNoumModal';\nimport {\n  SpaceStatusEnum,\n  SpaceTypeEnum,\n  UserStatus,\n} from '@/apollo/generated/types';\nimport {\n  StyledButton,\n  LeftActionButtonsWrapper,\n  RightActionButtonsWrapper,\n  StatusWrapper,\n  StatusLabel,\n  EditChangeStatusText,\n  LastUpdateLabel,\n} from '@/components/Header/styles';\nimport { type DropdownValueType } from '@/components/Dropdown';\nimport { useEditChamberState } from './provider';\nimport { NoumEditOptionsNew } from '../components/RightPanel/elements/NoumEditOptions/NoumEditOptionsNew';\nimport { ChamberPublishVisibilityInfo } from '../components/modals/ChamberPublishVisibilityInfo';\nimport { ChamberRestoreModal } from '../components/modals/ChamberActionModal/Restore/ChamberRestoreModal';\nimport { ChamberDiscardChange } from '../components/modals/ChamberDiscardChange';\nimport ChamberSaveAsDraft from '../components/modals/ChamberSaveAsDraft';\nimport ChamberPublish from '../components/modals/ChamberPublish';\nimport { type EditHeaderProps } from './types';\nimport { type TNoumEditModal } from '../components/modals/NoumEditOptionsModal/types';\nimport { EditHeaderWrapperNew } from './styles';\n\ninterface EditHeaderNewProps extends EditHeaderProps {\n  isOpenRestoreModal?: boolean;\n  setOpenRestoreModal?: Dispatch<SetStateAction<boolean>>;\n  onSelectEditOption?: (v: TNoumEditModal | DropdownValueType<string>) => void;\n}\n\nexport const EditHeaderNew = forwardRef(\n  (\n    {\n      publishedDate = '',\n      lastChangedDate = '',\n      hasUnsaved = false,\n      hasUnsavedPermissions = false,\n      hasDraft = false,\n      spaceId,\n      space,\n      emptyElementErrorMessage,\n      onChamberRestore,\n      isRestored = false,\n      isNavigateToCustomPreview,\n      cancelNavigateToCustomPreview,\n      onNavigate,\n      onSelectEditOption,\n      isOpenRestoreModal = false,\n      setOpenRestoreModal: toggleRestoreModal,\n      hasPublished,\n    }: EditHeaderNewProps,\n    ref: Ref<HTMLDivElement>,\n  ) => {\n    const { t } = useTranslation();\n    const { id = '' } = useParams();\n    const { disableUpdate, setdisabledUpdateElement } = useContext(\n      DisablePublishOrDraftContext,\n    );\n    const [isOpenPublishModal, togglePublishModal] = useState<boolean>(false);\n    const [isOpenVisibilityInfoModal, toggleVisibilityInfoModal] =\n      useState<boolean>(false);\n    const [isOpenSaDModal, toggleSaDModal] = useState<boolean>(false);\n    const [isOpenExitModal, toggleExitModal] = useState<boolean>(false);\n    const { masterId: mainSpaceId, isPending: isUserPending } = useAuth();\n    const [setUpSlotForNoum, setSetUpSlotForNoum] = useState<boolean>(false);\n\n    const {\n      space: ediChamberSpace,\n      refetchSpaceById,\n      setsectionStatus,\n    } = useEditChamberState();\n\n    const isNoumPublishedAtAll = !(\n      ediChamberSpace?.uid?.userStatus === UserStatus.Active &&\n      ediChamberSpace?.status === SpaceStatusEnum.Published\n    );\n\n    const isMasterNoum = useMemo(\n      () => space?.type === SpaceTypeEnum.Home,\n      [space?.type],\n    );\n\n    const { flags } = useLaunchDarkly();\n\n    const handleBlockNavigation = ({ retry }: Transition) => {\n      if (hasUnsaved) {\n        toggleExitModal(true);\n      } else {\n        retry();\n      }\n    };\n\n    useBlocker(handleBlockNavigation, hasUnsaved && !isNavigateToCustomPreview);\n\n    const handleClickPublish = async () => {\n      setdisabledUpdateElement(true);\n      togglePublishModal(true);\n    };\n\n    const handleClickDraft = () => {\n      toggleSaDModal(true);\n      setsectionStatus?.(undefined);\n    };\n\n    const handleClickExit = useCallback(() => {\n      if (hasUnsaved) {\n        toggleExitModal(true);\n      } else {\n        onNavigate(id);\n      }\n    }, [hasUnsaved, id, onNavigate]);\n\n    const handleClosePublishModal = useCallback(\n      (isSuccess?: boolean) => {\n        togglePublishModal(false);\n        refetchSpaceById?.();\n        if (isSuccess) {\n          onNavigate(id, `/noum/${id}`);\n        }\n      },\n      [refetchSpaceById, onNavigate, id],\n    );\n\n    const handleCloseVisibilityInfoModal = () => {\n      toggleVisibilityInfoModal(false);\n      togglePublishModal(true);\n    };\n\n    const handleCloseSaDModal = () => {\n      toggleSaDModal(false);\n      refetchSpaceById?.();\n    };\n\n    const handleClickRestore = () => {\n      toggleRestoreModal?.(true);\n    };\n\n    const handleCloseExitModal = useCallback(\n      (isSuccess?: boolean) => {\n        toggleExitModal(false);\n        if (isSuccess) {\n          refetchSpaceById?.();\n          onNavigate(id);\n        }\n        cancelNavigateToCustomPreview?.();\n      },\n      [cancelNavigateToCustomPreview, id, onNavigate, refetchSpaceById],\n    );\n\n    const RenderStatus = ({ className: name = 'xs-hidden' }) => (\n      <StatusWrapper\n        className={`xs-${name}`}\n        isNoumEditor2\n        aria-label=\"noum_status\"\n      >\n        {hasUnsaved || hasDraft || isRestored ? (\n          <>\n            <StatusLabel\n              data-testid={`lastChangedLabel_xs_${name}`}\n              labelSize=\"small\"\n              aria-label=\"noum-status-label\"\n            >\n              {t('noumena.header.last_changed.text')}: {lastChangedDate}\n              {hasUnsaved || (hasUnsaved && hasDraft) ? (\n                <EditChangeStatusText\n                  colorToken=\"--text-top-nav-danger-primary-default\"\n                  aria-label=\"noum_status_unsaved\"\n                >\n                  {t('noumena.header.unsaved_changes.text')}\n                </EditChangeStatusText>\n              ) : hasDraft && !hasUnsaved ? (\n                <EditChangeStatusText\n                  colorToken=\"--text-top-nav-neutral-default\"\n                  aria-label=\"noum_status_draft\"\n                >\n                  {t('noumena.header.drafted_changes.text')}\n                </EditChangeStatusText>\n              ) : (\n                <></>\n              )}\n            </StatusLabel>\n            {hasPublished && (hasUnsaved || hasDraft) && (\n              <LastUpdateLabel\n                data-testid={`publishedDateLabel_xs_${name}`}\n                onClick={handleClickRestore}\n                aria-label=\"noum-status-last-restored\"\n              >\n                {t('noumena.header.restore_last_saved.text')} ({publishedDate}\n                )\n                <br />\n              </LastUpdateLabel>\n            )}\n          </>\n        ) : (\n          (hasPublished || isRestored) && (\n            <StatusLabel\n              labelSize=\"small\"\n              data-testid={`lastPublishedLabel_xs_${name}`}\n              className={`xs-${name}`}\n              aria-label=\"noum_status_last_published\"\n            >\n              {t('noumena.header.last_published.text')}: {publishedDate}\n              <EditChangeStatusText\n                colorToken=\"--text-top-nav-neutral-default\"\n                aria-label=\"noum_status_changes_status\"\n              >\n                {t('noumena.header.all_changes_saved.text')}\n              </EditChangeStatusText>\n            </StatusLabel>\n          )\n        )}\n      </StatusWrapper>\n    );\n\n    return (\n      <EditHeaderWrapperNew\n        ref={ref}\n        data-testid=\"Edit-Header\"\n        aria-label=\"noum-edit-mode-header\"\n      >\n        <LeftActionButtonsWrapper\n          gap={34}\n          align=\"center\"\n          aria-label=\"noum-edit-mode-left-actions-wrapper\"\n        >\n          <StyledButton\n            data-testid=\"Header-SaveAsADraft\"\n            secondary={hasUnsaved}\n            intent=\"negative\"\n            tertiary={!hasUnsaved}\n            size=\"small\"\n            onClick={handleClickExit}\n            aria-label=\"noum_edit_mode_left_action_button\"\n          >\n            {!hasUnsaved\n              ? t('noumena._new_header.done_button.text')\n              : t('noumena._new_header.cancel_button.text')}\n          </StyledButton>\n          {\n            // TODO: UNDO/REDO not implemented yet\n            /* <Stack gap={16}>\n            <Icon\n              name=\"undo_m\"\n              color=\"--icon-button-brand-primary-default\"\n              size={24}\n            />\n            <Icon\n              name=\"redo_m\"\n              color=\"--icon-button-brand-primary-default\"\n              size={24}\n            />\n          </Stack> */\n          }\n        </LeftActionButtonsWrapper>\n        {isMasterNoum ? (\n          <RenderStatus className=\"hidden\" />\n        ) : (\n          <NoumEditOptionsNew\n            onSelect={onSelectEditOption}\n            isNoumPublishedAtAll={isNoumPublishedAtAll}\n            isShowRestore={hasUnsaved || hasDraft}\n          />\n        )}\n        <RightActionButtonsWrapper aria-label=\"noum-edit-mode-right-actions-wrapper\">\n          <StyledButton\n            data-testid=\"Header-SaveAsADraft\"\n            secondary\n            size=\"small\"\n            onClick={handleClickDraft}\n            disabled={!hasUnsaved || disableUpdate}\n            aria-label=\"save_as_draft_button\"\n          >\n            {t('noumena._new_header.draft_button.text')}\n          </StyledButton>\n          <StyledButton\n            data-testid=\"Header-Publish-Button\"\n            primary\n            intent=\"positive\"\n            size=\"small\"\n            onClick={handleClickPublish}\n            aria-label=\"publish_button\"\n            disabled={\n              (!hasUnsaved &&\n                !hasDraft &&\n                !hasUnsavedPermissions &&\n                !isRestored) ||\n              disableUpdate ||\n              isUserPending\n            }\n          >\n            {t('noumena.header.publish_button.text')}\n          </StyledButton>\n        </RightActionButtonsWrapper>\n\n        <ChamberPublish\n          spaceId={spaceId}\n          space={space}\n          isOpen={isOpenPublishModal}\n          handleClose={handleClosePublishModal}\n          setSetUpSlotForNoum={setSetUpSlotForNoum}\n          handleClickInfo={() => {\n            toggleVisibilityInfoModal(true);\n          }}\n          emptyElementErrorMessage={emptyElementErrorMessage}\n          isHomeNoum={space?._id === mainSpaceId}\n          aria-label=\"publish_noum_layout_modal\"\n        />\n        <ChamberPublishVisibilityInfo\n          isOpen={isOpenVisibilityInfoModal}\n          handleClose={handleCloseVisibilityInfoModal}\n        />\n        <ChamberSaveAsDraft\n          spaceId={spaceId}\n          space={space}\n          isOpen={isOpenSaDModal}\n          handleClose={handleCloseSaDModal}\n          emptyElementErrorMessage={emptyElementErrorMessage}\n          aria-label=\"save_as_draft_modal\"\n        />\n        <ChamberDiscardChange\n          spaceId={spaceId}\n          space={space}\n          isOpen={\n            isOpenExitModal || (hasUnsaved && !!isNavigateToCustomPreview)\n          }\n          handleClose={handleCloseExitModal}\n          aria-label=\"discard_changes_modal\"\n        />\n        <ChamberRestoreModal\n          spaceId={spaceId}\n          isOpen={isOpenRestoreModal}\n          version={publishedDate}\n          aria-label=\"noum_restore_layout_modal\"\n          cancelCallback={() => toggleRestoreModal?.(false)}\n          sucessCallback={() => {\n            toggleRestoreModal?.(false);\n            onChamberRestore?.();\n          }}\n          emptyElementErrorMessage={emptyElementErrorMessage}\n        />\n        {flags.paymentSubscriptions && setUpSlotForNoum && (\n          <SetupNoumModal\n            open={setUpSlotForNoum}\n            onClose={() => setSetUpSlotForNoum(false)}\n            chamberIdAfterCreatingNoum={id}\n          />\n        )}\n      </EditHeaderWrapperNew>\n    );\n  },\n);\n","import { t } from 'i18next';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport { TSpan } from '@/components/Typography';\nimport { Button } from '@/components/Button';\nimport { Spacer, Stack } from '@/layout';\nimport { Trans } from 'react-i18next';\nimport { type DeleteModalProps } from './types';\nimport { SectionToolType } from '../NoumSections/constants';\nimport { useEditChamberState } from '../../EditChamber/provider';\nimport { DeleteDescription, DeleteDescriptionContainer } from './styles';\nimport { elementDeleteModalDescription } from '../NoumSidePanel/types';\n\nexport const DeleteModal = ({\n  isOpen,\n  loading,\n  onClose,\n  onConfirm,\n  type = SectionToolType.SECTION_TYPE,\n}: DeleteModalProps) => {\n  const { activeEditingTool } = useEditChamberState();\n  const isTool = type === SectionToolType.TOOL_TYPE;\n\n  return (\n    <Modal\n      open={isOpen}\n      size={ModalSize.S}\n      onClose={onClose}\n      testId=\"default-event-modal\"\n      disableBackdropClick\n    >\n      <ModalHeader>\n        {isTool\n          ? t('noumena.noum_editor.tool.delete_modal_title')\n          : t('noumena.noum_editor.delete_Section_title')}\n      </ModalHeader>\n      <ModalBody style={{ alignItems: 'center' }}>\n        <Stack vertical gap={15}>\n          <DeleteDescriptionContainer>\n            <DeleteDescription>\n              <Trans\n                i18nKey={\n                  isTool\n                    ? activeEditingTool?.elementType &&\n                      elementDeleteModalDescription[\n                        activeEditingTool.elementType\n                      ]\n                      ? elementDeleteModalDescription[\n                          activeEditingTool.elementType\n                        ]\n                      : t('noumena.noum_editor.delete_tool_description')\n                    : t('noumena.noum_editor.delete_section_description')\n                }\n                components={{\n                  span: (\n                    <TSpan\n                      font=\"body-l\"\n                      colorToken=\"--text-modal-neutral-highlighted\"\n                    />\n                  ),\n                }}\n              />\n            </DeleteDescription>\n          </DeleteDescriptionContainer>\n          <TSpan\n            font=\"body-l\"\n            textAlign=\"center\"\n            colorToken=\"--text-modal-neutral-default\"\n            data-testid=\"event-confirmation-modal-description\"\n          >\n            {t('noumena.noum_editor.delete_tool_next_description')}\n          </TSpan>\n        </Stack>\n      </ModalBody>\n      <Spacer height={16} />\n      <ModalFooter\n        isFullScreen={false}\n        gap={16}\n        flexDirection=\"column\"\n        marginTop={12}\n      >\n        <Button\n          primary\n          intent=\"negative\"\n          size=\"full\"\n          onClick={onConfirm}\n          data-testid=\"confirm-button\"\n          loading={loading}\n        >\n          {isTool\n            ? t('noumena.noum_editor.delete_tool_confirm_button')\n            : t('noumena.noum_editor.delete_section_confirm_button')}\n        </Button>\n\n        <Button\n          tertiary\n          intent=\"negative\"\n          size=\"full\"\n          onClick={onClose}\n          data-testid=\"cancel-button\"\n        >\n          {isTool\n            ? t('noumena.cancel')\n            : t('noumena.noum_editor.delete_section_cancel_button')}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default DeleteModal;\n","import styled, { css } from 'styled-components';\n\nexport const SwitchLabel = styled.label<{ disabled?: boolean }>`\n  position: absolute;\n  top: 2.5px;\n  left: 0;\n  width: 30px;\n  height: 16px;\n  border-radius: 15px;\n  ${({ disabled }) =>\n    disabled\n      ? 'background: var(--bg-toggle-neutral-disabled)'\n      : css`\n          background: var(--bg-toggle-neutral-default);\n          cursor: pointer;\n          &:hover {\n            background: var(--bg-toggle-neutral-hover);\n          }\n        `};\n\n  &::after {\n    content: '';\n    display: block;\n    border-radius: 50%;\n    width: 13.33px;\n    height: 13.33px;\n    margin: 1px;\n    background: var(--bg-toggle-neutral-alt-default);\n    /* box-shadow: 1px 3px 3px 1px rgba(0, 0, 0, 0.2); */\n    transition: 0.2s;\n  }\n`;\n\nexport const SwitchWrapper = styled.div`\n  position: relative;\n`;\n\nexport const SwitchButton = styled.input`\n  opacity: 0;\n  z-index: 1;\n  border-radius: 15px;\n  width: 30px;\n  height: 16px;\n  &:checked + ${SwitchLabel} {\n    background: var(--bg-toggle-brand-primary-selected);\n    &::after {\n      content: '';\n      display: block;\n      border-radius: 50%;\n      width: 13.33px;\n      height: 13.33px;\n      margin-left: 15px;\n      transition: 0.2s;\n    }\n    &:hover {\n      background: var(--bg-toggle-brand-primary-hover);\n    }\n  }\n`;\n","import { SwitchButton, SwitchLabel, SwitchWrapper } from './styles';\nimport { type ISwitch } from './types';\n\nexport const Switch: React.FC<ISwitch> = (props) => (\n  <SwitchWrapper>\n    <SwitchButton type=\"checkbox\" {...props} />\n    <SwitchLabel htmlFor={props.id} disabled={props.disabled} />\n  </SwitchWrapper>\n);\n","import { type InputListTypes } from '@/components/Tabs/types';\nimport { TextAlignType, VerticalAlignType } from '../NoumSections/constants';\n\nexport const alignItems: InputListTypes[] = [\n  {\n    id: VerticalAlignType.TOP,\n    name: VerticalAlignType.TOP,\n    image: 'align_top_m',\n    text: '',\n    labelSize: 'medium',\n  },\n  {\n    id: VerticalAlignType.CENTER,\n    name: VerticalAlignType.CENTER,\n    image: 'align_center_m_2',\n    text: '',\n    labelSize: 'auto',\n  },\n  {\n    id: VerticalAlignType.BOTTOM,\n    name: VerticalAlignType.BOTTOM,\n    image: 'align_bottom_m',\n    text: '',\n    labelSize: 'auto',\n  },\n];\n\nexport const textAlignItems: InputListTypes[] = [\n  {\n    id: TextAlignType.LEFT,\n    name: TextAlignType.LEFT,\n    image: 'left_align_m',\n    text: '',\n    labelSize: 'medium',\n  },\n  {\n    id: TextAlignType.CENTER,\n    name: TextAlignType.CENTER,\n    image: 'center_align_m',\n    text: '',\n    labelSize: 'auto',\n  },\n  {\n    id: TextAlignType.RIGHT,\n    name: TextAlignType.RIGHT,\n    image: 'right_align_m',\n    text: '',\n    labelSize: 'auto',\n  },\n];\n\nexport const columns: InputListTypes[] = [\n  {\n    name: 'Column1',\n    image: 'terms_m',\n    text: '1',\n    labelSize: 'auto',\n  },\n  {\n    name: 'Column2',\n    image: 'terms_m',\n    text: '2',\n    labelSize: 'auto',\n  },\n  {\n    name: 'Column2',\n    image: 'terms_m',\n    text: '3',\n    labelSize: 'auto',\n  },\n];\n","import styled, { css } from 'styled-components';\nimport { NoumLayoutSectionType } from '@/apollo/generated/types';\nimport { Stack } from '@/layout';\n\nexport const NoumSidePanelWrapper = styled.div``;\n\nexport const AlignPicker = styled.div`\n  display: flex;\n  align-items: center;\n  border-radius: 8px;\n  padding: 4px;\n  height: 30px;\n\n  div {\n    margin: 0px;\n    gap: 4px;\n  }\n\n  label {\n    height: 32px;\n    width: 32px;\n    padding: 0px;\n    border-radius: 4px;\n  }\n\n  input {\n    display: none;\n  }\n`;\n\nconst columnHoverEffect = css`\n  :hover section {\n    border: 1px solid var(--border-section-picker-brand-primary-default);\n    div:not(.disabled) {\n      border: 1px solid var(--border-section-picker-brand-primary-default);\n      background: var(--bg-section-picker-brand-primary-default);\n    }\n    div.disabled {\n      border: 1px solid var(--bg-section-picker-brand-secondary-disabled);\n      background: var(--bg-section-picker-brand-secondary-disabled);\n    }\n  }\n`;\n\nexport const DropdownPicker = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  cursor: pointer;\n  height: 40px;\n  border: 1px solid var(--border-card-neutral-default);\n  border-radius: 8px;\n  padding: 4px;\n  padding-right: 13px;\n  :hover {\n    border: 1px solid var(--border-section-picker-brand-primary-default);\n  }\n  ${columnHoverEffect}\n`;\n\n// ColumnOptions CSS\nexport const OptionContainer = styled.div<{ isFullWidth: boolean }>`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 16px;\n  cursor: pointer;\n  box-sizing: border-box;\n  padding: ${({ isFullWidth }) => (isFullWidth ? '7px' : '12px')};\n  ${({ isFullWidth }) => isFullWidth && 'width: 100%; section {border:none}'};\n  ${columnHoverEffect}\n`;\n\nexport const ColumnContainer = styled.section<{ type: NoumLayoutSectionType }>`\n  display: grid;\n  grid-template-columns: ${({ type }) =>\n    type === NoumLayoutSectionType.SingleColumn\n      ? '1fr'\n      : type === NoumLayoutSectionType.SingleColumn_700Px\n      ? '1fr 60% 1fr'\n      : type === NoumLayoutSectionType.TwoEqualColumns\n      ? '1fr 1fr'\n      : type === NoumLayoutSectionType.ThreeEqualColumns\n      ? '1fr 1fr 1fr'\n      : type === NoumLayoutSectionType.TwoColumnsLeftWider\n      ? '30% 1fr'\n      : type === NoumLayoutSectionType.TwoColumnsRightWider && '1fr 30%'};\n  border: 1px solid var(--border-card-neutral-default);\n  border-radius: 4px;\n  padding: 3px;\n  gap: 6px;\n  width: calc(100% - 8px);\n  box-sizing: border-box;\n\n  div {\n    border: 1px solid var(--border-section-picker-brand-secondary-default);\n    background: var(--bg-section-picker-brand-secondary-default);\n    border-radius: 4px;\n    box-sizing: border-box;\n    height: 24px;\n  }\n\n  .disabled {\n    background: var(--bg-section-picker-neutral-disabled);\n    border: 1px solid var(--bg-section-picker-neutral-disabled);\n  }\n`;\n\nexport const ColumnChipsContainer = styled.div`\n  margin: -6px;\n  margin-top: 0px;\n  form {\n    div {\n      gap: 4px;\n    }\n  }\n`;\n\nexport const ToolPermissionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 8px 0px 7px 0px;\n  box-sizing: border-box;\n  border-bottom: 1px solid var(--bg-separator-neutral-default);\n`;\n\nexport const ColumnPickerContainer = styled.div`\n  width: 100%;\n  padding: 16px 0;\n  border-top: 4px solid var(--bg-separator-neutral-default);\n  border-bottom: 4px solid var(--bg-separator-neutral-default);\n`;\n\nexport const AppearanceSection = styled(Stack)`\n  border-top: 1px solid var(--bg-separator-neutral-default);\n`;\n","import { Radiobox } from '@/components/Radiobox';\nimport { Icon } from '@/components/Icon';\nimport { NoumLayoutSectionType } from '@/apollo/generated/types';\nimport { ColumnContainer, OptionContainer } from './styles';\nimport { type IColumnOptions } from './types';\n\nconst Columns: React.FC<IColumnOptions> = ({ option }) => {\n  switch (option) {\n    case NoumLayoutSectionType.SingleColumn_700Px:\n      return (\n        <ColumnContainer type={option}>\n          <div className=\"disabled\"> </div>\n          <div> </div>\n          <div className=\"disabled\"> </div>\n        </ColumnContainer>\n      );\n    case NoumLayoutSectionType.TwoColumnsLeftWider:\n      return (\n        <ColumnContainer type={option}>\n          <div> </div>\n          <div> </div>\n        </ColumnContainer>\n      );\n    case NoumLayoutSectionType.TwoEqualColumns:\n      return (\n        <ColumnContainer type={option}>\n          <div> </div>\n          <div> </div>\n        </ColumnContainer>\n      );\n    case NoumLayoutSectionType.TwoColumnsRightWider:\n      return (\n        <ColumnContainer type={option}>\n          <div> </div>\n          <div> </div>\n        </ColumnContainer>\n      );\n    case NoumLayoutSectionType.ThreeEqualColumns:\n      return (\n        <ColumnContainer type={option}>\n          <div> </div>\n          <div> </div>\n          <div> </div>\n        </ColumnContainer>\n      );\n    case NoumLayoutSectionType.SingleColumn:\n    default:\n      return (\n        <ColumnContainer type={option}>\n          <div> </div>\n        </ColumnContainer>\n      );\n  }\n};\n\nconst ColumnOptions: React.FC<IColumnOptions> = ({\n  onChange,\n  option,\n  isSelected,\n}) => (\n  <OptionContainer\n    onClick={() => (onChange ? onChange(option) : {})}\n    isFullWidth={!onChange}\n  >\n    <Columns option={option} />\n    {onChange && (\n      <Radiobox\n        isChecked={!!isSelected}\n        icon={\n          isSelected ? (\n            <Icon\n              name=\"radio_btn_m\"\n              size={12}\n              color=\"--icon-radiobutton-brand-primary-default\"\n            />\n          ) : undefined\n        }\n      />\n    )}\n  </OptionContainer>\n);\n\nexport default ColumnOptions;\n","import { t } from 'i18next';\nimport { Fragment, useState } from 'react';\nimport { Dropdown, type DropdownTargetProps } from '@/components/Dropdown';\nimport { Icon } from '@/components/Icon';\nimport { Separator } from '@/components/Separator/Separator';\nimport { TSpan } from '@/components/Typography/Typography';\nimport { Stack } from '@/layout/Stack';\nimport {\n  NoumLayoutSectionType,\n  NoumLayoutStatus,\n} from '@/apollo/generated/types';\nimport { useUpdateNoumSectionHelper } from '@/features/noums/hooks/spaceQuery';\nimport ColumnOptions from './ColumnOptions';\nimport { DropdownPicker } from './styles';\nimport { useEditChamberState } from '../../EditChamber/provider';\n\nconst ColumnPicker: React.FC = () => {\n  const {\n    section,\n    space,\n    setsectionStatus,\n    setsectionSideBarOptions,\n    sectionSideBarOptions,\n    useHeightRef,\n    setHeight,\n    height,\n    setLayoutLoading,\n  } = useEditChamberState();\n  const { updateNoumSectionHelper } = useUpdateNoumSectionHelper();\n  const [isFocused, setIsFocused] = useState(false);\n\n  const onChange = async (value: NoumLayoutSectionType) => {\n    setHeight?.(height || useHeightRef?.current?.offsetHeight!);\n    setsectionSideBarOptions?.({\n      selectedLayout: { id: section?._id!, layoutType: value },\n    });\n    setLayoutLoading?.(true);\n    setTimeout(async () => {\n      const isSuccess = await updateNoumSectionHelper(space?._id!, {\n        sectionId: section?._id,\n        type: value,\n      });\n      setsectionStatus?.(NoumLayoutStatus.Unsaved);\n      if (!isSuccess) {\n        setsectionSideBarOptions?.({\n          selectedLayout: { id: section?._id!, layoutType: section?.type! },\n        });\n        setsectionStatus?.(undefined);\n      }\n      setHeight?.(undefined);\n      setIsFocused(false);\n      setLayoutLoading?.(false);\n    }, 500);\n  };\n\n  const options = Object.values(NoumLayoutSectionType);\n\n  return (\n    <Stack vertical padding=\"0 12px\" fullWidth gap={8}>\n      <TSpan\n        font=\"footnote-bold\"\n        colorToken=\"--text-card-neutral-highlighted\"\n        overflow=\"ellipsis\"\n      >\n        {t('noumena.noum_editor.edit_Section.section_layout')}\n      </TSpan>\n      <Stack fullWidth>\n        <Dropdown\n          hideIcons\n          options={[]}\n          isShowEmptyText={false}\n          containerWidth=\"218px\"\n          isAnimation={false}\n          containerStyle={{ overflow: 'auto' }}\n          optionsRenderer={() =>\n            options.map((type, index) => (\n              <Fragment key={type}>\n                <ColumnOptions\n                  key={type}\n                  onChange={onChange}\n                  option={type as NoumLayoutSectionType}\n                  isSelected={\n                    type ===\n                      sectionSideBarOptions?.selectedLayout?.layoutType ??\n                    type === section?.type\n                  }\n                />\n                {options.length - 1 !== index && <Separator fullWidth />}\n              </Fragment>\n            ))\n          }\n          isOpen={isFocused}\n        >\n          {({\n            targetProps,\n            targetRef,\n          }: DropdownTargetProps<HTMLDivElement>) => (\n            <DropdownPicker\n              style={{ width: '100%' }}\n              ref={targetRef}\n              {...targetProps}\n              onClick={() => setIsFocused(!isFocused)}\n            >\n              <ColumnOptions\n                option={\n                  section?.type ||\n                  sectionSideBarOptions?.selectedLayout?.layoutType ||\n                  NoumLayoutSectionType.SingleColumn\n                }\n              />\n              <Icon\n                name=\"chevron_down_m\"\n                size={16}\n                color=\"--icon-button-neutral-default\"\n              />\n            </DropdownPicker>\n          )}\n        </Dropdown>\n      </Stack>\n    </Stack>\n  );\n};\n\nexport default ColumnPicker;\n","import { t } from 'i18next';\nimport { useMemo, useState } from 'react';\nimport { TSpan } from '@/components/Typography';\nimport { Stack } from '@/layout';\nimport BasicChipsTabsForm from '@/components/Tabs/TabsForm';\nimport { Button } from '@/components/Button';\nimport { Switch } from '@/components/Switch';\nimport {\n  NoumLayoutSectionType,\n  type NoumLayoutSectionVerticalAlignType,\n  NoumLayoutStatus,\n} from '@/apollo/generated/types';\nimport {\n  useRemoveSectionHelper,\n  useUpdateNoumSectionHelper,\n} from '@/features/noums/hooks/spaceQuery';\nimport { type InputListTypes } from '@/components/Tabs/types';\nimport { ElementUtils } from '@/utils/element';\nimport { NonRemovableDeleteModal } from '@/features/noums/components/NoumEditor2.0';\nimport { type NoumEditSectionProps } from './types';\nimport { useEditChamberState } from '../../EditChamber/provider';\nimport { SectionToolType } from '../NoumSections/constants';\nimport { alignItems } from './constants';\nimport ColumnPicker from './ColumnPicker';\nimport {\n  AlignPicker,\n  AppearanceSection,\n  ColumnChipsContainer,\n  ColumnPickerContainer,\n} from './styles';\n\nexport const NoumEditSection: React.FC<NoumEditSectionProps> = ({\n  noumSidePanelId,\n}) => {\n  const {\n    handleDeleteModal,\n    space,\n    setNoumSidePanelId,\n    section,\n    setsectionStatus,\n    setsectionSideBarOptions,\n    sectionSideBarOptions,\n    duplicateHandler,\n  } = useEditChamberState();\n  const { removeSectionHelper } = useRemoveSectionHelper();\n  const { updateNoumSectionHelper } = useUpdateNoumSectionHelper();\n  const [selectedColumn, setSelectedColumn] = useState<string>();\n  const [showNonRemovableModal, setShowNonRemovableModal] = useState(false);\n  const column = useMemo(\n    () =>\n      section?.columns.find(\n        (sectionItem) => sectionItem._id === selectedColumn,\n      ),\n    [section?.columns, selectedColumn],\n  );\n\n  const nonRemovableTools = useMemo(\n    () => ElementUtils.nonRemovableTools(section?.columns || []),\n    [section?.columns],\n  );\n\n  const columnsPerLayout = useMemo(() => {\n    let columsCount = 1;\n    const initialSelectedColumn = section?.columns.find(\n      (item) => item._id === selectedColumn,\n    );\n    setSelectedColumn(\n      selectedColumn ? initialSelectedColumn?._id : section?.columns[0]._id,\n    );\n    switch (\n      sectionSideBarOptions?.selectedLayout?.layoutType ??\n      section?.type\n    ) {\n      case NoumLayoutSectionType.ThreeEqualColumns:\n        columsCount = 3;\n        break;\n      case NoumLayoutSectionType.TwoColumnsLeftWider:\n      case NoumLayoutSectionType.TwoColumnsRightWider:\n      case NoumLayoutSectionType.TwoEqualColumns:\n        columsCount = 2;\n        break;\n      default:\n        setSelectedColumn(section?.columns[0]._id);\n        columsCount = 0;\n        break;\n    }\n\n    const updatedColumns = section?.columns?.map((element, index) => ({\n      id: element._id,\n      text: `${index + 1}`,\n      name: `${element._id}`,\n      labelSize: 'auto',\n    }));\n    return updatedColumns?.slice(0, columsCount) as InputListTypes[];\n  }, [\n    section?.columns,\n    section?.type,\n    sectionSideBarOptions?.selectedLayout?.layoutType,\n    selectedColumn,\n  ]);\n\n  const onAlignItemChange = async (value: string) => {\n    setsectionSideBarOptions?.({\n      selectedAlignItem: {\n        id: section?._id!,\n        alignItem: value as NoumLayoutSectionVerticalAlignType,\n      },\n    });\n    const isSuccess = await updateNoumSectionHelper(space?._id!, {\n      sectionId: section?._id,\n      columnsVerticalAlignType: value as NoumLayoutSectionVerticalAlignType,\n    });\n    setsectionStatus?.(NoumLayoutStatus.Unsaved);\n    if (!isSuccess) {\n      setsectionSideBarOptions?.({\n        selectedAlignItem: {\n          id: section?._id!,\n          alignItem: section?.columnsVerticalAlignType!,\n        },\n      });\n\n      setsectionStatus?.(undefined);\n    }\n  };\n\n  const onColumnChange = (value: string) => {\n    setsectionSideBarOptions?.({\n      columnBackground: undefined,\n    });\n    setSelectedColumn(value);\n  };\n  const onSectionBackgroundChange = async (\n    e: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setsectionSideBarOptions?.({\n      sectionBackgroud: { id: section?._id!, background: e.target.checked },\n    });\n    const isSuccess = await updateNoumSectionHelper(space?._id!, {\n      sectionId: section?._id,\n      background: e.target.checked,\n    });\n    setsectionStatus?.(NoumLayoutStatus.Unsaved);\n    if (!isSuccess) {\n      setsectionSideBarOptions?.({\n        sectionBackgroud: {\n          id: section?._id!,\n          background: section?.background!,\n        },\n      });\n      setsectionStatus?.(undefined);\n    }\n  };\n  const onColumnBackgroundChange = async (\n    e: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setsectionSideBarOptions?.({\n      columnBackground: { id: column?._id!, background: e.target.checked },\n    });\n    const updatedColumn = section?.columns.map((item) =>\n      item._id === selectedColumn\n        ? { columnId: item._id, background: e.target.checked }\n        : { columnId: item._id, background: item.background },\n    );\n\n    const isSuccess = await updateNoumSectionHelper(space?._id!, {\n      sectionId: section?._id,\n      columns: updatedColumn,\n    });\n    setsectionStatus?.(NoumLayoutStatus.Unsaved);\n    if (!isSuccess) {\n      const preColumn = section?.columns.find(\n        (col) => col._id === selectedColumn,\n      );\n      setsectionSideBarOptions?.({\n        columnBackground: {\n          id: preColumn?._id!,\n          background: preColumn?.background!,\n        },\n      });\n      setsectionStatus?.(undefined);\n    }\n  };\n  const clickHandler = async () => {\n    if (nonRemovableTools.length > 0) {\n      setShowNonRemovableModal(true);\n      return;\n    }\n    const isToolExist = section?.columns.find((item) => item.tools.length > 0);\n    if (isToolExist) {\n      handleDeleteModal?.(SectionToolType.SECTION_TYPE, noumSidePanelId)!;\n    } else {\n      const isRemoved = await removeSectionHelper(noumSidePanelId, space?._id!);\n      if (isRemoved) {\n        setNoumSidePanelId?.(undefined);\n      }\n    }\n  };\n\n  const onClickduplicate = async () => {\n    duplicateHandler?.(noumSidePanelId);\n  };\n\n  return (\n    <>\n      <Stack\n        vertical\n        fullWidth\n        align=\"stretch\"\n        justify=\"space-between\"\n        aria-label=\"edit_section_side_panel\"\n      >\n        <Stack vertical fullWidth aria-label=\"edit_section_block\">\n          <AppearanceSection\n            vertical\n            fullWidth\n            align=\"stretch\"\n            gap={8}\n            padding=\"16px 16px 0 16px\"\n            aria-label=\"edit_apearance_block\"\n          >\n            <TSpan\n              font=\"footnote-bold\"\n              colorToken=\"--text-card-neutral-highlighted\"\n              overflow=\"ellipsis\"\n              aria-label=\"apearance_text\"\n            >\n              {t('noumena.noum_editor.edit_Section.appearance')}\n            </TSpan>\n            <Stack\n              fullWidth\n              align=\"center\"\n              justify=\"space-between\"\n              aria-label=\"column_align_block\"\n            >\n              <TSpan\n                font=\"footnote\"\n                colorToken=\"--text-card-neutral-highlighted\"\n                overflow=\"ellipsis\"\n                aria-label=\"align_items_text\"\n              >\n                {t('noumena.noum_editor.edit_Section.alignitems')}\n              </TSpan>\n              <AlignPicker aria-label=\"align_columns_picker\">\n                <BasicChipsTabsForm\n                  onChange={onAlignItemChange}\n                  inputList={alignItems}\n                  selectedId={\n                    sectionSideBarOptions?.selectedAlignItem?.alignItem! ??\n                    section?.columnsVerticalAlignType\n                  }\n                  mode=\"isActiveBackgroundOnly\"\n                  fontSize=\"--font-link-medium-size\"\n                  iconSize={20}\n                />\n              </AlignPicker>\n            </Stack>\n            <Stack\n              fixedHeight={56}\n              fullWidth\n              align=\"center\"\n              justify=\"space-between\"\n              aria-label=\"change_section_background_block\"\n            >\n              <TSpan\n                font=\"footnote\"\n                colorToken=\"--text-card-neutral-highlighted\"\n                overflow=\"ellipsis\"\n                aria-label=\"section_background_text\"\n              >\n                {t('noumena.noum_editor.edit_Section.background')}\n              </TSpan>\n              <Switch\n                id=\"background\"\n                aria-label=\"section_background_toggle\"\n                checked={\n                  sectionSideBarOptions?.sectionBackgroud?.background! ??\n                  section?.background\n                }\n                onChange={(e) => onSectionBackgroundChange(e)}\n              />\n            </Stack>\n          </AppearanceSection>\n          <ColumnPickerContainer aria-label=\"section_layout_container\">\n            <ColumnPicker aria-label=\"section_layout_picker\" />\n          </ColumnPickerContainer>\n          <Stack\n            vertical\n            fullWidth\n            align=\"stretch\"\n            gap={8}\n            padding=\"16px\"\n            aria-label=\"column_picker_block\"\n          >\n            <TSpan\n              font=\"footnote-bold\"\n              colorToken=\"--text-card-neutral-highlighted\"\n              overflow=\"ellipsis\"\n              aria-label=\"column_settings_text\"\n            >\n              {t('noumena.noum_editor.edit_Section.column_settings')}\n            </TSpan>\n            {columnsPerLayout && columnsPerLayout?.length > 1 && (\n              <ColumnChipsContainer>\n                <BasicChipsTabsForm\n                  onChange={onColumnChange}\n                  inputList={columnsPerLayout!}\n                  selectedId={selectedColumn!}\n                  mode=\"isBackground\"\n                  isWithoutImage\n                  fontSize=\"--font-footnote-regular-size\"\n                  tabWidth=\"100%\"\n                  maxHeight=\"27px\"\n                  tabCSS={{ margin: 0 }}\n                />\n              </ColumnChipsContainer>\n            )}\n          </Stack>\n          <Stack\n            fullWidth\n            align=\"center\"\n            justify=\"space-between\"\n            padding=\"8px 16px\"\n            aria-label=\"change_column_background_block\"\n          >\n            <TSpan\n              font=\"footnote\"\n              colorToken=\"--text-card-neutral-highlighted\"\n              overflow=\"ellipsis\"\n              aria-label=\"column_background_text\"\n            >\n              {t('noumena.noum_editor.edit_Section.column_background')}\n            </TSpan>\n            <Switch\n              id=\"column_background\"\n              aria-label=\"column_background_toggle\"\n              checked={\n                sectionSideBarOptions?.columnBackground?.background ??\n                column?.background\n              }\n              onChange={(e) => onColumnBackgroundChange(e)}\n            />\n          </Stack>\n        </Stack>\n        <Stack gap={8} padding=\"16px\" aria-label=\"bottom_actions_container\">\n          <Button\n            size=\"full_small\"\n            tertiary\n            secondary\n            onClick={onClickduplicate}\n            aria-label=\"duplicate_button\"\n          >\n            {t('noumena.noum_editor.edit_Section.button.duplicate')}\n          </Button>\n          <Button\n            size=\"full_small\"\n            intent=\"negative\"\n            secondary\n            onClick={clickHandler}\n            aria-label=\"delete_button\"\n          >\n            {t('noumena.noum_editor.edit_Section.button.delete')}\n          </Button>\n        </Stack>\n      </Stack>\n      <NonRemovableDeleteModal\n        isOpen={showNonRemovableModal}\n        onClose={() => setShowNonRemovableModal(false)}\n        nonRemovableToolList={nonRemovableTools}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SliderWrapper = styled.div<{}>`\n  width: 226px;\n`;\n\nexport const SliderRangeInput = styled.input<{ percent: number }>`\n  width: 218px;\n  -webkit-appearance: none;\n  background: var(--bg-progressbar-neutral-default);\n  background-image: linear-gradient(\n    var(--bg-progressbar-brand-primary-default),\n    var(--bg-progressbar-brand-primary-default)\n  );\n  background-size: ${({ percent }) => `${percent}% 100%`};\n  background-repeat: no-repeat;\n  border-radius: 32px;\n  margin: 0;\n\n  ::-webkit-slider-runnable-track {\n    height: 8px;\n  }\n  ::-webkit-slider-thumb {\n    z-index: 4;\n    appearance: none;\n    cursor: pointer;\n    height: 20px;\n    width: 20px;\n    border-radius: 50%;\n    position: relative;\n    top: -6px;\n    outline: 2px solid var(--color-base-primary-main);\n    background: white;\n    transition: background 0.3s ease-in-out;\n  }\n`;\n","import { type FC, useCallback, useMemo, useState } from 'react';\nimport { TSpan } from '@/components/Typography';\nimport { Stack } from '@/layout';\nimport { SliderRangeInput, SliderWrapper } from './styles';\n\nexport type SliderProps = {\n  min?: number;\n  max?: number;\n  initialValue?: number;\n  changedValue?: number;\n  onChange?: (value: number) => void;\n  onChangeEnd?: () => void;\n};\n\nconst Slider: FC<SliderProps> = ({\n  min = 0,\n  max = 100,\n  initialValue = 30,\n  onChange,\n  changedValue,\n  onChangeEnd,\n}) => {\n  const [value, setValue] = useState(initialValue);\n  const handleChange = useCallback(\n    (e) => {\n      const newValue = e.target.value;\n      setValue(newValue);\n      onChange?.(newValue);\n    },\n    [onChange],\n  );\n\n  const percent = useMemo(\n    () => (((changedValue || value) - min) * 100) / (max - min),\n    [changedValue, max, min, value],\n  );\n\n  return (\n    <SliderWrapper>\n      <SliderRangeInput\n        type=\"range\"\n        min={min}\n        max={max}\n        onChange={handleChange}\n        value={changedValue || value}\n        percent={percent}\n        onMouseUp={onChangeEnd}\n      />\n      <Stack fullWidth justify=\"end\">\n        <TSpan font=\"footnote\">{changedValue || value}%</TSpan>\n      </Stack>\n    </SliderWrapper>\n  );\n};\n\nexport default Slider;\n","import { type FC } from 'react';\nimport { Separator } from '@/components/Separator/Separator';\nimport { Stack } from '@/layout';\n\ntype EditBlockProps = {\n  separatorSize?: string;\n  children?: JSX.Element;\n};\n\nconst EditBlockWrapper: FC<EditBlockProps> = ({ separatorSize, children }) => (\n  <>\n    {separatorSize && (\n      <Separator fullWidth size={separatorSize} noMargin={true} />\n    )}\n    <Stack\n      vertical\n      fullWidth\n      data-testid=\"edit-block-wrapper\"\n      style={{ padding: '16px 12px' }}\n      aria-label=\"edit_block_wrapper\"\n    >\n      {children}\n    </Stack>\n  </>\n);\n\nexport default EditBlockWrapper;\n","import styled from 'styled-components';\nimport { Stack } from '@/layout';\n\nexport const MediaInfoWrapper = styled(Stack)`\n  & > div {\n    min-width: 56px;\n  }\n`;\n\nexport const StyledButton = styled.div<{\n  isBanner?: boolean;\n}>`\n  width: ${({ isBanner }) => isBanner && '173px'};\n  height: ${({ isBanner }) => isBanner && '36px'};\n  cursor: pointer;\n  vertical-align: middle;\n  gap: 10px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  background-color: var(\n    ${({ isBanner }) =>\n      isBanner ? '--color-base-gray-transparency-40' : 'none'}\n  );\n`;\n","import { t } from 'i18next';\nimport { TSpan } from '@/components/Typography';\nimport { StyledButton } from './styles';\nimport { type UploadFileButtonProps } from './types';\n\nexport const UploadFileButton = ({ onClick }: UploadFileButtonProps) => (\n  <StyledButton data-testid=\"avatarEditButton\" onClick={onClick}>\n    <TSpan font=\"footnote\" colorToken=\"--bg-button-brand-primary-default\">\n      {t(`noumena.noum_editor.edit_tool.button.replace`)}\n    </TSpan>\n  </StyledButton>\n);\n","import { memo, useEffect } from 'react';\nimport { Avatar } from '@/components/Avatar/Avatar/Avatar';\nimport { useEditChamberState } from '@/screens/Chamber/EditChamber/provider';\nimport { Stack } from '@/layout';\nimport fileSizeConverter from '@/utils/fileSizeConverter';\nimport { TSpan } from '@/components/Typography';\nimport { getFileNameWithEllipsis } from '@/utils/strings';\nimport { UploadFileButton } from './UploadFileButton';\nimport { type MediaPreviewProps } from './types';\n\nconst MediaPreview = memo((props: MediaPreviewProps) => {\n  const {\n    noumLayoutToolUpdating,\n    mediaUploadPercentage,\n    setMediaUploadPercentage,\n  } = useEditChamberState();\n  const {\n    url,\n    uploadPercentage,\n    isUploadComplete,\n    isUploadStarted,\n    fileName,\n    fileSize,\n    onClick,\n  } = props;\n  useEffect(() => {\n    const percent = isUploadStarted\n      ? isUploadComplete\n        ? 100\n        : uploadPercentage % 100\n      : 0;\n    setMediaUploadPercentage?.(percent);\n  }, [\n    isUploadComplete,\n    isUploadStarted,\n    mediaUploadPercentage,\n    setMediaUploadPercentage,\n    uploadPercentage,\n  ]);\n\n  return (\n    <>\n      <Avatar\n        url={url}\n        size=\"XL\"\n        isUploadComplete={isUploadComplete && !noumLayoutToolUpdating}\n        isUploadStarted={isUploadStarted}\n        spinnerColor=\"var(--icon-spinner-neutral-alt-default)\"\n        overlayColor=\"var(--overlay-avatar-neutral-default)\"\n      />\n      <Stack vertical justify=\"space-between\">\n        {fileName && (\n          <TSpan font=\"footnote\" colorToken=\"--text-card-neutral-highlighted\">\n            {getFileNameWithEllipsis(fileName)}\n          </TSpan>\n        )}\n        {fileSize && (\n          <TSpan font=\"footnote\" colorToken=\"--text-card-neutral-default\">\n            {fileSizeConverter(fileSize)}\n          </TSpan>\n        )}\n        <UploadFileButton onClick={onClick} />\n      </Stack>\n    </>\n  );\n});\n\nexport default MediaPreview;\n","import { memo } from 'react';\nimport { Upload } from '@/features/upload/components';\nimport { type CommonAvatarProps } from '@/components/Avatar/Avatar/types';\nimport { MediaInfoWrapper } from './styles';\nimport MediaPreview from './MediaPreview';\n\nexport interface EditableAvatarProps extends CommonAvatarProps {\n  onContentChange: (next: string) => void;\n  acceptedFileTypes?: string;\n  fileName?: string;\n  onUploadFile?: (file: File) => void;\n}\n\nexport const UploadFile = memo(\n  ({\n    url,\n    maximumFileSize,\n    defaultImagePlaceHolder,\n    onContentChange,\n    acceptedFileTypes,\n    fileSize,\n    fileName,\n    onUploadFile,\n  }: EditableAvatarProps) => (\n    <Upload<HTMLDivElement>\n      url={url || ''}\n      maxSize={maximumFileSize}\n      acceptedFileTypes={acceptedFileTypes}\n      onContentChange={onContentChange}\n      generateThumbnail={true}\n      onUploadFile={onUploadFile}\n    >\n      {({ triggerElRef, ...rest }) => (\n        <MediaInfoWrapper gap={12} ref={triggerElRef} align=\"center\">\n          <MediaPreview\n            url={url || defaultImagePlaceHolder}\n            isUploadComplete={rest.isUploadComplete}\n            isUploadStarted={rest.isUploadStarted}\n            uploadPercentage={rest.uploadPercentage}\n            fileName={fileName}\n            fileSize={fileSize}\n            onClick={rest.onClickHandler}\n          />\n        </MediaInfoWrapper>\n      )}\n    </Upload>\n  ),\n);\n","import { t } from 'i18next';\nimport { useCallback, useMemo, useState } from 'react';\nimport { TSpan } from '@/components/Typography';\nimport { Stack } from '@/layout';\nimport { Button } from '@/components/Button';\nimport { Accordion } from '@/components/Accordion';\nimport Slider from '@/components/Slider';\nimport {\n  type ElementInput,\n  ElementStatusEnum,\n  ElementTypeEnum,\n} from '@/apollo/generated/types';\nimport BasicChipsTabsForm from '@/components/Tabs/TabsForm';\nimport { useSetNoumLayoutToolMetaValueHelper } from '@/features/noums/hooks/spaceQuery';\nimport { ElementUtils } from '@/utils/element';\nimport { imageTypes, videoTypes } from '@/constants/fileTypes';\nimport { useSubWalletDeleteHelper } from '@/features/money/hooks';\nimport { AlignPicker, ToolPermissionContainer } from './styles';\nimport { useEditChamberState } from '../../EditChamber/provider';\nimport { SectionToolType, TextAlignType } from '../NoumSections/constants';\nimport { type NoumEditToolProps, elementDescription } from './types';\nimport EditBlockWrapper from './EditBlockWrapper';\nimport { textAlignItems } from './constants';\nimport { UploadFile } from './UploadFile';\nimport { type ChangeMeta } from '../Element/types';\nimport { NonZeroWalletModal } from '../modals/NonZeroWalletModal';\n\nexport const EditTool: React.FC<NoumEditToolProps> = ({ noumSidePanelId }) => {\n  const {\n    handleDeleteModal,\n    activeEditingTool,\n    handleChangeToolMetaValue,\n    toolMetaValue,\n    updateToolMetaValue,\n    updateToolMutation,\n    duplicateHandler,\n    space,\n    setMediaUploadTempFile,\n  } = useEditChamberState();\n\n  const [showNonZeroWalletModal, setShowNonZeroWalletModal] = useState(false);\n\n  const isDuplicatable = useMemo(\n    () => ElementUtils.isAvailableToDuplicate(activeEditingTool!),\n    [activeEditingTool],\n  );\n  const isDelete = useMemo(\n    () => ElementUtils.isNotAvailableToDelete(activeEditingTool!),\n    [activeEditingTool],\n  );\n  const isMediaElement = useMemo(\n    () => ElementUtils.isMediaElement(activeEditingTool!),\n    [activeEditingTool],\n  );\n  const isImage = useMemo(\n    () => ElementUtils.isImageElement(activeEditingTool!),\n    [activeEditingTool],\n  );\n\n  const { setNoumLayoutToolMetaValueHelper } =\n    useSetNoumLayoutToolMetaValueHelper();\n\n  const showPermission = false;\n\n  const mockedPermissions = [\n    {\n      role: 'Guests',\n      permissions: ['View'],\n    },\n    {\n      role: 'Favorites',\n      permissions: ['View', 'Add'],\n    },\n    {\n      role: 'Clients',\n      permissions: ['View', 'Add'],\n    },\n    {\n      role: 'Sub-Contractors',\n      permissions: ['View', 'Add'],\n    },\n    {\n      role: 'Editors',\n      permissions: ['View', 'Add'],\n    },\n  ];\n\n  const { subWalletDeleteHelper } = useSubWalletDeleteHelper();\n\n  const getDescription = () => {\n    if (!activeEditingTool?.elementType) return '';\n    const desc = elementDescription[activeEditingTool.elementType];\n    if (desc === '')\n      return 'This is a short tool description. It contains max 150 characters.';\n    const trimedDesc = desc.trim();\n    if (trimedDesc.length > 150) {\n      return `${trimedDesc.substring(0, 147)}...`;\n    }\n    return trimedDesc;\n  };\n\n  const onTextAlignItemChange = async (value: string) => {\n    handleChangeToolMetaValue?.({ align: value as TextAlignType });\n    await setNoumLayoutToolMetaValueHelper(\n      {\n        toolId: activeEditingTool?._id!,\n        metaValues: {\n          align: value,\n        },\n      },\n      space?._id,\n    );\n  };\n\n  const onHandleChangeScaleSize = useCallback(\n    (newValue: number) => {\n      handleChangeToolMetaValue?.({ percentageSize: Number(newValue) });\n    },\n    [handleChangeToolMetaValue],\n  );\n\n  const handleUploadFile = (mFile: File) => {\n    setMediaUploadTempFile?.(mFile);\n  };\n\n  const handleChangeFileResource = useCallback(\n    (value?: string, meta?: ChangeMeta) => {\n      setMediaUploadTempFile?.(undefined);\n      if (!activeEditingTool) return;\n      const json = {\n        ...ElementUtils.getBodyContentJson(activeEditingTool),\n        fileSize: meta?.fileSize,\n        fileName: meta?.fileName,\n        ...(meta?.type === 'video' && {\n          thumbnail: meta.thumbnail,\n          videoURL: meta.videoURL,\n        }),\n      };\n\n      const input: ElementInput = {\n        elementId: noumSidePanelId,\n        bodyContent: value,\n        bodyContentJson: Object.keys(json).length > 0 ? json : null,\n        status: ElementStatusEnum.Unsaved,\n      };\n      updateToolMutation?.(input);\n    },\n    [\n      activeEditingTool,\n      noumSidePanelId,\n      setMediaUploadTempFile,\n      updateToolMutation,\n    ],\n  );\n\n  const mediaData = useMemo(\n    () => ElementUtils.getBodyContentJson(activeEditingTool!),\n    [activeEditingTool],\n  );\n\n  const regularDeleteFlow = useCallback(() => {\n    handleDeleteModal?.(SectionToolType.TOOL_TYPE, noumSidePanelId);\n  }, [handleDeleteModal, noumSidePanelId]);\n\n  const handleCloseNonZeroWalletModal = () => {\n    setShowNonZeroWalletModal(!showNonZeroWalletModal);\n  };\n\n  return (\n    <>\n      <Stack\n        vertical\n        fullWidth\n        align=\"stretch\"\n        justify=\"space-between\"\n        aria-label=\"edit_tool_side_panel\"\n      >\n        <div>\n          <Stack padding=\"0 12px 4px 12px\" aria-label=\"tool_description\">\n            <TSpan font=\"body-m\" colorToken=\"--text-card-neutral-default\">\n              {getDescription()}\n            </TSpan>\n          </Stack>\n          {isMediaElement && (\n            <>\n              <EditBlockWrapper separatorSize=\"thick\">\n                <>\n                  <TSpan font=\"footnote-bold\" aria-label=\"file_uploaded_text\">\n                    {t(`noumena.noum_editor.tool.image.file_uploaded`)}\n                  </TSpan>\n                  <Stack gap={12} aria-label=\"uploaded_file_block\">\n                    <UploadFile\n                      acceptedFileTypes={isImage ? imageTypes : videoTypes}\n                      url={\n                        isImage\n                          ? ElementUtils.getBodyContent(activeEditingTool!)\n                          : ElementUtils.getBodyContentJson(activeEditingTool!)\n                              ?.thumbnail\n                      }\n                      onContentChange={handleChangeFileResource}\n                      maximumFileSize={isImage ? 20 : 200}\n                      fileSize={mediaData?.fileSize}\n                      fileName={mediaData?.fileName}\n                      onUploadFile={handleUploadFile}\n                    />\n                  </Stack>\n                </>\n              </EditBlockWrapper>\n              <EditBlockWrapper separatorSize=\"thick\">\n                <>\n                  <TSpan font=\"footnote-bold\" aria-label=\"image_size_text\">\n                    {t(`noumena.noum_editor.tool.image.size`)}\n                  </TSpan>\n                  <Slider\n                    onChange={onHandleChangeScaleSize}\n                    initialValue={toolMetaValue?.percentageSize}\n                    changedValue={toolMetaValue?.percentageSize}\n                    onChangeEnd={updateToolMetaValue}\n                  />\n                </>\n              </EditBlockWrapper>\n              <EditBlockWrapper separatorSize=\"thick\">\n                <Stack\n                  fullWidth\n                  align=\"center\"\n                  justify=\"space-between\"\n                  aria-label=\"image_align_block\"\n                >\n                  <TSpan font=\"footnote-bold\" aria-label=\"image_align_text\">\n                    {t(`noumena.noum_editor.tool.image.align`)}\n                  </TSpan>\n                  <AlignPicker aria-label=\"image_align_picker\">\n                    <BasicChipsTabsForm\n                      onChange={onTextAlignItemChange}\n                      inputList={textAlignItems}\n                      selectedId={toolMetaValue?.align || TextAlignType.CENTER}\n                      mode=\"isActiveBackgroundOnly\"\n                      fontSize=\"--font-link-medium-size\"\n                      iconSize={20}\n                    />\n                  </AlignPicker>\n                </Stack>\n              </EditBlockWrapper>\n            </>\n          )}\n          {showPermission && (\n            <EditBlockWrapper separatorSize=\"thick\">\n              <Accordion\n                title=\"Permissions\"\n                titleFont=\"footnote-bold\"\n                preExpanded\n                headerPadding=\"0\"\n                aria-label=\"permissions_accordian\"\n              >\n                <Stack\n                  vertical\n                  padding=\"10px 0px\"\n                  aria-label=\"permissions_block\"\n                >\n                  {mockedPermissions.map((data) => (\n                    <ToolPermissionContainer key={data.role}>\n                      <TSpan\n                        font=\"footnote\"\n                        colorToken=\"--text-card-header-neutral-highlighted\"\n                        overflow=\"ellipsis\"\n                        aria-label=\"permission_role\"\n                      >\n                        {data.role}\n                      </TSpan>\n                      <TSpan\n                        font=\"footnote\"\n                        colorToken=\"--text-input-neutral-default\"\n                        overflow=\"ellipsis\"\n                        aria-label=\"permission_title\"\n                      >\n                        {data.permissions.join(' & ')}\n                      </TSpan>\n                    </ToolPermissionContainer>\n                  ))}\n                </Stack>\n              </Accordion>\n            </EditBlockWrapper>\n          )}\n        </div>\n        <Stack gap={8} padding=\"12px\" aria-label=\"bottom_actions_container\">\n          {isDuplicatable && (\n            <Button\n              size=\"full_small\"\n              tertiary\n              secondary\n              onClick={() => duplicateHandler?.(activeEditingTool?._id!, true)}\n              aria-label=\"duplicate_button\"\n            >\n              {t('noumena.noum_editor.edit_tool.duplicate')}\n            </Button>\n          )}\n          {!isDelete && (\n            <Button\n              size=\"full_small\"\n              intent=\"negative\"\n              secondary\n              aria-label=\"delete_button\"\n              onClick={async () => {\n                if (ElementTypeEnum.Wallet === activeEditingTool?.elementType) {\n                  subWalletDeleteHelper(\n                    space?._id,\n                    regularDeleteFlow,\n                    handleCloseNonZeroWalletModal,\n                  );\n                } else {\n                  regularDeleteFlow();\n                }\n              }}\n            >\n              {t('noumena.noum_editor.edit_tool.delete')}\n            </Button>\n          )}\n        </Stack>\n      </Stack>\n      <NonZeroWalletModal\n        isOpen={showNonZeroWalletModal}\n        handleClose={handleCloseNonZeroWalletModal}\n      />\n    </>\n  );\n};\n","import { t } from 'i18next';\nimport { useMemo, useRef } from 'react';\nimport { SideModal } from '@/components/SideModal';\nimport { breakpoints } from '@/constants/devices';\nimport { useClickOutside, useWindowDimensions } from '@/hooks';\nimport { Icon } from '@/components/Icon';\nimport { useEditChamberState } from '@/screens/Chamber/EditChamber/provider';\nimport { ElementUtils } from '@/utils/element';\nimport { NoumEditSection } from './NoumEditSection';\nimport { EditTool } from './EditTool';\nimport { NoumSidePanelWrapper } from './styles';\nimport { SectionToolType } from '../NoumSections/constants';\nimport { type SidePanelProps, elementTitle } from './types';\n\nexport const NoumSidePanel = ({\n  open,\n  onClose,\n  noumSidePanelType = SectionToolType.SECTION_TYPE,\n  noumSidePanelId,\n  ...sideModalProps\n}: SidePanelProps) => {\n  const { activeEditingTool } = useEditChamberState();\n  const { width } = useWindowDimensions();\n  const isDesktop = useMemo(() => width >= breakpoints.TABLET_L, [width]);\n  const containerRef = useRef<HTMLDivElement>(null);\n  useClickOutside(containerRef, true, onClose, {\n    excludes: [\n      `.modal-root [data-testid=\"dropdown-container\"]`,\n      '.NoumEditor-root [data-testid=\"hoverWrapper-container\"]',\n      `.modal-root [data-testid=\"nonremovable-tools-modal\"]`,\n    ],\n  });\n\n  const isTool = noumSidePanelType === SectionToolType.TOOL_TYPE;\n\n  const isOpen =\n    open &&\n    (isTool\n      ? !!activeEditingTool &&\n        noumSidePanelId === activeEditingTool._id &&\n        (ElementUtils.isMediaElement(activeEditingTool)\n          ? ElementUtils.isImageAndVideoNotEmpty(activeEditingTool)\n          : true)\n      : true);\n\n  const sidePanelTitle = useMemo(\n    () =>\n      isTool\n        ? activeEditingTool?.elementType\n          ? elementTitle[activeEditingTool.elementType]\n          : t('noumena.noum_editor.tool')\n        : t('noumena.noum_editor.edit_Section'),\n    [activeEditingTool?.elementType, isTool],\n  );\n\n  return (\n    <NoumSidePanelWrapper ref={containerRef} aria-label=\"side_panel_wrapper\">\n      <SideModal\n        className=\"noums_container\"\n        placement=\"right\"\n        enableAnimation\n        nonBlockingModal={isDesktop}\n        disableEscapeKeyDown\n        isBackgroundOpacity={!isDesktop}\n        height=\"100%\"\n        padding={0}\n        width=\"250px\"\n        title={sidePanelTitle}\n        titleFont=\"body-m-bold\"\n        open={isOpen}\n        onClose={onClose}\n        rightSecondaryIcon={\n          <Icon\n            name=\"close_m\"\n            color=\"--icon-card-neutral-default\"\n            size={24}\n            onClick={onClose}\n          />\n        }\n        {...sideModalProps}\n      >\n        {isTool ? (\n          <EditTool noumSidePanelId={noumSidePanelId} />\n        ) : (\n          <NoumEditSection noumSidePanelId={noumSidePanelId} />\n        )}\n      </SideModal>\n    </NoumSidePanelWrapper>\n  );\n};\n","import { type FC, useState } from 'react';\nimport { PopoverWrapper } from '@/features/noums/components/NoumEditor2.0';\nimport { SectionLayoutPicker } from '../SectionLayoutPicker';\nimport { type SelectLayout } from '../NoumSections/types';\nimport { AddSectionComponent } from './AddSectionComponent';\n\nexport const AddSectionPopover: FC<SelectLayout> = ({\n  position = 0,\n  setIsLoading,\n}) => {\n  const [isPopover, setIsPopover] = useState(false);\n\n  return (\n    <PopoverWrapper\n      offsetY={68}\n      isOpen={isPopover}\n      onClose={() => setIsPopover(false)}\n      renderPopoverContent={() => (\n        <SectionLayoutPicker\n          position={position}\n          setIsPopover={setIsPopover}\n          setIsLoading={setIsLoading}\n        />\n      )}\n      renderTargetContent={() => (\n        <AddSectionComponent onClick={() => setIsPopover(true)} />\n      )}\n    />\n  );\n};\n\nexport default AddSectionPopover;\n","import { ConnectionType } from '@/apollo/generated/types';\nimport { type SpaceOutputFragment } from '@/apollo/graphql';\nimport { t } from 'i18next';\n\nexport const spaceId = '6241a26b23700ef26c82b67e';\n\nexport const getSpaceById: SpaceOutputFragment = {\n  __typename: 'SpaceOutput',\n  _id: '624cfaf0cb8e6a7d595b5fe7',\n  draft: null,\n  link: null,\n  unSaved: null,\n  percentCompleted: 0,\n  tempStatus: null,\n  connectionId: null,\n  projectType: 'PUBLIC',\n  isConnected: false,\n  description: null,\n  followersCount: 0,\n  connectionsCount: 0,\n  isFollowing: false,\n  publishedAt: '2022-05-20T15:13:57.573Z',\n  updatedAt: '2022-05-26T05:25:26.555Z',\n  elements: [],\n  institution: 'NOUMENA',\n  lastEditedBy: null,\n  name: 'Sample Space',\n  networks: [],\n  permission: 'POST_CREATE',\n  profileImage: null,\n  status: 'DRAFT',\n  title: 'My New Space',\n  lastCustomPreviewSavedTime: null,\n  connectionRole: null,\n  token: {\n    __typename: 'Token',\n    _id: '624cfaf0cb8e6a7d595b5fe7',\n    count: 0,\n    walletId: null,\n  },\n  type: 'WORK',\n  category: null,\n  uid: {\n    __typename: 'UserOutput',\n    SocialHallTCAccepted: false,\n    _id: '6241a26b23700ef26c82b67e',\n    ageGroup: null,\n    bio: null,\n    chamber: null,\n    citizenship: null,\n    connection: ConnectionType.None,\n    connections: [],\n    createdAt: '2022-03-28T11:56:27.227Z',\n    creditCheckResult: null,\n    email: 'radheym@noumena.global',\n    firstName: 'Radhey',\n    freelancingExperience: null,\n    kycResult: null,\n    lastLoginAt: '2022-04-06T02:22:27.989Z',\n    lastName: 'M',\n    location: null,\n    metadata: [],\n    middleName: null,\n    phone: null,\n    profile: {\n      __typename: 'ProfileOutput',\n      _id: '6241a26b23700eff1a82b67f',\n      profilePicture: null,\n      profilePictureThumbnail: null,\n    },\n    profileUrl: null,\n    referralCode: null,\n    roles: [],\n    skills: [\n      {\n        __typename: 'Skill',\n        _id: '61c180f0e617a72e07228c3b',\n        icon: 'Web and Mobile Application Development',\n        name: 'Web and Mobile Application Development',\n      },\n    ],\n    status: 'REGISTERED',\n    title: null,\n    unreadConnectionCount: 0,\n    updatedAt: '2022-04-06T02:22:27.989Z',\n    userOwnReferralCode: '3544',\n    userStatus: 'PENDING',\n    username: 'rm2',\n    visibility: {\n      __typename: 'UserOutputVisibility',\n      email: 'USER',\n      location: 'ALL',\n      phone: 'USER',\n    },\n    visibleTo: [],\n  },\n};\n\nexport const emptyStateNoum = [\n  {\n    key: 0,\n    title: `${t('noumena.noum_editor.empty_state_build_title')}`,\n    description: `${t('noumena.noum_editor.empty_state_description')}`,\n  },\n  {\n    key: 1,\n    title: `${t('noumena.noum_editor.empty_state_use_title')}`,\n    description: `${t('noumena.noum_editor.empty_state_description')}`,\n  },\n];\n","import styled from 'styled-components';\nimport { Card } from '@/components/Card';\n\nexport const NoumContentElementWrapper = styled(Card)<{\n  isColumnBackground?: boolean;\n}>`\n  width: 100%;\n  display: flex;\n  transition: all 0.1s ease-in-out;\n  justify-content: center;\n  align-items: center;\n  border: 2px dashed var(--color-base-gray-80);\n  cursor: pointer;\n  padding: 40px 0;\n  ${({ isColumnBackground }) => !isColumnBackground && 'background: none'};\n  :hover {\n    border-color: var(--border-column-brand-secondary-default);\n    background-color: var(--bg-column-brand-secondary-default);\n  }\n`;\n","import { t } from 'i18next';\nimport { type FC, useMemo, useState } from 'react';\nimport { TSpan } from '@/components/Typography';\nimport { Stack } from '@/layout/Stack';\nimport { Icon } from '@/components/Icon';\nimport {\n  PopoverWrapper,\n  Toolbox,\n} from '@/features/noums/components/NoumEditor2.0';\nimport { NoumContentElementWrapper } from './styles';\nimport { type DroppableAreaProps } from '../SectionElementRearrange/types';\nimport { useEditChamberState } from '../../EditChamber/provider';\n\nexport const NoumContentElement: FC<DroppableAreaProps> = (props) => {\n  const { spaceId, columnId, col, sectionId } = props;\n  const [isPopoverOpen, setIsPopoverOpen] = useState(false);\n  const { sectionSideBarOptions } = useEditChamberState();\n\n  const isColumn = useMemo(\n    () => col?._id === sectionSideBarOptions?.selectedLayout?.id,\n    [col?._id, sectionSideBarOptions?.selectedLayout?.id],\n  );\n\n  return (\n    <PopoverWrapper\n      isOpen={isPopoverOpen}\n      width={500}\n      offsetY={10}\n      onClose={() => setIsPopoverOpen(false)}\n      renderPopoverContent={() => (\n        <Toolbox\n          spaceId={spaceId || ''}\n          handleSelectElementType={() => setIsPopoverOpen(false)}\n          columnId={columnId || ''}\n          sectionId={sectionId}\n        />\n      )}\n      renderTargetContent={() => (\n        <NoumContentElementWrapper\n          isColumnBackground={\n            isColumn\n              ? sectionSideBarOptions?.columnBackground?.background\n              : col?.background\n          }\n          onClick={(e) => {\n            e.stopPropagation();\n            setIsPopoverOpen(true);\n          }}\n        >\n          <Stack gap={9} align=\"center\">\n            <Icon\n              name=\"plus_icon\"\n              size={16}\n              color=\"--icon-add-content-brand-primary-default\"\n            />\n            <TSpan\n              aria-label=\"add_content\"\n              font=\"body-m\"\n              colorToken=\"--text-add-content-brand-primary-default\"\n            >\n              {t('noumena.noum_editor.column_content')}\n            </TSpan>\n          </Stack>\n        </NoumContentElementWrapper>\n      )}\n    />\n  );\n};\n\nexport default NoumContentElement;\n","import { useEffect, useState } from 'react';\n\nexport const useWindowMouseMove = (customMouseUp?: () => void) => {\n  const [coords, setCoords] = useState({ x: 0, y: 0 });\n\n  useEffect(() => {\n    const handleWindowMousedown = (event: MouseEvent) => {\n      setCoords({\n        x: event.clientX,\n        y: event.clientY,\n      });\n    };\n    const handleMouseUp = () => {\n      customMouseUp?.();\n    };\n    window.addEventListener('mousedown', handleWindowMousedown);\n    window.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      window.removeEventListener('mousedown', handleWindowMousedown);\n      window.removeEventListener('mouseup', handleMouseUp);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return { coords };\n};\n","import { t } from 'i18next';\nimport {\n  memo,\n  useCallback,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { Stack } from '@/layout';\nimport {\n  HoverWrapper,\n  InsertDirection,\n  AddToolPopover,\n} from '@/features/noums/components/NoumEditor2.0';\nimport { Icon } from '@/components/Icon';\nimport { TSpan } from '@/components/Typography';\nimport { Element } from '@/screens/Chamber/components/Element';\nimport { ElementUtils } from '@/utils/element';\nimport { ElementTypeEnum } from '@/apollo/generated/types';\nimport { useWindowMouseMove } from '@/hooks/useWindowMoueMove';\nimport { useEditChamberState } from '../../EditChamber/provider';\nimport { SectionToolType } from '../NoumSections/constants';\nimport {\n  DNDElementContainer,\n  DraggingElement,\n  ElementWrapper,\n  NonIntrectiveOverlay,\n} from './styles';\nimport { type DragableSectionProps } from './types';\n\nexport const DragableElement = memo((props: DragableSectionProps) => {\n  const {\n    tool,\n    provided,\n    noumSidePanelId,\n    isDragging,\n    spaceId,\n    columnId,\n    isSectionBg,\n    col,\n    setOnDragInitiateId,\n    onDragInitiateId,\n    index,\n  } = props;\n  const elementRef = useRef<HTMLDivElement>(null);\n  const [currentElementHeight, setCurrentElementHeight] = useState(0);\n  const [columnWidth, setColumnWidth] = useState<number | undefined>(undefined);\n  const handleMouseUp = () => {\n    setOnDragInitiateId?.('');\n  };\n  const { coords } = useWindowMouseMove(handleMouseUp);\n  const [insertDirection, setInsertDirection] = useState<\n    InsertDirection | undefined\n  >(undefined);\n  const { handleEditModal, sectionSideBarOptions } = useEditChamberState();\n  const isDraggingToolPressed = useMemo(\n    () => onDragInitiateId === tool?._id,\n    [onDragInitiateId, tool?._id],\n  );\n  const isActiveTool = noumSidePanelId === tool?._id!;\n  const isColumn = col?._id === sectionSideBarOptions?.columnBackground?.id;\n  const insertPosition = useMemo(() => {\n    if (!tool) return 1;\n    const elementPosition = ElementUtils.getPosition(tool, true);\n    return insertDirection === InsertDirection.Above\n      ? elementPosition - 0.5\n      : elementPosition + 0.5;\n  }, [insertDirection, tool]);\n  const handleInsert = useCallback((direction: InsertDirection) => {\n    setInsertDirection(direction);\n  }, []);\n  const elementHandler = useCallback(\n    (e) => {\n      e.stopPropagation();\n      handleEditModal?.(SectionToolType.TOOL_TYPE, tool?._id!, tool);\n    },\n    [handleEditModal, tool],\n  );\n\n  const isBackgroundcontent = useMemo(\n    () =>\n      tool?.elementType === ElementTypeEnum.Video ||\n      tool?.elementType === ElementTypeEnum.Text ||\n      tool?.elementType === ElementTypeEnum.Image ||\n      tool?.elementType === ElementTypeEnum.BusinessBrief,\n    [tool?.elementType],\n  );\n\n  const isNonAttractive = useMemo(\n    () =>\n      tool?.elementType === ElementTypeEnum.Userposts ||\n      tool?.elementType === ElementTypeEnum.Calendar ||\n      tool?.elementType === ElementTypeEnum.Wallet ||\n      tool?.elementType === ElementTypeEnum.Message ||\n      tool?.elementType === ElementTypeEnum.QuickQuestions ||\n      tool?.elementType === ElementTypeEnum.FilesManager,\n    [tool?.elementType],\n  );\n\n  const isSkillOrNetwork = useMemo(\n    () =>\n      tool?.elementType === ElementTypeEnum.Skills ||\n      tool?.elementType === ElementTypeEnum.Usernetwork,\n    [tool?.elementType],\n  );\n\n  const hoverButtonsDisabled = useMemo(\n    () => ({\n      duplicate: tool && !ElementUtils.isAvailableToDuplicate(tool),\n      edit:\n        tool &&\n        ElementUtils.isMediaElement(tool) &&\n        !ElementUtils.isImageAndVideoNotEmpty(tool),\n      delete: tool && ElementUtils.isNotAvailableToDelete(tool),\n    }),\n    [tool],\n  );\n\n  useLayoutEffect(() => {\n    setColumnWidth(elementRef.current?.clientWidth);\n  }, []);\n\n  return (\n    <DNDElementContainer\n      aria-label={`tool_${index + 1}`}\n      ref={provided?.innerRef}\n      {...provided?.draggableProps}\n      {...provided?.draggableProps.style}\n      data-testid={tool?._id}\n      insertDirection={insertDirection}\n      style={{\n        ...provided?.draggableProps.style,\n        width: isDraggingToolPressed ? `303px` : 'auto',\n        left: isDraggingToolPressed\n          ? `${coords.x - (isBackgroundcontent ? 170 : 200)}px`\n          : '',\n        top: isDraggingToolPressed ? `${coords.y}px` : '',\n        marginLeft: isDraggingToolPressed ? 'auto' : '',\n        height: isDraggingToolPressed ? `${currentElementHeight}px` : `auto`,\n        zIndex: isDraggingToolPressed ? '5000' : 'auto',\n      }}\n    >\n      {insertDirection && (\n        <AddToolPopover\n          spaceId={spaceId}\n          columnId={columnId || ''}\n          isOpen={!!insertDirection}\n          onClose={() => setInsertDirection(undefined)}\n          position={insertPosition}\n          baseElementId={tool?._id || undefined}\n        />\n      )}\n      <HoverWrapper\n        key={tool?._id}\n        id={tool?._id!}\n        className=\"child\"\n        type={SectionToolType.TOOL_TYPE}\n        isActive={isActiveTool}\n        isDragging={isDragging}\n        onInsert={handleInsert}\n        isSectionBackground={isBackgroundcontent && isSectionBg}\n        setOnDragInitiateId={setOnDragInitiateId}\n        isTool={isDraggingToolPressed}\n        setCurrentElementHeight={setCurrentElementHeight}\n        elementRef={elementRef}\n        elementType={tool?.elementType!}\n        isColumnBackground={\n          isBackgroundcontent && isColumn\n            ? sectionSideBarOptions?.columnBackground?.background\n            : col?.background\n        }\n        disable={hoverButtonsDisabled}\n        {...props}\n      >\n        {isDragging || isDraggingToolPressed ? (\n          <DraggingElement>\n            <Stack gap={22} align=\"center\">\n              <Icon name=\"post_m\" size={24} />\n              <TSpan font=\"footnote\" colorToken=\" --text-card-neutral-default\">\n                {t('noumena.noum_editor.drag_item')}\n              </TSpan>\n            </Stack>\n          </DraggingElement>\n        ) : (\n          <ElementWrapper\n            ref={elementRef}\n            onClick={(e) => elementHandler(e)}\n            className=\"element-container\"\n            isDragging={isDragging}\n            isBackground={isBackgroundcontent}\n            isSkillOrNetwork={isSkillOrNetwork}\n          >\n            {isNonAttractive && <NonIntrectiveOverlay />}\n            <Element\n              className=\"element-container\"\n              spaceId={spaceId!}\n              element={tool!}\n              id={`${tool?._id}`}\n              currentTitle={\n                tool?.headerContent ?? tool?.elementType ?? 'UNKNOWN'\n              }\n              isEditing={true}\n              columnWidth={columnWidth}\n              isActiveTool={isActiveTool}\n              isNoumEditor2\n            />\n          </ElementWrapper>\n        )}\n      </HoverWrapper>\n    </DNDElementContainer>\n  );\n});\n","import { type FC, memo } from 'react';\nimport {\n  Draggable,\n  type DraggableProvided,\n  type DraggableStateSnapshot,\n} from 'react-beautiful-dnd';\nimport { DragableElement } from './DragableElement';\nimport { type DragableAreaProps } from './types';\n\nexport const DragableElementArea: FC<DragableAreaProps> = memo((props) => {\n  const { index, tool } = props;\n\n  return (\n    <Draggable\n      draggableId={`${tool?._id}`}\n      index={index}\n      disableInteractiveElementBlocking\n    >\n      {(\n        dragProvided: DraggableProvided,\n        dragSnapshot: DraggableStateSnapshot,\n      ) => (\n        <DragableElement\n          {...props}\n          isDragging={dragSnapshot.isDragging}\n          provided={dragProvided}\n          index={index}\n        />\n      )}\n    </Draggable>\n  );\n});\n","import { type Dispatch, type SetStateAction } from 'react';\nimport {\n  type DraggableProvided,\n  type SnapDragActions,\n} from 'react-beautiful-dnd';\nimport {\n  type ElementOutput,\n  type NoumLayoutColumn,\n  type NoumLayoutSection,\n} from '@/apollo/generated/types';\n\nexport type SectionToolProps = 'SectionType' | 'ToolType';\n\nexport type PlaceholderProps = {\n  dragX: number;\n  dragY: number;\n  dragHeight: number;\n  dragWidth: number;\n  dropWidth: number;\n  dropHeight: number;\n};\n\nexport type RearrageProps = {\n  setNoumSidePanelId?: (value: SetStateAction<string | undefined>) => void;\n  noumSidePanelId?: string | undefined;\n  setNoumSidePanelType?: (value: SectionToolProps) => void;\n  sections?: NoumLayoutSection[];\n  setSections?: Dispatch<SetStateAction<NoumLayoutSection[] | undefined>>;\n  placeholderProps?: PlaceholderProps;\n  isElementDragging?: boolean;\n};\n\nexport type DroppableAreaProps = RearrageProps & {\n  spaceId?: string;\n  lift?: (quoteId: string) => SnapDragActions | null;\n  isHomeNoum?: boolean;\n  tools?: ElementOutput[];\n  columnId?: string;\n  col?: NoumLayoutColumn;\n  isSectionLayout?: boolean;\n  isSectionBg?: boolean;\n  setOnDragInitiateId?: (value: string) => void;\n  onDragInitiateId?: string;\n  sectionId?: string;\n};\n\nexport type DragableAreaProps = Omit<\n  DroppableAreaProps,\n  'sections' | 'tools'\n> & {\n  section?: NoumLayoutSection;\n  tool?: ElementOutput;\n  index: number;\n  currentIndex?: number;\n  totalIndex?: number;\n  lastItem?: boolean;\n};\n\nexport type DragableSectionProps = DragableAreaProps & {\n  isDragging?: boolean;\n  provided?: DraggableProvided;\n};\n\nexport type GetSection = {\n  section: NoumLayoutSection | undefined;\n  sectionIndex: number;\n};\n\nexport type GetColumn = {\n  column: NoumLayoutSection['columns'][0] | undefined;\n  columnIndex: number;\n};\n\nexport type GetToolElement = {\n  sectionIndex: number;\n  columnIndex: number;\n  elementIndex: number;\n  element: ElementOutput | undefined;\n};\n\nexport enum DropabbleType {\n  DROPPABLE_SECTION = 'droppableSection',\n  DROPPABLE_ELEMENT = 'droppableElement',\n}\n","import { type FC, useMemo, useRef } from 'react';\nimport {\n  Droppable,\n  type DroppableProvided,\n  type DroppableStateSnapshot,\n} from 'react-beautiful-dnd';\nimport { ElementUtils } from '@/utils/element';\nimport { Spinner } from '@/components/Spinner';\nimport { SpaceTypeEnum } from '@/apollo/generated/types';\nimport { NoumContentElement } from '../NoumContentElement';\nimport { DragableElementArea } from './DragableElementArea';\nimport {\n  DroppableElement,\n  DropZoneColumn,\n  EditColumnContainer,\n} from './styles';\nimport { DropabbleType, type DroppableAreaProps } from './types';\nimport { useEditChamberState } from '../../EditChamber/provider';\n\nexport const DroppableElementArea: FC<DroppableAreaProps> = (props) => {\n  const {\n    tools,\n    columnId,\n    placeholderProps,\n    col,\n    isSectionLayout,\n    onDragInitiateId,\n    setOnDragInitiateId,\n  } = props;\n  const { sectionSideBarOptions, layoutLoading, space } = useEditChamberState();\n  const columnRef = useRef<HTMLDivElement>(null);\n\n  const renderableTools = useMemo(\n    () =>\n      tools\n        ? ElementUtils.filterMasterElement(\n            tools!,\n            space?.type === SpaceTypeEnum.Home,\n          )\n        : [],\n    [space?.type, tools],\n  );\n  const isSelectedColumn =\n    col?._id === sectionSideBarOptions?.columnBackground?.id;\n  const isToolInColumn = renderableTools.some(\n    (tool) => tool._id === onDragInitiateId,\n  );\n  const columnHeight = isToolInColumn\n    ? columnRef.current?.clientHeight\n    : undefined;\n  if (layoutLoading && isSectionLayout) return <Spinner />;\n  return (\n    <Droppable droppableId={columnId!} type={DropabbleType.DROPPABLE_ELEMENT}>\n      {(\n        dropProvided: DroppableProvided,\n        dropSnapshot: DroppableStateSnapshot,\n      ) => (\n        <DropZoneColumn\n          id={columnId}\n          ref={dropProvided.innerRef}\n          isDraggingOver={dropSnapshot.isDraggingOver}\n          isDraggingFrom={Boolean(dropSnapshot.draggingFromThisWith)}\n          {...dropProvided.droppableProps}\n          data-testid=\"column\"\n          isBackground={\n            isSelectedColumn\n              ? sectionSideBarOptions?.columnBackground?.background\n              : col?.background\n          }\n        >\n          <EditColumnContainer ref={columnRef} height={columnHeight}>\n            {renderableTools && renderableTools.length > 0\n              ? renderableTools.map((element, index, arr) => (\n                  <DragableElementArea\n                    {...props}\n                    key={element._id}\n                    index={index}\n                    currentIndex={index}\n                    totalIndex={renderableTools.length - 1}\n                    tool={element}\n                    lastItem={arr.length - 1 === index}\n                    placeholderProps={placeholderProps}\n                    setOnDragInitiateId={setOnDragInitiateId}\n                    onDragInitiateId={onDragInitiateId}\n                  />\n                ))\n              : !dropSnapshot.isDraggingOver && (\n                  <NoumContentElement {...props} />\n                )}\n          </EditColumnContainer>\n\n          {dropSnapshot.isDraggingOver && (\n            <DroppableElement placeholderProps={placeholderProps} />\n          )}\n          {dropProvided.placeholder}\n        </DropZoneColumn>\n      )}\n    </Droppable>\n  );\n};\n","import { type FC, Fragment, useCallback, useMemo } from 'react';\nimport { delay } from '@/utils/delay';\nimport { HoverWrapper } from '@/features/noums/components/NoumEditor2.0';\nimport { useBreakpoints } from '@/hooks';\nimport { DroppableElementArea } from '@/screens/Chamber/components/SectionElementRearrange/DroppableElementArea';\nimport { type NoumSectionsProps } from './types';\nimport { NoumSectionContainer, NoumSectionLayout } from './Styles';\nimport { SectionToolType } from './constants';\nimport { useEditChamberState } from '../../EditChamber/provider';\n\nexport const NoumSections: FC<NoumSectionsProps> = (props) => {\n  const {\n    setNoumSidePanelId,\n    noumSidePanelId,\n    setNoumSidePanelType,\n    section,\n    lift,\n    index,\n  } = props;\n  const { isSmallerThanLaptop } = useBreakpoints();\n  const { sectionSideBarOptions, height, setHeight, useHeightRef } =\n    useEditChamberState();\n  const isSectionBackground =\n    section?._id === sectionSideBarOptions?.sectionBackgroud?.id;\n  const isSectionAlignItems =\n    section?._id === sectionSideBarOptions?.selectedAlignItem?.id;\n  const isSectionLayout =\n    section?._id === sectionSideBarOptions?.selectedLayout?.id;\n  const isSection = section?._id === noumSidePanelId;\n\n  const isEmptySection = useMemo(\n    () => section?.columns.some((col) => col.tools.length > 0),\n    [section?.columns],\n  );\n  const move = useCallback(\n    async (movingType: 'up' | 'down') => {\n      if (!lift) return;\n      const actions = lift(`${section?._id}`);\n\n      if (!actions) return;\n\n      const { moveDown, moveUp, drop } = actions;\n\n      if (movingType === 'up') {\n        await delay(moveUp, 100);\n      }\n      if (movingType === 'down') {\n        await delay(moveDown);\n      }\n      await delay(drop, 100);\n    },\n    [lift, section?._id],\n  );\n\n  const onUpClick = useCallback(() => move('up'), [move]);\n  const onDownClick = useCallback(() => move('down'), [move]);\n\n  const sectionHandler = useCallback(\n    (e) => {\n      setHeight?.(useHeightRef?.current?.offsetHeight);\n      e.stopPropagation();\n      if (!e.defaultPrevented) {\n        setNoumSidePanelType?.(SectionToolType.SECTION_TYPE);\n        setNoumSidePanelId?.(section?._id);\n      }\n    },\n    [\n      section?._id,\n      setHeight,\n      setNoumSidePanelId,\n      setNoumSidePanelType,\n      useHeightRef,\n    ],\n  );\n\n  return (\n    <>\n      <HoverWrapper\n        id={section?._id!}\n        className=\"parent\"\n        type={SectionToolType.SECTION_TYPE}\n        isActive={noumSidePanelId === section?._id}\n        onUpClick={onUpClick}\n        onDownClick={onDownClick}\n        {...props}\n      >\n        <NoumSectionContainer\n          aria-label={`section_${index + 1}`}\n          ref={isSection ? useHeightRef : null}\n          height={isSectionLayout ? height : undefined}\n          isBackground={\n            isSectionBackground\n              ? sectionSideBarOptions?.sectionBackgroud?.background\n              : section?.background\n          }\n          isEmptySection={isEmptySection}\n          onClick={(e) => sectionHandler(e)}\n          isEdit\n        >\n          <NoumSectionLayout\n            id={section?._id}\n            noumSectionType={\n              isSectionLayout\n                ? sectionSideBarOptions?.selectedLayout?.layoutType\n                : section?.type!\n            }\n            isSmallerThanLaptop={isSmallerThanLaptop}\n            sectionAlign={\n              isSectionAlignItems\n                ? sectionSideBarOptions?.selectedAlignItem?.alignItem\n                : section?.columnsVerticalAlignType!\n            }\n          >\n            {section?.columns.map((col) => (\n              <Fragment key={col._id}>\n                <DroppableElementArea\n                  tools={col.tools}\n                  columnId={col._id}\n                  setNoumSidePanelId={setNoumSidePanelId}\n                  setNoumSidePanelType={setNoumSidePanelType}\n                  noumSidePanelId={noumSidePanelId}\n                  col={col}\n                  isSectionLayout={isSectionLayout}\n                  sectionId={section._id}\n                  isSectionBg={\n                    isSectionBackground\n                      ? sectionSideBarOptions?.sectionBackgroud?.background\n                      : section?.background\n                  }\n                  {...props}\n                />\n              </Fragment>\n            ))}\n          </NoumSectionLayout>\n        </NoumSectionContainer>\n      </HoverWrapper>\n    </>\n  );\n};\n\nexport default NoumSections;\n","import { memo, useState } from 'react';\nimport Skeleton from 'react-loading-skeleton';\nimport { ElementUtils } from '@/utils/element';\nimport { Spacer } from '@/layout';\nimport { DNDContainer } from './styles';\nimport { type DragableSectionProps } from './types';\nimport { NoumSections } from '../NoumSections';\nimport { AddSectionPopover } from '../AddSection';\n\nexport const DragableSection = memo((props: DragableSectionProps) => {\n  const { section, isDragging, provided, currentIndex } = props;\n  const [isLoading, setIsLoading] = useState(false);\n  const isSpecificItem =\n    currentIndex === ElementUtils.getSectionPosition(section!) - 1;\n  return (\n    <DNDContainer\n      ref={provided?.innerRef}\n      {...provided?.draggableProps}\n      isDragging={isDragging}\n      data-testid={section?._id}\n    >\n      {isLoading && isSpecificItem && (\n        <>\n          <Skeleton\n            width=\"100%\"\n            height={134}\n            borderRadius={12}\n            enableAnimation\n            baseColor=\"var(--color-base-gray-100)\"\n          />\n          <Spacer height={12} />\n        </>\n      )}\n      <AddSectionPopover\n        position={ElementUtils.getSectionPosition(section!)}\n        setIsLoading={setIsLoading}\n      />\n      <Spacer height={12} />\n      <NoumSections\n        key={section?._id}\n        provided={provided}\n        currentIndex={currentIndex}\n        {...props}\n      />\n    </DNDContainer>\n  );\n});\n","import { type FC, memo } from 'react';\nimport {\n  Draggable,\n  type DraggableProvided,\n  type DraggableStateSnapshot,\n} from 'react-beautiful-dnd';\nimport { DragableSection } from './DragableSection';\nimport { type DragableAreaProps } from './types';\n\nexport const DragableSectionArea: FC<DragableAreaProps> = memo((props) => {\n  const { index, section } = props;\n\n  return (\n    <Draggable\n      draggableId={`${section?._id}`}\n      index={index}\n      disableInteractiveElementBlocking\n    >\n      {(\n        dragProvided: DraggableProvided,\n        dragSnapshot: DraggableStateSnapshot,\n      ) => (\n        <DragableSection\n          {...props}\n          isDragging={dragSnapshot.isDragging}\n          provided={dragProvided}\n          index={index}\n        />\n      )}\n    </Draggable>\n  );\n});\n","import { type FC } from 'react';\nimport {\n  Droppable,\n  type DroppableProvided,\n  type DroppableStateSnapshot,\n} from 'react-beautiful-dnd';\nimport { DragableSectionArea } from './DragableSectionArea';\nimport { DropZone } from './styles';\nimport { DropabbleType, type DroppableAreaProps } from './types';\n\nexport const DroppableSectionArea: FC<DroppableAreaProps> = (props) => {\n  const { sections } = props;\n\n  return (\n    <Droppable\n      droppableId=\"Section_edit_list\"\n      type={DropabbleType.DROPPABLE_SECTION}\n    >\n      {(\n        dropProvided: DroppableProvided,\n        dropSnapshot: DroppableStateSnapshot,\n      ) => (\n        <DropZone\n          ref={dropProvided.innerRef}\n          isDraggingOver={dropSnapshot.isDraggingOver}\n          isDraggingFrom={Boolean(dropSnapshot.draggingFromThisWith)}\n          {...dropProvided.droppableProps}\n          data-testid=\"rearrange-wapper\"\n        >\n          {sections?.map((section, index) => (\n            <DragableSectionArea\n              {...props}\n              key={section._id}\n              index={index}\n              currentIndex={index}\n              totalIndex={sections.length - 1}\n              section={section}\n            />\n          ))}\n          {dropProvided.placeholder}\n        </DropZone>\n      )}\n    </Droppable>\n  );\n};\n","import {\n  SpaceTypeEnum,\n  type ElementOutput,\n  type MoveToolToNoumLayoutColumnInput,\n  type NoumLayoutSection,\n  type RearrangeSectionInNoumLayoutInput,\n} from '@/apollo/generated/types';\nimport { useEditChamberState } from '@/screens/Chamber/EditChamber/provider';\nimport { reorderList } from '@/utils/list';\nimport _ from 'lodash';\nimport { useCallback, useRef, useState, type FC } from 'react';\nimport {\n  DragDropContext,\n  type DropResult,\n  type PreDragActions,\n  type SensorAPI,\n  type SnapDragActions,\n} from 'react-beautiful-dnd';\nimport {\n  useMoveToolToNoumLayoutColumnHelper,\n  useSectionPositionHelper,\n} from '@/features/noums/hooks/spaceQuery';\nimport { SectionToolType } from '../NoumSections/constants';\nimport { DroppableSectionArea } from './DroppableSectionArea';\nimport {\n  getColumn,\n  getFilterTools,\n  getSection,\n  placeHolderHandlerStart,\n  placeHolderHandlerUpdate,\n} from './rearrangeHelper';\nimport {\n  DropabbleType,\n  type PlaceholderProps,\n  type RearrageProps,\n} from './types';\n\nexport const Rearrage: FC<RearrageProps> = (props) => {\n  const {\n    id: spaceId,\n    space,\n    handleEditModal,\n    setHeight,\n  } = useEditChamberState();\n  const { setSections, sections } = props;\n  const sensorAPIRef = useRef<SensorAPI | null>(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [onDragInitiateId, setOnDragInitiateId] = useState('');\n  const [placeholderProps, setPlaceholderProps] = useState<\n    PlaceholderProps | undefined\n  >();\n  const useSensor = (api: SensorAPI) => {\n    sensorAPIRef.current = api;\n  };\n\n  const { moveToolToNoumLayoutColumnHelper } =\n    useMoveToolToNoumLayoutColumnHelper();\n  const { updateSectionPositionHelper } = useSectionPositionHelper();\n\n  const lift = useCallback(\n    (draggableId: string): SnapDragActions | null => {\n      if (isDragging) {\n        return null;\n      }\n      const api = sensorAPIRef.current;\n      if (!api) {\n        return null;\n      }\n      const preDrag: PreDragActions | null = api.tryGetLock(\n        draggableId,\n        () => {},\n      );\n\n      if (!preDrag) {\n        return null;\n      }\n      return preDrag.snapLift();\n    },\n    [isDragging],\n  );\n\n  const onDragStart = useCallback((event: DropResult) => {\n    setIsDragging(true);\n    if (event.type === DropabbleType.DROPPABLE_ELEMENT) {\n      const placeholderStartValue = placeHolderHandlerStart(event);\n      setPlaceholderProps({\n        dragX: placeholderStartValue.dragX,\n        dragY: placeholderStartValue.dragY,\n        dragHeight: placeholderStartValue.dragHeight,\n        dragWidth: placeholderStartValue.dragWidth,\n        dropWidth: placeholderStartValue.dropWidth,\n        dropHeight: placeholderStartValue.dropHeight,\n      });\n    }\n  }, []);\n\n  const onDragEnd = useCallback(\n    (result: DropResult) => {\n      setIsDragging(false);\n      setOnDragInitiateId('');\n      const { source, destination } = result;\n      if (!destination) {\n        return;\n      }\n      const sourceElementIndex = source.index;\n      const destElementIndex = destination?.index;\n      const sectionBackUp = _.cloneDeep(sections) || [];\n      if (result.type === DropabbleType.DROPPABLE_SECTION) {\n        const rearrageSectionInput: RearrangeSectionInNoumLayoutInput = {\n          sectionId: result.draggableId,\n          position: destElementIndex + 1,\n        };\n        if (!sections) return;\n        const newSections = reorderList<NoumLayoutSection>(\n          sectionBackUp,\n          sourceElementIndex,\n          destElementIndex,\n        );\n        setSections?.(newSections);\n        updateSectionPositionHelper(\n          rearrageSectionInput,\n          spaceId,\n          sourceElementIndex,\n          destElementIndex,\n        );\n      } else if (result.type === DropabbleType.DROPPABLE_ELEMENT) {\n        const { section: sourceSection, sectionIndex } = getSection(\n          source.droppableId,\n          sectionBackUp,\n        );\n        const { column: sourceColumn, columnIndex } = getColumn(\n          source.droppableId,\n          sourceSection?.columns,\n        );\n\n        const { section: destSection, sectionIndex: destSectionIndex } =\n          getSection(destination.droppableId, sectionBackUp);\n        const { column: destColumn, columnIndex: destColumnIndex } = getColumn(\n          destination.droppableId,\n          destSection?._id !== sourceSection?._id\n            ? destSection?.columns\n            : sourceSection?.columns,\n        );\n        const sourcefiltertools = getFilterTools(\n          sourceColumn?.tools!,\n          space?.type!,\n        );\n        const moveToolToNoumLayoutColumnInput: MoveToolToNoumLayoutColumnInput =\n          {\n            columnId: destination.droppableId,\n            toolId: sourceColumn?.tools[source.index]._id || '',\n            position: 1,\n          };\n\n        if (source.droppableId === destination.droppableId) {\n          moveToolToNoumLayoutColumnInput.position = destination.index + 1;\n          if (sourceColumn && sourceSection) {\n            const reOrderElements = reorderList<ElementOutput>(\n              sourcefiltertools,\n              sourceElementIndex,\n              destElementIndex!,\n            );\n            const updatedElements = {\n              ...sourceColumn,\n              tools: reOrderElements,\n            };\n            const updatedColumns = sourceSection?.columns || [];\n            updatedColumns.splice(columnIndex, 1, updatedElements);\n            const updatedSections = {\n              ...sourceSection,\n              columns: updatedColumns,\n            };\n            sectionBackUp.splice(sectionIndex, 1, updatedSections);\n            setSections?.(sectionBackUp);\n          }\n        } else {\n          moveToolToNoumLayoutColumnInput.position = destination.index + 1;\n          if (sourceColumn && destColumn && sourceSection && destSection) {\n            const [element] = sourceColumn.tools.splice(sourceElementIndex, 1);\n            destColumn.tools.splice(destination.index, 0, element);\n            const updatedSourcseColumns = sourceSection?.columns || [];\n            const updatedDestColumns = destSection?.columns || [];\n            updatedSourcseColumns[columnIndex] = sourceColumn;\n            updatedDestColumns[destColumnIndex] = destColumn;\n            const updatedSourceSections = {\n              ...sourceSection,\n              columns: updatedSourcseColumns,\n            };\n            const updatedDestSections = {\n              ...destSection,\n              columns: updatedDestColumns,\n            };\n            sectionBackUp[sectionIndex] = updatedSourceSections;\n            sectionBackUp[destSectionIndex] = updatedDestSections;\n            setSections?.(sectionBackUp);\n          }\n        }\n        if (moveToolToNoumLayoutColumnInput.toolId !== '' && space?._id)\n          moveToolToNoumLayoutColumnHelper(\n            moveToolToNoumLayoutColumnInput,\n            space._id,\n            source,\n            destination,\n          );\n        handleEditModal?.(\n          SectionToolType.TOOL_TYPE,\n          result.draggableId,\n          destColumn?.tools.find((item) => item._id === result.draggableId),\n        );\n        setHeight?.(undefined);\n      }\n    },\n    [\n      handleEditModal,\n      moveToolToNoumLayoutColumnHelper,\n      sections,\n      setHeight,\n      setSections,\n      space?._id,\n      space?.type,\n      spaceId,\n      updateSectionPositionHelper,\n    ],\n  );\n\n  const onDragUpdate = (update: DropResult) => {\n    if (update.type === DropabbleType.DROPPABLE_ELEMENT) {\n      const placeHolderVal = placeHolderHandlerUpdate(update);\n      if (!placeHolderVal) return;\n      setPlaceholderProps({\n        dragX: placeHolderVal.dragX,\n        dragY: placeHolderVal.dragY,\n        dragHeight: placeHolderVal.dragHeight,\n        dragWidth: placeHolderVal.dragWidth,\n        dropWidth: placeHolderVal.dropWidth,\n        dropHeight: placeHolderVal.dropHeight,\n      });\n    }\n  };\n\n  return (\n    <>\n      <DragDropContext\n        onDragStart={onDragStart}\n        onDragEnd={onDragEnd}\n        sensors={[useSensor]}\n        onDragUpdate={onDragUpdate}\n      >\n        <DroppableSectionArea\n          spaceId={spaceId}\n          lift={lift}\n          isHomeNoum={space?.type === SpaceTypeEnum.Home}\n          placeholderProps={placeholderProps}\n          isElementDragging={isDragging}\n          onDragInitiateId={onDragInitiateId}\n          setOnDragInitiateId={setOnDragInitiateId}\n          {...props}\n        />\n      </DragDropContext>\n    </>\n  );\n};\n\nexport default Rearrage;\n","import Skeleton from 'react-loading-skeleton';\nimport { type FC, useEffect, useMemo, useState } from 'react';\nimport { Spacer, Stack } from '@/layout/Stack';\nimport { useLaunchDarkly, useWindowDimensions } from '@/hooks';\nimport { breakpoints } from '@/constants/devices';\nimport { SpaceUtils } from '@/utils/space';\nimport { type NoumLayoutSection } from '@/apollo/generated/types';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { EmptyNoumState } from '@/features/noums/components/NoumEditor2.0';\nimport { AddSectionPopover } from '../components/AddSection';\nimport { emptyStateNoum } from './mockdata';\nimport { Rearrage } from '../components/SectionElementRearrange/Rearrange';\nimport { type EditNoumBodyProps } from './types';\nimport { Container } from './styles';\nimport { useEditChamberState } from './provider';\n\nexport const EditNoumBody: FC<EditNoumBodyProps> = (props) => {\n  const {\n    flags: { noumEditor2 },\n  } = useLaunchDarkly();\n  const { sections: orignalSections } = useEditChamberState();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [isLoading, setIsLoading] = useState(false);\n  const [sections, setSections] = useState<NoumLayoutSection[]>();\n  const { width } = useWindowDimensions();\n  const isLaptop = useMemo(() => width <= breakpoints.TABLET_L, [width]);\n\n  useEffect(() => {\n    if (noumEditor2) {\n      navigate(\n        { pathname: location.pathname, search: `?new=true` },\n        { replace: true },\n      );\n    }\n  }, [location.pathname, navigate, noumEditor2]);\n\n  useEffect(() => {\n    setSections(orignalSections);\n  }, [orignalSections]);\n\n  return (\n    <Container>\n      {sections && sections.length > 0 ? (\n        <>\n          <Rearrage sections={sections!} setSections={setSections} {...props} />\n          <Spacer height={4} />\n          <AddSectionPopover\n            position={SpaceUtils.getSectionMaxPosition(sections!) + 1}\n            setIsLoading={setIsLoading}\n          />\n          {isLoading && (\n            <>\n              <Spacer height={4} />\n              <Skeleton\n                width=\"100%\"\n                height={134}\n                borderRadius={12}\n                enableAnimation\n                baseColor=\"var(--color-base-gray-100)\"\n              />\n            </>\n          )}\n        </>\n      ) : (\n        <Stack aria-label=\"noum_empty_state\" gap={16} vertical={isLaptop}>\n          {emptyStateNoum.map((item) => (\n            <EmptyNoumState\n              key={item.key}\n              title={item.title}\n              description={item.description}\n            />\n          ))}\n        </Stack>\n      )}\n    </Container>\n  );\n};\n","import { Header } from '@/components/Header';\nimport { Spinner } from '@/components/Spinner';\nimport { useNoumEdit } from '@/features/noums/hooks/noums';\nimport { Stack } from '@/layout';\nimport ChamberViewLayout from '@/layout/ChamberViewLayout';\nimport { type LinkedNoumOptionType } from '@/screens/LinkNoum/components/types';\nimport { ElementUtils } from '@/utils/element';\nimport { useCallback, useEffect, useMemo, useState, type FC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate, generatePath } from 'react-router';\nimport routes from '@/constants/routes';\nimport {\n  useRemoveSectionHelper,\n  useRemoveToolFromNoumLayoutHelper,\n} from '@/features/noums/hooks/spaceQuery';\nimport { SpaceTypeEnum } from '@/apollo/generated/types';\nimport { NoumAdsModal } from '../components/modals/NoumAds';\nimport { ChamberVisibilityInviteModal } from '../components/modals/ChamberVisibilityInvite';\nimport { ChamberPermissionModal } from '../components/modals/ChamberPermission';\nimport ChamberEditMode from '../components/modals/ChamberEditMode';\nimport { ChamberArchiveModal } from '../components/modals/ChamberArchive';\nimport { EditHeaderNew } from './EditHeaderNew';\nimport { DeleteModal } from '../components/DeleteModal';\nimport { CreateBroadcastModal } from '../components/modals/ChamberBroadcast/CreateBroadcast';\nimport { ViewBroadcastModal } from '../components/modals/ChamberBroadcast/ViewBroadcast';\nimport UnlinkOnArchiveNoumModal from '../components/modals/LinkNoum/UnlinkOnArchiveNoumModal';\nimport { ManageMembersModal } from '../components/modals/ManageMembersModal';\nimport { NoumenaCopilot } from '../components/NoumenaCopilot';\nimport { SectionToolType } from '../components/NoumSections/constants';\nimport { NoumSidePanel } from '../components/NoumSidePanel';\nimport { type SectionToolProps } from '../components/SectionElementRearrange/types';\nimport { ThemePanel } from '../components/ThemePanel';\nimport errorMessage from './constants';\nimport { EditChamberHeader } from './EditChamberHeader';\nimport { EditNoumBody } from './EditNoumBody';\nimport { EditChamberProvider } from './provider';\nimport { AppStyled } from './styles';\nimport { type IEditChamber } from './types';\n\nconst EditNoum: FC<IEditChamber> = ({ id }) => {\n  const {\n    space,\n    hasDraft,\n    hasPublished,\n    hasUnsaved,\n    hasUnsavedPermissions,\n    loading,\n    publishedDate,\n    lastChangedDate,\n    isOpen,\n    isOwner,\n    isArchived,\n    setOpenArchive,\n    isOnLoad,\n    openArchive,\n    handleClose,\n    sideBarOptionSelected,\n    onArchive,\n    openInvites,\n    setOpenInvites,\n    openPermission,\n    setOpenPermission,\n    openManageMembers,\n    setOpenManageMembers,\n    openNoumAds,\n    setOpenNoumAds,\n    openBroadcast,\n    setOpenBroadcast,\n    isVisited,\n    handleMarkAsVisited,\n    campaigns,\n    campaignsLoading,\n    fetchMoreCampaigns,\n    infiniteState,\n    onRefetchCampaigns,\n    setIsRestored,\n    isRestored,\n    linkedNoumsCount,\n    unlinkOnArchive,\n    unlinkArchivingLoader,\n    links,\n    openThemePanel,\n    setOpenThemePanel,\n    isNavigateToCustomPreview,\n    setNavigateToCustomPreview,\n    isSettingTheme,\n    markSpaceAsEditedLoading,\n    connections,\n    approvedConnectionsLoading,\n    approvedConnections,\n    approvedInfiniteState,\n    fetchMoreApprovedConnections,\n    refetchSpaceById,\n    openNoumenaCopilot,\n    setOpenNoumenaCopilot,\n    openRestoreModal,\n    setOpenRestoreModal,\n    hasDraftNoumLayout,\n    hasUnsavedNoumLayout,\n    hasPublishedNoumLayout,\n    setsectionStatus,\n  } = useNoumEdit(id);\n\n  const { t } = useTranslation();\n  const [showNewBroadcast, setShowNewBroadcast] = useState(false);\n  const [emptyElementErrorMessage, setEmptyElement] = useState<string>('');\n  const [noumSidePanelId, setNoumSidePanelId] = useState<string | undefined>();\n  const [noumSectionToolType, setNoumSectionToolType] =\n    useState<SectionToolProps>();\n  const [isDeleteModal, setisDeleteModal] = useState(false);\n  const [deletedId, setDeletedId] = useState('');\n  const navigate = useNavigate();\n  const { removeSectionHelper, loading: removeSectionLoading } =\n    useRemoveSectionHelper();\n  const { removeToolFromNoumLayoutHelper, loading: removeToolLoading } =\n    useRemoveToolFromNoumLayoutHelper();\n  useEffect(() => {\n    setEmptyElement('');\n    const invalidElements = ElementUtils.isInvalidTool(\n      space?.layout?.sections!,\n    );\n    if (invalidElements?.length) {\n      setEmptyElement(errorMessage(invalidElements?.[0]?.elementType));\n    }\n  }, [space, t]);\n\n  const closeNewBroadcast = () => {\n    setOpenBroadcast(true);\n    setShowNewBroadcast(false);\n  };\n\n  const handleChamberRestore = () => {\n    setIsRestored(true);\n    refetchSpaceById();\n  };\n  const linkedNoums = useMemo(\n    () =>\n      links?.linkedNoums.map(\n        (item) =>\n          ({\n            ...item,\n          } as LinkedNoumOptionType),\n      ) || [],\n    [links],\n  );\n\n  const handleNavigate = useCallback(\n    (noumId: string, route?: string) => {\n      if (noumId && isNavigateToCustomPreview)\n        generatePath(routes.NOUM_CUSTOM_PREVIEW, { id });\n      else if (route && space?.type === SpaceTypeEnum.Project) {\n        navigate(route, { replace: true });\n      } else {\n        navigate(-1);\n      }\n    },\n    [id, isNavigateToCustomPreview, navigate, space?.type],\n  );\n\n  const deleteHandler = async () => {\n    if (!deletedId || deletedId === '') return;\n    let isSuccess = false;\n    if (space?._id) {\n      if (noumSectionToolType === SectionToolType.SECTION_TYPE) {\n        isSuccess = await removeSectionHelper(deletedId, space._id);\n      } else if (noumSectionToolType === SectionToolType.TOOL_TYPE) {\n        isSuccess = await removeToolFromNoumLayoutHelper(deletedId, space._id);\n      } else return;\n    }\n    if (isSuccess) {\n      setisDeleteModal(false);\n    }\n  };\n\n  if (loading && !space) {\n    return <Spinner />;\n  }\n\n  return (\n    <EditChamberProvider\n      space={space}\n      loading={loading}\n      id={id}\n      setisDeleteModal={setisDeleteModal}\n      setNoumSectionToolType={setNoumSectionToolType}\n      setNoumSidePanelId={setNoumSidePanelId}\n      noumSidePanelId={noumSidePanelId}\n      refetchSpaceById={refetchSpaceById}\n      setDeletedId={setDeletedId}\n      setsectionStatus={setsectionStatus}\n    >\n      {space && isOwner && !isArchived && (\n        <AppStyled\n          data-testid=\"EDIT-CHAMBER\"\n          className=\"App\"\n          applyMinHeight={false}\n          aria-label=\"noum-layout\"\n        >\n          <Header\n            isBorderRadius={false}\n            style={{ padding: `0px` }}\n            aria-label=\"noum-header\"\n          >\n            <EditHeaderNew\n              publishedDate={publishedDate}\n              lastChangedDate={lastChangedDate}\n              hasUnsaved={hasUnsavedNoumLayout || hasUnsaved}\n              hasUnsavedPermissions={hasUnsavedPermissions}\n              hasDraft={hasDraftNoumLayout || hasDraft}\n              hasPublished={hasPublishedNoumLayout || hasPublished}\n              spaceId={id}\n              space={space}\n              emptyElementErrorMessage={emptyElementErrorMessage}\n              onChamberRestore={handleChamberRestore}\n              isRestored={isRestored}\n              isNavigateToCustomPreview={isNavigateToCustomPreview}\n              cancelNavigateToCustomPreview={() =>\n                setNavigateToCustomPreview(false)\n              }\n              onNavigate={handleNavigate}\n              onSelectEditOption={sideBarOptionSelected}\n              isOpenRestoreModal={openRestoreModal}\n              setOpenRestoreModal={setOpenRestoreModal}\n            />\n          </Header>\n\n          <ChamberViewLayout\n            isEditing\n            header={<EditChamberHeader />}\n            onSelectEditOption={sideBarOptionSelected}\n            hasThemePanel={openThemePanel || !!noumSidePanelId}\n          >\n            {(loading && !space) || isOnLoad ? (\n              <Stack>\n                <Spinner />\n              </Stack>\n            ) : (\n              <EditNoumBody\n                setNoumSidePanelId={setNoumSidePanelId}\n                noumSidePanelId={noumSidePanelId}\n                setNoumSidePanelType={setNoumSectionToolType}\n              />\n            )}\n            <ThemePanel\n              noumId={id}\n              open={openThemePanel}\n              onClose={() => setOpenThemePanel(false)}\n            />\n            <NoumSidePanel\n              noumSidePanelType={noumSectionToolType!}\n              open={!!noumSidePanelId}\n              onClose={() => setNoumSidePanelId(undefined)}\n              noumSidePanelId={noumSidePanelId!}\n            />\n          </ChamberViewLayout>\n\n          {space?.type === SpaceTypeEnum.Project && (\n            <ChamberEditMode\n              isOpen={isOpen && !isVisited}\n              handleClose={handleClose}\n              handleMarkAsVisited={handleMarkAsVisited}\n              markSpaceAsEditedLoading={markSpaceAsEditedLoading}\n            />\n          )}\n          {space.link ? (\n            <UnlinkOnArchiveNoumModal\n              isOpen={openArchive}\n              handleClose={() => setOpenArchive(false)}\n              handleUnlinking={unlinkOnArchive}\n              loading={unlinkArchivingLoader}\n            />\n          ) : (\n            space?.name && (\n              <ChamberArchiveModal\n                noumName={space?.name}\n                isOpen={openArchive}\n                handleClose={() => setOpenArchive(false)}\n                onArchive={onArchive}\n              />\n            )\n          )}\n          {space?.projectType && (\n            <ChamberVisibilityInviteModal\n              spaceId={id}\n              connections={connections}\n              linkedNoums={linkedNoums}\n              visibility={space?.projectType}\n              isOpen={openInvites}\n              isSEOEnabled={!!space?.enableAds}\n              handleClose={() => setOpenInvites(false)}\n            />\n          )}\n          <ChamberPermissionModal\n            spaceId={id}\n            connections={approvedConnections!}\n            loading={approvedConnectionsLoading}\n            isOpen={openPermission}\n            onClose={() => setOpenPermission(false)}\n            onInvite={() => sideBarOptionSelected('invites')}\n            linkedCount={linkedNoumsCount}\n            infiniteState={approvedInfiniteState}\n            fetchMoreConnections={fetchMoreApprovedConnections}\n          />\n          {openNoumAds && (\n            <NoumAdsModal\n              isOpen={openNoumAds}\n              onClose={() => setOpenNoumAds(false)}\n              refetchSpaceById={refetchSpaceById}\n            />\n          )}\n          <ViewBroadcastModal\n            infiniteState={infiniteState}\n            campaigns={campaigns}\n            campaignsLoading={campaignsLoading}\n            fetchMoreCampaigns={fetchMoreCampaigns}\n            spaceId={id}\n            isOpen={openBroadcast}\n            onRefetchCampaigns={onRefetchCampaigns}\n            onClose={() => setOpenBroadcast(false)}\n            onCampaign={() => setShowNewBroadcast(true)}\n          />\n          {showNewBroadcast && (\n            <CreateBroadcastModal\n              noumType={space.projectType}\n              noumId={id}\n              isOpen={showNewBroadcast}\n              onClose={closeNewBroadcast}\n              onSuccessfulCampaignCreation={onRefetchCampaigns}\n            />\n          )}\n          <DeleteModal\n            isOpen={isDeleteModal}\n            onClose={() => setisDeleteModal(false)}\n            type={noumSectionToolType!}\n            onConfirm={deleteHandler}\n            loading={removeToolLoading || removeSectionLoading}\n          />\n          {openNoumenaCopilot && (\n            <NoumenaCopilot\n              noumId={id}\n              open={openNoumenaCopilot}\n              onClose={() => setOpenNoumenaCopilot(false)}\n            />\n          )}\n          {openManageMembers && (\n            <ManageMembersModal\n              isOpen={openManageMembers}\n              handleClose={() => setOpenManageMembers(false)}\n            />\n          )}\n        </AppStyled>\n      )}\n      {isSettingTheme && <Spinner />}\n    </EditChamberProvider>\n  );\n};\n\nexport default EditNoum;\n"],"names":["useRestoreSpaceHelper","addToast","useToast","removeUnsavedAndDraftedDataMutation","loading","useRemoveUnsavedAndDraftedDataMutation","restoreSpaceHelper","useCallback","spaceId","isSuccess","data","variables","t","date","getTimeStampForDisplaying","removeUnsavedAndDraftedData","publishedAt","error","message","Error","Sentry","tags","section","useSaveAsDraftSpaceHelper","publishElementState","usePublishElementStateMutation","changeProjectChamberStatus","isLoading","useChangeProjectChamberStatusMutation","saveAsDraftSpaceHelper","space","prevStates","ElementStatusEnum","Unsaved","currentState","Draft","SpaceUtils","hasUnsavedSetting","status","SpaceStatusEnum","useAddNoumLayoutToolHelper","addNoumLayoutTool","useAddNoumLayoutToolMutation","addNoumLayoutToolHelper","input","baseElementId","newPosition","newElement","update","cache","id","editorV2Enabled","NoumLayoutStatusFilter","Unpublished","cacheResult","readQuery","query","GetSpaceByIdDocument","getSpaceById","spaceData","cloneSpaceData","cloneDeep","layout","updatedSection","sectionIndex","updatedSectionIndex","getSection","columnId","sections","column","updatedColumn","columnIndex","getColumn","columns","elementIndex","tools","findIndex","element","_id","baseElement","position","splice","push","writeQuery","useMoveToolToNoumLayoutColumnHelper","moveToolToNoumLayoutColumn","useMoveToolToNoumLayoutColumnMutation","moveToolToNoumLayoutColumnHelper","source","dest","NoumLayoutStatus","sourceSection","droppableId","sourceColumn","toolId","tool","destSection","destSectionIndex","destColumn","destColumnIndex","sort","ElementUtils","sortPublished","sortedPosition","index","reduce","acc","obj","cloneObj","useSectionPositionHelper","updateSectionPosition","useRearrangeSectionInNoumLayoutMutation","updateSectionPositionHelper","sourceElementIndex","destElementIndex","rearrangeSectionInNoumLayout","_remove","el","visible","sortSectionUnPublished","sectionSourcePosition","useRemoveToolFromNoumLayoutHelper","removeToolFromNoumLayout","useRemoveToolFromNoumLayoutMutation","removeToolFromNoumLayoutHelper","getColumnId","useUpdateNoumSectionHelper","updateSectionLayout","useUpdateNoumLayoutSectionMutation","updateNoumSectionHelper","updateNoumLayoutSection","useNoumLayoutAsDraftHelper","noumLayoutAsDraft","useSaveNoumLayoutAsDraftMutation","noumLayoutAsDraftHelper","ID","useCancelNoumLayoutChangesHelper","cancelNoumLayoutChanges","useCancelNoumLayoutChangesMutation","cancelNoumLayoutChangesHelper","useUpdateConnectionPermissionHelper","handleError","networkError","handleSuccess","updateConnectionPermission","useUpdateConnectionPermissionMutation","updateConnectionPermissionHelper","onError","graphQLErrors","err","onCompleted","useCheckChamberCanBePublished","flags","useLaunchDarkly","handleSuspendedNoum","handleDeliquentNoum","gqlGetNoumTransactionFeeDetails","useGetNoumTransactionFeeDetailsLazyQuery","checkChamberCanBePublished","chamberId","followRegularPublishFLow","setSetUpSlotForNoum","handleClosePublish","paymentSubscriptions","fetchPolicy","noumDetailInput","chamber_id","response","getNoumTransactionFeeDetails","Status_Noum","Suspended","Inactive","Active","is_publishable","Delinquent","Archived","AddSectionComponent","onClick","iconSize","jsx","AddSectionComponentWrapper","e","stopPropagation","CenterIcon","Icon","ToolboxItem","name","size","text","isDisabled","isComingSoon","toolTipText","childIndex","jsxs","ToolboxItemWrapper","ToolTip","ToolboxItemTextContainer","ToolboxItemText","Boolean","ToolboxItemComingSoonText","DisbledToolTipSubWallet","SubWalletDisabledToolTip","TSpan","ToolboxTabContent","activeTab","handleSelectElementType","listOfOptionsV2","useToolbox","group","hasWalletElement","useEditChamberState","walletStatus","useCheckWalletStatus","handleCloseNoumWalletCreateModal","setShowNoumWalletCreateModal","showNoumWalletCreateModal","useState","itemClicked","manageItemClicked","type","clickTimeout","setTimeout","clearInterval","handleClick","disabled","ElementTypeEnum","Wallet","WALLET_CREATED","includes","ToolboxTabContentWrapper","length","map","list","items","Fragment","Separator","groupName","ToolboxItemsRow","DisbleDToolTipSubWallet","NoumWalletCreateModal","Toolbox","sectionId","handleEditModal","setsectionSideBarOptions","selectedId","setSelectedId","Tabs","setActiveTab","handleChange","listOfTabs","useMemo","filter","SpaceTypeEnum","Home","tab","labelSize","isSectionBackground","find","background","useEffect","selectedTab","addNoumLayoutToolLoading","onSelectElementType","elementType","newElementInput","bodyContentType","getBodyContentTypeFromElementType","Math","round","Image","Video","meta","percentageSize","align","TextAlignType","CENTER","sectionBackgroud","SectionToolType","TOOL_TYPE","ToolboxWrapper","ToolboxLoader","Spinner","ToolboxTabs","BasicChipsTabsForm","AddToolPopover","isOpen","onClose","isPopover","setIsPopover","PopoverWrapper","style","maxWidth","ChamberArchiveModal","memo","noumName","handleClose","onArchive","useTranslation","Modal","ModalSize","S","ModalHeader","ModalBody","replace","ModalFooter","S.ModalButtons","ChamberEditMode","props","Spacer","Button","handleMarkAsVisited","markSpaceAsEditedLoading","styled","div","sizes","MOBILE_L","NoUser","NoUserWrapper","NoUserDescription","UserWrapper","UserBody","UserName","UserTitle","singleLineEllipisText","DropdownPicker","PickedPermission","ModalButtons","ChangePermissionsConfirmationModal","handleConfirm","count","options","key","generate","label","value","ConnectionPermissionTypeEnum","Guest","description","labelColor","Favorite","Disconnect","ChamberConnectedUser","user","currentPermission","onChangePermission","isNonMember","setIsOpen","window","useWindowDimensions","selected","isMobile","width","selectableOptions","opts","forEach","o","onSelect","option","Avatar","UserUtil","getProfilePicture","getFullName","firstName","middleName","lastName","title","Dropdown","targetProps","targetRef","toggle","toLowerCase","ChamberConnectedUsers","connections","onInvite","c","ConnectionTypeEnum","Connection","requestFrom","requestTo","uid","isInactive","draft","permission","v","userStatus","ChamberPermissionModal","spaceConnections","loadingConnections","linkedCount","infiniteState","fetchMoreConnections","isConfirmationOpen","windowSize","setConnections","permissionData","setPermissionData","updating","originalData","connection","ConnectionRequestTypeEnum","Approved","con","hasConnections","softDisabled","isEqual","connectionId","prev","tempUsers","p","onSavePermissions","Object","entries","connectionsPermissions","L","Infinite","mediaSizes","TABLET_MIN","LAPTOP_MIN","MOBILE_XL","isIPhone","TABLET","TABLET_MAX","left","ModalDescription","BodyWrapper","noScrollBar","justifyContent","undefined","MOBILE_L_MAX","MOBILE_M_MIN","NoCampaign","EmptyCampaignsContainer","NoCampaignDescription","ButtonWrapper","justifyCenter","flexDirection","ModalButton","MainOptionWrapper","MainOptionSeparator","OptionWrapper","OptionDescription","padding","campaignOptions","CampaignAudienceTarget","EntireCommunity","heading","MyCircle","MyNoums","FollowersOfMyNoums","CreateBroadcastModal","noumId","noumType","onSuccessfulCampaignCreation","navigator","userAgent","match","createProjectNoumCampaignMutation","useCreateProjectNoumCampaignMutation","createProjectNoumCampaign","optionChecked","setOptionChecked","item","checked","show","newOptions","disableOtherOptions","foundEntireCommunity","every","toggleOption","filteredCheckOption","foundEntireCommunityIdx","foundIdx","onSubmit","targets","XL","enforceLeft","S.ModalDescription","idx","React","S.MainOptionWrapper","S.OptionWrapper","S.OptionDescription","Checkbox","S.MainOptionSeparator","S.ButtonWrapper","S.ModalButton","css","CampaignContainer","MOBILE_MAX","TABLET_L","CampaignSummaryContainer","CampaiginSummaryItem","CampaignHeaderContainer","CampaignHeaderTitleContainer","CampaignBodyContainer","spaceBetween","CampaignFilterTabsContainer","CampaignFiltersContainer","bgColor","color","CampaignSummaryItemMap","INIVITES_SENT","VIEWS","CLICKS_TO_NOUMS","CONNECTIONS_MADE","CONNECTIONS_DECLINED","FOLLOWERS_GAINED","enPrefixKey","campaignActionOptions","campaignSummaryOptions","translationKey","mapKey","CampaignActions","onDelete","CampaignHeader","selectBroadcast","startedAt","unformattedStartTime","stillOngoing","ProjectNoumCampaignStatus","Refreshed","countDown","useTimeIndicator","Tag","Cancelled","Trans","CampaignFilters","note","SummaryItem","property","CampaignSummary","`CampaignSummary-SummaryItem-${mapKey}`","Campaign","`CampaignContainer-${id}`","DeleteChamberBroadcastModal","campaignId","onRefetchCampaigns","cancelProjectNoumCampaignMutation","useCancelProjectNoumCampaignMutation","cancelProjectNoumCampaign","ViewBroadcastModal","onCampaign","campaignsLoading","campaigns","fetchMoreCampaigns","currentSelectBroadcast","setCurrentSelectBroadcast","showDeleteBroadcastModal","setShowDeleteBroadcastModal","isDesktop","breakpoints","LAPTOP","onCampaignClick","toggleShowDeleteBroadcastModal","marginLeft","alignSelf","paddingRight","paddingLeft","flexWrap","overflow","gap","createElement","S.EmptyCampaignsContainer","S.NoCampaign","S.NoCampaignDescription","UnlinkOnArchiveNoumModal","handleUnlinking","alignItems","NoumenaCopilotContainer","Header","ResultWrapper","flexRow","borderBox","StyledAvatar","img","KeywordWrapper","NoResultWrapper","NoumenaCopilot","open","nounId","sideModalProps","useAuth","keyWord","setKeyWord","searchHistory","setSearchHistory","useBreakpoints","getkeyWords","useAdKeyWordsLazyQuery","getAdKeywords","choices","trim","unshift","validationSchema","yup","required","currentTarget","onIconClick","promptText","temperature","register","formState","errors","useForm","resolver","yupResolver","searchHistoryList","history","S.ResultWrapper","S.StyledAvatar","defaultProfile","RichTextEditor","S.KeywordWrapper","profile","profilePicture","handleEnterPress","SideModal","S.NoumenaCopilotContainer","S.Header","TextField","onChange","S.NoResultWrapper","ThemePanelContainer","ThemePickerContainer","PickerBody","ThemeItemWrapper","isSelected","StyledImage","StyledCheckWrapper","StyledCheck","StyledTitle","FontPickersBodyWrapper","FontPickerContainer","FontTitle","SeparateLine","FontPickerWrap","DropdownContainer","FontItemOptionButton","OptionIcon","FontDropdownRightIcon","checkSVG","ThemeItem","onChangeTheme","S.ThemeItemWrapper","S.StyledImage","ThemeIcons","S.StyledCheckWrapper","S.StyledCheck","S.StyledTitle","ThemePicker","themes","selectedThemeId","useThemeContext","S.ThemePickerContainer","S.PickerBody","theme","CustomizeOptions","THEME","FONTS","FontPicker","isLastItem","setFonts","search","setSearch","searchOptions","setOptions","numberOfItems","setNumberOfItems","optionsWithIcons","fontOptions","rightIcon","S.FontItemOptionButton","S.OptionIcon","intent","selectedOption","_option","handleFetchMore","slice","min","filteredOptions","String","toLocaleLowerCase","onInputChange","val","onSelectOption","S.FontPickerContainer","S.FontTitle","S.SeparateLine","S.FontPickerWrap","S.DropdownContainer","inputProps","inputRef","S.FontDropdownRightIcon","RevertModal","onConfirm","onCloseModal","ThemePanel","customizeOption","setCustomizeOption","isApply","setIsApply","isOpenRevert","setIsOpenRevert","selectedFonts","onChangeFonts","onReset","handleCloseRevertModal","handleConfirmRevert","font","footnote","link","systeminfo","S.ThemePanelContainer","customizeOptions","S.FontPickersBodyWrapper","fontLabels","DefaultFont","SettingsLink","ChamberPublish","noumEditor2","waiting","setWaiting","publishSpaceHelper","usePublishSpaceHelper","restoreLoading","publishNoumLayoutHelper","publishedLoading","usePublishNoumLayoutHelper","callPublishSpaceHelper","trackEvent","DeviceType","UUID","ChamberId","elements","some","unSaved","isDeleted","makeCallPublishSpaceHelper","then","Project","isRestored","ProjectNoumID","emptyElementErrorMessage","WrapperLoading","WrapperSpinner","isHomeNoum","handleClickInfo","marginRight","capitalize","projectType","ChamberSaveAsDraft","saveAsDraftLoading","textAlign","ChamberDiscardChange","discardSpaceChangeHelper","discardLoading","useDiscardSpaceChangeHelper","saveLoading","cancelLoading","handleSaveAsDraft","ChamberRestoreModalBody","version","paddingBottom","ChamberRestoreModal","sucessCallback","ChamberActionModal","ChamberPublishVisibilityInfo","optionIcon","visibilityOptions","icon","enforceRight","horizontal","dropdownRenderOptions","activeSubItem","iconColumnWidth","dropdownItemStyle","EditHeader","forwardRef","publishedDate","lastChangedDate","hasUnsaved","hasUnsavedPermissions","hasDraft","hasPublished","onChamberRestore","isNavigateToCustomPreview","cancelNavigateToCustomPreview","onNavigate","ref","useParams","disableUpdate","useContext","DisablePublishOrDraftContext","isOpenPublishModal","togglePublishModal","isOpenVisibilityInfoModal","toggleVisibilityInfoModal","isOpenSaDModal","toggleSaDModal","isOpenExitModal","toggleExitModal","isOpenRestoreModal","toggleRestoreModal","masterId","mainSpaceId","isPending","isUserPending","setUpSlotForNoum","onRefetchSpaceByConfig","onRefetchSpaceById","useNoumContext","handleBlockNavigation","retry","handleClickPublish","handleClickDraft","handleClickExit","handleClosePublishModal","handleCloseVisibilityInfoModal","isTablet","handleCloseSaDModal","handleCloseExitModal","handleClickRestore","RenderMobileStatus","StatusWrapper","MobileStatusWrapper","EditChangeStatusText","LastUpdateLabel","RenderStatus","className","StatusLabel","EditHeaderWrapper","IconWrapper","ButtonsWrapper","StyledButton","SetupNoumModal","EditChamber","isOwner","isArchived","setOpenArchive","isOnLoad","openArchive","archiving","sideBarOptionSelected","openInvites","setOpenInvites","openPermission","setOpenPermission","openManageMembers","setOpenManageMembers","openNoumAds","setOpenNoumAds","openBroadcast","setOpenBroadcast","isVisited","setIsRestored","linkedNoumsCount","unlinkOnArchive","unlinkArchivingLoader","links","openThemePanel","setOpenThemePanel","setNavigateToCustomPreview","isSettingTheme","approvedConnectionsLoading","approvedConnections","approvedInfiniteState","fetchMoreApprovedConnections","refetchSpaceById","openNoumenaCopilot","setOpenNoumenaCopilot","useNoumEdit","showNewBroadcast","setShowNewBroadcast","setEmptyElement","setKey","navigate","useNavigate","state","useLocation","invalidElements","isInvalidElement","errorMessage","closeNewBroadcast","handleChamberRestore","linkedNoums","handleNavigate","route","prevPath","EditChamberProvider","AppStyled","ChamberViewLayout","EditChamberHeader","Stack","EditChamberBody","`EditChamber-EditChamberBody-${key}`","ChamberVisibilityInviteModal","enableAds","NoumAdsModal","ManageMembersModal","NoumEditOptionsNew","isNoumPublishedAtAll","isShowRestore","navItemCount","onItemClick","showNavigationItems","NavigationItems","elementPermission","broadcast","customNoums","noumAds","moreItems","sItem","EditOptionsContainer","disableBeforeFirstPublish","EditOptions","ThreeDotsIconWrapper","EditHeaderNew","onSelectEditOption","setOpenRestoreModal","setdisabledUpdateElement","ediChamberSpace","setsectionStatus","UserStatus","Published","isMasterNoum","EditHeaderWrapperNew","LeftActionButtonsWrapper","RightActionButtonsWrapper","DeleteModal","SECTION_TYPE","activeEditingTool","isTool","DeleteDescriptionContainer","DeleteDescription","elementDeleteModalDescription","span","SwitchLabel","SwitchWrapper","SwitchButton","Switch","VerticalAlignType","TOP","image","BOTTOM","textAlignItems","LEFT","RIGHT","NoumSidePanelWrapper","AlignPicker","columnHoverEffect","OptionContainer","isFullWidth","ColumnContainer","NoumLayoutSectionType","SingleColumn","SingleColumn_700Px","TwoEqualColumns","ThreeEqualColumns","TwoColumnsLeftWider","TwoColumnsRightWider","ColumnChipsContainer","ColumnPickerContainer","AppearanceSection","Columns","ColumnOptions","Radiobox","ColumnPicker","sectionSideBarOptions","useHeightRef","setHeight","height","setLayoutLoading","isFocused","setIsFocused","current","offsetHeight","selectedLayout","layoutType","values","`ColumnPicker-ColumnOptions-${type}`","NoumEditSection","noumSidePanelId","handleDeleteModal","setNoumSidePanelId","duplicateHandler","removeSectionHelper","useRemoveSectionHelper","selectedColumn","setSelectedColumn","showNonRemovableModal","setShowNonRemovableModal","sectionItem","nonRemovableTools","columnsPerLayout","columsCount","initialSelectedColumn","updatedColumns","onAlignItemChange","selectedAlignItem","alignItem","columnsVerticalAlignType","onColumnChange","columnBackground","onSectionBackgroundChange","target","onColumnBackgroundChange","preColumn","col","clickHandler","onClickduplicate","margin","NonRemovableDeleteModal","SliderWrapper","SliderRangeInput","percent","Slider","max","initialValue","changedValue","onChangeEnd","setValue","newValue","EditBlockWrapper","separatorSize","children","MediaInfoWrapper","isBanner","UploadFileButton","MediaPreview","noumLayoutToolUpdating","mediaUploadPercentage","setMediaUploadPercentage","url","uploadPercentage","isUploadComplete","isUploadStarted","fileName","fileSize","getFileNameWithEllipsis","fileSizeConverter","UploadFile","maximumFileSize","defaultImagePlaceHolder","onContentChange","acceptedFileTypes","onUploadFile","Upload","triggerElRef","rest","onClickHandler","EditTool","handleChangeToolMetaValue","toolMetaValue","updateToolMetaValue","updateToolMutation","setMediaUploadTempFile","showNonZeroWalletModal","setShowNonZeroWalletModal","isDuplicatable","isAvailableToDuplicate","isDelete","isNotAvailableToDelete","isMediaElement","isImage","isImageElement","setNoumLayoutToolMetaValueHelper","useSetNoumLayoutToolMetaValueHelper","showPermission","subWalletDeleteHelper","useSubWalletDeleteHelper","getDescription","desc","elementDescription","trimedDesc","substring","onTextAlignItemChange","metaValues","onHandleChangeScaleSize","Number","handleUploadFile","mFile","handleChangeFileResource","json","getBodyContentJson","thumbnail","videoURL","elementId","bodyContent","bodyContentJson","keys","mediaData","regularDeleteFlow","handleCloseNonZeroWalletModal","imageTypes","videoTypes","getBodyContent","NonZeroWalletModal","NoumSidePanel","noumSidePanelType","containerRef","useRef","excludes","isImageAndVideoNotEmpty","sidePanelTitle","elementTitle","AddSectionPopover","setIsLoading","SectionLayoutPicker","ConnectionType","None","emptyStateNoum","NoumContentElementWrapper","Card","isColumnBackground","NoumContentElement","isPopoverOpen","setIsPopoverOpen","isColumn","useWindowMouseMove","customMouseUp","coords","setCoords","x","y","handleWindowMousedown","event","clientX","clientY","handleMouseUp","addEventListener","removeEventListener","DragableElement","provided","isDragging","isSectionBg","setOnDragInitiateId","onDragInitiateId","elementRef","currentElementHeight","setCurrentElementHeight","columnWidth","setColumnWidth","insertDirection","setInsertDirection","isDraggingToolPressed","isActiveTool","insertPosition","elementPosition","getPosition","InsertDirection","Above","handleInsert","direction","elementHandler","isBackgroundcontent","Text","BusinessBrief","isNonAttractive","Userposts","Calendar","Message","QuickQuestions","FilesManager","isSkillOrNetwork","Skills","Usernetwork","hoverButtonsDisabled","duplicate","edit","delete","useLayoutEffect","clientWidth","DNDElementContainer","innerRef","draggableProps","top","zIndex","HoverWrapper","DraggingElement","ElementWrapper","NonIntrectiveOverlay","Element","headerContent","DragableElementArea","Draggable","dragProvided","dragSnapshot","DropabbleType","DROPPABLE_SECTION","DROPPABLE_ELEMENT","DroppableElementArea","placeholderProps","isSectionLayout","layoutLoading","columnRef","renderableTools","filterMasterElement","isSelectedColumn","columnHeight","clientHeight","Droppable","dropProvided","dropSnapshot","DropZoneColumn","isDraggingOver","draggingFromThisWith","droppableProps","EditColumnContainer","arr","DroppableElement","placeholder","NoumSections","setNoumSidePanelType","lift","isSmallerThanLaptop","isSectionAlignItems","isSection","isEmptySection","move","movingType","actions","moveDown","moveUp","drop","delay","onUpClick","onDownClick","sectionHandler","defaultPrevented","NoumSectionContainer","NoumSectionLayout","DragableSection","currentIndex","isSpecificItem","getSectionPosition","DNDContainer","Skeleton","DragableSectionArea","DroppableSectionArea","DropZone","Rearrage","setSections","sensorAPIRef","setIsDragging","setPlaceholderProps","useSensor","api","draggableId","preDrag","tryGetLock","snapLift","onDragStart","placeholderStartValue","placeHolderHandlerStart","dragX","dragY","dragHeight","dragWidth","dropWidth","dropHeight","onDragEnd","result","destination","sectionBackUp","_","rearrageSectionInput","newSections","reorderList","sourcefiltertools","getFilterTools","moveToolToNoumLayoutColumnInput","reOrderElements","updatedElements","updatedSections","updatedSourcseColumns","updatedDestColumns","updatedSourceSections","updatedDestSections","DragDropContext","placeHolderVal","placeHolderHandlerUpdate","EditNoumBody","orignalSections","location","isLaptop","pathname","Container","getSectionMaxPosition","EmptyNoumState","EditNoum","openRestoreModal","hasDraftNoumLayout","hasUnsavedNoumLayout","hasPublishedNoumLayout","noumSectionToolType","setNoumSectionToolType","isDeleteModal","setisDeleteModal","deletedId","setDeletedId","removeSectionLoading","removeToolLoading","isInvalidTool","generatePath","routes","NOUM_CUSTOM_PREVIEW","deleteHandler"],"mappings":"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"}