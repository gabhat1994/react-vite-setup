{"version":3,"file":"Chambers-4c0519b6.js","sources":["../../src/features/money/hooks/useExpireSoonGracePeriedCount.ts","../../src/screens/Chamber/components/modals/ChambersFilter/styles.ts","../../src/screens/Chamber/components/modals/ChambersFilter/Modal.tsx","../../src/screens/Money/Payments/MyPlans/style.ts","../../src/screens/Money/Payments/MyPlans/index.tsx","../../src/screens/Chambers/helper.ts","../../src/screens/Chambers/Empty.tsx","../../src/screens/Chambers/SearchResult/styles.ts","../../src/screens/Chambers/SearchResult/SearchResult.tsx","../../src/screens/Chamber/components/modals/ChamberBottomSheet/ChamberBottomSheet.tsx","../../src/screens/Chambers/ChambersHead.tsx","../../src/screens/Chambers/ChambersMobileActions.tsx","../../src/screens/Chambers/ChambersRightSideBar.tsx","../../src/screens/Chambers/InvitesAndRequests.tsx","../../src/screens/Chambers/LinkedNoums/useLinkDetailsHelper.tsx","../../src/screens/Chambers/LinkedNoums/LinkDetailsContent.tsx","../../src/screens/Chambers/LinkedNoums/LinkDetailsModal.tsx","../../src/screens/Chambers/LinkedNoums/NoumContent.tsx","../../src/screens/Chambers/LinkedNoums/index.tsx","../../src/screens/Chambers/index.tsx"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { differenceInDays } from 'date-fns';\nimport { useGetNoumTransactionFeeDetailsQuery } from '@/apollo/graphql';\nimport { useError } from '@/hooks/useError';\nimport { useLaunchDarkly } from '@/hooks/launchDarkly';\nimport { type NoumTransactionFee, Status_Noum } from '@/apollo/generated/types';\n\nexport const useExpireSoonGracePeriedCount = () => {\n  const [gracePeriedCount, setGracePeriedCount] = useState<number>(0);\n  const [expirySoonCount, setExpirySoonCount] = useState<number>(0);\n\n  const { logError } = useError();\n  const { flags } = useLaunchDarkly();\n\n  const { data: expiringSoonData, error } =\n    useGetNoumTransactionFeeDetailsQuery({\n      fetchPolicy: 'network-only',\n      skip: !flags.paymentSubscriptions,\n      variables: {\n        noumDetailInput: { status: Status_Noum.Active },\n      },\n      onError: () => {\n        logError(error, 'gqlGetNoumTransactionFeeDetails');\n      },\n    });\n\n  const { data: gracePeriodData, error: errorGracePeriod } =\n    useGetNoumTransactionFeeDetailsQuery({\n      fetchPolicy: 'network-only',\n      skip: !flags.paymentSubscriptions,\n      variables: {\n        noumDetailInput: { status: Status_Noum.Delinquent },\n      },\n      onError: () => {\n        logError(errorGracePeriod, 'gqlGetNoumTransactionFeeDetails');\n      },\n    });\n\n  function countDaysToExpire(date: string | null | undefined) {\n    if (date) {\n      const now = new Date();\n      const diff = differenceInDays(new Date(date), now);\n      return diff;\n    }\n    return 0;\n  }\n\n  const computeExpirySoonCount = useCallback(\n    (data: (NoumTransactionFee | undefined)[]) => {\n      let count = 0;\n      const resArray: (NoumTransactionFee | null | undefined)[] = [];\n      if (data.length > 0) {\n        for (let i = 0; i < data.length; i += 1) {\n          const obj = data[i];\n          if (\n            countDaysToExpire(obj?.valid_till) < 11 &&\n            countDaysToExpire(obj?.valid_till) > 0\n          ) {\n            resArray.push(obj);\n          }\n        }\n        count = resArray.length;\n      }\n\n      return count;\n    },\n    [],\n  );\n\n  useEffect(() => {\n    setExpirySoonCount(\n      computeExpirySoonCount(\n        expiringSoonData?.getNoumTransactionFeeDetails || [],\n      ),\n    );\n  }, [computeExpirySoonCount, expiringSoonData]);\n\n  useEffect(() => {\n    setGracePeriedCount(\n      gracePeriodData?.getNoumTransactionFeeDetails.length || 0,\n    );\n  }, [gracePeriodData]);\n\n  return {\n    gracePeriedCount,\n    expirySoonCount,\n  };\n};\n\nexport default useExpireSoonGracePeriedCount;\n","import styled from 'styled-components';\nimport { TSpan } from '@/components/Typography';\n\nexport const SubTitle = styled(TSpan)`\n  padding: 16px;\n`;\n\nexport const RadioBoxWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  box-sizing: border-box;\n`;\n\nexport const RadioBoxItem = styled.div<{ variant: 'filter' | 'sort' }>`\n  padding: ${({ variant }) => (variant === 'filter' ? 16 : 12)}px;\n  display: flex;\n  margin-right: auto;\n  label {\n    padding-right: 16px;\n  }\n`;\n\nexport const Divider = styled.div`\n  width: 100%;\n  border-top: 1px solid var(--bg-separator-neutral-default);\n`;\n\nexport const TagLabel = styled.div<{\n  bgColor: string;\n  color: string;\n}>`\n  background-color: ${({ bgColor }) => bgColor};\n  color: ${({ color }) => color};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  padding: 0 8px;\n  min-height: 22px;\n  font-weight: var(--font-body-small-bold-weight);\n  font-size: var(--font-body-medium-size);\n  text-align: center;\n`;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from '@/components/ExtendedModal';\nimport { TSpan } from '@/components/Typography';\nimport { Button } from '@/components/Button';\nimport { Icon } from '@/components/Icon';\nimport { Spacer } from '@/layout';\nimport { type DropdownValueType } from '@/components/Dropdown';\n\nimport { useWindowDimensions } from '@/hooks';\nimport { breakpoints } from '@/constants/devices';\nimport { Radiobox } from '@/components/Radiobox';\nimport { type ChamberBoxNameEnum } from '@/components/ChamberBox/types';\nimport { typeOfChamberBox } from '@/components/ChamberBox/consts';\nimport {\n  RadioBoxWrapper,\n  SubTitle,\n  Divider,\n  RadioBoxItem,\n  TagLabel,\n} from './styles';\nimport { updatedSortOptions, LinkedFilterOptions } from './constants';\nimport { type ChambersFilterProps, type ICategoryOption } from './types';\n\nconst ChambersFilter: React.FC<ChambersFilterProps> = ({\n  onClose,\n  onSelectOption,\n  selectedSortOption,\n  categoryOptions,\n  onSelectCategory,\n  selectedCategoryID,\n  selectedId,\n  selectedLinkSort,\n  onSelectLinkOption,\n  shouldShowFilter,\n}) => {\n  const { t } = useTranslation();\n  const isIPhone = !!window?.navigator.userAgent.match(/iPhone/i);\n\n  const [selectedSortItem, setSelectedSortItem] = useState<\n    DropdownValueType<string>\n  >(updatedSortOptions[0]);\n\n  const [selectedLinkSortItem, setSelectedLinkSortItem] = useState<\n    DropdownValueType<string>\n  >(LinkedFilterOptions()[0]);\n  const [selectedCategory, setSelectedCategory] =\n    useState<ICategoryOption | null>(null);\n  const [isChanged, setIsChanged] = useState(false);\n\n  const selectSortOption = useCallback(\n    (sortItem: DropdownValueType<string>) => {\n      if (!isChanged) setIsChanged(true);\n      setSelectedSortItem(sortItem);\n    },\n    [isChanged, setSelectedSortItem],\n  );\n\n  const selectLinkSortOption = useCallback(\n    (sortItem: DropdownValueType<string>) => {\n      if (!isChanged) setIsChanged(true);\n      setSelectedLinkSortItem(sortItem);\n    },\n    [isChanged, setSelectedLinkSortItem],\n  );\n\n  const selectCategory = useCallback(\n    (category: ICategoryOption) => {\n      if (!isChanged) setIsChanged(true);\n      setSelectedCategory(category);\n    },\n    [isChanged, setSelectedCategory],\n  );\n\n  const onApplySortAndFilter = useCallback(() => {\n    onSelectOption(selectedSortItem);\n    onSelectCategory(selectedCategory?.value || '-1');\n    onSelectLinkOption(selectedLinkSortItem);\n    onClose();\n  }, [\n    onClose,\n    onSelectCategory,\n    onSelectLinkOption,\n    onSelectOption,\n    selectedCategory?.value,\n    selectedLinkSortItem,\n    selectedSortItem,\n  ]);\n\n  useEffect(() => {\n    setSelectedSortItem(\n      updatedSortOptions.filter(\n        (sortItem) => sortItem.value === selectedSortOption?.value,\n      )[0],\n    );\n    setSelectedLinkSortItem(\n      LinkedFilterOptions().filter(\n        (sortItem) => sortItem.value === selectedLinkSort?.value,\n      )[0],\n    );\n\n    setSelectedCategory(\n      categoryOptions.filter((cate) => cate.value === selectedCategoryID)[0],\n    );\n  }, [\n    categoryOptions,\n    selectedCategoryID,\n    selectedLinkSort?.value,\n    selectedSortOption?.value,\n  ]);\n\n  const windowSize = useWindowDimensions();\n  const isLaptop = useMemo(\n    () => windowSize.width > breakpoints.LAPTOP,\n    [windowSize.width],\n  );\n\n  return (\n    <Modal\n      open={!isLaptop}\n      isFullScreen\n      enableCloseButton\n      testId=\"chamber-filter\"\n      onClose={onClose}\n      disableBackdropClick\n    >\n      <ModalHeader isFullScreen justifyContent=\"flex-start\">\n        {t(`noumena.chambers.filter_modal_title`)}\n      </ModalHeader>\n      <ModalBody isFullScreen={!isIPhone}>\n        {selectedId === 'Linked' ? (\n          <>\n            {LinkedFilterOptions().map((item) => (\n              <RadioBoxWrapper key={item.key}>\n                <RadioBoxItem\n                  variant=\"sort\"\n                  onClick={() => selectLinkSortOption(item)}\n                >\n                  <Radiobox\n                    isChecked={item.value === selectedLinkSortItem.value}\n                    icon={\n                      <Icon\n                        name=\"radio_btn_m\"\n                        size={\n                          item.value === selectedLinkSortItem.value ? 12 : 0\n                        }\n                        color={\n                          item.value === selectedLinkSortItem.value\n                            ? '--icon-radiobutton-brand-primary-default'\n                            : '--icon-radiobutton-inactive-default'\n                        }\n                      />\n                    }\n                  />\n                  <TSpan\n                    font=\"body-m-bold\"\n                    colorToken=\"--text-tablecell-header-neutral-highlighted\"\n                  >\n                    {item.label?.toString()}\n                  </TSpan>\n                </RadioBoxItem>\n                <Divider />\n              </RadioBoxWrapper>\n            ))}\n          </>\n        ) : (\n          <>\n            <SubTitle\n              font=\"body-l-bold\"\n              colorToken=\"--text-body-header-neutral-default\"\n            >\n              {t('noumena.chambers.sorting')}\n            </SubTitle>\n            {updatedSortOptions.map((item) => (\n              <RadioBoxWrapper key={item.key}>\n                <RadioBoxItem\n                  variant=\"sort\"\n                  onClick={() => selectSortOption(item)}\n                >\n                  <Radiobox\n                    isChecked={item.value === selectedSortItem.value}\n                    icon={\n                      <Icon\n                        name=\"radio_btn_m\"\n                        size={item.value === selectedSortItem.value ? 12 : 0}\n                        color={\n                          item.value === selectedSortItem.value\n                            ? '--icon-radiobutton-brand-primary-default'\n                            : '--icon-radiobutton-inactive-default'\n                        }\n                      />\n                    }\n                  />\n                  <TSpan\n                    font=\"body-m-bold\"\n                    colorToken=\"--text-tablecell-header-neutral-highlighted\"\n                  >\n                    {item.label?.toString()}\n                  </TSpan>\n                </RadioBoxItem>\n                <Divider />\n              </RadioBoxWrapper>\n            ))}\n            <Spacer height={16} />\n            {shouldShowFilter && (\n              <>\n                <SubTitle\n                  font=\"body-l-bold\"\n                  colorToken=\"--text-body-header-neutral-default\"\n                >\n                  {t('noumena.chambers.types')}\n                </SubTitle>\n                {categoryOptions.map((cate) => (\n                  <RadioBoxWrapper key={cate.key}>\n                    <RadioBoxItem\n                      variant=\"filter\"\n                      onClick={() => selectCategory(cate)}\n                    >\n                      <Radiobox\n                        isChecked={cate.value === selectedCategory?.value}\n                        icon={\n                          <Icon\n                            name=\"radio_btn_m\"\n                            size={\n                              cate.value === selectedCategory?.value ? 12 : 0\n                            }\n                            color={\n                              cate.value === selectedCategory?.value\n                                ? '--icon-radiobutton-brand-primary-default'\n                                : '--icon-radiobutton-inactive-default'\n                            }\n                          />\n                        }\n                      />\n                      <TagLabel\n                        {...typeOfChamberBox[\n                          cate.labelColor as ChamberBoxNameEnum\n                        ]}\n                      >\n                        {cate.icon}\n                        {cate.label}\n                      </TagLabel>\n                    </RadioBoxItem>\n                    <Divider />\n                  </RadioBoxWrapper>\n                ))}\n              </>\n            )}\n          </>\n        )}\n      </ModalBody>\n      <ModalFooter isFullScreen justifyContent=\"center\">\n        {isChanged ? (\n          <Button\n            testId=\"chamber-filter-apply-button\"\n            onClick={onApplySortAndFilter}\n            primary\n            size=\"full\"\n          >\n            {t(`noumena.chambers.filter_modal_button_apply_filter`)}\n          </Button>\n        ) : (\n          <Button\n            testId=\"chamber-filter-cancel-button\"\n            size=\"full\"\n            tertiary\n            onClick={() => onClose()}\n          >\n            {t(`noumena.container.chamber_save_as_draft.cancel`)}\n          </Button>\n        )}\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default ChambersFilter;\n","import styled from 'styled-components';\nimport { TSpan } from '@/components/Typography';\n\nexport const HelperTextWrapper = styled(TSpan)<{ height: string | number }>`\n  text-align: center;\n  display: flex;\n  flex-direction: row;\n  align-self: center;\n  align-items: center;\n  height: ${(props) => props.height}px;\n`;\n\nexport const PlanInfo = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 0px;\n  gap: 8px;\n  flex: none;\n  order: 1;\n  align-self: stretch;\n  flex-grow: 0;\n`;\n\nexport const PlanInfoTile = styled.div<{ order?: number }>`\n  display: flex;\n  border: 1px solid var(--border-card-neutral-highlighted);\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 12px;\n  border-radius: 8px;\n  gap: 8px;\n  flex: none;\n  order: ${({ order }) => order || 0};\n  flex-grow: 1;\n  box-sizing: border-box;\n  width: 124px;\n`;\n\nexport const NoumExpired = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 4px 8px;\n  gap: 4px;\n  width: 237px;\n  height: 30px;\n  background: var(--bg-tag-danger-secondary-default);\n  border-radius: 8px;\n  flex: none;\n  order: 2;\n  flex-grow: 0;\n`;\n\nexport const PlanSelected = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const NoumGracePeriod = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 4px;\n  gap: 4px;\n  width: 256px;\n  height: 30px;\n  background: var(--bg-tag-brand-secondary-default);\n  border-radius: 8px;\n  flex: none;\n  order: 2;\n  align-self: stretch;\n  flex-grow: 0;\n`;\n","import { t } from 'i18next';\nimport React, { useEffect, useState } from 'react';\nimport Skeleton from 'react-loading-skeleton';\nimport { useNavigate } from 'react-router';\nimport { Icon } from '@/components/Icon';\nimport { Spacer } from '@/layout';\nimport { Button } from '@/components/Button';\nimport { DeviceTypeEnum, useDeviceType } from '@/hooks';\nimport {\n  useExpireSoonGracePeriedCount,\n  useSubscription,\n} from '@/features/money/hooks';\nimport ROUTES from '@/constants/routes';\nimport { CircleProgressBar } from '@/components/ProgressBar/CircleProgressBar';\nimport { TSpan } from '@/components/Typography';\nimport { PurschaseModalLaunchFronEnum } from '@/screens/Plan/types';\nimport PlanPurchaseModal from '@/screens/Plan/PlanPurchaseModal';\nimport Tooltip from '@/components/Tooltip';\nimport { useBreakpoints } from '@/hooks/useBreakpoints';\nimport {\n  HelperTextWrapper,\n  PlanInfo,\n  PlanInfoTile,\n  NoumExpired,\n  PlanSelected,\n  NoumGracePeriod,\n} from './style';\nimport * as Styles from '../styles';\n\nconst MyPlans = React.memo(() => {\n  const [planExists, setPlanExists] = useState<boolean | undefined>();\n  const [purchasePlanModalIsOpen, setPurchasePlanModalIsOpen] =\n    useState<boolean>(false);\n  const deviceType = useDeviceType();\n  const navigateTo = useNavigate();\n  const { isMobile } = useBreakpoints();\n\n  const { gracePeriedCount, expirySoonCount } = useExpireSoonGracePeriedCount();\n\n  const {\n    subscribedPlans,\n    loading,\n    totalNoumRenewalSlots,\n    totalNoumSetupSlots,\n    activeNoumRenewalSlots,\n    activeNoumSetupSlots,\n  } = useSubscription();\n\n  useEffect(() => {\n    if (subscribedPlans.length > 0 && loading === false) {\n      setPlanExists(true);\n    } else if (subscribedPlans.length <= 0 && loading) {\n      setPlanExists(false);\n    }\n  }, [loading, subscribedPlans]);\n\n  const hanldeNavigation = () => {\n    navigateTo(ROUTES.MY_PLAN);\n  };\n\n  return (\n    <>\n      <Styles.CardWrapper>\n        <Styles.CardHeader>\n          <Styles.CardInformation\n            font=\"body-l-bold\"\n            colorToken=\"--text-card-header-neutral-highlighted\"\n          >\n            {t('noumena.money.myplans')}\n          </Styles.CardInformation>\n          <Button\n            size=\"small\"\n            style={{ width: '40px', height: '40px' }}\n            leftIcon={\n              <Icon\n                name=\"arrow_right_m\"\n                size={24}\n                color=\"--icon-button-neutral-default\"\n              />\n            }\n            data-testid=\"stepTwoBackButton\"\n            tertiary\n            onClick={hanldeNavigation}\n          />\n        </Styles.CardHeader>\n        <Spacer height={16} />\n        {loading && (\n          <>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <Skeleton width={115} height={80} />\n              <Skeleton width={115} height={80} />\n            </div>\n            <Spacer height={15} />\n            <Skeleton count={2} />\n          </>\n        )}\n        {planExists === false && !loading && (\n          <HelperTextWrapper\n            font=\"body-m\"\n            colorToken=\"--text-placeholder-neutral-default\"\n            height={deviceType === DeviceTypeEnum.TABLET ? '46.7' : '22'}\n          >\n            {t('noumena.money.myplans.payasyougo')}\n          </HelperTextWrapper>\n        )}\n\n        {planExists === false && !loading && (\n          <>\n            <Spacer height={16} />\n            <Button\n              size=\"full_small\"\n              secondary\n              onClick={() => setPurchasePlanModalIsOpen(true)}\n            >\n              {t('noumena.money.myplans.addnewplan')}\n            </Button>\n          </>\n        )}\n        {planExists && !loading && (\n          <PlanSelected>\n            <PlanInfo>\n              <PlanInfoTile>\n                <CircleProgressBar\n                  percentage={\n                    (activeNoumSetupSlots / totalNoumSetupSlots) * 100\n                  }\n                  color={\n                    (activeNoumSetupSlots / totalNoumSetupSlots) * 100 === 0\n                      ? 'var(--bg-progressbar-neutral-default)'\n                      : 'var(--bg-progressbar-brand-primary-default)'\n                  }\n                  barSize={3}\n                  circleSize={24}\n                />\n                <TSpan font=\"footnote\" colorToken=\"--text-card-neutral-default\">\n                  {t('noumena.money.myplans.noumsetup')}\n                </TSpan>\n                <TSpan\n                  font=\"body-m\"\n                  colorToken=\"--text-card-header-neutral-highlighted\"\n                >\n                  {activeNoumSetupSlots} / {totalNoumSetupSlots}\n                </TSpan>\n              </PlanInfoTile>\n              <PlanInfoTile>\n                <CircleProgressBar\n                  percentage={\n                    (activeNoumRenewalSlots / totalNoumRenewalSlots) * 100\n                  }\n                  color={\n                    (activeNoumRenewalSlots / totalNoumRenewalSlots) * 100 === 0\n                      ? 'var(--bg-progressbar-neutral-default)'\n                      : 'var(--bg-progressbar-brand-primary-default)'\n                  }\n                  barSize={3}\n                  circleSize={24}\n                />\n                <TSpan font=\"footnote\" colorToken=\"--text-card-neutral-default\">\n                  {t('noumena.money.myplans.noumrenewal')}\n                </TSpan>\n                <TSpan\n                  font=\"body-m\"\n                  colorToken=\"--text-card-header-neutral-highlighted\"\n                >\n                  {activeNoumRenewalSlots} / {totalNoumRenewalSlots}\n                </TSpan>\n              </PlanInfoTile>\n            </PlanInfo>\n            {expirySoonCount > 0 && (\n              <NoumExpired>\n                <Icon\n                  name=\"time_m_red\"\n                  color=\"--icon-tag-danger-secondary-default\"\n                  size={16.67}\n                />\n                <TSpan\n                  font=\"body-m-bold\"\n                  colorToken=\"--text-tag-danger-secondary-default\"\n                >\n                  {`Your  ${\n                    expirySoonCount === 1 ? `Noum` : `${expirySoonCount} Noums `\n                  }  will expire soon`}\n                </TSpan>\n              </NoumExpired>\n            )}\n            {gracePeriedCount > 0 && (\n              <NoumGracePeriod>\n                {/* <Icon\n                  name=\"info_m\"\n                  color=\"--icon-tag-brand-primary\"\n                  size={16.67}\n                /> */}\n                <Tooltip\n                  top={-120}\n                  left={isMobile ? 5 : 1}\n                  iconColor=\"--icon-tag-brand-primary\"\n                  iconSize={16.67}\n                >\n                  <div style={{ width: isMobile ? '300px' : '230px' }}>\n                    <TSpan\n                      colorToken=\"--text-tooltip-neutral-alt-default\"\n                      font=\"footnote\"\n                    >\n                      {t(\n                        'noumena.money.subscription.noum.grace.period.tooltip.text',\n                      )}\n                    </TSpan>\n                  </div>\n                </Tooltip>\n                <TSpan\n                  font=\"body-m-bold\"\n                  colorToken=\"--text-tag-brand-primary-default\"\n                >\n                  {`Your ${\n                    gracePeriedCount === 1\n                      ? `Noum is`\n                      : `${gracePeriedCount} Noums are`\n                  }   in grace period`}\n                </TSpan>\n              </NoumGracePeriod>\n            )}\n          </PlanSelected>\n        )}\n      </Styles.CardWrapper>\n      {purchasePlanModalIsOpen && (\n        <PlanPurchaseModal\n          open={purchasePlanModalIsOpen}\n          onClose={() => setPurchasePlanModalIsOpen(false)}\n          launchFrom={PurschaseModalLaunchFronEnum.INITIAL_SETUP}\n        />\n      )}\n    </>\n  );\n});\n\nexport default MyPlans;\n","import { t } from 'i18next';\nimport { NoumScopeEnum } from './types';\n\nexport const getEmptyHeading = (tab: string | undefined) => {\n  switch (tab) {\n    case NoumScopeEnum.Owned:\n      return t(`noumena.no_result_owned.heading`);\n    case NoumScopeEnum.Connected:\n      return t(`noumena.no_result_connected.heading`);\n    case NoumScopeEnum.Following:\n      return t(`noumena.no_result_following.heading`);\n    case NoumScopeEnum.Archived:\n      return t(`noumena.no_result_archived.heading`);\n    case NoumScopeEnum.Linked:\n      return t(`noumena.no_result_linked_noum.heading`);\n    default:\n      return t(`noumena.no_result.text`);\n  }\n};\n\nexport const getEmptyDescription = (tab: string | undefined) => {\n  switch (tab) {\n    case NoumScopeEnum.Owned:\n      return t(`noumena.chamber.empty_owned.description`);\n    case NoumScopeEnum.Connected:\n      return t(`noumena.chamber.empty_connected.description`);\n    case NoumScopeEnum.Following:\n      return t(`noumena.chamber.empty_following.description`);\n    case NoumScopeEnum.Archived:\n      return t(`noumena.chamber.empty_archived.description`);\n    default:\n      return t(`noumena.chamber.empty.description`);\n  }\n};\n","import { type FC } from 'react';\nimport { Card } from '@/components/Card';\nimport { TSpan } from '@/components/Typography';\nimport { Spacer } from '@/layout/Stack/Spacer';\nimport { EmptyCardContainer, PlantContainer } from './styles';\nimport { getEmptyDescription, getEmptyHeading } from './helper';\n\ninterface IEmpty {\n  tab?: string;\n}\n\nconst Empty: FC<IEmpty> = ({ tab }: IEmpty) => (\n  <EmptyCardContainer>\n    <Card>\n      <PlantContainer>\n        <Spacer height={16} />\n        <TSpan\n          font=\"heading-xs-bold\"\n          colorToken=\"--text-card-header-neutral-highlighted\"\n        >\n          {getEmptyHeading(tab)}\n        </TSpan>\n        <TSpan font=\"footnote\" colorToken=\"--text-card-neutral-default\">\n          {getEmptyDescription(tab)}\n        </TSpan>\n      </PlantContainer>\n    </Card>\n  </EmptyCardContainer>\n);\n\nexport default Empty;\n","import styled from 'styled-components';\n\nimport { TSpan } from '@/components/Typography';\n\nexport const NoResultWrapper = styled.div<{ offsetTop: number }>`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  width: 100%;\n  height: 100%;\n  margin-top: ${({ offsetTop }) => `${offsetTop}px`};\n`;\n\nexport const NoResultText = styled(TSpan)`\n  margin-top: 16px;\n`;\n\nexport const NoResultSubText = styled(TSpan)`\n  margin-top: 8px;\n`;\n","import { t } from 'i18next';\n\nimport { useSkeletonIsLoadingContext } from '@/components/SkeletonLoader/SkeletonLoaderProvider';\nimport Empty from '@/screens/Chambers/Empty';\nimport { type SearchResultProps } from './types';\nimport { NoResultWrapper, NoResultText, NoResultSubText } from './styles';\n\nexport function SearchResult({\n  isNoum,\n  offsetTop = 300,\n  noResultText,\n  noResultSubText,\n  children,\n  tab,\n  isFilterApplied,\n}: SearchResultProps): JSX.Element {\n  const { isLoading } = useSkeletonIsLoadingContext();\n\n  if (isNoum || isLoading) return <>{children}</>;\n\n  if (!isFilterApplied && tab) return <Empty tab={tab} />;\n  if ((!!noResultText || !!noResultSubText) && tab) return <Empty tab={tab} />;\n\n  return (\n    <NoResultWrapper data-testid=\"no-result-wrapper\" offsetTop={offsetTop}>\n      {!!noResultText || !!noResultSubText ? (\n        <>\n          <NoResultText\n            font=\"heading-xs-bold\"\n            colorToken=\"--text-card-header-neutral-highlighted\"\n            data-testid=\"no-result-message\"\n          >\n            {noResultText}\n          </NoResultText>\n          <NoResultSubText\n            font=\"footnote\"\n            colorToken=\"--text-card-neutral-default\"\n            data-testid=\"no-result-sub-message\"\n          >\n            {noResultSubText}\n          </NoResultSubText>\n        </>\n      ) : (\n        <NoResultText\n          font=\"heading-xs-bold\"\n          colorToken=\"--text-card-header-neutral-highlighted\"\n          data-testid=\"no-result-default-message\"\n        >\n          {t('noumena.no_result.text')}\n        </NoResultText>\n      )}\n    </NoResultWrapper>\n  );\n}\n","import React from 'react';\nimport { Button } from '@/components/Button';\nimport { BottomSheet, BottomSheetBody } from '@/components/BottomSheet';\nimport Icon, { type IconProps } from '@/components/Icon/Icon';\n\nexport interface ChamberBottomSheetItem {\n  key: string;\n  label: string;\n  icon: IconProps['name'];\n  iconColor: string;\n  onClick: () => void;\n}\n\nexport const ChamberBottomSheet: React.FC<{\n  isOpen: boolean;\n  handleClose: () => void;\n  dropDownOptions: ChamberBottomSheetItem[];\n}> = ({ isOpen, handleClose, dropDownOptions }) => (\n  <BottomSheet\n    enableCloseButton\n    testId=\"chamber-BottomSheet\"\n    open={isOpen}\n    onClose={handleClose}\n    style={{ padding: 16, maxWidth: 375 }}\n    usePortal={true}\n    position=\"fixed\"\n  >\n    <BottomSheetBody\n      style={{\n        justifyContent: 'flex-end',\n        paddingBottom: '30px',\n        gap: 8,\n      }}\n    >\n      {dropDownOptions.map((item) => (\n        <Button\n          size=\"full\"\n          leftIcon={<Icon color={item.iconColor} name={item.icon} size={24} />}\n          onClick={item.onClick}\n          key={item.key}\n        >\n          {item.label}\n        </Button>\n      ))}\n    </BottomSheetBody>\n  </BottomSheet>\n);\n","import {\n  type FC,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { Button } from '@/components/Button';\nimport {\n  Dropdown,\n  type DropdownTargetProps,\n  type DropdownValueType,\n} from '@/components/Dropdown';\nimport { Icon } from '@/components/Icon';\nimport BasicChipsTabsForm from '@/components/Tabs/TabsForm';\nimport {\n  LinkedFilterOptions,\n  updatedSortOptions,\n} from '@/screens/Chamber/components/modals/ChambersFilter/constants';\nimport { Radiobox } from '@/components/Radiobox';\nimport { type ChamberBoxNameEnum } from '@/components/ChamberBox/types';\nimport { NoumsContext } from '@/providers';\nimport { typeOfChamberBox } from '@/components/ChamberBox/consts';\nimport { SpaceTypeEnum } from '@/apollo/generated/types';\nimport { chamberHeadList, linkTab } from './constants';\nimport { type IChambersHead, NoumScopeEnum } from './types';\nimport {\n  ChamberActionButtons,\n  ChambersDropDown,\n  ChambersHeadWrapper,\n  TagLabel,\n} from './styles';\n\nconst ChambersHead: FC<IChambersHead> = ({\n  selectedId,\n  categoryOptions,\n  onChange,\n  onSelectOption,\n  onSelectCategory,\n  onSelectLinkOption,\n  noumType,\n}) => {\n  const [categories, setCategories] =\n    useState<DropdownValueType<string>[]>(categoryOptions);\n  const {\n    categoryID,\n    sortInfo,\n    setSelectedCategoryID,\n    setSortInfo,\n    sortLinkInfo,\n    setSortLinkInfo,\n  } = useContext(NoumsContext);\n\n  const selectCategory = useCallback(\n    (category: DropdownValueType<string>) => {\n      onSelectCategory(category.value);\n      setSelectedCategoryID(category.value);\n    },\n    [onSelectCategory, setSelectedCategoryID],\n  );\n\n  const selectSort = useCallback(\n    (sort: DropdownValueType<string>) => {\n      onSelectOption(sort);\n      setSortInfo(sort);\n    },\n    [setSortInfo, onSelectOption],\n  );\n\n  const selectLinkSort = useCallback(\n    (linkSort: DropdownValueType<string>) => {\n      onSelectLinkOption(linkSort);\n      setSortLinkInfo(linkSort);\n    },\n    [onSelectLinkOption, setSortLinkInfo],\n  );\n  const shouldShowSubfilter = useMemo(\n    () =>\n      [NoumScopeEnum.Connected, NoumScopeEnum.Following].includes(\n        selectedId as NoumScopeEnum,\n      ),\n    [selectedId],\n  );\n\n  const shouldShowCategoryFilter = useMemo(() => {\n    const subFilterCondition =\n      shouldShowSubfilter && noumType === SpaceTypeEnum.Project;\n    const mainTabCondition = [\n      NoumScopeEnum.Archived,\n      NoumScopeEnum.Owned,\n    ].includes(selectedId as NoumScopeEnum);\n    return subFilterCondition || mainTabCondition;\n  }, [shouldShowSubfilter, noumType, selectedId]);\n\n  useEffect(() => {\n    if (categoryOptions.length > 0) {\n      setCategories(\n        categoryOptions.map((cate) => ({\n          ...cate,\n          selected: cate.value === categoryID,\n          icon: (\n            <Radiobox\n              isChecked={cate.value === categoryID}\n              icon={\n                <Icon\n                  name=\"flag_pl_m\"\n                  size={cate.value === categoryID ? 12 : 0}\n                  color={\n                    cate.value === categoryID\n                      ? '--icon-radiobutton-brand-primary-default'\n                      : '--icon-radiobutton-inactive-default'\n                  }\n                />\n              }\n            />\n          ),\n          label: (\n            <TagLabel\n              bgColor={\n                cate.labelColor\n                  ? typeOfChamberBox[cate.labelColor as ChamberBoxNameEnum]\n                      ?.bgColor\n                  : ''\n              }\n              color={\n                cate.labelColor\n                  ? typeOfChamberBox[cate.labelColor as ChamberBoxNameEnum]\n                      ?.color\n                  : ''\n              }\n            >\n              {cate.icon}\n              {cate.label}\n            </TagLabel>\n          ),\n        })),\n      );\n    }\n  }, [categoryID, categoryOptions]);\n\n  const resetCategoryFilter = useCallback(() => {\n    setSelectedCategoryID('-1');\n    onSelectCategory('-1');\n  }, [setSelectedCategoryID, onSelectCategory]);\n\n  return (\n    <ChambersHeadWrapper>\n      <ChamberActionButtons data-testid=\"Chamber-action-buttons\">\n        <BasicChipsTabsForm\n          onChange={(tab: string) => {\n            onChange(tab as NoumScopeEnum);\n            resetCategoryFilter();\n          }}\n          inputList={[...chamberHeadList, ...linkTab]}\n          selectedId={selectedId}\n          mode=\"isBackground\"\n          isWithoutImage\n          fontSize=\"--font-link-medium-size\"\n          tabWidth=\"auto\"\n        />\n        <ChambersDropDown>\n          {selectedId === 'Linked' ? (\n            <Dropdown\n              hideIcons\n              placement=\"bottom-start\"\n              options={LinkedFilterOptions()}\n              onSelectOption={selectLinkSort}\n              isAnimation={false}\n              usePortal={true}\n              calRefTop={false}\n              observerMinHeight=\"0\"\n              padding=\"0px\"\n              searchDisabled\n              autoFocusInternalSearch={false}\n            >\n              {({\n                targetRef,\n                toggle,\n              }: DropdownTargetProps<HTMLButtonElement>) => (\n                <Button\n                  ref={targetRef}\n                  size=\"small\"\n                  rightIcon={\n                    <Icon\n                      name=\"chevron_down_m\"\n                      size={16}\n                      color=\"--icon-input-neutral-default\"\n                    />\n                  }\n                  softDisabled\n                  onClick={toggle}\n                >\n                  {LinkedFilterOptions().filter(\n                    (linkSort) => linkSort.value === sortLinkInfo?.value,\n                  )[0]?.label || ''}\n                </Button>\n              )}\n            </Dropdown>\n          ) : (\n            <>\n              <Dropdown\n                hideIcons\n                placement=\"bottom-start\"\n                options={updatedSortOptions}\n                onSelectOption={selectSort}\n                isAnimation={false}\n                searchDisabled\n                autoFocusInternalSearch={false}\n              >\n                {({\n                  targetRef,\n                  toggle,\n                }: DropdownTargetProps<HTMLButtonElement>) => (\n                  <Button\n                    ref={targetRef}\n                    size=\"small\"\n                    rightIcon={\n                      <Icon\n                        name=\"chevron_down_m\"\n                        color=\"--icon-input-neutral-default\"\n                        size={16}\n                      />\n                    }\n                    softDisabled\n                    onClick={toggle}\n                  >\n                    {updatedSortOptions.filter(\n                      (sort) => sort.value === sortInfo?.value,\n                    )[0]?.label || ''}\n                  </Button>\n                )}\n              </Dropdown>\n              {shouldShowCategoryFilter && (\n                <Dropdown\n                  options={categories}\n                  onSelectOption={selectCategory}\n                  isAnimation={false}\n                  searchDisabled\n                  autoFocusInternalSearch={false}\n                >\n                  {({\n                    targetRef,\n                    toggle,\n                  }: DropdownTargetProps<HTMLButtonElement>) => (\n                    <Button\n                      ref={targetRef}\n                      size=\"small\"\n                      rightIcon={\n                        <Icon\n                          name=\"chevron_down_m\"\n                          color=\"--icon-input-neutral-default\"\n                          size={16}\n                        />\n                      }\n                      softDisabled\n                      onClick={toggle}\n                    >\n                      {categoryOptions.filter(\n                        (cate) => cate.value === categoryID,\n                      )[0]?.label || ''}\n                    </Button>\n                  )}\n                </Dropdown>\n              )}\n            </>\n          )}\n        </ChambersDropDown>\n      </ChamberActionButtons>\n    </ChambersHeadWrapper>\n  );\n};\n\nexport default ChambersHead;\n","import { type FC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Spacer, Stack } from '@/layout';\nimport { Icon } from '@/components/Icon';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useLaunchDarkly } from '@/hooks/launchDarkly';\nimport { Button } from '@/components/Button';\nimport {\n  MobileBottomActionsContainer,\n  FilterSelected,\n  AlertIconStyled,\n  IconButtonStyled,\n  MobileButtons,\n} from './styles';\nimport { type ChamberMobileActionsProps } from './types';\n\nconst ChambersMobileActions: FC<ChamberMobileActionsProps> = ({\n  onToggleFilter,\n  onToggleCreate,\n  openBottomSheet,\n  isFiltered = false,\n}) => {\n  const { t } = useTranslation();\n  const { isActive: access } = useAuth();\n  const {\n    flags: { newAppNavigation },\n  } = useLaunchDarkly();\n\n  return (\n    <MobileBottomActionsContainer isAppUiV2={newAppNavigation}>\n      <IconButtonStyled>\n        <Button\n          size=\"large\"\n          neutral\n          onClick={onToggleFilter}\n          data-testid=\"chamber-filtering\"\n          rightIcon={\n            <Icon\n              name=\"align_center_m\"\n              size={24}\n              color=\"--icon-button-neutral-default\"\n            />\n          }\n        />\n        <AlertIconStyled>\n          {isFiltered && (\n            <Icon\n              name=\"flag_pl_m\"\n              size={12}\n              color=\"--bg-badge-danger-primary-default\"\n            />\n          )}\n        </AlertIconStyled>\n      </IconButtonStyled>\n      <Stack>\n        <MobileButtons\n          onClick={openBottomSheet}\n          softDisabled={!access}\n          size=\"large\"\n          neutral\n          data-testid=\"create-chamber-bottom-sheet\"\n          style={{\n            marginRight: 12,\n          }}\n          rightIcon={\n            <Icon\n              name=\"more_m\"\n              size={24}\n              color={!access ? '--icon-button-neutral-default' : ''}\n            />\n          }\n        />\n        <Spacer width={12} />\n        <FilterSelected show={false} />\n        <Button\n          onClick={onToggleCreate}\n          softDisabled={!access}\n          size=\"large\"\n          primary\n          data-testid=\"create-chamber\"\n          leftIcon={\n            <Icon\n              name=\"plus_m\"\n              size={24}\n              color={!access ? '--icon-button-neutral-alt-default' : ''}\n            />\n          }\n        >\n          {t('noumena.chambers.new_noum')}\n        </Button>\n      </Stack>\n    </MobileBottomActionsContainer>\n  );\n};\n\nexport default ChambersMobileActions;\n","import { type FC } from 'react';\nimport { t } from 'i18next';\nimport { Button } from '@/components/Button';\nimport { Icon } from '@/components/Icon';\nimport ReceivedRequests from '@/screens/Chamber/components/RightPanel/elements/ReceivedRequests';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useLaunchDarkly } from '@/hooks/launchDarkly';\nimport MyPlans from '@/screens/Money/Payments/MyPlans';\nimport { useSubscription } from '@/features/money/hooks';\nimport EllipsisMenu from './EllipsisMenu';\nimport { rightSideMenuOptions } from './constants';\nimport { SideBarContainer, CreateChamberButton } from './styles';\n\ninterface Props {\n  onContactManagerClick: () => void;\n  onContractManagerClick: () => void;\n  onInvoiceManagerClick: () => void;\n  onToggleCreate: () => void;\n  onToggleLinkNoum: () => void;\n  onToggleManageMembers: () => void;\n  onCampaginManagerClick: () => void;\n}\n\nconst ChambersRightSideBar: FC<Props> = ({\n  onContactManagerClick,\n  onContractManagerClick,\n  onInvoiceManagerClick,\n  onToggleCreate,\n  onToggleLinkNoum,\n  onToggleManageMembers,\n  onCampaginManagerClick,\n}) => {\n  const {\n    flags: {\n      contractTool,\n      paymentSubscriptions,\n      invoiceTool,\n      contacts,\n      campaigns,\n      noumCoManager,\n    },\n  } = useLaunchDarkly();\n  const { isActive: access, masterId: mainSpaceId } = useAuth();\n  const { subscribedPlans, payAsYouGoPlan } = useSubscription();\n  const isPlanPurchased = !!subscribedPlans?.length || !!payAsYouGoPlan?.length;\n\n  const handleEllipsisClick = (e?: string) => {\n    if (e === t(`noumena.noum_link.link_noums`)) {\n      onToggleLinkNoum();\n    }\n    if (e === 'manage_members') {\n      onToggleManageMembers();\n    }\n  };\n\n  return (\n    <SideBarContainer>\n      <CreateChamberButton>\n        <Button\n          onClick={onToggleCreate}\n          softDisabled={!access}\n          primary\n          size=\"full\"\n          data-testid=\"create-chamber\"\n          icon={\n            <Icon\n              name=\"plus_m\"\n              size={24}\n              color={!access ? '--icon-button-neutral-alt-default' : ''}\n            />\n          }\n        >\n          {t('noumena.noum_create_new.text')}\n        </Button>\n        <div className=\"ellipsis-menu\">\n          <EllipsisMenu\n            menuOptions={rightSideMenuOptions.filter((option) => {\n              if (option.value === 'manage_members') {\n                return noumCoManager;\n              }\n              return true;\n            })}\n            size=\"full\"\n            onClick={handleEllipsisClick}\n            containerWidth=\"147\"\n          />\n        </div>\n      </CreateChamberButton>\n      {access && contractTool && (\n        <Button\n          secondary\n          size=\"full\"\n          data-testid=\"contract_manager\"\n          onClick={onContractManagerClick}\n        >\n          {t('noumena.contract_manager.contract_manager')}\n        </Button>\n      )}\n      {access && invoiceTool && (\n        <Button\n          secondary\n          size=\"full\"\n          data-testid=\"invoice_manager\"\n          onClick={onInvoiceManagerClick}\n        >\n          Invoice Manager\n        </Button>\n      )}\n      {access && contacts && (\n        <Button\n          secondary\n          size=\"full\"\n          data-testid=\"contact_manager\"\n          onClick={onContactManagerClick}\n        >\n          {t('noumena.contact_manager.contact_manager')}\n        </Button>\n      )}\n      {access && campaigns && (\n        <Button\n          secondary\n          size=\"full\"\n          data-testid=\"campaigns_manager\"\n          onClick={onCampaginManagerClick}\n        >\n          {t('noumena.campaigns')}\n        </Button>\n      )}\n\n      <ReceivedRequests noumId={mainSpaceId} isChambersScreen />\n      {/* TODO: Remove MyPlans from here and place into new Side bar which is for tablet and mobile when dev is complete. See designs under NOUM-4693 */}\n      {paymentSubscriptions && access && isPlanPurchased && <MyPlans />}\n    </SideBarContainer>\n  );\n};\n\nexport default ChambersRightSideBar;\n","import { useTranslation } from 'react-i18next';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useLaunchDarkly, useToggle } from '@/hooks';\nimport { Spinner } from '@/components/Spinner';\nimport { Button } from '@/components/Button';\nimport { Badge } from '@/components/Badge/Badge';\nimport {\n  useReceivedConnections,\n  useRequestedConnections,\n} from '@/features/noums/hooks/spaceQuery';\nimport { ConnectionRequestStatus } from '@/apollo/generated/types';\nimport {\n  InvitesAndRequestsContainer,\n  RightSpinnerContainer,\n  InviteLabel,\n} from './styles';\nimport { RequestsAndInvitesModal } from '../Chamber/components/modals/RequestsAndInvites';\nimport RequestsAndInvitesModalV2 from './RequestsAndInvitesV2/modals/RequestsAndInvitesModalV2';\n\nconst InvitesAndRequests = () => {\n  const {\n    flags: { noumRequestsInvitesV2 },\n  } = useLaunchDarkly();\n  const [isModalOpen, toggleModalOpen] = useToggle();\n  const { masterId: mainSpaceId } = useAuth();\n  const { t } = useTranslation();\n\n  const { data, loading } = useReceivedConnections();\n  const {\n    data: invitationData,\n    loading: invitationLoading,\n    refetch,\n  } = useRequestedConnections({\n    status: ConnectionRequestStatus.Invited,\n  });\n\n  return (\n    <InvitesAndRequestsContainer isLoading={loading}>\n      <Button\n        size=\"full\"\n        rightIcon={\n          loading || invitationLoading ? (\n            <RightSpinnerContainer>\n              {/* TODO Spinner color check */}\n              <Spinner />\n            </RightSpinnerContainer>\n          ) : (\n            <Badge\n              size=\"large\"\n              text={(\n                (data?.receivedConnectionRequest?.count || 0) +\n                (invitationData?.requestedConnection?.count || 0)\n              )?.toString()}\n            />\n          )\n        }\n      >\n        <InviteLabel\n          onClick={toggleModalOpen}\n          colorToken=\"--text-button-neutral-default\"\n        >\n          {t(`noumena.chamber.requests_and_invites`)}\n        </InviteLabel>\n      </Button>\n      {noumRequestsInvitesV2 ? (\n        <RequestsAndInvitesModalV2\n          isOpen={isModalOpen}\n          handleClose={toggleModalOpen}\n          refetchReceivedRequests={refetch}\n        />\n      ) : (\n        <RequestsAndInvitesModal\n          isOpen={isModalOpen}\n          isChambersScreen\n          handleClose={toggleModalOpen}\n          noumId={mainSpaceId}\n        />\n      )}\n    </InvitesAndRequestsContainer>\n  );\n};\n\nexport default InvitesAndRequests;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport {\n  useGetNoumLinkConnectionsLazyQuery,\n  useGetNoumLinkFollowersLazyQuery,\n} from '@/apollo/graphql';\nimport { SortOperator, type SpaceOutputResponse } from '@/apollo/generated/types';\nimport { LinkedNoumEnum } from '../types';\n\nexport function useLinkDetailsHelper(\n  noumLinkID: string | undefined,\n  selectedValue: string,\n) {\n  const PAGE_SIZE = 10;\n\n  const [\n    getOwnNoumLinkFollowers,\n    {\n      data: dataFollowing,\n      loading: loadingFollowing,\n      error: errorFollowing,\n      fetchMore: fetchMoreFollowing,\n    },\n  ] = useGetNoumLinkFollowersLazyQuery({\n    fetchPolicy: 'cache-and-network',\n  });\n\n  const [\n    getOwnNoumLinkConnections,\n    {\n      data: dataConnection,\n      loading: loadingConnection,\n      error: errorConnection,\n      fetchMore: fetchMoreConnection,\n    },\n  ] = useGetNoumLinkConnectionsLazyQuery({\n    fetchPolicy: 'cache-and-network',\n  });\n\n  const loading = useMemo(\n    () => loadingConnection || loadingFollowing,\n    [loadingConnection, loadingFollowing],\n  );\n\n  const error = useMemo(\n    () => errorFollowing || errorConnection,\n    [errorConnection, errorFollowing],\n  );\n\n  const [connectionData, setConnectionData] = useState<\n    SpaceOutputResponse['data'] | undefined\n  >(undefined);\n\n  const [followingData, setFollwoingData] = useState<\n    SpaceOutputResponse['data'] | undefined\n  >(undefined);\n\n  const getInfiniteState = useCallback(\n    (dataCount: number) => {\n      setInfiniteState(\n        !loading && dataCount < PAGE_SIZE ? 'end' : 'hasNextPage',\n      );\n    },\n    [loading],\n  );\n\n  const currentLinkedNoums = useMemo(() => {\n    switch (selectedValue) {\n      case LinkedNoumEnum.Connection:\n        return connectionData;\n      case LinkedNoumEnum.Following:\n        return followingData;\n      default:\n        return undefined;\n    }\n  }, [connectionData, followingData, selectedValue]);\n\n  const [infiniteState, setInfiniteState] = useState<\n    'loading' | 'hasNextPage' | 'end' | 'end-with-force'\n  >('hasNextPage');\n\n  useEffect(() => {\n    if (noumLinkID) {\n      switch (selectedValue) {\n        case LinkedNoumEnum.Connection:\n          getOwnNoumLinkConnections({\n            variables: {\n              noumLinkId: noumLinkID,\n              limit: PAGE_SIZE,\n              offset: 0,\n              sort: {\n                column: 'approvedAt',\n                operator: SortOperator.Asc,\n              },\n            },\n          });\n          break;\n        case LinkedNoumEnum.Following:\n          getOwnNoumLinkFollowers({\n            variables: {\n              noumLinkId: noumLinkID,\n              limit: PAGE_SIZE,\n              offset: 0,\n              sort: {\n                column: 'updatedAt',\n                operator: SortOperator.Asc,\n              },\n            },\n          });\n          break;\n        default:\n          setInfiniteState('end');\n          break;\n      }\n    }\n  }, [\n    getOwnNoumLinkConnections,\n    getOwnNoumLinkFollowers,\n    noumLinkID,\n    selectedValue,\n  ]);\n\n  const fetchMore = useCallback(async () => {\n    if (!noumLinkID || !selectedValue || !currentLinkedNoums) return;\n    let result;\n    switch (selectedValue) {\n      case LinkedNoumEnum.Connection:\n        result = await fetchMoreConnection({\n          variables: {\n            limit: PAGE_SIZE,\n            offset: connectionData?.length || 0,\n          },\n        });\n        if (result.data?.getNoumLinkConnections?.data) {\n          const tempData = [\n            ...(connectionData || []),\n            ...result.data.getNoumLinkConnections.data,\n          ];\n          setConnectionData(tempData);\n        }\n        if ((result.data.getNoumLinkConnections?.data?.length || 0) < PAGE_SIZE)\n          setInfiniteState('end');\n        break;\n      case LinkedNoumEnum.Following:\n        result = await fetchMoreFollowing({\n          variables: {\n            limit: PAGE_SIZE,\n            offset: followingData?.length || 0,\n          },\n        });\n        if (result.data?.getNoumLinkFollowers?.data) {\n          const tempData = [\n            ...(followingData || []),\n            ...result.data.getNoumLinkFollowers.data,\n          ];\n          setFollwoingData(tempData);\n        }\n        if ((result.data.getNoumLinkFollowers?.data?.length || 0) < PAGE_SIZE)\n          setInfiniteState('end');\n        break;\n      default:\n        setInfiniteState('end');\n        break;\n    }\n  }, [\n    connectionData,\n    currentLinkedNoums,\n    fetchMoreConnection,\n    fetchMoreFollowing,\n    followingData,\n    noumLinkID,\n    selectedValue,\n  ]);\n\n  useEffect(() => {\n    if (\n      dataConnection?.getNoumLinkConnections?.data ||\n      dataFollowing?.getNoumLinkFollowers?.data\n    ) {\n      if (selectedValue === LinkedNoumEnum.Connection) {\n        setConnectionData(dataConnection?.getNoumLinkConnections?.data);\n        getInfiniteState(\n          dataConnection?.getNoumLinkConnections?.data?.length || 0,\n        );\n      } else if (selectedValue === LinkedNoumEnum.Following) {\n        setFollwoingData(dataFollowing?.getNoumLinkFollowers?.data);\n        getInfiniteState(\n          dataFollowing?.getNoumLinkFollowers?.data?.length || 0,\n        );\n      }\n    }\n  }, [\n    dataConnection?.getNoumLinkConnections?.data,\n    dataFollowing?.getNoumLinkFollowers?.data,\n    getInfiniteState,\n    selectedValue,\n  ]);\n\n  return {\n    currentLinkedNoums,\n    infiniteState,\n    fetchMore,\n    loading,\n    error,\n  };\n}\n","import { t } from 'i18next';\nimport { forwardRef, type Ref } from 'react';\nimport { Avatar } from '@/components/Avatar/Avatar';\nimport { Stack } from '@/layout';\nimport { TSpan } from '@/components/Typography';\nimport capitalizeFirstLetter from '@/utils/capitalizeFirstLetter';\nimport { type ChamberBoxNameEnum } from '@/components/ChamberBox/types';\nimport { formatRelativeVariant } from '@/utils/date';\nimport { LinkContainer, LinkedTagLabel, LinkUnderline } from '../styles';\nimport { colorsOfCategory } from '../constants';\nimport { LinkedNoumEnum } from '../types';\nimport type ILinkRequest from './types';\n\nconst LinkDetailsContent = forwardRef(\n  (\n    { name, title, profileImage, category, updateAt, tabId }: ILinkRequest,\n    ref: Ref<HTMLDivElement>,\n  ) => (\n    <>\n      <LinkContainer ref={ref}>\n        <Stack justify=\"space-between\" align=\"center\">\n          <Stack gap={12} align=\"center\">\n            <Avatar url={profileImage} />\n            <Stack vertical style={{ width: 'calc(100% - 52px)' }}>\n              <TSpan\n                singleLine\n                font=\"body-m-bold\"\n                colorToken=\"--text-tablecell-header-neutral-highlighted\"\n              >\n                {name}\n              </TSpan>\n              <TSpan\n                font=\"footnote\"\n                colorToken=\"--text-tablecell-header-neutral-default\"\n              >\n                <span>{title}</span>\n              </TSpan>\n              {updateAt && (\n                <TSpan\n                  font=\"footnote\"\n                  colorToken=\"--text-timestamp-neutral-default\"\n                >\n                  {tabId === LinkedNoumEnum.Connection\n                    ? t('noumena.chamber.link.connection_date')\n                    : t('noumena.chamber.link.following_date')}\n                  {formatRelativeVariant(updateAt, 'date', 'long', 'other')}\n                </TSpan>\n              )}\n            </Stack>\n          </Stack>\n          {category && (\n            <LinkedTagLabel\n              bgColor={\n                colorsOfCategory[category.toLowerCase() as ChamberBoxNameEnum]\n                  .bgColor\n              }\n              color={\n                colorsOfCategory[category.toLowerCase() as ChamberBoxNameEnum]\n                  .color\n              }\n            >\n              {capitalizeFirstLetter(category ?? '')}\n            </LinkedTagLabel>\n          )}\n        </Stack>\n      </LinkContainer>\n      <LinkUnderline />\n    </>\n  ),\n);\n\nexport default LinkDetailsContent;\n","import { type FC, memo, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Modal,\n  ModalBody,\n  ModalHeader,\n  ModalSize,\n} from '@/components/ExtendedModal';\nimport BasicChipsTabsForm from '@/components/Tabs/TabsForm';\nimport { type InputListTypes } from '@/components/Tabs/types';\nimport { Container } from '@/screens/Chamber/components/modals/RequestsAndInvites/styles';\nimport { type NoumLink, ProjectChamberType } from '@/apollo/generated/types';\nimport { Infinite } from '@/components/Infinite';\nimport ChamberDefaultImage from '@/assets/images/chamber_default.png';\nimport MemberDefaultImage from '@/assets/images/profile_default.png';\nimport { DeviceTypeEnum, useDeviceType } from '@/hooks';\nimport { LinkedNoumEnum } from '../types';\nimport { useLinkDetailsHelper } from './useLinkDetailsHelper';\nimport LinkDetailsContent from './LinkDetailsContent';\nimport { LinkUnderline, TextOnlySpan } from '../styles';\nimport { type ILinkDetails } from './types';\n\nconst LinkDetailsModal: FC<ILinkDetails> = memo(\n  ({\n    isOpen,\n    handleClose,\n    connectionsCount,\n    noumsCount,\n    followersCount,\n    noumLinkId,\n    linkedNoums,\n    projectType = ProjectChamberType.Public,\n  }) => {\n    const { t } = useTranslation();\n    const [selectedValue, setSelectedValue] = useState<string>(\n      LinkedNoumEnum.Noum,\n    );\n    const { currentLinkedNoums, infiniteState, fetchMore, loading } =\n      useLinkDetailsHelper(noumLinkId, selectedValue);\n\n    const modalHeadList: InputListTypes[] = useMemo(() => {\n      const list = [\n        {\n          id: LinkedNoumEnum.Noum,\n          name: LinkedNoumEnum.Noum,\n          image: 'terms_m',\n          text: t('noumena.chamber.link.modal.Noums', {\n            noumsCount,\n          }),\n          labelSize: 'medium',\n        },\n        {\n          id: LinkedNoumEnum.Connection,\n          name: LinkedNoumEnum.Connection,\n          image: 'terms_m',\n          text: t('noumena.chamber.link.modal.Connections', {\n            connectionsCount,\n          }),\n          labelSize: 'medium',\n        },\n      ] as InputListTypes[];\n      if (projectType !== ProjectChamberType.Secret) {\n        list.push({\n          id: LinkedNoumEnum.Following,\n          name: LinkedNoumEnum.Following,\n          image: 'terms_m',\n          text: t('noumena.chamber.link.modal.Followers', {\n            followersCount,\n          }),\n          labelSize: 'medium',\n        } as InputListTypes);\n      }\n      return list;\n    }, [connectionsCount, followersCount, noumsCount, projectType, t]);\n\n    const onChange = (value: string) => {\n      setSelectedValue(value);\n    };\n\n    const linkedNoumsTabHandler = (\n      data: NoumLink['linkedNoums'],\n      tabId: string,\n    ) =>\n      data && !loading && data.length > 0 ? (\n        data.map((item) => (\n          <LinkDetailsContent\n            key={item?._id}\n            name={\n              tabId === LinkedNoumEnum.Connection\n                ? `${item?.uid?.firstName} ${item?.uid?.lastName}`\n                : item?.name\n            }\n            title={tabId === LinkedNoumEnum.Noum ? '' : item?.uid?.title ?? ''}\n            profileImage={\n              tabId === LinkedNoumEnum.Noum\n                ? item?.profileImage || ChamberDefaultImage\n                : item?.uid?.profile?.profilePictureThumbnail ??\n                  item?.uid?.profile?.profilePicture ??\n                  MemberDefaultImage\n            }\n            category={\n              tabId === LinkedNoumEnum.Noum ? item?.category?.name : undefined\n            }\n            /* Backend Guy(Mikolaj) said that Both of connected adn following date for linked Noum is represented by approvedAt. */\n            updateAt={\n              tabId === LinkedNoumEnum.Noum\n                ? undefined\n                : item?.approvedAt ?? item?.lastUpdatedAt ?? new Date()\n            }\n            tabId={tabId}\n          />\n        ))\n      ) : tabId === LinkedNoumEnum.Noum && !loading ? (\n        <>\n          <TextOnlySpan\n            font=\"body-l\"\n            colorToken=\"--text-tablecell-header-neutral-highlighted\"\n          >\n            {t('noumena.chamber.link.Noums')}\n          </TextOnlySpan>\n          <LinkUnderline />\n        </>\n      ) : tabId === LinkedNoumEnum.Connection && !loading ? (\n        <>\n          <TextOnlySpan\n            font=\"body-l\"\n            colorToken=\"--text-tablecell-header-neutral-highlighted\"\n          >\n            {t('noumena.chamber.link.Connections')}\n          </TextOnlySpan>\n          <LinkUnderline />\n        </>\n      ) : (\n        tabId === LinkedNoumEnum.Following &&\n        !loading && (\n          <>\n            <TextOnlySpan\n              font=\"body-l\"\n              colorToken=\"--text-tablecell-header-neutral-highlighted\"\n            >\n              {t('noumena.chamber.link.Followers')}\n            </TextOnlySpan>\n            <LinkUnderline />\n          </>\n        )\n      );\n\n    const tabComponent = () => {\n      switch (selectedValue) {\n        case LinkedNoumEnum.Connection:\n          return linkedNoumsTabHandler(\n            currentLinkedNoums as NoumLink['linkedNoums'],\n            selectedValue,\n          );\n        case LinkedNoumEnum.Following:\n          return linkedNoumsTabHandler(\n            currentLinkedNoums as NoumLink['linkedNoums'],\n            selectedValue,\n          );\n        case LinkedNoumEnum.Noum:\n        default:\n          return linkedNoumsTabHandler(\n            linkedNoums as NoumLink['linkedNoums'],\n            selectedValue,\n          );\n      }\n    };\n\n    const deviceType = useDeviceType();\n    const isMobile = useMemo(\n      () => deviceType === DeviceTypeEnum.MOBILE,\n      [deviceType],\n    );\n\n    return (\n      <Modal\n        testId=\"testRequestsAndInvites\"\n        open={isOpen}\n        onClose={handleClose}\n        enableCloseButton\n        size={ModalSize.L}\n        isFullScreen={isMobile}\n        disableBackdropClick\n      >\n        <ModalHeader>{t('noumena.chamber.link.Link.Details')}</ModalHeader>\n        <Container>\n          <BasicChipsTabsForm\n            onChange={onChange}\n            inputList={modalHeadList}\n            selectedId={selectedValue}\n            mode=\"isBackground\"\n            isWithoutImage\n            fontSize=\"--font-link-medium-size\"\n            fullWidth\n            textFont=\"--font-body-medium-regular-font\"\n          />\n          <ModalBody\n            minHeight={450}\n            {...(!isMobile && {\n              maxHeight: '450px',\n            })}\n          >\n            <Infinite\n              onFetchMore={fetchMore}\n              disableFetchMoreWhileLoading={true}\n              status={infiniteState}\n              isSpinnerRelative\n              width=\"100%\"\n              style={{\n                overflowX: 'hidden',\n              }}\n            >\n              {tabComponent()}\n            </Infinite>\n          </ModalBody>\n        </Container>\n      </Modal>\n    );\n  },\n);\n\nexport default LinkDetailsModal;\n","import { ProjectChamberType } from '@/apollo/generated/types';\nimport ChamberDefaultImage from '@/assets/images/chamber_default.png';\nimport { Avatar } from '@/components/Avatar/Avatar';\nimport { type ChamberBoxNameEnum } from '@/components/ChamberBox/types';\nimport { Icon } from '@/components/Icon';\nimport { breakpoints } from '@/constants/devices';\nimport ROUTES from '@/constants/routes';\nimport { useLaunchDarkly, useToggle, useWindowDimensions } from '@/hooks';\nimport { Stack } from '@/layout';\nimport { useNoumsContext } from '@/providers';\nimport HandleUnlinkNoum from '@/screens/Chamber/components/modals/LinkNoum/HandleUnlinkNoum';\nimport LinkNoumModal from '@/screens/Chamber/components/modals/LinkNoum/LinkNoumModal';\nimport { type HandleUnlinkNoumRef } from '@/screens/Chamber/components/modals/LinkNoum/types';\nimport capitalizeFirstLetter from '@/utils/capitalizeFirstLetter';\nimport { format } from 'date-fns';\nimport { t } from 'i18next';\nimport { capitalize } from 'lodash';\nimport { useCallback, useMemo, useRef } from 'react';\nimport { useNavigate } from 'react-router';\nimport { colorsOfCategory, linkedNoumMenuOptions } from '../constants';\nimport EllipsisMenu from '../EllipsisMenu';\nimport {\n  IncrementLinkNoum,\n  LinkedNoum,\n  LinkedTagLabel,\n  LinkNoumHeadParent,\n  ProjectsVisibiltyText,\n  StyledLink,\n  StyledLinkContainer,\n  StyledTSpan,\n} from '../styles';\nimport LinkDetails from './LinkDetailsModal';\nimport { type INoumContent } from './types';\n\nconst NoumContent = ({\n  linkedNoums,\n  noumsCount,\n  connectionsCount,\n  followersCount,\n  linkedAt,\n  noumLinkId,\n  projectType,\n}: INoumContent) => {\n  const navigate = useNavigate();\n  const handleUnlinkNoumRef = useRef<HandleUnlinkNoumRef>(null);\n  const { refetchLinkedNoums } = useNoumsContext();\n  const { width } = useWindowDimensions();\n  const isMobile = useMemo(() => width < breakpoints.TABLET, [width]);\n  const isTablet = useMemo(\n    () => width >= breakpoints.TABLET && width <= breakpoints.TABLET_L,\n    [width],\n  );\n  const enableIncrementNoumCount = isTablet || isMobile ? 3 : 4;\n  const [isModalOpen, toggleModalOpen] = useToggle();\n  const [isLinkNoumModal, toggleLinkNoumModal] = useToggle();\n  const {\n    flags: { noumEditor2 },\n  } = useLaunchDarkly();\n\n  const handleClick = useCallback(\n    (e?: 'unlink' | 'link' | 'linkDetails' | string) => {\n      if (e === 'unlink') {\n        if (noumsCount > 2) {\n          handleUnlinkNoumRef.current?.toggleUnlinkMultipleNoum();\n        } else {\n          handleUnlinkNoumRef.current?.toggleUnlinkConfirmationOpen();\n        }\n      } else if (e === 'link') {\n        toggleLinkNoumModal();\n      } else if (e === 'linkDetails') {\n        toggleModalOpen();\n      }\n    },\n    [noumsCount, toggleLinkNoumModal, toggleModalOpen],\n  );\n\n  const handleGoToLinkNoum = useCallback(() => {\n    if (noumLinkId) {\n      navigate(`${ROUTES.LINK_NOUM}?linkID=${noumLinkId}`);\n    }\n  }, [navigate, noumLinkId]);\n\n  const projectVisibility = projectType?.toLowerCase();\n\n  return (\n    <LinkedNoum padding={16} vertical gap={16}>\n      <Stack fullWidth justify=\"space-between\">\n        <StyledTSpan\n          font=\"body-m\"\n          colorToken=\"--text-tablecell-header-neutral-highlighted\"\n          gap={8}\n          isMobile={isMobile}\n          style={{\n            display: 'flex',\n            alignItems: isMobile ? 'flex-start' : 'center',\n          }}\n        >\n          <StyledTSpan\n            font=\"body-l-bold\"\n            colorToken=\"--text-tablecell-header-neutral-highlighted\"\n          >\n            {noumsCount} {t('noumena.link_noums.linked_noums_lower')}\n          </StyledTSpan>\n          {!isMobile && <div>&middot;</div>}\n          <Stack gap={8}>\n            <>\n              {connectionsCount} {capitalize(t('noumena.connections'))}\n            </>\n            {projectType !== ProjectChamberType.Secret ? (\n              <Stack gap={8}>\n                <div>&middot;</div>\n                <>\n                  {followersCount} {capitalize(t('noumena.followers'))}\n                </>\n              </Stack>\n            ) : null}\n\n            {noumEditor2 && (\n              <Stack gap={8}>\n                <div>&middot;</div>\n                <ProjectsVisibiltyText>\n                  {projectVisibility}\n                </ProjectsVisibiltyText>\n              </Stack>\n            )}\n          </Stack>\n        </StyledTSpan>\n        <EllipsisMenu\n          menuOptions={linkedNoumMenuOptions}\n          isMobile={isMobile}\n          textOnly\n          containerWidth=\"170\"\n          onClick={handleClick}\n        />\n      </Stack>\n      <LinkNoumHeadParent fullWidth justify=\"space-between\" gap={8}>\n        {linkedNoums &&\n          linkedNoums.length > 0 &&\n          linkedNoums.map(\n            (item, index) =>\n              index < enableIncrementNoumCount && (\n                <StyledLink to={`/noum/${item?._id}`} key={item?.name}>\n                  <StyledLinkContainer>\n                    <Avatar url={item?.profileImage ?? ChamberDefaultImage} />\n\n                    <Stack gap={4} vertical>\n                      <StyledTSpan\n                        as=\"div\"\n                        isTurncate\n                        font=\"body-m-bold\"\n                        colorToken=\"--link-card-neutral-highlighted\"\n                      >\n                        {item?.name}\n                      </StyledTSpan>\n                      <LinkedTagLabel\n                        bgColor={\n                          colorsOfCategory[\n                            item?.category?.name.toLowerCase() as ChamberBoxNameEnum\n                          ].bgColor\n                        }\n                        color={\n                          colorsOfCategory[\n                            item?.category?.name.toLowerCase() as ChamberBoxNameEnum\n                          ].color\n                        }\n                      >\n                        {capitalizeFirstLetter(item?.category?.name ?? '')}\n                      </LinkedTagLabel>\n                    </Stack>\n                  </StyledLinkContainer>\n                </StyledLink>\n              ),\n          )}\n        {noumsCount > enableIncrementNoumCount && (\n          <IncrementLinkNoum\n            align=\"center\"\n            padding={24}\n            onClick={toggleModalOpen}\n          >\n            <Stack>\n              <Icon\n                name=\"plus_m\"\n                size={12}\n                color=\"--link-card-neutral-highlighted\"\n              />\n              <StyledTSpan\n                as=\"div\"\n                font=\"body-m-bold\"\n                colorToken=\"--link-card-neutral-highlighted\"\n              >\n                {noumsCount - enableIncrementNoumCount}\n              </StyledTSpan>\n            </Stack>\n          </IncrementLinkNoum>\n        )}\n      </LinkNoumHeadParent>\n      <LinkDetails\n        noumsCount={noumsCount}\n        connectionsCount={connectionsCount}\n        followersCount={followersCount}\n        isOpen={isModalOpen}\n        handleClose={toggleModalOpen}\n        noumLinkId={noumLinkId}\n        linkedNoums={linkedNoums}\n        projectType={projectType}\n      />\n      <StyledTSpan\n        font=\"footnote\"\n        colorToken=\"--text-timestamp-neutral-default\"\n        gap={4}\n      >\n        <div>{t(`noumena.link_noums.linked_on`)}</div>\n        <div>\n          {linkedAt && format(new Date(linkedAt), 'dd MMM yyyy, h:mm a')}\n        </div>\n      </StyledTSpan>\n      <LinkNoumModal\n        handleClose={toggleLinkNoumModal}\n        isOpen={isLinkNoumModal}\n        goToNoumLink={handleGoToLinkNoum}\n      />\n      <HandleUnlinkNoum\n        ref={handleUnlinkNoumRef}\n        noumLink={{\n          _id: noumLinkId,\n          linkedNoums: linkedNoums ?? [],\n          linkedNoumsCount: noumsCount,\n        }}\n        refetch={refetchLinkedNoums}\n      />\n    </LinkedNoum>\n  );\n};\n\nexport default NoumContent;\n","import { type NoumLinkFragment } from '@/apollo/graphql';\nimport { cleanList } from '@/utils/list';\nimport { LinkedNoumContainer } from '../styles';\nimport NoumContent from './NoumContent';\n\ntype LinkedNoumsProps = {\n  data: NoumLinkFragment[];\n};\nconst LinkedNoums = ({ data }: LinkedNoumsProps) => (\n  <LinkedNoumContainer>\n    {data.map((value) => (\n      <NoumContent\n        key={value?._id}\n        noumLinkId={value?._id ?? ''}\n        noumsCount={value?.linkedNoums?.length ?? 0}\n        linkedNoums={cleanList(value?.linkedNoums)}\n        connectionsCount={value?.connectionsCount ?? 0}\n        followersCount={value?.followersCount ?? 0}\n        linkedAt={value?.linkedAt ?? new Date()}\n        projectType={value?.projectType || undefined}\n      />\n    ))}\n  </LinkedNoumContainer>\n);\n\nexport default LinkedNoums;\n","import {\n  SpaceTypeEnum,\n  type ProjectChamberCategory,\n} from '@/apollo/generated/types';\nimport { useGetProjectChamberCategoriesLazyQuery } from '@/apollo/graphql';\nimport { type DropdownValueType } from '@/components/Dropdown/types';\nimport Icon from '@/components/Icon/Icon';\nimport { Infinite } from '@/components/Infinite';\nimport SkeletonLoaderProvider from '@/components/SkeletonLoader/SkeletonLoaderProvider';\nimport BasicChipsTabsForm from '@/components/Tabs/TabsForm';\nimport routes from '@/constants/routes';\nimport { useSubscription } from '@/features/money/hooks';\nimport { useAuth } from '@/features/auth/contexts';\nimport { useLaunchDarkly, useToggle } from '@/hooks';\nimport ListLayout from '@/layout/ListLayout';\nimport { NoumsContext, NoumsProvider, useNoumsContext } from '@/providers';\nimport { ChambersList } from '@/screens/Chamber/components/ChambersList/ChambersList';\nimport ChambersFilter from '@/screens/Chamber/components/modals/ChambersFilter/Modal';\nimport LinkNoum from '@/screens/Chamber/components/modals/LinkNoum/LinkNoumModal';\nimport ProjectCreate from '@/screens/Chamber/components/modals/ProjectCreate';\nimport MyPlans from '@/screens/Money/Payments/MyPlans';\nimport { chambersForSkeletonLoader } from '@/utils/skeletonLoaderHelpers';\nimport { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router';\nimport { useLocation } from 'react-router-dom';\nimport { SearchResult } from './SearchResult';\nimport ChamberBottomSheet, {\n  type ChamberBottomSheetItem,\n} from '../Chamber/components/modals/ChamberBottomSheet';\nimport {\n  LinkedFilterOptions,\n  updatedSortOptions,\n} from '../Chamber/components/modals/ChambersFilter/constants';\nimport { type ICategoryOption } from '../Chamber/components/modals/ChambersFilter/types';\nimport { ManageMembersModal } from '../Chamber/components/modals/ManageMembersModal';\nimport ChambersHead from './ChambersHead';\nimport ChambersMobileActions from './ChambersMobileActions';\nimport ChambersRightSideBar from './ChambersRightSideBar';\nimport InvitesAndRequests from './InvitesAndRequests';\nimport LinkedNoums from './LinkedNoums';\nimport { noumTypeFilter } from './constants';\nimport { getEmptyDescription, getEmptyHeading } from './helper';\nimport {\n  AppStyled,\n  ChamberContainerHead,\n  Container,\n  MyPlansWrapper,\n  SubFilterWrapper,\n} from './styles';\nimport { NoumScopeEnum } from './types';\n\nconst Chambers = () => {\n  const { t } = useTranslation();\n  const { search, pathname } = useLocation();\n\n  const {\n    noums,\n    linkedNoums,\n    currentLoading,\n    infiniteState,\n    setSelectedSort,\n    selectedSort,\n    selectedNoumType,\n    setSelectedNoumType,\n    selectedCateId,\n    setSelectedCateId,\n    selectedTab,\n    setSelectedTab,\n    selectedLinkSort,\n    setSelectedLinkSort,\n    fetchMore,\n  } = useNoumsContext();\n\n  const { flags } = useLaunchDarkly();\n  const [isCreateOpen, toggleCreateOpen] = useToggle(false);\n  const [isLinkNoumOpen, toggleLinkNoumOpen] = useToggle(false);\n  const [isBottomSheetOpen, toggleBottomSheetModal] = useToggle(false);\n  const [isOpenFilter, toggleFilter] = useToggle(false);\n  const [isManageMembersOpen, toggleManageMembers] = useToggle(false);\n\n  const [categoryOptions, setCategoryOptions] = useState<ICategoryOption[]>([\n    {\n      key: '-1',\n      value: '-1',\n      type: 'value',\n      name: 'All types',\n      label: t(`noumena.chambers.all_types`),\n      labelColor: 'all',\n    },\n  ]);\n  const { user, isActive: access } = useAuth();\n  const { subscribedPlans, payAsYouGoPlan } = useSubscription();\n  const isPlanPurchased = !!subscribedPlans.length || !!payAsYouGoPlan.length;\n  const { setSelectedCategoryID } = useContext(NoumsContext);\n\n  const navigate = useNavigate();\n\n  const navigateToContractManager = useCallback(() => {\n    navigate(routes.CONTRACT_MANAGER);\n  }, [navigate]);\n\n  const navigateToContactManager = useCallback(() => {\n    navigate(routes.CONTACT_MANAGER);\n  }, [navigate]);\n\n  const navigateToInvoiceManager = useCallback(() => {\n    navigate(routes.INVOICE_MANAGER);\n  }, [navigate]);\n\n  const navigateToCampaignManager = useCallback(() => {\n    navigate(routes.CAMPAIGNS);\n  }, [navigate]);\n\n  const dropDownOption = useMemo(() => {\n    const options: ChamberBottomSheetItem[] = [\n      {\n        key: 'Linked Noums',\n        label: t('noumena.link_noums.link_noums', {\n          linkNo: '',\n        }),\n        icon: 'link_m',\n        onClick: () => {\n          toggleLinkNoumOpen();\n          toggleBottomSheetModal();\n        },\n        iconColor: '--icon-tablecell-neutral-highlighted',\n      },\n    ];\n\n    if (flags.contractTool) {\n      options.push({\n        key: 'Contract Manager',\n        label: t('noumena.contract_manager.contract_manager'),\n        icon: 'link_m', // TODO: Change to correct icon for Contract Tool\n        onClick: () => {\n          toggleBottomSheetModal();\n          navigateToContractManager();\n        },\n        iconColor: '--icon-tablecell-neutral-highlighted',\n      });\n    }\n\n    if (flags.campaigns) {\n      options.push({\n        key: 'Campaigns',\n        label: 'Campaigns',\n        icon: 'link_m', // TODO: Change to correct icon for Contract Tool\n        onClick: () => {\n          toggleBottomSheetModal();\n          navigateToCampaignManager();\n        },\n        iconColor: '--icon-tablecell-neutral-highlighted',\n      });\n    }\n\n    return options;\n  }, [\n    t,\n    flags.contractTool,\n    flags.campaigns,\n    toggleLinkNoumOpen,\n    toggleBottomSheetModal,\n    navigateToContractManager,\n    navigateToCampaignManager,\n  ]);\n\n  const [getCategoryList] = useGetProjectChamberCategoriesLazyQuery({\n    fetchPolicy: 'cache-and-network',\n    onCompleted: (response) => {\n      const categories = response.getProjectChamberCategories;\n      if (categories) {\n        setCategoryOptions(\n          [\n            {\n              key: '-1',\n              value: '-1',\n              type: 'value',\n              name: 'All types',\n              label: t(`noumena.chambers.all_types`),\n              labelColor: 'all',\n            } as ICategoryOption,\n          ].concat(\n            categories\n              .filter(\n                (category: ProjectChamberCategory) =>\n                  !category.name.toLowerCase().match('#member') &&\n                  category.name !== 'Linked', // TODO Delete this condition after production release on Sep. 8\n              )\n              .map((categoryItem: ProjectChamberCategory) => ({\n                key: categoryItem._id,\n                value: categoryItem._id,\n                type: 'value',\n                name: categoryItem.name,\n                label: t(`noumena.chambers.${categoryItem.name}`),\n                labelColor: categoryItem.name.toLowerCase(),\n                icon:\n                  categoryItem.name === 'Linked' ? (\n                    <Icon\n                      style={{ marginRight: 4 }}\n                      name=\"link_m\"\n                      size={16}\n                      color=\"--icon-badge-neutral-default\"\n                    />\n                  ) : null,\n              })),\n          ),\n        );\n      }\n    },\n  });\n\n  useEffect(() => {\n    if (user?._id) getCategoryList();\n  }, [getCategoryList, user]);\n\n  const onCreateSuccess = useCallback(\n    (id: string) => {\n      navigate(`/noum/${id}/edit`, { state: { prevPath: pathname } });\n    },\n    [navigate, pathname],\n  );\n\n  // functionality when chambers head tab changed\n  const onTabChange = useCallback(\n    (value: NoumScopeEnum) => {\n      const searchParams = new URLSearchParams(search);\n      searchParams.set('tab', value);\n      if (\n        value === NoumScopeEnum.Connected ||\n        value === NoumScopeEnum.Following\n      )\n        searchParams.set('type', 'All');\n      else searchParams.delete('type');\n      navigate(`/noums?${searchParams.toString()}`);\n      setSelectedTab(value);\n      setSelectedNoumType(undefined);\n    },\n    [navigate, search, setSelectedNoumType, setSelectedTab],\n  );\n\n  const onSelectOptionData = useCallback(\n    (value: DropdownValueType<string>) => {\n      setSelectedSort(value);\n      // setInfiniteState('hasNextPage');\n    },\n    [setSelectedSort],\n  );\n\n  const onSelectLinkOption = useCallback(\n    (value: DropdownValueType<string>) => {\n      setSelectedLinkSort(value);\n    },\n    [setSelectedLinkSort],\n  );\n\n  const onSelectCategoryID = useCallback(\n    (id: string) => {\n      setSelectedCateId(id);\n    },\n    [setSelectedCateId],\n  );\n\n  const onSelectNoumType = useCallback(\n    (noumType: string) => {\n      const searchParams = new URLSearchParams(search);\n      onSelectCategoryID('-1');\n      setSelectedCategoryID('-1');\n      if (noumType === 'All') {\n        setSelectedNoumType(undefined);\n      } else {\n        setSelectedNoumType(noumType as SpaceTypeEnum);\n      }\n\n      if (\n        selectedTab === NoumScopeEnum.Connected ||\n        selectedTab === NoumScopeEnum.Following\n      )\n        searchParams.set('type', noumType);\n      else searchParams.delete('type');\n      navigate(`${pathname}?${searchParams.toString()}`);\n    },\n    [\n      search,\n      onSelectCategoryID,\n      setSelectedCategoryID,\n      selectedTab,\n      navigate,\n      pathname,\n      setSelectedNoumType,\n    ],\n  );\n\n  const shouldShowSubfilter = useMemo(\n    () =>\n      [NoumScopeEnum.Connected, NoumScopeEnum.Following].includes(\n        selectedTab as NoumScopeEnum,\n      ),\n    [selectedTab],\n  );\n\n  const shouldShowCategoryFilter = useMemo(() => {\n    const subFilterCondition =\n      shouldShowSubfilter && selectedNoumType === SpaceTypeEnum.Project;\n    const mainTabCondition = [\n      NoumScopeEnum.Archived,\n      NoumScopeEnum.Owned,\n    ].includes(selectedTab as NoumScopeEnum);\n    return subFilterCondition || mainTabCondition;\n  }, [shouldShowSubfilter, selectedNoumType, selectedTab]);\n\n  const isFiltered =\n    selectedSort?.key !== updatedSortOptions[0]?.key ||\n    selectedCateId !== '-1' ||\n    selectedLinkSort?.key !== LinkedFilterOptions()[0]?.key;\n\n  return (\n    <SkeletonLoaderProvider isLoading={currentLoading && !noums?.length}>\n      <ListLayout\n        type=\"Chambers\"\n        rightContent={\n          <ChambersRightSideBar\n            onToggleCreate={toggleCreateOpen}\n            onToggleLinkNoum={toggleLinkNoumOpen}\n            onToggleManageMembers={toggleManageMembers}\n            onContractManagerClick={navigateToContractManager}\n            onInvoiceManagerClick={navigateToInvoiceManager}\n            onContactManagerClick={navigateToContactManager}\n            onCampaginManagerClick={navigateToCampaignManager}\n          />\n        }\n      >\n        <Container gap={24} isAppUiV2={flags.newAppNavigation}>\n          <AppStyled\n            style={{ gap: 16, display: 'flex', flexDirection: 'column' }}\n          >\n            <ChamberContainerHead>\n              <ChambersHead\n                selectedId={selectedTab}\n                onChange={onTabChange}\n                onSelectOption={onSelectOptionData}\n                categoryOptions={categoryOptions}\n                onSelectCategory={onSelectCategoryID}\n                onSelectLinkOption={onSelectLinkOption}\n                noumType={selectedNoumType}\n              />\n              <InvitesAndRequests />\n              {/* TODO: Remove MyPlans from here and place into new Side bar which is for tablet and mobile when dev is complete, See designs under NOUM-4693 */}\n              {flags.paymentSubscriptions && access && isPlanPurchased && (\n                <MyPlansWrapper>\n                  <MyPlans />\n                </MyPlansWrapper>\n              )}\n            </ChamberContainerHead>\n            {shouldShowSubfilter && (\n              <SubFilterWrapper>\n                <BasicChipsTabsForm\n                  onChange={onSelectNoumType}\n                  inputList={noumTypeFilter}\n                  selectedId={selectedNoumType || 'All'}\n                  mode=\"isBackground\"\n                  isWithoutImage\n                  fontSize=\"--font-link-medium-size\"\n                  tabWidth=\"auto\"\n                />\n              </SubFilterWrapper>\n            )}\n            <SearchResult\n              isNoum={\n                selectedTab === NoumScopeEnum.Linked\n                  ? linkedNoums.length > 0\n                  : (noums?.length || 0) > 0\n              }\n              isFilterApplied={!!selectedNoumType}\n              tab={selectedTab}\n              noResultText={getEmptyHeading(selectedTab)}\n              noResultSubText={getEmptyDescription(selectedTab)}\n            >\n              <Infinite\n                onFetchMore={fetchMore}\n                status={infiniteState}\n                scrollbarWidth={0}\n                paddingBottom=\"75px\"\n              >\n                {selectedTab === NoumScopeEnum.Linked ? (\n                  <LinkedNoums data={linkedNoums} />\n                ) : (\n                  <ChambersList\n                    chambers={\n                      noums?.length ? noums : chambersForSkeletonLoader(9)\n                    }\n                  />\n                )}\n              </Infinite>\n            </SearchResult>\n            <ChambersMobileActions\n              onToggleFilter={toggleFilter}\n              openBottomSheet={toggleBottomSheetModal}\n              onToggleCreate={toggleCreateOpen}\n              isFiltered={isFiltered}\n            />\n          </AppStyled>\n        </Container>\n        {access && (\n          <>\n            {isCreateOpen && (\n              <ProjectCreate\n                isOpen={isCreateOpen}\n                handleClose={toggleCreateOpen}\n                handleSuccess={onCreateSuccess}\n              />\n            )}\n            {isLinkNoumOpen && (\n              <LinkNoum\n                isOpen={isLinkNoumOpen}\n                handleClose={toggleLinkNoumOpen}\n              />\n            )}\n            <ChamberBottomSheet\n              dropDownOptions={dropDownOption}\n              isOpen={isBottomSheetOpen}\n              handleClose={toggleBottomSheetModal}\n            />\n          </>\n        )}\n        {isOpenFilter && (\n          <ChambersFilter\n            onClose={toggleFilter}\n            onSelectOption={onSelectOptionData}\n            selectedSortOption={selectedSort}\n            categoryOptions={categoryOptions}\n            onSelectCategory={onSelectCategoryID}\n            selectedCategoryID={selectedCateId}\n            selectedId={selectedTab}\n            onSelectLinkOption={onSelectLinkOption}\n            selectedLinkSort={selectedLinkSort}\n            shouldShowFilter={shouldShowCategoryFilter}\n          />\n        )}\n        {isManageMembersOpen && (\n          <ManageMembersModal\n            isOpen={isManageMembersOpen}\n            handleClose={() => toggleManageMembers()}\n          />\n        )}\n      </ListLayout>\n    </SkeletonLoaderProvider>\n  );\n};\n\nconst ChambersWrap = () => (\n  <NoumsProvider>\n    <Chambers />\n  </NoumsProvider>\n);\nexport default ChambersWrap;\n"],"names":["useExpireSoonGracePeriedCount","gracePeriedCount","setGracePeriedCount","useState","expirySoonCount","setExpirySoonCount","logError","useError","flags","useLaunchDarkly","data","expiringSoonData","error","useGetNoumTransactionFeeDetailsQuery","fetchPolicy","skip","paymentSubscriptions","variables","noumDetailInput","status","Status_Noum","Active","onError","gracePeriodData","errorGracePeriod","Delinquent","countDaysToExpire","date","now","Date","diff","differenceInDays","computeExpirySoonCount","useCallback","count","resArray","length","i","obj","valid_till","push","useEffect","getNoumTransactionFeeDetails","SubTitle","styled","TSpan","RadioBoxWrapper","div","RadioBoxItem","variant","Divider","TagLabel","bgColor","color","ChambersFilter","onClose","onSelectOption","selectedSortOption","categoryOptions","onSelectCategory","selectedCategoryID","selectedId","selectedLinkSort","onSelectLinkOption","shouldShowFilter","t","useTranslation","isIPhone","window","navigator","userAgent","match","selectedSortItem","setSelectedSortItem","updatedSortOptions","selectedLinkSortItem","setSelectedLinkSortItem","LinkedFilterOptions","selectedCategory","setSelectedCategory","isChanged","setIsChanged","selectSortOption","sortItem","selectLinkSortOption","selectCategory","category","onApplySortAndFilter","value","filter","cate","windowSize","useWindowDimensions","isLaptop","useMemo","width","breakpoints","LAPTOP","jsxs","Modal","jsx","ModalHeader","ModalBody","Fragment","map","item","Radiobox","Icon","label","toString","key","Spacer","typeOfChamberBox","labelColor","icon","ModalFooter","Button","HelperTextWrapper","props","height","PlanInfo","PlanInfoTile","order","NoumExpired","PlanSelected","NoumGracePeriod","MyPlans","React","memo","planExists","setPlanExists","purchasePlanModalIsOpen","setPurchasePlanModalIsOpen","deviceType","useDeviceType","navigateTo","useNavigate","isMobile","useBreakpoints","subscribedPlans","loading","totalNoumRenewalSlots","totalNoumSetupSlots","activeNoumRenewalSlots","activeNoumSetupSlots","useSubscription","hanldeNavigation","ROUTES","MY_PLAN","Styles.CardWrapper","Styles.CardHeader","Styles.CardInformation","display","justifyContent","Skeleton","DeviceTypeEnum","TABLET","CircleProgressBar","Tooltip","PlanPurchaseModal","PurschaseModalLaunchFronEnum","INITIAL_SETUP","getEmptyHeading","tab","NoumScopeEnum","Owned","Connected","Following","Archived","Linked","getEmptyDescription","Empty","EmptyCardContainer","Card","PlantContainer","NoResultWrapper","offsetTop","NoResultText","NoResultSubText","SearchResult","isNoum","noResultText","noResultSubText","children","isFilterApplied","isLoading","useSkeletonIsLoadingContext","ChamberBottomSheet","isOpen","handleClose","dropDownOptions","BottomSheet","padding","maxWidth","BottomSheetBody","paddingBottom","gap","iconColor","onClick","ChambersHead","onChange","noumType","categories","setCategories","categoryID","sortInfo","setSelectedCategoryID","setSortInfo","sortLinkInfo","setSortLinkInfo","useContext","NoumsContext","selectSort","sort","selectLinkSort","linkSort","shouldShowSubfilter","includes","shouldShowCategoryFilter","subFilterCondition","SpaceTypeEnum","Project","mainTabCondition","selected","resetCategoryFilter","ChambersHeadWrapper","ChamberActionButtons","BasicChipsTabsForm","chamberHeadList","linkTab","ChambersDropDown","Dropdown","targetRef","toggle","ChambersMobileActions","onToggleFilter","onToggleCreate","openBottomSheet","isFiltered","isActive","access","useAuth","newAppNavigation","MobileBottomActionsContainer","IconButtonStyled","AlertIconStyled","Stack","MobileButtons","marginRight","FilterSelected","ChambersRightSideBar","onContactManagerClick","onContractManagerClick","onInvoiceManagerClick","onToggleLinkNoum","onToggleManageMembers","onCampaginManagerClick","contractTool","invoiceTool","contacts","campaigns","noumCoManager","masterId","mainSpaceId","payAsYouGoPlan","isPlanPurchased","handleEllipsisClick","e","SideBarContainer","CreateChamberButton","EllipsisMenu","rightSideMenuOptions","option","ReceivedRequests","InvitesAndRequests","noumRequestsInvitesV2","isModalOpen","toggleModalOpen","useToggle","useReceivedConnections","invitationData","invitationLoading","refetch","useRequestedConnections","ConnectionRequestStatus","Invited","InvitesAndRequestsContainer","RightSpinnerContainer","Spinner","Badge","receivedConnectionRequest","requestedConnection","InviteLabel","RequestsAndInvitesModalV2","RequestsAndInvitesModal","useLinkDetailsHelper","noumLinkID","selectedValue","getOwnNoumLinkFollowers","dataFollowing","loadingFollowing","errorFollowing","fetchMore","fetchMoreFollowing","useGetNoumLinkFollowersLazyQuery","getOwnNoumLinkConnections","dataConnection","loadingConnection","errorConnection","fetchMoreConnection","useGetNoumLinkConnectionsLazyQuery","connectionData","setConnectionData","undefined","followingData","setFollwoingData","getInfiniteState","dataCount","setInfiniteState","PAGE_SIZE","currentLinkedNoums","LinkedNoumEnum","Connection","infiniteState","noumLinkId","limit","offset","column","operator","SortOperator","Asc","result","getNoumLinkConnections","tempData","getNoumLinkFollowers","LinkDetailsContent","forwardRef","name","title","profileImage","updateAt","tabId","ref","LinkContainer","Avatar","formatRelativeVariant","LinkedTagLabel","colorsOfCategory","toLowerCase","capitalizeFirstLetter","LinkUnderline","LinkDetailsModal","connectionsCount","noumsCount","followersCount","linkedNoums","projectType","ProjectChamberType","Public","setSelectedValue","Noum","modalHeadList","list","id","image","text","labelSize","Secret","linkedNoumsTabHandler","uid","firstName","lastName","ChamberDefaultImage","profile","profilePictureThumbnail","profilePicture","MemberDefaultImage","approvedAt","lastUpdatedAt","_id","TextOnlySpan","tabComponent","MOBILE","ModalSize","L","Container","maxHeight","Infinite","overflowX","NoumContent","linkedAt","navigate","handleUnlinkNoumRef","useRef","refetchLinkedNoums","useNoumsContext","enableIncrementNoumCount","TABLET_L","isLinkNoumModal","toggleLinkNoumModal","noumEditor2","handleClick","current","toggleUnlinkMultipleNoum","toggleUnlinkConfirmationOpen","handleGoToLinkNoum","LINK_NOUM","projectVisibility","LinkedNoum","StyledTSpan","alignItems","capitalize","ProjectsVisibiltyText","linkedNoumMenuOptions","LinkNoumHeadParent","index","StyledLink","StyledLinkContainer","IncrementLinkNoum","LinkDetails","format","LinkNoumModal","HandleUnlinkNoum","linkedNoumsCount","LinkedNoums","LinkedNoumContainer","cleanList","Chambers","search","pathname","useLocation","noums","currentLoading","setSelectedSort","selectedSort","selectedNoumType","setSelectedNoumType","selectedCateId","setSelectedCateId","selectedTab","setSelectedTab","setSelectedLinkSort","isCreateOpen","toggleCreateOpen","isLinkNoumOpen","toggleLinkNoumOpen","isBottomSheetOpen","toggleBottomSheetModal","isOpenFilter","toggleFilter","isManageMembersOpen","toggleManageMembers","setCategoryOptions","type","user","navigateToContractManager","routes","CONTRACT_MANAGER","navigateToContactManager","CONTACT_MANAGER","navigateToInvoiceManager","INVOICE_MANAGER","navigateToCampaignManager","CAMPAIGNS","dropDownOption","options","linkNo","getCategoryList","useGetProjectChamberCategoriesLazyQuery","onCompleted","response","getProjectChamberCategories","concat","categoryItem","onCreateSuccess","state","prevPath","onTabChange","searchParams","URLSearchParams","set","delete","onSelectOptionData","onSelectCategoryID","onSelectNoumType","SkeletonLoaderProvider","ListLayout","AppStyled","flexDirection","ChamberContainerHead","MyPlansWrapper","SubFilterWrapper","noumTypeFilter","ChambersList","chambersForSkeletonLoader","ProjectCreate","LinkNoum","ManageMembersModal","ChambersWrap","NoumsProvider","Chambers$1"],"mappings":"ggFAOO,MAAMA,GAAgCA,IAAM,CACjD,KAAM,CAACC,EAAkBC,CAAmB,EAAIC,WAAiB,CAAC,EAC5D,CAACC,EAAiBC,CAAkB,EAAIF,WAAiB,CAAC,EAE1D,CAAEG,SAAAA,GAAaC,GAAU,EACzB,CAAEC,MAAAA,GAAUC,GAAiB,EAE7B,CAAEC,KAAMC,EAAkBC,MAAAA,GAC9BC,GAAqC,CACnCC,YAAa,eACbC,KAAM,CAACP,EAAMQ,qBACbC,UAAW,CACTC,gBAAiB,CAAEC,OAAQC,GAAYC,MAAO,CAChD,EACAC,QAASA,IAAM,CACbhB,EAASM,EAAO,iCAAiC,CACnD,CAAA,CACD,EAEG,CAAEF,KAAMa,EAAiBX,MAAOY,GACpCX,GAAqC,CACnCC,YAAa,eACbC,KAAM,CAACP,EAAMQ,qBACbC,UAAW,CACTC,gBAAiB,CAAEC,OAAQC,GAAYK,UAAW,CACpD,EACAH,QAASA,IAAM,CACbhB,EAASkB,EAAkB,iCAAiC,CAC9D,CAAA,CACD,EAEH,SAASE,EAAkBC,EAAiC,CAC1D,GAAIA,EAAM,CACFC,MAAAA,MAAUC,KAETC,OADMC,GAAiB,IAAIF,KAAKF,CAAI,EAAGC,CAAG,EAG5C,MAAA,EACT,CAEMI,MAAAA,EAAyBC,cAC5BvB,GAA6C,CAC5C,IAAIwB,EAAQ,EACZ,MAAMC,EAAsD,CAAA,EACxDzB,GAAAA,EAAK0B,OAAS,EAAG,CACnB,QAASC,EAAI,EAAGA,EAAI3B,EAAK0B,OAAQC,GAAK,EAAG,CACjCC,MAAAA,EAAM5B,EAAK2B,CAAC,EAEhBX,EAAkBY,GAAAA,YAAAA,EAAKC,UAAU,EAAI,IACrCb,EAAkBY,GAAAA,YAAAA,EAAKC,UAAU,EAAI,GAErCJ,EAASK,KAAKF,CAAG,EAGrBJ,EAAQC,EAASC,OAGZF,OAAAA,CACT,EACA,CAAE,CAAA,EAGJO,OAAAA,EAAAA,UAAU,IAAM,CACdpC,EACE2B,GACErB,GAAAA,YAAAA,EAAkB+B,+BAAgC,CAAA,CAAE,CACrD,CAAA,EAEF,CAACV,EAAwBrB,CAAgB,CAAC,EAE7C8B,EAAAA,UAAU,IAAM,CAEZlB,GAAAA,GAAAA,YAAAA,EAAiBmB,6BAA6BN,SAAU,CAAC,CAAA,EAE1D,CAACb,CAAe,CAAC,EAEb,CACLtB,iBAAAA,EACAG,gBAAAA,CAAAA,CAEJ,ECpFauC,GAAWC,EAAOC,CAAK;AAAA;AAAA,EAIvBC,GAAkBF,EAAOG;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAOzBC,GAAeJ,EAAOG;AAAAA,aACtB,CAAC,CAAEE,QAAAA,CAAQ,IAAOA,IAAY,SAAW,GAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQ9CC,GAAUN,EAAOG;AAAAA;AAAAA;AAAAA,EAKjBI,GAAWP,EAAOG;AAAAA,sBAIT,CAAC,CAAEK,QAAAA,CAAQ,IAAMA;AAAAA,WAC5B,CAAC,CAAEC,MAAAA,CAAM,IAAMA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,ECJpBC,GAAgDA,CAAC,CACrDC,QAAAA,EACAC,eAAAA,EACAC,mBAAAA,EACAC,gBAAAA,EACAC,iBAAAA,EACAC,mBAAAA,EACAC,WAAAA,EACAC,iBAAAA,EACAC,mBAAAA,EACAC,iBAAAA,CACF,IAAM,CACE,KAAA,CAAEC,EAAAA,GAAMC,GAAgB,EACxBC,EAAW,CAAC,EAACC,qBAAQC,UAAUC,UAAUC,MAAM,YAE/C,CAACC,EAAkBC,CAAmB,EAAItE,EAE9CuE,SAAAA,EAAmB,CAAC,CAAC,EAEjB,CAACC,EAAsBC,CAAuB,EAAIzE,WAEtD0E,IAAsB,CAAC,CAAC,EACpB,CAACC,EAAkBC,CAAmB,EAC1C5E,WAAiC,IAAI,EACjC,CAAC6E,EAAWC,CAAY,EAAI9E,WAAS,EAAK,EAE1C+E,EAAmBjD,cACtBkD,GAAwC,CAClCH,GAAWC,EAAa,EAAI,EACjCR,EAAoBU,CAAQ,CAAA,EAE9B,CAACH,EAAWP,CAAmB,CAAC,EAG5BW,EAAuBnD,cAC1BkD,GAAwC,CAClCH,GAAWC,EAAa,EAAI,EACjCL,EAAwBO,CAAQ,CAAA,EAElC,CAACH,EAAWJ,CAAuB,CAAC,EAGhCS,EAAiBpD,cACpBqD,GAA8B,CACxBN,GAAWC,EAAa,EAAI,EACjCF,EAAoBO,CAAQ,CAAA,EAE9B,CAACN,EAAWD,CAAmB,CAAC,EAG5BQ,EAAuBtD,EAAAA,YAAY,IAAM,CAC7CuB,EAAegB,CAAgB,EACdM,GAAAA,GAAAA,YAAAA,EAAkBU,QAAS,IAAI,EAChDzB,EAAmBY,CAAoB,EAC9BpB,GAAA,EACR,CACDA,EACAI,EACAI,EACAP,EACAsB,GAAAA,YAAAA,EAAkBU,MAClBb,EACAH,CAAgB,CACjB,EAED/B,EAAAA,UAAU,IAAM,CAEZiC,EAAAA,EAAmBe,OACHN,GAAAA,EAASK,SAAU/B,GAAAA,YAAAA,EAAoB+B,MAAK,EAC1D,CAAC,CAAC,EAGJX,EAAAA,EAAAA,EAAsBY,OACNN,GAAAA,EAASK,SAAU1B,GAAAA,YAAAA,EAAkB0B,MAAK,EACxD,CAAC,CAAC,EAIJ9B,EAAAA,EAAgB+B,OAAiBC,GAAAA,EAAKF,QAAU5B,CAAkB,EAAE,CAAC,CAAC,CAAA,EAEvE,CACDF,EACAE,EACAE,GAAAA,YAAAA,EAAkB0B,MAClB/B,GAAAA,YAAAA,EAAoB+B,KAAK,CAC1B,EAED,MAAMG,EAAaC,KACbC,EAAWC,EAAAA,QACf,IAAMH,EAAWI,MAAQC,GAAYC,OACrC,CAACN,EAAWI,KAAK,CAAC,EAGpB,OACGG,EAAAC,GAAA,CACC,KAAM,CAACN,EACP,aAAY,GACZ,kBAAiB,GACjB,OAAO,iBACP,QAAAtC,EACA,qBAAoB,GAAA,YAAA,uBAEpB,SAAA,CAAC6C,EAAAC,GAAA,CAAY,aAAY,GAAC,eAAe,aAAY,YAAA,6BAClDpC,SAAGA,EAAA,qCAAoC,CAC1C,CAAA,IACCqC,GAAU,CAAA,aAAc,CAACnC,EAAS,YAAA,2BAChCN,SAAAA,IAAe,SACduC,EAAAG,EAAA,CACG1B,aAAsB2B,cACpB,OAAAN,EAAApD,GAAA,CAA8B,YAAA,iCAC7B,SAAA,CAACoD,EAAAlD,GAAA,CACC,QAAQ,OACR,QAAS,IAAMoC,EAAqBqB,CAAI,EAAE,YAAA,8BAE1C,SAAA,CAAAL,EAACM,GACC,CAAA,UAAWD,EAAKjB,QAAUb,EAAqBa,MAC/C,KACEY,EAACO,EACC,CAAA,KAAK,cACL,KACEF,EAAKjB,QAAUb,EAAqBa,MAAQ,GAAK,EAEnD,MACEiB,EAAKjB,QAAUb,EAAqBa,MAChC,2CACA,sCACL,YAAA,qBAAA,CAAA,EAEJ,YAAA,0BAAA,EAEHY,EAACvD,EACC,CAAA,KAAK,cACL,WAAW,8CAA6C,YAAA,uBAEvD4D,UAAAA,EAAAA,EAAKG,QAALH,YAAAA,EAAYI,UACf,CAAA,CAAA,EACF,EACAT,EAAClD,GAAO,CAAA,YAAA,wBAAA,CAAA,CAAA,GA5BYuD,EAAKK,GA6B3B,EACD,CAAA,CACH,EAGEZ,EAAAK,EAAA,CAAA,SAAA,CAACH,EAAAzD,GAAA,CACC,KAAK,cACL,WAAW,qCAAoC,YAAA,0BAE9CsB,SAAEA,EAAA,0BAA0B,CAC/B,CAAA,EACCS,EAAmB8B,IAAKC,GACtB,OAAA,OAAAP,EAAApD,GAAA,CAA8B,YAAA,iCAC7B,SAAA,CAACoD,EAAAlD,GAAA,CACC,QAAQ,OACR,QAAS,IAAMkC,EAAiBuB,CAAI,EAAE,YAAA,8BAEtC,SAAA,CAAAL,EAACM,GACC,CAAA,UAAWD,EAAKjB,QAAUhB,EAAiBgB,MAC3C,KACEY,EAACO,EACC,CAAA,KAAK,cACL,KAAMF,EAAKjB,QAAUhB,EAAiBgB,MAAQ,GAAK,EACnD,MACEiB,EAAKjB,QAAUhB,EAAiBgB,MAC5B,2CACA,sCACL,YAAA,qBAAA,CAAA,EAEJ,YAAA,0BAAA,EAEHY,EAACvD,EACC,CAAA,KAAK,cACL,WAAW,8CAA6C,YAAA,uBAEvD4D,UAAAA,EAAAA,EAAKG,QAALH,YAAAA,EAAYI,UACf,CAAA,CAAA,EACF,EACAT,EAAClD,GAAO,CAAA,YAAA,wBAAA,CAAA,CAAA,GA1BYuD,EAAKK,GA2B3B,EACD,EACAV,EAAAW,GAAA,CAAO,OAAQ,GAAG,YAAA,wBAAA,EAClB/C,GAEGkC,EAAAK,EAAA,CAAA,SAAA,CAACH,EAAAzD,GAAA,CACC,KAAK,cACL,WAAW,qCAAoC,YAAA,0BAE9CsB,SAAEA,EAAA,wBAAwB,CAC7B,CAAA,EACCP,EAAgB8C,IAAKd,GACnBQ,EAAApD,GAAA,CAA8B,YAAA,iCAC7B,SAAA,CAACoD,EAAAlD,GAAA,CACC,QAAQ,SACR,QAAS,IAAMqC,EAAeK,CAAI,EAAE,YAAA,8BAEpC,SAAA,CAAAU,EAACM,GACC,CAAA,UAAWhB,EAAKF,SAAUV,GAAAA,YAAAA,EAAkBU,OAC5C,KACEY,EAACO,EACC,CAAA,KAAK,cACL,KACEjB,EAAKF,SAAUV,GAAAA,YAAAA,EAAkBU,OAAQ,GAAK,EAEhD,MACEE,EAAKF,SAAUV,GAAAA,YAAAA,EAAkBU,OAC7B,2CACA,sCACL,YAAA,qBAAA,CAAA,EAEJ,YAAA,0BAAA,EAEHU,EAAC/C,IACC,GAAI6D,GACFtB,EAAKuB,UAAgC,EACrC,YAAA,0BAEDvB,SAAAA,CAAKwB,EAAAA,KACLxB,EAAKkB,KAAAA,EACR,CAAA,EACF,EACAR,EAAClD,GAAO,CAAA,YAAA,wBAAA,CAAA,CAAA,GA9BYwC,EAAKoB,GA+B3B,CACD,CAAA,EACH,CAAA,CAAA,CAEJ,CAEJ,CAAA,IACCK,GAAY,CAAA,aAAY,GAAC,eAAe,SAAQ,YAAA,6BAC9CnC,SAAAA,IACEoC,EACC,CAAA,OAAO,8BACP,QAAS7B,EACT,QAAO,GACP,KAAK,OAAM,YAAA,wBAEVtB,SAAGA,EAAA,mDAAkD,CACxD,CAAA,EAEAmC,EAACgB,GACC,OAAO,+BACP,KAAK,OACL,SAAQ,GACR,QAAS,IAAM7D,IAAU,YAAA,wBAExBU,SAAGA,EAAA,gDAA+C,EACrD,CAEJ,CAAA,CACF,CAAA,CAAA,CAEJ,ECpRaoD,GAAoBzE,EAAOC,CAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAMtByE,EAAMC;AAAAA,EAGhBC,GAAW5E,EAAOG;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAWlB0E,GAAe7E,EAAOG;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,WASxB,CAAC,CAAE2E,MAAAA,CAAM,IAAMA,GAAS;AAAA;AAAA;AAAA;AAAA,EAMtBC,GAAc/E,EAAOG;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EAerB6E,GAAehF,EAAOG;AAAAA;AAAAA;AAAAA;AAAAA,EAMtB8E,GAAkBjF,EAAOG;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,EC9BhC+E,GAAUC,GAAMC,KAAK,IAAM,CAC/B,KAAM,CAACC,EAAYC,CAAa,EAAI/H,EAA+B,SAAA,EAC7D,CAACgI,EAAyBC,CAA0B,EACxDjI,WAAkB,EAAK,EACnBkI,EAAaC,KACbC,EAAaC,KACb,CAAEC,SAAAA,GAAaC,GAAgB,EAE/B,CAAEzI,iBAAAA,EAAkBG,gBAAAA,GAAoBJ,GAA+B,EAEvE,CACJ2I,gBAAAA,EACAC,QAAAA,EACAC,sBAAAA,EACAC,oBAAAA,EACAC,uBAAAA,EACAC,qBAAAA,GACEC,GAAiB,EAErBxG,EAAAA,UAAU,IAAM,CACVkG,EAAgBvG,OAAS,GAAKwG,IAAY,GAC5CV,EAAc,EAAI,EACTS,EAAgBvG,QAAU,GAAKwG,GACxCV,EAAc,EAAK,CACrB,EACC,CAACU,EAASD,CAAe,CAAC,EAE7B,MAAMO,EAAmBA,IAAM,CAC7BX,EAAWY,EAAOC,OAAO,CAAA,EAG3B,OAEIlD,EAAAK,EAAA,CAAA,SAAA,CAACL,EAAAmD,GAAA,CACC,SAAA,CAACnD,EAAAoD,GAAA,CACC,SAAA,CAAClD,EAAAmD,GAAA,CACC,KAAK,cACL,WAAW,yCAEVtF,SAAEA,EAAA,uBAAuB,EAC5B,EACCmC,EAAAgB,EAAA,CACC,KAAK,QACL,MAAO,CAAErB,MAAO,OAAQwB,OAAQ,MAAA,EAChC,SACGnB,EAAAO,EAAA,CACC,KAAK,gBACL,KAAM,GACN,MAAM,gCACN,YAAA,eAAA,EAEJ,cAAY,oBACZ,SAAQ,GACR,QAASuC,EAAiB,YAAA,iBAAA,CAAA,EAE9B,EACC9C,EAAAW,GAAA,CAAO,OAAQ,GAAG,YAAA,iBAAA,EAClB6B,GAEG1C,EAAAK,EAAA,CAAA,SAAA,CAAAL,EAAC,OAAI,MAAO,CAAEsD,QAAS,OAAQC,eAAgB,eAC7C,EAAA,SAAA,CAAArD,EAACsD,IAAS,MAAO,IAAK,OAAQ,GAAG,YAAA,mBAAA,IAChCA,GAAS,CAAA,MAAO,IAAK,OAAQ,GAAG,YAAA,mBAAA,CAAA,EACnC,EACCtD,EAAAW,GAAA,CAAO,OAAQ,GAAG,YAAA,iBAAA,EAClBX,EAAAsD,GAAA,CAAS,MAAO,EAAE,YAAA,mBAAA,CAAA,EACrB,EAEDzB,IAAe,IAAS,CAACW,KACvBvB,GACC,CAAA,KAAK,SACL,WAAW,qCACX,OAAQgB,IAAesB,GAAeC,OAAS,OAAS,KAAK,YAAA,4BAE5D3F,SAAAA,EAAE,kCAAkC,EACvC,EAGDgE,IAAe,IAAS,CAACW,GAEtB1C,EAAAK,EAAA,CAAA,SAAA,CAAAH,EAACW,GAAO,CAAA,OAAQ,GAAG,YAAA,iBAAA,EAClBX,EAAAgB,EAAA,CACC,KAAK,aACL,UAAS,GACT,QAAS,IAAMgB,EAA2B,EAAI,EAAE,YAAA,iBAE/CnE,SAAAA,EAAE,kCAAkC,EACvC,CAAA,EACF,EAEDgE,GAAc,CAACW,GACb1C,EAAA0B,GAAA,CAAY,YAAA,uBACX,SAAA,CAAC1B,EAAAsB,GAAA,CAAQ,YAAA,mBACP,SAAA,CAACtB,EAAAuB,GAAA,CAAY,YAAA,uBACX,SAAA,CAAArB,EAACyD,IACC,WACGb,EAAuBF,EAAuB,IAEjD,MACGE,EAAuBF,EAAuB,MAAQ,EACnD,wCACA,8CAEN,QAAS,EACT,WAAY,GAAG,YAAA,4BAAA,EAEjB1C,EAACvD,EAAM,CAAA,KAAK,WAAW,WAAW,8BAA6B,YAAA,gBAC5DoB,SAAEA,EAAA,iCAAiC,CACtC,CAAA,IACCpB,EACC,CAAA,KAAK,SACL,WAAW,yCAAwC,YAAA,gBAElDmG,SAAAA,CAAAA,EAAqB,MAAIF,CAAAA,EAC5B,CAAA,EACF,EACA5C,EAACuB,GAAY,CAAA,YAAA,uBACX,SAAA,CAAArB,EAACyD,IACC,WACGd,EAAyBF,EAAyB,IAErD,MACGE,EAAyBF,EAAyB,MAAQ,EACvD,wCACA,8CAEN,QAAS,EACT,WAAY,GAAG,YAAA,4BAAA,EAEjBzC,EAACvD,EAAM,CAAA,KAAK,WAAW,WAAW,8BAA6B,YAAA,gBAC5DoB,SAAEA,EAAA,mCAAmC,CACxC,CAAA,IACCpB,EACC,CAAA,KAAK,SACL,WAAW,yCAAwC,YAAA,gBAElDkG,SAAAA,CAAAA,EAAuB,MAAIF,CAAAA,EAC9B,CAAA,EACF,CAAA,EACF,EACCzI,EAAkB,GAChB8F,EAAAyB,GAAA,CAAW,YAAA,sBACV,SAAA,CAACvB,EAAAO,EAAA,CACC,KAAK,aACL,MAAM,sCACN,KAAM,MAAM,YAAA,cAAA,CAAA,EAEbP,EAAAvD,EAAA,CACC,KAAK,cACL,WAAW,sCAAqC,YAAA,gBAE9C,SACAzC,SAAAA,IAAoB,EAAK,OAAS,GAAEA,+BAExC,CAAA,EACF,EAEDH,EAAmB,GACjBiG,EAAA2B,GAAA,CAAe,YAAA,0BAMd,SAAA,CAAAzB,EAAC0D,GACC,CAAA,IAAK,KACL,KAAMrB,EAAW,EAAI,EACrB,UAAU,2BACV,SAAU,MAAM,YAAA,kBAEhB,SAAArC,EAAC,OAAI,MAAO,CAAEL,MAAO0C,EAAW,QAAU,OAAA,EACxC,SAAArC,EAACvD,EACC,CAAA,WAAW,qCACX,KAAK,WAAU,YAAA,gBAEdoB,SAAAA,EACC,2DAA2D,CAE/D,CAAA,CACF,CAAA,EACF,EACCmC,EAAAvD,EAAA,CACC,KAAK,cACL,WAAW,mCAAkC,YAAA,gBAE3C,SACA5C,QAAAA,IAAqB,EAChB,UACA,GAAEA,kCAEX,CAAA,EACF,CAAA,EAEJ,CAAA,EAEJ,EACCkI,GACC/B,EAAC2D,GACC,CAAA,KAAM5B,EACN,QAAS,IAAMC,EAA2B,EAAK,EAC/C,WAAY4B,GAA6BC,cAE5C,YAAA,4BAAA,CACH,CAAA,CAAA,CAEJ,CAAC,ECtOYC,GAAmBC,GAA4B,CAC1D,OAAQA,EAAG,CACT,KAAKC,EAAcC,MACjB,OAAOpG,EAAG,iCAAgC,EAC5C,KAAKmG,EAAcE,UACjB,OAAOrG,EAAG,qCAAoC,EAChD,KAAKmG,EAAcG,UACjB,OAAOtG,EAAG,qCAAoC,EAChD,KAAKmG,EAAcI,SACjB,OAAOvG,EAAG,oCAAmC,EAC/C,KAAKmG,EAAcK,OACjB,OAAOxG,EAAG,uCAAsC,EAClD,QACE,OAAOA,EAAG,wBAAuB,CAAE,CAEzC,EAEayG,GAAuBP,GAA4B,CAC9D,OAAQA,EAAG,CACT,KAAKC,EAAcC,MACjB,OAAOpG,EAAG,yCAAwC,EACpD,KAAKmG,EAAcE,UACjB,OAAOrG,EAAG,6CAA4C,EACxD,KAAKmG,EAAcG,UACjB,OAAOtG,EAAG,6CAA4C,EACxD,KAAKmG,EAAcI,SACjB,OAAOvG,EAAG,4CAA2C,EACvD,QACE,OAAOA,EAAG,mCAAkC,CAAE,CAEpD,ECtBM0G,GAAoBA,CAAC,CAAER,IAAAA,CAAY,IACvC/D,EAACwE,GAAkB,CAAA,YAAA,2BACjB,SAAAxE,EAACyE,GAAI,CAAA,YAAA,aACH,SAAA3E,EAAC4E,GAAc,CAAA,YAAA,uBACb,SAAA,CAAA1E,EAACW,GAAO,CAAA,OAAQ,GAAG,YAAA,eAAA,EACnBX,EAACvD,EACC,CAAA,KAAK,kBACL,WAAW,yCAAwC,YAAA,cAElDqH,SAAgBC,GAAAA,CAAG,CACtB,CAAA,EACA/D,EAACvD,EAAM,CAAA,KAAK,WAAW,WAAW,8BAA6B,YAAA,cAC5D6H,SAAoBP,GAAAA,CAAG,CAC1B,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,ECvBWY,GAAkBnI,EAAOG;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,gBAQtB,CAAC,CAAEiI,UAAAA,CAAU,IAAO,GAAEA;AAAAA,EAGzBC,GAAerI,EAAOC,CAAK;AAAA;AAAA,EAI3BqI,GAAkBtI,EAAOC,CAAK;AAAA;AAAA,ECZpC,SAASsI,GAAa,CAC3BC,OAAAA,EACAJ,UAAAA,EAAY,IACZK,aAAAA,EACAC,gBAAAA,EACAC,SAAAA,EACApB,IAAAA,EACAqB,gBAAAA,CACiB,EAAgB,CAC3B,KAAA,CAAEC,UAAAA,GAAcC,GAA6B,EAEnD,OAAIN,GAAUK,OAAqBF,SAAAA,CAAS,CAAA,EAExC,CAACC,GAAmBrB,EAAa/D,EAAAuE,GAAA,CAAM,IAAAR,EAAY,YAAA,OAAA,CAAA,GAChDkB,GAAkBC,IAAoBnB,EAAa/D,EAAAuE,GAAA,CAAM,IAAAR,EAAY,YAAA,OAAA,CAAA,EAGzE/D,EAAA2E,GAAA,CAAgB,cAAY,oBAAoB,UAAAC,EAAqB,YAAA,kBACnE,SAAEK,GAAkBC,EAEjBpF,EAAAK,EAAA,CAAA,SAAA,CAACH,EAAA6E,GAAA,CACC,KAAK,kBACL,WAAW,yCACX,cAAY,oBAAmB,YAAA,eAE9BI,SACHA,CAAA,CAAA,EACAjF,EAAC8E,GACC,CAAA,KAAK,WACL,WAAW,8BACX,cAAY,wBAAuB,YAAA,kBAElCI,SACHA,CAAA,CAAA,CAAA,CACF,CAAA,EAEAlF,EAAC6E,GACC,CAAA,KAAK,kBACL,WAAW,yCACX,cAAY,4BAA2B,YAAA,eAEtChH,SAAEA,EAAA,wBAAwB,EAC7B,CAEJ,CAAA,CAEJ,CCxCO,MAAM0H,GAIRA,CAAC,CAAEC,OAAAA,EAAQC,YAAAA,EAAaC,gBAAAA,CAAgB,IAC3C1F,EAAC2F,GACC,CAAA,kBAAiB,GACjB,OAAO,sBACP,KAAMH,EACN,QAASC,EACT,MAAO,CAAEG,QAAS,GAAIC,SAAU,GAAI,EACpC,UAAW,GACX,SAAS,QAAO,YAAA,iCAEhB,SAAA7F,EAAC8F,IACC,MAAO,CACLzC,eAAgB,WAChB0C,cAAe,OACfC,IAAK,CACP,EAAE,YAAA,qCAEDN,SAAgBtF,EAAAA,OACdJ,EAAAgB,EAAA,CACC,KAAK,OACL,SAAWhB,EAAAO,EAAA,CAAK,MAAOF,EAAK4F,UAAW,KAAM5F,EAAKS,KAAM,KAAM,GAAG,YAAA,yBAAA,CAAA,EACjE,QAAST,EAAK6F,QACA,YAAA,4BAEb7F,WAAKG,KAFDH,EAAAA,EAAKK,GAGZ,CACD,CACH,CAAA,EACF,ECXIyF,GAAkCA,CAAC,CACvC1I,WAAAA,EACAH,gBAAAA,EACA8I,SAAAA,EACAhJ,eAAAA,EACAG,iBAAAA,EACAI,mBAAAA,EACA0I,SAAAA,CACF,IAAM,CACJ,KAAM,CAACC,EAAYC,CAAa,EAC9BxM,WAAsCuD,CAAe,EACjD,CACJkJ,WAAAA,EACAC,SAAAA,EACAC,sBAAAA,EACAC,YAAAA,EACAC,aAAAA,EACAC,gBAAAA,CAAAA,EACEC,EAAAA,WAAWC,EAAY,EAErB9H,EAAiBpD,cACpBqD,GAAwC,CACvC3B,EAAiB2B,EAASE,KAAK,EAC/BsH,EAAsBxH,EAASE,KAAK,CAAA,EAEtC,CAAC7B,EAAkBmJ,CAAqB,CAAC,EAGrCM,EAAanL,cAChBoL,GAAoC,CACnC7J,EAAe6J,CAAI,EACnBN,EAAYM,CAAI,CAAA,EAElB,CAACN,EAAavJ,CAAc,CAAC,EAGzB8J,EAAiBrL,cACpBsL,GAAwC,CACvCxJ,EAAmBwJ,CAAQ,EAC3BN,EAAgBM,CAAQ,CAAA,EAE1B,CAACxJ,EAAoBkJ,CAAe,CAAC,EAEjCO,EAAsB1H,EAAAA,QAC1B,IACE,CAACsE,EAAcE,UAAWF,EAAcG,SAAS,EAAEkD,SACjD5J,CAA2B,EAE/B,CAACA,CAAU,CAAC,EAGR6J,EAA2B5H,EAAAA,QAAQ,IAAM,CACvC6H,MAAAA,EACJH,GAAuBf,IAAamB,GAAcC,QAC9CC,EAAmB,CACvB1D,EAAcI,SACdJ,EAAcC,KAAK,EACnBoD,SAAS5J,CAA4B,EACvC,OAAO8J,GAAsBG,CAC5B,EAAA,CAACN,EAAqBf,EAAU5I,CAAU,CAAC,EAE9CpB,EAAAA,UAAU,IAAM,CACViB,EAAgBtB,OAAS,GAEzBsB,EAAAA,EAAgB8C,IAAed,GAAA,SAAA,OAC7B,GAAGA,EACHqI,SAAUrI,EAAKF,QAAUoH,EACzB1F,KACEd,EAACM,GACC,CAAA,UAAWhB,EAAKF,QAAUoH,EAC1B,KACGxG,EAAAO,EAAA,CACC,KAAK,YACL,KAAMjB,EAAKF,QAAUoH,EAAa,GAAK,EACvC,MACElH,EAAKF,QAAUoH,EACX,2CACA,sCAEN,YAAA,mBAAA,CAAA,EAGP,YAAA,uBAAA,CAAA,EACDhG,QACGzD,GACC,CAAA,QACEuC,EAAKuB,YACDD,EAAAA,GAAiBtB,EAAKuB,UAAgC,IAAtDD,YAAAA,EACI5D,QACJ,GAEN,MACEsC,EAAKuB,YACDD,EAAAA,GAAiBtB,EAAKuB,UAAgC,IAAtDD,YAAAA,EACI3D,MACJ,GACL,YAAA,wBAEAqC,SAAAA,CAAKwB,EAAAA,KACLxB,EAAKkB,KAAAA,EACR,GAEF,CAAC,CAEP,EACC,CAACgG,EAAYlJ,CAAe,CAAC,EAE1BsK,MAAAA,EAAsB/L,EAAAA,YAAY,IAAM,CAC5C6K,EAAsB,IAAI,EAC1BnJ,EAAiB,IAAI,CAAA,EACpB,CAACmJ,EAAuBnJ,CAAgB,CAAC,EAG1C,OAAAyC,EAAC6H,IAAmB,YAAA,mCAClB,WAACC,GAAqB,CAAA,cAAY,yBAAwB,YAAA,oCACxD,SAAA,CAAC9H,EAAA+H,GAAA,CACC,SAAWhE,GAAgB,CACzBqC,EAASrC,CAAqB,EACT6D,GAAA,EAEvB,UAAW,CAAC,GAAGI,GAAiB,GAAGC,EAAO,EAC1C,WAAAxK,EACA,KAAK,eACL,eAAc,GACd,SAAS,0BACT,SAAS,OAAM,YAAA,kCAAA,EAEhBuC,EAAAkI,GAAA,CAAgB,YAAA,gCACdzK,aAAe,SACduC,EAACmI,GACC,CAAA,UAAS,GACT,UAAU,eACV,QAAS1J,IACT,eAAgByI,EAChB,YAAa,GACb,UAAW,GACX,UAAW,GACX,kBAAkB,IAClB,QAAQ,MACR,eAAc,GACd,wBAAyB,GAAM,YAAA,wBAE9B,SAAC,CAAA,CACAkB,UAAAA,EACAC,OAAAA,CAAAA,WAEC,OAAArI,EAAAgB,EAAA,CACC,IAAKoH,EACL,KAAK,QACL,UACEpI,EAACO,EACC,CAAA,KAAK,iBACL,KAAM,GACN,MAAM,+BAA8B,YAAA,oBAAA,EAGxC,aAAY,GACZ,QAAS8H,EAAO,YAAA,sBAEf5J,iBAAsBY,UACP8H,EAAS/H,SAAUwH,GAAAA,YAAAA,EAAcxH,MAAK,EACpD,CAAC,kBAAGoB,QAAS,EACjB,CAAA,EAEJ,CAAA,EAGEV,EAAAK,EAAA,CAAA,SAAA,CAAAH,EAACmI,IACC,UAAS,GACT,UAAU,eACV,QAAS7J,EACT,eAAgB0I,EAChB,YAAa,GACb,eAAc,GACd,wBAAyB,GAAM,YAAA,wBAE9B,SAAC,CAAA,CACAoB,UAAAA,EACAC,OAAAA,CAAAA,WAEC,OAAArI,EAAAgB,EAAA,CACC,IAAKoH,EACL,KAAK,QACL,UACGpI,EAAAO,EAAA,CACC,KAAK,iBACL,MAAM,+BACN,KAAM,GAAG,YAAA,oBAAA,EAGb,aAAY,GACZ,QAAS8H,EAAO,YAAA,sBAEf/J,eAAmBe,OACjB4H,GAASA,EAAK7H,SAAUqH,GAAAA,YAAAA,EAAUrH,MAAK,EACxC,CAAC,kBAAGoB,QAAS,EACjB,CAAA,GAEJ,EACC8G,GACCtH,EAACmI,GACC,CAAA,QAAS7B,EACT,eAAgBrH,EAChB,YAAa,GACb,eAAc,GACd,wBAAyB,GAAM,YAAA,wBAE9B,SAAC,CAAA,CACAmJ,UAAAA,EACAC,OAAAA,CAAAA,WAEC,OAAArI,EAAAgB,EAAA,CACC,IAAKoH,EACL,KAAK,QACL,UACGpI,EAAAO,EAAA,CACC,KAAK,iBACL,MAAM,+BACN,KAAM,GAAG,YAAA,mBAAA,CAAA,EAGb,aAAY,GACZ,QAAS8H,EAAO,YAAA,sBAEf/K,eAAgB+B,OACdC,GAASA,EAAKF,QAAUoH,CAAU,EACnC,CAAC,kBAAGhG,QAAS,EACjB,CAAA,GAEJ,CAAA,CAAA,CAEJ,CAEJ,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,EC/PM8H,GAAuDA,CAAC,CAC5DC,eAAAA,EACAC,eAAAA,EACAC,gBAAAA,EACAC,WAAAA,EAAa,EACf,IAAM,CACE,KAAA,CAAE7K,EAAAA,GAAMC,GAAgB,EACxB,CAAE6K,SAAUC,GAAWC,GAAS,EAChC,CACJzO,MAAO,CAAE0O,iBAAAA,CAAiB,GACxBzO,GAAiB,EAErB,OACGyF,EAAAiJ,GAAA,CAA6B,UAAWD,EAAiB,YAAA,qDACxD,SAAA,CAAChJ,EAAAkJ,GAAA,CAAgB,YAAA,yCACf,SAAA,CAAChJ,EAAAgB,EAAA,CACC,KAAK,QACL,QAAO,GACP,QAASuH,EACT,cAAY,oBACZ,UACEvI,EAACO,GACC,KAAK,iBACL,KAAM,GACN,MAAM,2EAET,YAAA,8BAAA,CAAA,EAEFP,EAAAiJ,GAAA,CAAe,YAAA,wCACbP,YACE1I,EAAAO,EAAA,CACC,KAAK,YACL,KAAM,GACN,MAAM,oCAET,YAAA,4BAAA,CAAA,EACH,CAAA,EACF,EACAT,EAACoJ,EAAK,CAAA,YAAA,8BACJ,SAAA,CAAAlJ,EAACmJ,GACC,CAAA,QAASV,EACT,aAAc,CAACG,EACf,KAAK,QACL,QAAO,GACP,cAAY,8BACZ,MAAO,CACLQ,YAAa,EAAA,EAEf,UACEpJ,EAACO,EACC,CAAA,KAAK,SACL,KAAM,GACN,MAAQqI,EAA2C,GAAlC,2EAEpB,YAAA,sCAAA,EAEF5I,EAAAW,GAAA,CAAO,MAAO,GAAG,YAAA,+BAAA,EACjBX,EAAAqJ,GAAA,CAAe,KAAM,GAAM,YAAA,uCAAA,EAC3BrJ,EAAAgB,EAAA,CACC,QAASwH,EACT,aAAc,CAACI,EACf,KAAK,QACL,QAAO,GACP,cAAY,iBACZ,SACG5I,EAAAO,EAAA,CACC,KAAK,SACL,KAAM,GACN,MAAQqI,EAA+C,GAAtC,oCAAyC,YAAA,4BAAA,CAAA,EAE7D,YAAA,+BAEA/K,SAAAA,EAAE,2BAA2B,EAChC,CAAA,EACF,CACF,CAAA,CAAA,CAEJ,ECtEMyL,GAAkCA,CAAC,CACvCC,sBAAAA,EACAC,uBAAAA,EACAC,sBAAAA,EACAjB,eAAAA,EACAkB,iBAAAA,EACAC,sBAAAA,EACAC,uBAAAA,CACF,IAAM,CACE,KAAA,CACJxP,MAAO,CACLyP,aAAAA,EACAjP,qBAAAA,EACAkP,YAAAA,EACAC,SAAAA,EACAC,UAAAA,EACAC,cAAAA,CACF,GACE5P,GAAiB,EACf,CAAEsO,SAAUC,EAAQsB,SAAUC,GAAgBtB,GAAS,EACvD,CAAEtG,gBAAAA,EAAiB6H,eAAAA,GAAmBvH,GAAiB,EACvDwH,EAAkB,CAAC,EAAC9H,GAAAA,MAAAA,EAAiBvG,SAAU,CAAC,EAACoO,GAAAA,MAAAA,EAAgBpO,QAEjEsO,EAAuBC,GAAe,CACtCA,IAAM1M,EAAG,8BAA6B,GACtB6L,IAEhBa,IAAM,kBACeZ,GACzB,EAIA,OAAA7J,EAAC0K,GAAgB,CAAA,YAAA,wCACf,SAAA,CAAC1K,EAAA2K,GAAA,CAAmB,YAAA,2CAClB,SAAA,CAAAzK,EAACgB,EACC,CAAA,QAASwH,EACT,aAAc,CAACI,EACf,QAAO,GACP,KAAK,OACL,cAAY,iBACZ,KACG5I,EAAAO,EAAA,CACC,KAAK,SACL,KAAM,GACN,MAAQqI,EAA+C,GAAtC,oCAAyC,YAAA,2BAAA,CAAA,EAE7D,YAAA,8BAEA/K,SAAAA,EAAE,8BAA8B,EACnC,EACAmC,EAAC,OAAI,UAAU,gBACb,WAAC0K,GACC,CAAA,YAAaC,GAAqBtL,OAAmBuL,GAC/CA,EAAOxL,QAAU,iBACZ6K,EAEF,EACR,EACD,KAAK,OACL,QAASK,EACT,eAAe,MAAK,YAAA,mCAAA,CAAA,EAExB,CAAA,EACF,EACC1B,GAAUiB,GACT7J,EAACgB,EACC,CAAA,UAAS,GACT,KAAK,OACL,cAAY,mBACZ,QAASwI,EAAuB,YAAA,8BAE/B3L,SAAAA,EAAE,2CAA2C,EAChD,EAED+K,GAAUkB,GACR9J,EAAAgB,EAAA,CACC,UAAS,GACT,KAAK,OACL,cAAY,kBACZ,QAASyI,EAAsB,YAAA,8BAAA,SAGjC,kBAAA,EAEDb,GAAUmB,GACT/J,EAACgB,EACC,CAAA,UAAS,GACT,KAAK,OACL,cAAY,kBACZ,QAASuI,EAAsB,YAAA,8BAE9B1L,SAAAA,EAAE,yCAAyC,EAC9C,EAED+K,GAAUoB,GACThK,EAACgB,EACC,CAAA,UAAS,GACT,KAAK,OACL,cAAY,oBACZ,QAAS4I,EAAuB,YAAA,8BAE/B/L,SAAAA,EAAE,mBAAmB,EACxB,IAGDgN,GAAiB,CAAA,OAAQV,EAAa,iBAAgB,GAAA,YAAA,wCAAA,EAEtDvP,GAAwBgO,GAAUyB,GAAoBrK,EAAA0B,GAAA,CAAU,YAAA,+BAAA,CACnE,CAAA,CAAA,CAEJ,ECnHMoJ,GAAqBA,IAAM,SACzB,KAAA,CACJ1Q,MAAO,CAAE2Q,sBAAAA,CAAsB,GAC7B1Q,GAAiB,EACf,CAAC2Q,EAAaC,CAAe,EAAIC,EAAW,EAC5C,CAAEhB,SAAUC,GAAgBtB,GAAS,EACrC,CAAEhL,EAAAA,GAAMC,GAAgB,EAExB,CAAExD,KAAAA,EAAMkI,QAAAA,GAAY2I,GAAwB,EAC5C,CACJ7Q,KAAM8Q,EACN5I,QAAS6I,EACTC,QAAAA,GACEC,GAAwB,CAC1BxQ,OAAQyQ,GAAwBC,OAAAA,CACjC,EAED,OACG3L,EAAA4L,GAAA,CAA4B,UAAWlJ,EAAQ,YAAA,iDAC9C,SAAA,CAACxC,EAAAgB,EAAA,CACC,KAAK,OACL,UACEwB,GAAW6I,EACTrL,EAAC2L,IAAqB,YAAA,2CAEpB,WAACC,GAAO,CAAA,YAAA,6BAAA,CACV,CAAA,IAECC,GACC,CAAA,KAAK,QACL,SACGvR,EAAAA,GAAAA,YAAAA,EAAMwR,4BAANxR,YAAAA,EAAiCwB,QAAS,MAC1CsP,EAAAA,GAAAA,YAAAA,EAAgBW,sBAAhBX,YAAAA,EAAqCtP,QAAS,IAC9C2E,oDAGR,YAAA,4BAED,WAACuL,GACC,CAAA,QAASf,EACT,WAAW,gCAA+B,YAAA,iCAEzCpN,SAAAA,EAAG,sCAAqC,CAAA,CAC3C,CACF,CAAA,EACCkN,IACEkB,GACC,CAAA,OAAQjB,EACR,YAAaC,EACb,wBAAyBK,+DAG1BtL,EAAAkM,GAAA,CACC,OAAQlB,EACR,iBAAgB,GAChB,YAAaC,EACb,OAAQd,EAEX,YAAA,4CAAA,CAAA,CACH,CAAA,CAAA,CAEJ,ECxEgBgC,SAAAA,GACdC,EACAC,EACA,SAGA,KAAM,CACJC,EACA,CACEhS,KAAMiS,EACN/J,QAASgK,EACThS,MAAOiS,EACPC,UAAWC,CACZ,CAAA,EACCC,GAAiC,CACnClS,YAAa,mBAAA,CACd,EAEK,CACJmS,EACA,CACEvS,KAAMwS,EACNtK,QAASuK,EACTvS,MAAOwS,EACPN,UAAWO,CACZ,CAAA,EACCC,GAAmC,CACrCxS,YAAa,mBAAA,CACd,EAEK8H,EAAU9C,UACd,IAAMqN,GAAqBP,EAC3B,CAACO,EAAmBP,CAAgB,CAAC,EAGjChS,EAAQkF,UACZ,IAAM+M,GAAkBO,EACxB,CAACA,EAAiBP,CAAc,CAAC,EAG7B,CAACU,EAAgBC,CAAiB,EAAIrT,EAAAA,SAE1CsT,MAAS,EAEL,CAACC,EAAeC,CAAgB,EAAIxT,EAAAA,SAExCsT,MAAS,EAELG,EAAmB3R,cACtB4R,GAAsB,CACrBC,EACE,CAAClL,GAAWiL,EAAYE,GAAY,MAAQ,aAAa,CAAA,EAG7D,CAACnL,CAAO,CAAC,EAGLoL,EAAqBlO,EAAAA,QAAQ,IAAM,CACvC,OAAQ2M,EAAa,CACnB,KAAKwB,EAAeC,WACXX,OAAAA,EACT,KAAKU,EAAe1J,UACXmJ,OAAAA,EACT,QACSD,MAAU,CAEpB,EAAA,CAACF,EAAgBG,EAAejB,CAAa,CAAC,EAE3C,CAAC0B,EAAeL,CAAgB,EAAI3T,WAExC,aAAa,EAEfsC,EAAAA,UAAU,IAAM,CACd,GAAI+P,EACF,OAAQC,EAAa,CACnB,KAAKwB,EAAeC,WACQjB,EAAA,CACxBhS,UAAW,CACTmT,WAAY5B,EACZ6B,MAAON,GACPO,OAAQ,EACRjH,KAAM,CACJkH,OAAQ,aACRC,SAAUC,GAAaC,GACzB,CACF,CAAA,CACD,EACD,MACF,KAAKT,EAAe1J,UACMmI,EAAA,CACtBzR,UAAW,CACTmT,WAAY5B,EACZ6B,MAAON,GACPO,OAAQ,EACRjH,KAAM,CACJkH,OAAQ,YACRC,SAAUC,GAAaC,GACzB,CACF,CAAA,CACD,EACD,MACF,QACEZ,EAAiB,KAAK,EACtB,KAAM,GAGX,CACDb,EACAP,EACAF,EACAC,CAAa,CACd,EAEKK,MAAAA,EAAY7Q,EAAAA,YAAY,SAAY,sBACxC,GAAI,CAACuQ,GAAc,CAACC,GAAiB,CAACuB,EAAoB,OACtDW,IAAAA,EACJ,OAAQlC,EAAa,CACnB,KAAKwB,EAAeC,WAOdS,GANJA,EAAS,MAAMtB,EAAoB,CACjCpS,UAAW,CACToT,MAAON,GACPO,QAAQf,GAAAA,YAAAA,EAAgBnR,SAAU,CACpC,CAAA,CACD,GACGuS,GAAAA,EAAAA,EAAOjU,OAAPiU,YAAAA,EAAaC,yBAAbD,MAAAA,EAAqCjU,KAAM,CACvCmU,MAAAA,GAAW,CACf,GAAItB,GAAkB,GACtB,GAAGoB,EAAOjU,KAAKkU,uBAAuBlU,IAAI,EAE5C8S,EAAkBqB,EAAQ,KAEvBF,GAAAA,EAAAA,EAAOjU,KAAKkU,yBAAZD,YAAAA,EAAoCjU,OAApCiU,YAAAA,EAA0CvS,SAAU,GAAK2R,IAC5DD,EAAiB,KAAK,EACxB,MACF,KAAKG,EAAe1J,UAOdoK,GANJA,EAAS,MAAM5B,EAAmB,CAChC9R,UAAW,CACToT,MAAON,GACPO,QAAQZ,GAAAA,YAAAA,EAAetR,SAAU,CACnC,CAAA,CACD,GACGuS,GAAAA,EAAAA,EAAOjU,OAAPiU,YAAAA,EAAaG,uBAAbH,MAAAA,EAAmCjU,KAAM,CACrCmU,MAAAA,GAAW,CACf,GAAInB,GAAiB,GACrB,GAAGiB,EAAOjU,KAAKoU,qBAAqBpU,IAAI,EAE1CiT,EAAiBkB,EAAQ,KAEtBF,IAAAA,EAAAA,EAAOjU,KAAKoU,uBAAZH,YAAAA,EAAkCjU,OAAlCiU,YAAAA,GAAwCvS,SAAU,GAAK2R,IAC1DD,EAAiB,KAAK,EACxB,MACF,QACEA,EAAiB,KAAK,EACtB,KAAM,CAAA,EAET,CACDP,EACAS,EACAX,EACAN,EACAW,EACAlB,EACAC,CAAa,CACd,EAEDhQ,OAAAA,EAAAA,UAAU,IAAM,uBAEZyQ,EAAAA,GAAAA,YAAAA,EAAgB0B,yBAAhB1B,MAAAA,EAAwCxS,OACxCiS,EAAAA,GAAAA,YAAAA,EAAemC,uBAAfnC,MAAAA,EAAqCjS,QAEjC+R,IAAkBwB,EAAeC,YACjBhB,GAAAA,EAAAA,GAAAA,YAAAA,EAAgB0B,yBAAhB1B,YAAAA,EAAwCxS,IAAI,EAC9DkT,IACEV,GAAAA,EAAAA,GAAAA,YAAAA,EAAgB0B,yBAAhB1B,YAAAA,EAAwCxS,OAAxCwS,YAAAA,EAA8C9Q,SAAU,CAAC,GAElDqQ,IAAkBwB,EAAe1J,YACzBoI,GAAAA,EAAAA,GAAAA,YAAAA,EAAemC,uBAAfnC,YAAAA,EAAqCjS,IAAI,EAC1DkT,IACEjB,GAAAA,EAAAA,GAAAA,YAAAA,EAAemC,uBAAfnC,YAAAA,EAAqCjS,OAArCiS,YAAAA,EAA2CvQ,SAAU,CAAC,GAG5D,EACC,EACD8Q,EAAAA,GAAAA,YAAAA,EAAgB0B,yBAAhB1B,YAAAA,EAAwCxS,MACxCiS,EAAAA,GAAAA,YAAAA,EAAemC,uBAAfnC,YAAAA,EAAqCjS,KACrCkT,EACAnB,CAAa,CACd,EAEM,CACLuB,mBAAAA,EACAG,cAAAA,EACArB,UAAAA,EACAlK,QAAAA,EACAhI,MAAAA,CAAAA,CAEJ,CC/LA,MAAMmU,GAAqBC,aACzB,CACE,CAAEC,KAAAA,EAAMC,MAAAA,EAAOC,aAAAA,EAAc7P,SAAAA,EAAU8P,SAAAA,EAAUC,MAAAA,CAAoB,EACrEC,IAGEpP,EAAAK,EAAA,CAAA,SAAA,CAACH,EAAAmP,GAAA,CAAc,IAAAD,EAAS,YAAA,mCACtB,SAAApP,EAACoJ,EAAM,CAAA,QAAQ,gBAAgB,MAAM,SAAQ,YAAA,2BAC3C,SAAA,CAAApJ,EAACoJ,GAAM,IAAK,GAAI,MAAM,SAAQ,YAAA,2BAC5B,SAAA,CAAAlJ,EAACoP,GAAO,CAAA,IAAKL,EAAa,YAAA,4BAAA,EACzBjP,EAAAoJ,EAAA,CAAM,SAAQ,GAAC,MAAO,CAAEvJ,MAAO,mBAAA,EAAsB,YAAA,2BACpD,SAAA,CAACK,EAAAvD,EAAA,CACC,WAAU,GACV,KAAK,cACL,WAAW,8CAA6C,YAAA,2BAEvDoS,SACHA,CAAA,CAAA,EACA7O,EAACvD,EACC,CAAA,KAAK,WACL,WAAW,0CAAyC,YAAA,2BAEpD,SAAAuD,EAAC,OAAM8O,CAAAA,SAAAA,CAAM,CAAA,EACf,EACCE,KACEvS,EACC,CAAA,KAAK,WACL,WAAW,mCAAkC,YAAA,2BAE5CwS,SAAAA,CAAAA,IAAUpB,EAAeC,WACtBjQ,EAAE,sCAAsC,EACxCA,EAAE,qCAAqC,EAC1CwR,GAAsBL,EAAU,OAAQ,OAAQ,OAAO,CAAA,EAC1D,CAAA,EAEJ,CAAA,EACF,EACC9P,KACEoQ,GACC,CAAA,QACEC,GAAiBrQ,EAASsQ,YAAmC,CAAA,EAC1DxS,QAEL,MACEuS,GAAiBrQ,EAASsQ,YAAoC,CAAA,EAC3DvS,MACJ,YAAA,oCAEAwS,SAAAA,GAAsBvQ,GAAY,EAAE,EACvC,CAAA,CAAA,CAEJ,CACF,CAAA,EACAc,EAAC0P,GAAa,CAAA,YAAA,kCAAA,CAAA,CAAA,CAAA,CAChB,CACD,EC9CGC,GAAqC/N,OACzC,CAAC,CACC4D,OAAAA,EACAC,YAAAA,EACAmK,iBAAAA,EACAC,WAAAA,EACAC,eAAAA,EACA9B,WAAAA,EACA+B,YAAAA,EACAC,YAAAA,EAAcC,GAAmBC,MACnC,IAAM,CACE,KAAA,CAAErS,EAAAA,GAAMC,GAAgB,EACxB,CAACuO,EAAe8D,CAAgB,EAAIpW,EAAAA,SACxC8T,EAAeuC,IAAI,EAEf,CAAExC,mBAAAA,EAAoBG,cAAAA,EAAerB,UAAAA,EAAWlK,QAAAA,CAAAA,EACpD2J,GAAqB6B,EAAY3B,CAAa,EAE1CgE,EAAkC3Q,EAAAA,QAAQ,IAAM,CACpD,MAAM4Q,EAAO,CACX,CACEC,GAAI1C,EAAeuC,KACnBvB,KAAMhB,EAAeuC,KACrBI,MAAO,UACPC,KAAM5S,EAAE,mCAAoC,CAC1CgS,WAAAA,CAAAA,CACD,EACDa,UAAW,QAAA,EAEb,CACEH,GAAI1C,EAAeC,WACnBe,KAAMhB,EAAeC,WACrB0C,MAAO,UACPC,KAAM5S,EAAE,yCAA0C,CAChD+R,iBAAAA,CAAAA,CACD,EACDc,UAAW,QAAA,CACZ,EAECV,OAAAA,IAAgBC,GAAmBU,QACrCL,EAAKlU,KAAK,CACRmU,GAAI1C,EAAe1J,UACnB0K,KAAMhB,EAAe1J,UACrBqM,MAAO,UACPC,KAAM5S,EAAE,uCAAwC,CAC9CiS,eAAAA,CAAAA,CACD,EACDY,UAAW,QAAA,CACO,EAEfJ,CAAAA,EACN,CAACV,EAAkBE,EAAgBD,EAAYG,EAAanS,CAAC,CAAC,EAE3DuI,EAAYhH,GAAkB,CAClC+Q,EAAiB/Q,CAAK,CAAA,EAGlBwR,EAAwBA,CAC5BtW,EACA2U,IAEA3U,GAAQ,CAACkI,GAAWlI,EAAK0B,OAAS,EAChC1B,EAAK8F,IACHC,GAAA,qBAAA,OAAAL,EAAC2O,GAAA,CAEC,KACEM,IAAUpB,EAAeC,WACpB,IAAEzN,EAAAA,GAAAA,YAAAA,EAAMwQ,MAANxQ,YAAAA,EAAWyQ,cAAazQ,EAAAA,GAAAA,YAAAA,EAAMwQ,MAANxQ,YAAAA,EAAW0Q,WACtC1Q,GAAAA,YAAAA,EAAMwO,KAEZ,MAAOI,IAAUpB,EAAeuC,KAAO,KAAK/P,EAAAA,GAAAA,YAAAA,EAAMwQ,MAANxQ,YAAAA,EAAWyO,QAAS,GAChE,aACEG,IAAUpB,EAAeuC,MACrB/P,GAAAA,YAAAA,EAAM0O,eAAgBiC,KACtB3Q,GAAAA,EAAAA,GAAAA,YAAAA,EAAMwQ,MAANxQ,YAAAA,EAAW4Q,UAAX5Q,YAAAA,EAAoB6Q,4BACpB7Q,GAAAA,EAAAA,GAAAA,YAAAA,EAAMwQ,MAANxQ,YAAAA,EAAW4Q,UAAX5Q,YAAAA,EAAoB8Q,iBACpBC,GAEN,SACEnC,IAAUpB,EAAeuC,MAAO/P,EAAAA,GAAAA,YAAAA,EAAMnB,WAANmB,YAAAA,EAAgBwO,KAAOxB,OAGzD,SACE4B,IAAUpB,EAAeuC,KACrB/C,QACAhN,GAAAA,YAAAA,EAAMgR,cAAchR,GAAAA,YAAAA,EAAMiR,gBAAiB,IAAI7V,KAErD,MAAAwT,EAEH,YAAA,2DAAA,EAzBQ5O,GAAAA,YAAAA,EAAMkR,GAAAA,EAyBd,EACCtC,IAAUpB,EAAeuC,MAAQ,CAAC5N,EAElC1C,EAAAK,EAAA,CAAA,SAAA,CAACH,EAAAwR,GAAA,CACC,KAAK,SACL,WAAW,8CAA6C,YAAA,sDAEvD3T,SAAEA,EAAA,4BAA4B,CACjC,CAAA,EACAmC,EAAC0P,GAAa,CAAA,YAAA,sDAAA,CAAA,CAAA,EAChB,EACET,IAAUpB,EAAeC,YAAc,CAACtL,EAExC1C,EAAAK,EAAA,CAAA,SAAA,CAACH,EAAAwR,GAAA,CACC,KAAK,SACL,WAAW,8CAA6C,YAAA,sDAEvD3T,SAAEA,EAAA,kCAAkC,CACvC,CAAA,EACAmC,EAAC0P,GAAa,CAAA,YAAA,sDAAA,CAAA,CAAA,EAChB,EAEAT,IAAUpB,EAAe1J,WACzB,CAAC3B,GAEG1C,EAAAK,EAAA,CAAA,SAAA,CAACH,EAAAwR,GAAA,CACC,KAAK,SACL,WAAW,8CAA6C,YAAA,sDAEvD3T,SAAEA,EAAA,gCAAgC,CACrC,CAAA,EACAmC,EAAC0P,GAAa,CAAA,YAAA,sDAAA,CAAA,CAChB,CAAA,CAAA,EAIA+B,EAAeA,IAAM,CACzB,OAAQpF,EAAa,CACnB,KAAKwB,EAAeC,WACX8C,OAAAA,EACLhD,EACAvB,CAAa,EAEjB,KAAKwB,EAAe1J,UACXyM,OAAAA,EACLhD,EACAvB,CAAa,EAEjB,KAAKwB,EAAeuC,KACpB,QACSQ,OAAAA,EACLb,EACA1D,CAAa,CACb,CAAA,EAIFpK,EAAaC,KACbG,EAAW3C,UACf,IAAMuC,IAAesB,GAAemO,OACpC,CAACzP,CAAU,CAAC,EAGd,SACGlC,GACC,CAAA,OAAO,yBACP,KAAMyF,EACN,QAASC,EACT,kBAAiB,GACjB,KAAMkM,GAAUC,EAChB,aAAcvP,EACd,qBAAoB,GAAA,YAAA,yBAEpB,SAAA,CAAArC,EAACC,GAAW,CAAA,YAAA,+BAAEpC,SAAAA,EAAE,mCAAmC,EAAE,EACrDiC,EAAC+R,GAAS,CAAA,YAAA,6BACR,SAAA,CAAA7R,EAAC+H,IACC,SAAA3B,EACA,UAAWiK,EACX,WAAYhE,EACZ,KAAK,eACL,eAAc,GACd,SAAS,0BACT,UAAS,GACT,SAAS,kCAAiC,YAAA,sCAAA,IAE3CnM,GACC,CAAA,UAAW,IACX,GAAK,CAACmC,GAAY,CAChByP,UAAW,OAAA,EACV,YAAA,6BAEH,SAAA9R,EAAC+R,IACC,YAAarF,EACb,6BAA8B,GAC9B,OAAQqB,EACR,kBAAiB,GACjB,MAAM,OACN,MAAO,CACLiE,UAAW,QAAA,EACX,YAAA,4BAEDP,SAAAA,IACH,CACF,CAAA,CAAA,EACF,CACF,CAAA,CAAA,CAEJ,CAAC,ECxLGQ,GAAcA,CAAC,CACnBlC,YAAAA,EACAF,WAAAA,EACAD,iBAAAA,EACAE,eAAAA,EACAoC,SAAAA,EACAlE,WAAAA,EACAgC,YAAAA,CACY,IAAM,CAClB,MAAMmC,EAAW/P,KACXgQ,EAAsBC,SAA4B,IAAI,EACtD,CAAEC,mBAAAA,GAAuBC,GAAiB,EAC1C,CAAE5S,MAAAA,GAAUH,GAAqB,EACjC6C,EAAW3C,UAAQ,IAAMC,EAAQC,GAAY4D,OAAQ,CAAC7D,CAAK,CAAC,EAK5D6S,EAJW9S,EAAAA,QACf,IAAMC,GAASC,GAAY4D,QAAU7D,GAASC,GAAY6S,SAC1D,CAAC9S,CAAK,CAAC,GAEoC0C,EAAW,EAAI,EACtD,CAAC2I,EAAaC,CAAe,EAAIC,EAAW,EAC5C,CAACwH,EAAiBC,CAAmB,EAAIzH,EAAW,EACpD,CACJ9Q,MAAO,CAAEwY,YAAAA,CAAY,GACnBvY,GAAiB,EAEfwY,EAAchX,cACjB0O,GAAmD,SAC9CA,IAAM,SACJsF,EAAa,GACfuC,EAAAA,EAAoBU,UAApBV,MAAAA,EAA6BW,4BAE7BX,EAAAA,EAAoBU,UAApBV,MAAAA,EAA6BY,+BAEtBzI,IAAM,OACMoI,IACZpI,IAAM,eACEU,GAGrB,EAAA,CAAC4E,EAAY8C,EAAqB1H,CAAe,CAAC,EAG9CgI,EAAqBpX,EAAAA,YAAY,IAAM,CACvCmS,GACQmE,EAAA,GAAEpP,EAAOmQ,oBAAoBlF,GAAY,CACrD,EACC,CAACmE,EAAUnE,CAAU,CAAC,EAEnBmF,EAAoBnD,GAAAA,YAAAA,EAAaR,cAGrC,OAAA1P,EAACsT,IAAW,QAAS,GAAI,SAAQ,GAAC,IAAK,GAAG,YAAA,yBACxC,SAAA,CAAAtT,EAACoJ,GAAM,UAAS,GAAC,QAAQ,gBAAe,YAAA,oBACtC,SAAA,CAACpJ,EAAAuT,GAAA,CACC,KAAK,SACL,WAAW,8CACX,IAAK,EACL,SAAAhR,EACA,MAAO,CACLe,QAAS,OACTkQ,WAAYjR,EAAW,aAAe,QAAA,EACtC,YAAA,0BAEF,SAAA,CAAAvC,EAACuT,IACC,KAAK,cACL,WAAW,8CAA6C,YAAA,0BAEvDxD,SAAAA,CAAAA,EAAW,IAAEhS,EAAE,uCAAuC,CAAA,EACzD,EACC,CAACwE,GAAarC,EAAA,MAAA,CAAI,SAAQ,GAAA,CAAA,EAC1BF,EAAAoJ,EAAA,CAAM,IAAK,EAAE,YAAA,oBACZ,SAAA,CACG0G,EAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAiB,IAAE2D,cAAW1V,EAAE,qBAAqB,CAAC,CAAA,EACzD,EACCmS,IAAgBC,GAAmBU,OAClC7Q,EAACoJ,GAAM,IAAK,EAAE,YAAA,oBACZ,SAAA,CAAAlJ,EAAC,OAAI,SAAQ,GAAA,CAAA,EAEV8P,EAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAe,IAAEyD,cAAW1V,EAAE,mBAAmB,CAAC,CAAA,EACrD,CAAA,CAAA,CACF,EACE,KAEH+U,GACE9S,EAAAoJ,EAAA,CAAM,IAAK,EAAE,YAAA,oBACZ,SAAA,CAAAlJ,EAAC,OAAI,SAAQ,GAAA,CAAA,EACZA,EAAAwT,GAAA,CAAqB,YAAA,oCACnBL,SACHA,EAAA,CAAA,EACF,CAAA,EAEJ,CAAA,EACF,EACCnT,EAAA0K,GAAA,CACC,YAAa+I,GACb,SAAApR,EACA,SAAQ,GACR,eAAe,MACf,QAASwQ,EAAY,YAAA,0BAAA,CAAA,CAAA,EAEzB,EACA/S,EAAC4T,IAAmB,UAAS,GAAC,QAAQ,gBAAgB,IAAK,EAAE,YAAA,iCAC1D3D,SAAAA,CACCA,GAAAA,EAAY/T,OAAS,GACrB+T,EAAY3P,IACV,CAACC,EAAMsT,eACLA,OAAAA,EAAQnB,KACLoB,GAAW,CAAA,GAAK,SAAQvT,GAAAA,YAAAA,EAAMkR,MAAuB,YAAA,yBACpD,SAAAzR,EAAC+T,GAAmB,CAAA,YAAA,kCAClB,SAAA,CAAA7T,EAACoP,IAAO,KAAK/O,GAAAA,YAAAA,EAAM0O,eAAgBiC,GAAoB,YAAA,qBAAA,IAEtD9H,EAAM,CAAA,IAAK,EAAG,SAAQ,GAAA,YAAA,oBACrB,SAAA,CAAAlJ,EAACqT,GACC,CAAA,GAAG,MACH,WAAU,GACV,KAAK,cACL,WAAW,kCAAiC,YAAA,0BAE3ChT,SAAAA,GAAAA,YAAAA,EAAMwO,KACT,EACA7O,EAACsP,GACC,CAAA,QACEC,IACElP,EAAAA,GAAAA,YAAAA,EAAMnB,WAANmB,YAAAA,EAAgBwO,KAAKW,aACtB,EAACxS,QAEJ,MACEuS,IACElP,EAAAA,GAAAA,YAAAA,EAAMnB,WAANmB,YAAAA,EAAgBwO,KAAKW,aACtB,EAACvS,MACH,YAAA,6BAEAwS,SAAAA,KAAsBpP,EAAAA,GAAAA,YAAAA,EAAMnB,WAANmB,YAAAA,EAAgBwO,OAAQ,EAAE,CACnD,CAAA,CAAA,EACF,CACF,CAAA,CAAA,CAAA,EA5ByCxO,GAAAA,YAAAA,EAAMwO,IA6BjD,EACD,EAENgB,EAAa2C,GACXxS,EAAA8T,GAAA,CACC,MAAM,SACN,QAAS,GACT,QAAS7I,EAAgB,YAAA,gCAEzB,SAACnL,EAAAoJ,EAAA,CAAK,YAAA,oBACJ,SAAA,CAAClJ,EAAAO,EAAA,CACC,KAAK,SACL,KAAM,GACN,MAAM,kCAAiC,YAAA,kBAAA,CAAA,EAEzCP,EAACqT,GACC,CAAA,GAAG,MACH,KAAK,cACL,WAAW,kCAAiC,YAAA,0BAE3CxD,SAAAA,EAAa2C,CAChB,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EAEJ,EACCxS,EAAA+T,GAAA,CACC,WAAAlE,EACA,iBAAAD,EACA,eAAAE,EACA,OAAQ9E,EACR,YAAaC,EACb,WAAA+C,EACA,YAAA+B,EACA,YAAAC,EAAyB,YAAA,0BAAA,EAE3BlQ,EAACuT,IACC,KAAK,WACL,WAAW,mCACX,IAAK,EAAE,YAAA,0BAEP,SAAA,CAACrT,EAAA,MAAA,CAAKnC,SAAGA,EAAA,8BAA6B,EAAE,EACxCmC,EAAC,OACEkS,SAAY8B,GAAAA,GAAO,IAAIvY,KAAKyW,CAAQ,EAAG,qBAAqB,EAC/D,CAAA,EACF,EACAlS,EAACiU,IACC,YAAatB,EACb,OAAQD,EACR,aAAcO,EAAmB,YAAA,2BAAA,CAAA,EAElCjT,EAAAkU,GAAA,CACC,IAAK9B,EACL,SAAU,CACRb,IAAKvD,EACL+B,YAAaA,GAAe,CAAE,EAC9BoE,iBAAkBtE,CAEpB,EAAA,QAASyC,EAAmB,YAAA,8BAAA,CAAA,CAEhC,CAAA,CAAA,CAEJ,EChOM8B,GAAcA,CAAC,CAAE9Z,KAAAA,CAAuB,IAC5C0F,EAACqU,IAAmB,YAAA,kCACjB/Z,WAAK8F,IAAKhB,GAAAA,gBACR6S,GAEC,CAAA,YAAY7S,GAAAA,YAAAA,EAAOmS,MAAO,GAC1B,aAAYnS,EAAAA,GAAAA,YAAAA,EAAO2Q,cAAP3Q,YAAAA,EAAoBpD,SAAU,EAC1C,YAAasY,GAAUlV,GAAAA,YAAAA,EAAO2Q,WAAW,EACzC,kBAAkB3Q,GAAAA,YAAAA,EAAOwQ,mBAAoB,EAC7C,gBAAgBxQ,GAAAA,YAAAA,EAAO0Q,iBAAkB,EACzC,UAAU1Q,GAAAA,YAAAA,EAAO8S,WAAY,IAAIzW,KACjC,aAAa2D,GAAAA,YAAAA,EAAO4Q,cAAe3C,OAAU,YAAA,2BAPxCjO,GAAAA,YAAAA,EAAOmS,GAOiC,EAEhD,CACH,CAAA,EC8BIgD,GAAWA,IAAM,WACf,KAAA,CAAE1W,EAAAA,GAAMC,GAAgB,EACxB,CAAE0W,OAAAA,EAAQC,SAAAA,GAAaC,GAAa,EAEpC,CACJC,MAAAA,EACA5E,YAAAA,EACA6E,eAAAA,EACA7G,cAAAA,EACA8G,gBAAAA,EACAC,aAAAA,EACAC,iBAAAA,EACAC,oBAAAA,EACAC,eAAAA,EACAC,kBAAAA,EACAC,YAAAA,EACAC,eAAAA,EACA1X,iBAAAA,EACA2X,oBAAAA,EACA3I,UAAAA,GACE6F,GAAiB,EAEf,CAAEnY,MAAAA,GAAUC,GAAiB,EAC7B,CAACib,EAAcC,CAAgB,EAAIrK,EAAU,EAAK,EAClD,CAACsK,EAAgBC,CAAkB,EAAIvK,EAAU,EAAK,EACtD,CAACwK,EAAmBC,CAAsB,EAAIzK,EAAU,EAAK,EAC7D,CAAC0K,EAAcC,CAAY,EAAI3K,EAAU,EAAK,EAC9C,CAAC4K,EAAqBC,CAAmB,EAAI7K,EAAU,EAAK,EAE5D,CAAC5N,EAAiB0Y,CAAkB,EAAIjc,WAA4B,CACxE,CACE2G,IAAK,KACLtB,MAAO,KACP6W,KAAM,QACNpH,KAAM,YACNrO,MAAO3C,EAAG,4BAA2B,EACrCgD,WAAY,KACb,CAAA,CACF,EACK,CAAEqV,KAAAA,EAAMvN,SAAUC,GAAWC,GAAS,EACtC,CAAEtG,gBAAAA,EAAiB6H,eAAAA,IAAmBvH,GAAiB,EACvDwH,GAAkB,CAAC,CAAC9H,EAAgBvG,QAAU,CAAC,CAACoO,GAAepO,OAC/D,CAAE0K,sBAAAA,EAAAA,EAA0BI,EAAAA,WAAWC,EAAY,EAEnDoL,EAAW/P,KAEX+T,GAA4Bta,EAAAA,YAAY,IAAM,CAClDsW,EAASiE,EAAOC,gBAAgB,CAAA,EAC/B,CAAClE,CAAQ,CAAC,EAEPmE,GAA2Bza,EAAAA,YAAY,IAAM,CACjDsW,EAASiE,EAAOG,eAAe,CAAA,EAC9B,CAACpE,CAAQ,CAAC,EAEPqE,GAA2B3a,EAAAA,YAAY,IAAM,CACjDsW,EAASiE,EAAOK,eAAe,CAAA,EAC9B,CAACtE,CAAQ,CAAC,EAEPuE,GAA4B7a,EAAAA,YAAY,IAAM,CAClDsW,EAASiE,EAAOO,SAAS,CAAA,EACxB,CAACxE,CAAQ,CAAC,EAEPyE,GAAiBlX,EAAAA,QAAQ,IAAM,CACnC,MAAMmX,EAAoC,CACxC,CACEnW,IAAK,eACLF,MAAO3C,EAAE,gCAAiC,CACxCiZ,OAAQ,EAAA,CACT,EACDhW,KAAM,SACNoF,QAASA,IAAM,CACOuP,IACIE,GAC1B,EACA1P,UAAW,sCAAA,CACZ,EAGH,OAAI7L,EAAMyP,cACRgN,EAAQza,KAAK,CACXsE,IAAK,mBACLF,MAAO3C,EAAE,2CAA2C,EACpDiD,KAAM,SACNoF,QAASA,IAAM,CACWyP,IACGQ,IAC7B,EACAlQ,UAAW,sCAAA,CACZ,EAGC7L,EAAM4P,WACR6M,EAAQza,KAAK,CACXsE,IAAK,YACLF,MAAO,YACPM,KAAM,SACNoF,QAASA,IAAM,CACWyP,IACGe,IAC7B,EACAzQ,UAAW,sCAAA,CACZ,EAGI4Q,CACT,EAAG,CACDhZ,EACAzD,EAAMyP,aACNzP,EAAM4P,UACNyL,EACAE,EACAQ,GACAO,EAAyB,CAC1B,EAEK,CAACK,EAAe,EAAIC,GAAwC,CAChEtc,YAAa,oBACbuc,YAA2BC,GAAA,CACzB,MAAM5Q,EAAa4Q,EAASC,4BACxB7Q,GACF0P,EACE,CACE,CACEtV,IAAK,KACLtB,MAAO,KACP6W,KAAM,QACNpH,KAAM,YACNrO,MAAO3C,EAAG,4BAA2B,EACrCgD,WAAY,KAAA,CAEf,EAACuW,OACA9Q,EACGjH,OACEH,GACC,CAACA,EAAS2P,KAAKW,YAAW,EAAGrR,MAAM,SAAS,GAC5Ce,EAAS2P,OAAS,QAAA,EAErBzO,IAAKiX,IAA0C,CAC9C3W,IAAK2W,EAAa9F,IAClBnS,MAAOiY,EAAa9F,IACpB0E,KAAM,QACNpH,KAAMwI,EAAaxI,KACnBrO,MAAO3C,EAAG,oBAAmBwZ,EAAaxI,MAAM,EAChDhO,WAAYwW,EAAaxI,KAAKW,YAAa,EAC3C1O,KACEuW,EAAaxI,OAAS,SACpB7O,EAACO,GACC,MAAO,CAAE6I,YAAa,CAAA,EACtB,KAAK,SACL,KAAM,GACN,MAAM,6DAEN,IAAA,EACN,CAAC,CACN,CAGP,CAAA,CACD,EAED/M,EAAAA,UAAU,IAAM,CACV6Z,GAAAA,MAAAA,EAAM3E,KAAsBwF,IAAA,EAC/B,CAACA,GAAiBb,CAAI,CAAC,EAEpBoB,MAAAA,GAAkBzb,cACrB0U,GAAe,CACd4B,EAAU,SAAQ5B,SAAW,CAAEgH,MAAO,CAAEC,SAAU/C,CAAS,CAAA,CAAG,CAAA,EAEhE,CAACtC,EAAUsC,CAAQ,CAAC,EAIhBgD,GAAc5b,cACjBuD,GAAyB,CAClBsY,MAAAA,EAAe,IAAIC,gBAAgBnD,CAAM,EAClCoD,EAAAA,IAAI,MAAOxY,CAAK,EAE3BA,IAAU4E,EAAcE,WACxB9E,IAAU4E,EAAcG,UAEXyT,EAAAA,IAAI,OAAQ,KAAK,EAC3BF,EAAaG,OAAO,MAAM,EACrB1F,EAAA,UAASuF,EAAajX,SAAY,GAAA,EAC5C2U,EAAehW,CAAK,EACpB4V,EAAoB3H,MAAS,GAE/B,CAAC8E,EAAUqC,EAAQQ,EAAqBI,CAAc,CAAC,EAGnD0C,GAAqBjc,cACxBuD,GAAqC,CACpCyV,EAAgBzV,CAAK,CAAA,EAGvB,CAACyV,CAAe,CAAC,EAGblX,GAAqB9B,cACxBuD,GAAqC,CACpCiW,EAAoBjW,CAAK,CAAA,EAE3B,CAACiW,CAAmB,CAAC,EAGjB0C,GAAqBlc,cACxB0U,GAAe,CACd2E,EAAkB3E,CAAE,CAAA,EAEtB,CAAC2E,CAAiB,CAAC,EAGf8C,GAAmBnc,cACtBwK,GAAqB,CACdqR,MAAAA,EAAe,IAAIC,gBAAgBnD,CAAM,EAC/CuD,GAAmB,IAAI,EACvBrR,GAAsB,IAAI,EAExBsO,EADE3O,IAAa,MACKgH,OAEAhH,CAFS,EAM7B8O,IAAgBnR,EAAcE,WAC9BiR,IAAgBnR,EAAcG,UAEjByT,EAAAA,IAAI,OAAQvR,CAAQ,EAC9BqR,EAAaG,OAAO,MAAM,EAC/B1F,EAAU,GAAEsC,KAAYiD,EAAajX,SAAAA,GAAY,CAAA,EAEnD,CACE+T,EACAuD,GACArR,GACAyO,EACAhD,EACAsC,EACAO,CAAmB,CACpB,EAGG5N,GAAsB1H,EAAAA,QAC1B,IACE,CAACsE,EAAcE,UAAWF,EAAcG,SAAS,EAAEkD,SACjD8N,CAA4B,EAEhC,CAACA,CAAW,CAAC,EAGT7N,GAA2B5H,EAAAA,QAAQ,IAAM,CACvC6H,MAAAA,EACJH,IAAuB2N,IAAqBvN,GAAcC,QACtDC,EAAmB,CACvB1D,EAAcI,SACdJ,EAAcC,KAAK,EACnBoD,SAAS8N,CAA6B,EACxC,OAAO5N,GAAsBG,CAC5B,EAAA,CAACN,GAAqB2N,EAAkBI,CAAW,CAAC,EAEjDzM,IACJoM,GAAAA,YAAAA,EAAcpU,SAAQpC,GAAAA,EAAmB,CAAC,IAApBA,YAAAA,GAAuBoC,MAC7CuU,IAAmB,OACnBvX,GAAAA,YAAAA,EAAkBgD,SAAQjC,GAAAA,EAAmB,EAAG,CAAC,IAAvBA,YAAAA,GAA0BiC,KAEtD,OACGV,EAAAiY,GAAA,CAAuB,UAAWrD,GAAkB,EAACD,GAAAA,MAAAA,EAAO3Y,QAAO,YAAA,kCAClE,WAACkc,GACC,CAAA,KAAK,WACL,eACG5O,GACC,CAAA,eAAgBiM,EAChB,iBAAkBE,EAClB,sBAAuBM,EACvB,uBAAwBI,GACxB,sBAAuBK,GACvB,sBAAuBF,GACvB,uBAAwBI,GAA0B,YAAA,+BAAA,CAAA,EAErD,YAAA,sBAED,SAAA,CAAC1W,EAAA6R,GAAA,CAAU,IAAK,GAAI,UAAWzX,EAAM0O,iBAAiB,YAAA,qBACpD,SAAChJ,EAAAqY,GAAA,CACC,MAAO,CAAEnS,IAAK,GAAI5C,QAAS,OAAQgV,cAAe,QAAA,EAAW,YAAA,qBAE7D,SAAA,CAACtY,EAAAuY,GAAA,CAAoB,YAAA,gCACnB,SAAA,CAAArY,EAACmG,GACC,CAAA,WAAYgP,EACZ,SAAUsC,GACV,eAAgBK,GAChB,gBAAAxa,EACA,iBAAkBya,GAClB,mBAAApa,GACA,SAAUoX,EAAiB,YAAA,wBAAA,EAE7B/U,EAAC8K,GAAkB,CAAA,YAAA,6BAAA,CAAA,EAElB1Q,EAAMQ,sBAAwBgO,GAAUyB,IACtCrK,EAAAsY,GAAA,CAAc,YAAA,0BACb,SAACtY,EAAA0B,GAAA,CAAO,YAAA,kBAAA,CAAA,EACV,CAAA,EAEJ,EACC0F,IACEpH,EAAAuY,GAAA,CAAgB,YAAA,4BACf,WAACxQ,GACC,CAAA,SAAUiQ,GACV,UAAWQ,GACX,WAAYzD,GAAoB,MAChC,KAAK,eACL,eAAc,GACd,SAAS,0BACT,SAAS,OAAM,YAAA,6BAAA,CAAA,CAEnB,CAAA,EAED/U,EAAA+E,GAAA,CACC,OACEoQ,IAAgBnR,EAAcK,OAC1B0L,EAAY/T,OAAS,IACpB2Y,GAAAA,YAAAA,EAAO3Y,SAAU,GAAK,EAE7B,gBAAiB,CAAC,CAAC+Y,EACnB,IAAKI,EACL,aAAcrR,GAAgBqR,CAAW,EACzC,gBAAiB7Q,GAAoB6Q,CAAW,EAAE,YAAA,wBAElD,SAACnV,EAAA+R,GAAA,CACC,YAAarF,EACb,OAAQqB,EACR,eAAgB,EAChB,cAAc,OAAM,YAAA,oBAEnBoH,SAAgBnR,IAAAA,EAAcK,OAC7BrE,EAACoU,IAAY,KAAMrE,EAAe,YAAA,sBAAA,CAAA,EAElC/P,EAACyY,GACC,CAAA,SACE9D,GAAAA,MAAAA,EAAO3Y,OAAS2Y,EAAQ+D,GAA0B,CAAC,EAGxD,YAAA,uBAAA,CAAA,CACH,CAAA,EACF,EACA1Y,EAACsI,GACC,CAAA,eAAgBuN,EAChB,gBAAiBF,EACjB,eAAgBJ,EAChB,WAAA7M,GAAuB,YAAA,gCAAA,CAAA,CAAA,CAAA,CAE3B,CACF,CAAA,EACCE,GAEI0M,EAAAA,EAAAA,CAAAA,SAAAA,CACCA,GAAAtV,EAAC2Y,IACC,OAAQrD,EACR,YAAaC,EACb,cAAe+B,GAElB,YAAA,wBAAA,CAAA,EACA9B,KACEoD,GACC,CAAA,OAAQpD,EACR,YAAaC,EAEhB,YAAA,oBAAA,EACDzV,EAACuF,IACC,gBAAiBqR,GACjB,OAAQlB,EACR,YAAaC,EAAuB,YAAA,6BAAA,CAAA,CAAA,EAExC,EAEDC,KACE1Y,GACC,CAAA,QAAS2Y,EACT,eAAgBiC,GAChB,mBAAoBhD,EACpB,gBAAAxX,EACA,iBAAkBya,GAClB,mBAAoB9C,EACpB,WAAYE,EACZ,mBAAAxX,GACA,iBAAAD,EACA,iBAAkB4J,GAErB,YAAA,yBAAA,CAAA,EACAwO,GACE9V,EAAA6Y,GAAA,CACC,OAAQ/C,EACR,YAAa,IAAMC,EAAAA,EAEtB,YAAA,6BAAA,CAAA,CAAA,CACH,CAAA,CACF,CAAA,CAEJ,EAEM+C,GAAeA,IACnB9Y,EAAC+Y,GAAa,CAAA,YAAA,6BACZ,SAAC/Y,EAAAuU,GAAA,CAAQ,YAAA,uBAAA,CAAA,CACX,CAAA,EAEFyE,GAAeF"}